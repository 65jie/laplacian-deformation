// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('The provided Module[\'ENVIRONMENT\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = console.log;
  if (!Module['printErr']) Module['printErr'] = console.warn;

  var nodeFS;
  var nodePath;

  Module['read'] = function shell_read(filename, binary) {
    if (!nodeFS) nodeFS = require('fs');
    if (!nodePath) nodePath = require('path');
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function shell_read() { throw 'no read() available' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof quit === 'function') {
    Module['quit'] = function(status, toThrow) {
      quit(status);
    }
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function shell_read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (ENVIRONMENT_IS_WORKER) {
    Module['readBinary'] = function readBinary(url) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.responseType = 'arraybuffer';
      xhr.send(null);
      return new Uint8Array(xhr.response);
    };
  }

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function shell_print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function shell_printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}
if (!Module['quit']) {
  Module['quit'] = function(status, toThrow) {
    throw toThrow;
  }
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
    return value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    if (!func) return; // on null pointer, return undefined
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      // optimize away arguments usage in common cases
      if (sig.length === 1) {
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func);
        };
      } else if (sig.length === 2) {
        sigCache[func] = function dynCall_wrapper(arg) {
          return Runtime.dynCall(sig, func, [arg]);
        };
      } else {
        // general case
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
        };
      }
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { assert(DYNAMICTOP_PTR);var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try { func = eval('_' + ident); } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = Runtime.stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface.
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }

  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file
  var JSsource = null;
  function ensureJSsource() {
    if (!JSsource) {
      JSsource = {};
      for (var fun in JSfuncs) {
        if (JSfuncs.hasOwnProperty(fun)) {
          // Elements of toCsource are arrays of three items:
          // the code, and the return value
          JSsource[fun] = parseJSFunc(JSfuncs[fun]);
        }
      }
    }
  }

  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      ensureJSsource();
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=(' + convertCode.returnValue + ');';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      ensureJSsource();
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

/** @type {function(number, number, string, boolean=)} */
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;

/** @type {function(number, string, boolean=)} */
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

/** @type {function(number, number=)} */
function Pointer_stringify(ptr, length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var __cxa_demangle_func = Module['___cxa_demangle'] || Module['__cxa_demangle'];
  if (__cxa_demangle_func) {
    try {
      var s =
        func.substr(1);
      var len = lengthBytesUTF8(s)+1;
      var buf = _malloc(len);
      stringToUTF8(s, buf, len);
      var status = _malloc(4);
      var ret = __cxa_demangle_func(buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed
    } catch(e) {
      // ignore problems here
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
    // failure when using libcxxabi, don't demangle
    return func;
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  var regex =
    /__Z[\w\d_]+/g;
  return text.replace(regex,
    function(x) {
      var y = demangle(x);
      return x === y ? x : (x + ' [' + y + ']');
    });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;
var MIN_TOTAL_MEMORY = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP,
/** @type {ArrayBuffer} */
  buffer,
/** @type {Int8Array} */
  HEAP8,
/** @type {Uint8Array} */
  HEAPU8,
/** @type {Int16Array} */
  HEAP16,
/** @type {Uint16Array} */
  HEAPU16,
/** @type {Int32Array} */
  HEAP32,
/** @type {Uint32Array} */
  HEAPU32,
/** @type {Float32Array} */
  HEAPF32,
/** @type {Float64Array} */
  HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;


// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie() {
  assert((STACK_MAX & 3) == 0);
  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;
  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;
}

function checkStackCookie() {
  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {
    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));
  }
  // Also test the global address 0 for integrity. This check is not compatible with SAFE_SPLIT_MEMORY though, since that mode already tests all address 0 accesses on its own.
  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';
}

function abortStackOverflow(allocSize) {
  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - Module['asm'].stackSave() + allocSize) + ' bytes available!');
}

function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}


function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 268435456;
if (TOTAL_MEMORY < TOTAL_STACK) Module.printErr('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,
       'JS engine does not provide full typed array support');



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
  assert(buffer.byteLength === TOTAL_MEMORY);
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 0x63736d65; /* 'emsc' */
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  checkStackCookie();
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  checkStackCookie();
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  checkStackCookie();
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  checkStackCookie();
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools

/** @type {function(string, boolean=, number=)} */
function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
/** @deprecated */
function writeStringToMemory(string, buffer, dontAddNull) {
  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var /** @type {number} */ lastChar, /** @type {number} */ end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')
  HEAP8.set(array, buffer);
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

if (!Math['trunc']) Math['trunc'] = function(x) {
  return x < 0 ? Math.ceil(x) : Math.floor(x);
};
Math.trunc = Math['trunc'];

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



var /* show errors on likely calls to FS when it was not included */ FS = {
  error: function() {
    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1');
  },
  init: function() { FS.error() },
  createDataFile: function() { FS.error() },
  createPreloadedFile: function() { FS.error() },
  createLazyFile: function() { FS.error() },
  open: function() { FS.error() },
  mkdev: function() { FS.error() },
  registerDevice: function() { FS.error() },
  analyzePath: function() { FS.error() },
  loadFilesFromDB: function() { FS.error() },

  ErrnoError: function ErrnoError() { FS.error() },
};
Module['FS_createDataFile'] = FS.createDataFile;
Module['FS_createPreloadedFile'] = FS.createPreloadedFile;



// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = Runtime.GLOBAL_BASE;

STATICTOP = STATIC_BASE + 12320;
/* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__sub_I_deform_cpp() } });


/* memory initializer */ allocate([32,3,0,0,210,38,0,0,72,3,0,0,50,39,0,0,32,0,0,0,0,0,0,0,72,3,0,0,223,38,0,0,48,0,0,0,0,0,0,0,32,3,0,0,0,39,0,0,72,3,0,0,13,39,0,0,16,0,0,0,0,0,0,0,72,3,0,0,85,40,0,0,8,0,0,0,0,0,0,0,72,3,0,0,98,40,0,0,8,0,0,0,0,0,0,0,72,3,0,0,114,40,0,0,88,0,0,0,0,0,0,0,72,3,0,0,167,40,0,0,32,0,0,0,0,0,0,0,72,3,0,0,131,40,0,0,120,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,1,0,0,0,10,0,0,0,13,0,0,0,21,0,0,0,2,0,0,0,29,0,0,0,11,0,0,0,14,0,0,0,16,0,0,0,18,0,0,0,22,0,0,0,25,0,0,0,3,0,0,0,30,0,0,0,8,0,0,0,12,0,0,0,20,0,0,0,28,0,0,0,15,0,0,0,17,0,0,0,24,0,0,0,7,0,0,0,19,0,0,0,27,0,0,0,23,0,0,0,6,0,0,0,26,0,0,0,5,0,0,0,4,0,0,0,31,0,0,0,28,1,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,16,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,2,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,3,0,0,0,24,44,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,2,0,0,5,0,0,0,201,38,0,0,0,0,0,0,16,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,0,0,0,0,56,0,0,0,6,0,0,0,14,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,72,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,0,0,0,0,88,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,0,0,0,0,104,0,0,0,21,0,0,0,24,0,0,0,23,0,0,0,66,65,68,10,0,99,101,108,108,115,32,37,100,10,0,37,100,44,32,0,10,0,112,111,115,105,116,105,111,110,115,32,37,100,10,0,37,102,44,32,0,104,97,110,100,108,101,115,32,37,100,10,0,115,116,97,116,105,111,110,97,114,121,66,101,103,105,110,58,32,37,100,10,0,117,110,99,111,110,115,116,114,97,105,110,101,100,66,101,103,105,110,58,32,37,100,10,0,82,79,84,95,73,78,86,58,32,37,100,10,0,104,97,110,100,108,101,80,111,115,105,116,105,111,110,115,32,37,100,10,0,105,110,100,101,120,32,62,61,32,48,32,38,38,32,105,110,100,101,120,32,60,61,32,50,0,100,101,102,111,114,109,46,99,112,112,0,111,112,101,114,97,116,111,114,91,93,0,97,108,108,111,99,97,116,111,114,60,84,62,58,58,97,108,108,111,99,97,116,101,40,115,105,122,101,95,116,32,110,41,32,39,110,39,32,101,120,99,101,101,100,115,32,109,97,120,105,109,117,109,32,115,117,112,112,111,114,116,101,100,32,115,105,122,101,0,40,33,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,114,111,119,115,61,61,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,99,111,108,115,61,61,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,38,38,32,77,97,120,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,114,111,119,115,60,61,77,97,120,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,40,33,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,38,38,32,77,97,120,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,33,61,68,121,110,97,109,105,99,41,32,124,124,32,40,99,111,108,115,60,61,77,97,120,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,38,38,32,114,111,119,115,62,61,48,32,38,38,32,99,111,108,115,62,61,48,32,38,38,32,34,73,110,118,97,108,105,100,32,115,105,122,101,115,32,119,104,101,110,32,114,101,115,105,122,105,110,103,32,97,32,109,97,116,114,105,120,32,111,114,32,97,114,114,97,121,46,34,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,80,108,97,105,110,79,98,106,101,99,116,66,97,115,101,46,104,0,114,101,115,105,122,101,0,114,111,119,32,62,61,32,48,32,38,38,32,114,111,119,32,60,32,114,111,119,115,40,41,32,38,38,32,99,111,108,32,62,61,32,48,32,38,38,32,99,111,108,32,60,32,99,111,108,115,40,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,68,101,110,115,101,67,111,101,102,102,115,66,97,115,101,46,104,0,111,112,101,114,97,116,111,114,40,41,0,40,33,99,104,101,99,107,95,116,114,97,110,115,112,111,115,101,95,97,108,105,97,115,105,110,103,95,114,117,110,95,116,105,109,101,95,115,101,108,101,99,116,111,114,32,60,116,121,112,101,110,97,109,101,32,68,101,114,105,118,101,100,58,58,83,99,97,108,97,114,44,98,108,97,115,95,116,114,97,105,116,115,60,68,101,114,105,118,101,100,62,58,58,73,115,84,114,97,110,115,112,111,115,101,100,44,79,116,104,101,114,68,101,114,105,118,101,100,62,32,58,58,114,117,110,40,101,120,116,114,97,99,116,95,100,97,116,97,40,100,115,116,41,44,32,111,116,104,101,114,41,41,32,38,38,32,34,97,108,105,97,115,105,110,103,32,100,101,116,101,99,116,101,100,32,100,117,114,105,110,103,32,116,114,97,110,115,112,111,115,105,116,105,111,110,44,32,117,115,101,32,116,114,97,110,115,112,111,115,101,73,110,80,108,97,99,101,40,41,32,34,32,34,111,114,32,101,118,97,108,117,97,116,101,32,116,104,101,32,114,104,115,32,105,110,116,111,32,97,32,116,101,109,112,111,114,97,114,121,32,117,115,105,110,103,32,46,101,118,97,108,40,41,34,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,84,114,97,110,115,112,111,115,101,46,104,0,114,117,110,0,100,115,116,46,114,111,119,115,40,41,32,61,61,32,100,115,116,82,111,119,115,32,38,38,32,100,115,116,46,99,111,108,115,40,41,32,61,61,32,100,115,116,67,111,108,115,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,65,115,115,105,103,110,69,118,97,108,117,97,116,111,114,46,104,0,114,101,115,105,122,101,95,105,102,95,97,108,108,111,119,101,100,0,108,104,115,46,99,111,108,115,40,41,32,61,61,32,114,104,115,46,114,111,119,115,40,41,32,38,38,32,34,105,110,118,97,108,105,100,32,109,97,116,114,105,120,32,112,114,111,100,117,99,116,34,32,38,38,32,34,105,102,32,121,111,117,32,119,97,110,116,101,100,32,97,32,99,111,101,102,102,45,119,105,115,101,32,111,114,32,97,32,100,111,116,32,112,114,111,100,117,99,116,32,117,115,101,32,116,104,101,32,114,101,115,112,101,99,116,105,118,101,32,101,120,112,108,105,99,105,116,32,102,117,110,99,116,105,111,110,115,34,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,80,114,111,100,117,99,116,46,104,0,80,114,111,100,117,99,116,0,40,105,62,61,48,41,32,38,38,32,40,32,40,40,66,108,111,99,107,82,111,119,115,61,61,49,41,32,38,38,32,40,66,108,111,99,107,67,111,108,115,61,61,88,112,114,84,121,112,101,58,58,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,32,38,38,32,105,60,120,112,114,46,114,111,119,115,40,41,41,32,124,124,40,40,66,108,111,99,107,82,111,119,115,61,61,88,112,114,84,121,112,101,58,58,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,41,32,38,38,32,40,66,108,111,99,107,67,111,108,115,61,61,49,41,32,38,38,32,105,60,120,112,114,46,99,111,108,115,40,41,41,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,66,108,111,99,107,46,104,0,66,108,111,99,107,0,40,100,97,116,97,80,116,114,32,61,61,32,48,41,32,124,124,32,40,32,114,111,119,115,32,62,61,32,48,32,38,38,32,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,114,111,119,115,41,32,38,38,32,99,111,108,115,32,62,61,32,48,32,38,38,32,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,99,111,108,115,41,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,77,97,112,66,97,115,101,46,104,0,77,97,112,66,97,115,101,0,118,32,61,61,32,84,40,86,97,108,117,101,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,117,116,105,108,47,88,112,114,72,101,108,112,101,114,46,104,0,118,97,114,105,97,98,108,101,95,105,102,95,100,121,110,97,109,105,99,0,97,76,104,115,46,114,111,119,115,40,41,32,61,61,32,97,82,104,115,46,114,111,119,115,40,41,32,38,38,32,97,76,104,115,46,99,111,108,115,40,41,32,61,61,32,97,82,104,115,46,99,111,108,115,40,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,67,119,105,115,101,66,105,110,97,114,121,79,112,46,104,0,67,119,105,115,101,66,105,110,97,114,121,79,112,0,116,104,105,115,45,62,114,111,119,115,40,41,62,48,32,38,38,32,116,104,105,115,45,62,99,111,108,115,40,41,62,48,32,38,38,32,34,121,111,117,32,97,114,101,32,117,115,105,110,103,32,97,110,32,101,109,112,116,121,32,109,97,116,114,105,120,34,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,82,101,100,117,120,46,104,0,114,101,100,117,120,0,40,40,105,110,116,101,114,110,97,108,58,58,85,73,110,116,80,116,114,40,98,108,111,99,107,46,100,97,116,97,40,41,41,32,37,32,40,40,40,105,110,116,41,49,32,62,61,32,40,105,110,116,41,101,118,97,108,117,97,116,111,114,60,88,112,114,84,121,112,101,62,58,58,65,108,105,103,110,109,101,110,116,41,32,63,32,40,105,110,116,41,49,32,58,32,40,105,110,116,41,101,118,97,108,117,97,116,111,114,60,88,112,114,84,121,112,101,62,58,58,65,108,105,103,110,109,101,110,116,41,41,32,61,61,32,48,41,32,38,38,32,34,100,97,116,97,32,105,115,32,110,111,116,32,97,108,105,103,110,101,100,34,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,67,111,114,101,69,118,97,108,117,97,116,111,114,115,46,104,0,98,108,111,99,107,95,101,118,97,108,117,97,116,111,114,0,109,97,116,46,114,111,119,115,40,41,62,48,32,38,38,32,109,97,116,46,99,111,108,115,40,41,62,48,32,38,38,32,34,121,111,117,32,97,114,101,32,117,115,105,110,103,32,97,110,32,101,109,112,116,121,32,109,97,116,114,105,120,34,0,114,111,119,115,32,62,61,32,48,32,38,38,32,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,114,111,119,115,41,32,38,38,32,99,111,108,115,32,62,61,32,48,32,38,38,32,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,124,124,32,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,99,111,108,115,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,67,119,105,115,101,78,117,108,108,97,114,121,79,112,46,104,0,67,119,105,115,101,78,117,108,108,97,114,121,79,112,0,100,115,116,46,114,111,119,115,40,41,61,61,97,95,108,104,115,46,114,111,119,115,40,41,32,38,38,32,100,115,116,46,99,111,108,115,40,41,61,61,97,95,114,104,115,46,99,111,108,115,40,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,112,114,111,100,117,99,116,115,47,71,101,110,101,114,97,108,77,97,116,114,105,120,77,97,116,114,105,120,46,104,0,115,99,97,108,101,65,110,100,65,100,100,84,111,0,40,40,33,80,97,110,101,108,77,111,100,101,41,32,38,38,32,115,116,114,105,100,101,61,61,48,32,38,38,32,111,102,102,115,101,116,61,61,48,41,32,124,124,32,40,80,97,110,101,108,77,111,100,101,32,38,38,32,115,116,114,105,100,101,62,61,100,101,112,116,104,32,38,38,32,111,102,102,115,101,116,60,61,115,116,114,105,100,101,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,112,114,111,100,117,99,116,115,47,71,101,110,101,114,97,108,66,108,111,99,107,80,97,110,101,108,75,101,114,110,101,108,46,104,0,114,111,119,115,40,41,32,61,61,32,99,111,108,115,40,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,76,85,47,73,110,118,101,114,115,101,73,109,112,108,46,104,0,105,110,118,101,114,115,101,0,40,40,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,68,121,110,97,109,105,99,32,38,38,32,40,77,97,120,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,124,124,32,115,105,122,101,60,61,77,97,120,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,41,41,32,124,124,32,83,105,122,101,65,116,67,111,109,112,105,108,101,84,105,109,101,32,61,61,32,115,105,122,101,41,32,38,38,32,115,105,122,101,62,61,48,0,109,95,108,117,46,114,111,119,115,40,41,60,78,117,109,84,114,97,105,116,115,60,105,110,116,62,58,58,104,105,103,104,101,115,116,40,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,76,85,47,80,97,114,116,105,97,108,80,105,118,76,85,46,104,0,99,111,109,112,117,116,101,0,109,95,108,117,46,114,111,119,115,40,41,32,61,61,32,109,95,108,117,46,99,111,108,115,40,41,32,38,38,32,34,80,97,114,116,105,97,108,80,105,118,76,85,32,105,115,32,111,110,108,121,32,102,111,114,32,115,113,117,97,114,101,32,40,97,110,100,32,109,111,114,101,111,118,101,114,32,105,110,118,101,114,116,105,98,108,101,41,32,109,97,116,114,105,99,101,115,34,0,108,117,46,99,111,108,115,40,41,32,61,61,32,114,111,119,95,116,114,97,110,115,112,111,115,105,116,105,111,110,115,46,115,105,122,101,40,41,0,112,97,114,116,105,97,108,95,108,117,95,105,110,112,108,97,99,101,0,40,38,114,111,119,95,116,114,97,110,115,112,111,115,105,116,105,111,110,115,46,99,111,101,102,102,82,101,102,40,49,41,45,38,114,111,119,95,116,114,97,110,115,112,111,115,105,116,105,111,110,115,46,99,111,101,102,102,82,101,102,40,48,41,41,32,61,61,32,49,0,115,116,97,114,116,82,111,119,32,62,61,32,48,32,38,38,32,98,108,111,99,107,82,111,119,115,32,62,61,32,48,32,38,38,32,115,116,97,114,116,82,111,119,32,60,61,32,120,112,114,46,114,111,119,115,40,41,32,45,32,98,108,111,99,107,82,111,119,115,32,38,38,32,115,116,97,114,116,67,111,108,32,62,61,32,48,32,38,38,32,98,108,111,99,107,67,111,108,115,32,62,61,32,48,32,38,38,32,115,116,97,114,116,67,111,108,32,60,61,32,120,112,114,46,99,111,108,115,40,41,32,45,32,98,108,111,99,107,67,111,108,115,0,40,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,124,124,32,82,111,119,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,98,108,111,99,107,82,111,119,115,41,32,38,38,32,40,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,68,121,110,97,109,105,99,32,124,124,32,67,111,108,115,65,116,67,111,109,112,105,108,101,84,105,109,101,61,61,98,108,111,99,107,67,111,108,115,41,0,114,111,119,115,40,41,61,61,111,116,104,101,114,46,114,111,119,115,40,41,32,38,38,32,99,111,108,115,40,41,61,61,111,116,104,101,114,46,99,111,108,115,40,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,68,101,110,115,101,66,97,115,101,46,104,0,115,119,97,112,0,100,115,116,46,114,111,119,115,40,41,32,61,61,32,115,114,99,46,114,111,119,115,40,41,32,38,38,32,100,115,116,46,99,111,108,115,40,41,32,61,61,32,115,114,99,46,99,111,108,115,40,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,80,114,111,100,117,99,116,69,118,97,108,117,97,116,111,114,115,46,104,0,100,101,114,105,118,101,100,40,41,46,99,111,108,115,40,41,32,61,61,32,100,101,114,105,118,101,100,40,41,46,114,111,119,115,40,41,32,38,38,32,40,40,83,105,100,101,61,61,79,110,84,104,101,76,101,102,116,32,38,38,32,100,101,114,105,118,101,100,40,41,46,99,111,108,115,40,41,32,61,61,32,111,116,104,101,114,46,114,111,119,115,40,41,41,32,124,124,32,40,83,105,100,101,61,61,79,110,84,104,101,82,105,103,104,116,32,38,38,32,100,101,114,105,118,101,100,40,41,46,99,111,108,115,40,41,32,61,61,32,111,116,104,101,114,46,99,111,108,115,40,41,41,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,83,111,108,118,101,84,114,105,97,110,103,117,108,97,114,46,104,0,115,111,108,118,101,73,110,80,108,97,99,101,0,105,62,61,48,32,38,38,32,106,62,61,48,32,38,38,32,105,60,115,105,122,101,40,41,32,38,38,32,106,60,115,105,122,101,40,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,80,101,114,109,117,116,97,116,105,111,110,77,97,116,114,105,120,46,104,0,97,112,112,108,121,84,114,97,110,115,112,111,115,105,116,105,111,110,79,110,84,104,101,82,105,103,104,116,0,109,95,105,115,73,110,105,116,105,97,108,105,122,101,100,32,38,38,32,34,80,97,114,116,105,97,108,80,105,118,76,85,32,105,115,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,46,34,0,115,111,108,118,101,0,114,104,115,46,114,111,119,115,40,41,32,61,61,32,109,95,108,117,46,114,111,119,115,40,41,0,95,115,111,108,118,101,95,105,109,112,108,0,112,101,114,109,117,116,97,116,105,111,110,80,0,105,110,100,101,120,32,62,61,32,48,32,38,38,32,105,110,100,101,120,32,60,32,115,105,122,101,40,41,0,114,111,119,115,32,61,61,32,116,104,105,115,45,62,114,111,119,115,40,41,32,38,38,32,99,111,108,115,32,61,61,32,116,104,105,115,45,62,99,111,108,115,40,41,32,38,38,32,34,68,101,110,115,101,66,97,115,101,58,58,114,101,115,105,122,101,40,41,32,100,111,101,115,32,110,111,116,32,97,99,116,117,97,108,108,121,32,97,108,108,111,119,32,116,111,32,114,101,115,105,122,101,46,34,0,111,116,104,101,114,46,114,111,119,115,40,41,32,61,61,32,49,32,124,124,32,111,116,104,101,114,46,99,111,108,115,40,41,32,61,61,32,49,0,114,101,115,105,122,101,76,105,107,101,0,105,116,45,62,114,111,119,40,41,62,61,48,32,38,38,32,105,116,45,62,114,111,119,40,41,60,109,97,116,46,114,111,119,115,40,41,32,38,38,32,105,116,45,62,99,111,108,40,41,62,61,48,32,38,38,32,105,116,45,62,99,111,108,40,41,60,109,97,116,46,99,111,108,115,40,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,83,112,97,114,115,101,67,111,114,101,47,83,112,97,114,115,101,77,97,116,114,105,120,46,104,0,115,101,116,95,102,114,111,109,95,116,114,105,112,108,101,116,115,0,33,105,115,67,111,109,112,114,101,115,115,101,100,40,41,0,105,110,115,101,114,116,66,97,99,107,85,110,99,111,109,112,114,101,115,115,101,100,0,109,95,105,110,110,101,114,78,111,110,90,101,114,111,115,91,111,117,116,101,114,93,60,61,40,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,32,45,32,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,93,41,0,99,111,108,108,97,112,115,101,68,117,112,108,105,99,97,116,101,115,0,118,101,99,83,105,122,101,32,62,61,32,48,0,105,115,67,111,109,112,114,101,115,115,101,100,40,41,32,38,38,32,34,84,104,105,115,32,102,117,110,99,116,105,111,110,32,100,111,101,115,32,110,111,116,32,109,97,107,101,32,115,101,110,115,101,32,105,110,32,110,111,110,32,99,111,109,112,114,101,115,115,101,100,32,109,111,100,101,46,34,0,114,101,115,101,114,118,101,0,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,93,61,61,73,110,100,101,120,40,109,95,100,97,116,97,46,115,105,122,101,40,41,41,32,38,38,32,34,89,111,117,32,109,117,115,116,32,99,97,108,108,32,115,116,97,114,116,86,101,99,32,102,111,114,32,101,97,99,104,32,105,110,110,101,114,32,118,101,99,116,111,114,32,115,101,113,117,101,110,116,105,97,108,108,121,34,0,115,116,97,114,116,86,101,99,0,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,61,61,48,32,38,38,32,34,89,111,117,32,109,117,115,116,32,99,97,108,108,32,115,116,97,114,116,86,101,99,32,102,111,114,32,101,97,99,104,32,105,110,110,101,114,32,118,101,99,116,111,114,32,115,101,113,117,101,110,116,105,97,108,108,121,34,0,73,110,100,101,120,40,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,41,32,61,61,32,109,95,100,97,116,97,46,115,105,122,101,40,41,32,38,38,32,34,73,110,118,97,108,105,100,32,111,114,100,101,114,101,100,32,105,110,115,101,114,116,105,111,110,32,40,105,110,118,97,108,105,100,32,111,117,116,101,114,32,105,110,100,101,120,41,34,0,105,110,115,101,114,116,66,97,99,107,66,121,79,117,116,101,114,73,110,110,101,114,0,40,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,43,49,93,45,109,95,111,117,116,101,114,73,110,100,101,120,91,111,117,116,101,114,93,61,61,48,32,124,124,32,109,95,100,97,116,97,46,105,110,100,101,120,40,109,95,100,97,116,97,46,115,105,122,101,40,41,45,49,41,60,105,110,110,101,114,41,32,38,38,32,34,73,110,118,97,108,105,100,32,111,114,100,101,114,101,100,32,105,110,115,101,114,116,105,111,110,32,40,105,110,118,97,108,105,100,32,105,110,110,101,114,32,105,110,100,101,120,41,34,0,108,104,115,46,111,117,116,101,114,83,105,122,101,40,41,32,61,61,32,114,104,115,46,105,110,110,101,114,83,105,122,101,40,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,83,112,97,114,115,101,67,111,114,101,47,67,111,110,115,101,114,118,97,116,105,118,101,83,112,97,114,115,101,83,112,97,114,115,101,80,114,111,100,117,99,116,46,104,0,99,111,110,115,101,114,118,97,116,105,118,101,95,115,112,97,114,115,101,95,115,112,97,114,115,101,95,112,114,111,100,117,99,116,95,105,109,112,108,0,120,62,61,48,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,67,111,114,101,47,77,97,116,104,70,117,110,99,116,105,111,110,115,46,104,0,108,111,103,50,0,109,97,116,114,105,120,46,114,111,119,115,40,41,61,61,109,97,116,114,105,120,46,99,111,108,115,40,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,83,112,97,114,115,101,67,104,111,108,101,115,107,121,47,83,105,109,112,108,105,99,105,97,108,67,104,111,108,101,115,107,121,46,104,0,97,46,114,111,119,115,40,41,61,61,97,46,99,111,108,115,40,41,0,111,114,100,101,114,105,110,103,0,114,111,119,115,40,41,61,61,99,111,108,115,40,41,32,38,38,32,34,83,101,108,102,65,100,106,111,105,110,116,86,105,101,119,32,105,115,32,111,110,108,121,32,102,111,114,32,115,113,117,97,114,101,100,32,109,97,116,114,105,99,101,115,34,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,83,112,97,114,115,101,67,111,114,101,47,83,112,97,114,115,101,83,101,108,102,65,100,106,111,105,110,116,86,105,101,119,46,104,0,83,112,97,114,115,101,83,101,108,102,65,100,106,111,105,110,116,86,105,101,119,0,109,95,97,110,97,108,121,115,105,115,73,115,79,107,32,38,38,32,34,89,111,117,32,109,117,115,116,32,102,105,114,115,116,32,99,97,108,108,32,97,110,97,108,121,122,101,80,97,116,116,101,114,110,40,41,34,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,83,112,97,114,115,101,67,104,111,108,101,115,107,121,47,83,105,109,112,108,105,99,105,97,108,67,104,111,108,101,115,107,121,95,105,109,112,108,46,104,0,102,97,99,116,111,114,105,122,101,95,112,114,101,111,114,100,101,114,101,100,0,97,112,46,114,111,119,115,40,41,61,61,97,112,46,99,111,108,115,40,41,0,109,95,112,97,114,101,110,116,46,115,105,122,101,40,41,61,61,97,112,46,114,111,119,115,40,41,0,109,95,110,111,110,90,101,114,111,115,80,101,114,67,111,108,46,115,105,122,101,40,41,61,61,97,112,46,114,111,119,115,40,41,0,109,95,105,115,73,110,105,116,105,97,108,105,122,101,100,32,38,38,32,34,83,111,108,118,101,114,32,105,115,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,46,34,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,83,112,97,114,115,101,67,111,114,101,47,83,112,97,114,115,101,83,111,108,118,101,114,66,97,115,101,46,104,0,100,101,114,105,118,101,100,40,41,46,114,111,119,115,40,41,61,61,98,46,114,111,119,115,40,41,32,38,38,32,34,115,111,108,118,101,40,41,58,32,105,110,118,97,108,105,100,32,110,117,109,98,101,114,32,111,102,32,114,111,119,115,32,111,102,32,116,104,101,32,114,105,103,104,116,32,104,97,110,100,32,115,105,100,101,32,109,97,116,114,105,120,32,98,34,0,66,97,115,101,58,58,109,95,102,97,99,116,111,114,105,122,97,116,105,111,110,73,115,79,107,32,38,38,32,34,84,104,101,32,100,101,99,111,109,112,111,115,105,116,105,111,110,32,105,115,32,110,111,116,32,105,110,32,97,32,118,97,108,105,100,32,115,116,97,116,101,32,102,111,114,32,115,111,108,118,105,110,103,44,32,121,111,117,32,109,117,115,116,32,102,105,114,115,116,32,99,97,108,108,32,101,105,116,104,101,114,32,99,111,109,112,117,116,101,40,41,32,111,114,32,115,121,109,98,111,108,105,99,40,41,47,110,117,109,101,114,105,99,40,41,34,0,66,97,115,101,58,58,109,95,109,97,116,114,105,120,46,114,111,119,115,40,41,61,61,98,46,114,111,119,115,40,41,0,100,101,114,105,118,101,100,40,41,46,99,111,108,115,40,41,32,61,61,32,100,101,114,105,118,101,100,40,41,46,114,111,119,115,40,41,32,38,38,32,100,101,114,105,118,101,100,40,41,46,99,111,108,115,40,41,32,61,61,32,111,116,104,101,114,46,114,111,119,115,40,41,0,46,46,47,100,101,112,115,92,69,105,103,101,110,47,115,114,99,47,83,112,97,114,115,101,67,111,114,101,47,84,114,105,97,110,103,117,108,97,114,83,111,108,118,101,114,46,104,0,105,116,32,38,38,32,105,116,46,105,110,100,101,120,40,41,61,61,105,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,46,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,118,101,99,116,111,114,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,116,101,114,109,105,110,97,116,105,110,103,0,117,110,99,97,117,103,104,116,0,83,116,57,101,120,99,101,112,116,105,111,110,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,83,116,57,116,121,112,101,95,105,110,102,111,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,83,116,57,98,97,100,95,97,108,108,111,99,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}



  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }function ___cxa_atexit() {
  return _atexit.apply(null, arguments)
  }



  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }


  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }



  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        // A rethrown exception can reach refcount 0; it must not be discarded
        // Its next handler will clear the rethrown flag and addRef it, prior to
        // final decRef and destruction here
        if (info.refcount === 0 && !info.rethrown) {
          if (info.destructor) {
            Module['dynCall_vi'](info.destructor, ptr);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((Runtime.setTempRet0(0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((Runtime.setTempRet0(0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);

      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((Runtime.setTempRet0(typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((Runtime.setTempRet0(throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0,
        caught: false,
        rethrown: false
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }





  function _abort() {
      Module['abort']();
    }


  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
        Module.printErr('exception during cxa_free_exception: ' + e);
      }
    }function ___cxa_end_catch() {
      // Clear state flag.
      Module['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = EXCEPTIONS.caught.pop();
      if (ptr) {
        EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
        EXCEPTIONS.last = 0; // XXX in decRef?
      }
    }


  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Module['dynCall_v'](func);
      _pthread_once.seen[ptr] = 1;
    }

  function ___lock() {}

  function ___unlock() {}


  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }




  var PTHREAD_SPECIFIC_NEXT_KEY=1;

  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }


  var SYSCALLS={varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }



  function ___cxa_find_matching_catch_2() {
          return ___cxa_find_matching_catch.apply(null, arguments);
        }

  function ___cxa_find_matching_catch_3() {
          return ___cxa_find_matching_catch.apply(null, arguments);
        }

  function ___cxa_begin_catch(ptr) {
      var info = EXCEPTIONS.infos[ptr];
      if (info && !info.caught) {
        info.caught = true;
        __ZSt18uncaught_exceptionv.uncaught_exception--;
      }
      if (info) info.rethrown = false;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }


  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    }

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }



  var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_STATIC);

  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }


  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else Module.printErr('failed to set errno from JS');
      return value;
    }



  function ___gxx_personality_v0() {
    }






  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      // NOTE: offset_high is unused - Emscripten's off_t is 32-bit
      var offset = offset_low;
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      // hack to support printf in NO_FILESYSTEM
      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      var ret = 0;
      if (!___syscall146.buffer) {
        ___syscall146.buffers = [null, [], []]; // 1 => stdout, 2 => stderr
        ___syscall146.printChar = function(stream, curr) {
          var buffer = ___syscall146.buffers[stream];
          assert(buffer);
          if (curr === 0 || curr === 10) {
            (stream === 1 ? Module['print'] : Module['printErr'])(UTF8ArrayToString(buffer, 0));
            buffer.length = 0;
          } else {
            buffer.push(curr);
          }
        };
      }
      for (var i = 0; i < iovcnt; i++) {
        var ptr = HEAP32[(((iov)+(i*8))>>2)];
        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
        for (var j = 0; j < len; j++) {
          ___syscall146.printChar(stream, HEAPU8[ptr+j]);
        }
        ret += len;
      }
      return ret;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  var ___dso_handle=STATICTOP; STATICTOP += 16;;
/* flush anything remaining in the buffer during shutdown */ __ATEXIT__.push(function() { var fflush = Module["_fflush"]; if (fflush) fflush(0); var printChar = ___syscall146.printChar; if (!printChar) return; var buffers = ___syscall146.buffers; if (buffers[1].length) printChar(1, 10); if (buffers[2].length) printChar(2, 10); });;
DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);

STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");


function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiidiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiidiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_dii(x) { Module["printErr"]("Invalid function pointer called with signature 'dii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_di(x) { Module["printErr"]("Invalid function pointer called with signature 'di'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_i(x) { Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_v(x) { Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viid(x) { Module["printErr"]("Invalid function pointer called with signature 'viid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_diii(x) { Module["printErr"]("Invalid function pointer called with signature 'diii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiiiiidiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12) {
  try {
    Module["dynCall_viiiiiiidiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_dii(index,a1,a2) {
  try {
    return Module["dynCall_dii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_di(index,a1) {
  try {
    return Module["dynCall_di"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    return Module["dynCall_iiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viid(index,a1,a2,a3) {
  try {
    Module["dynCall_viid"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "abortStackOverflow": abortStackOverflow, "nullFunc_vi": nullFunc_vi, "nullFunc_iiii": nullFunc_iiii, "nullFunc_viiiiiiidiiii": nullFunc_viiiiiiidiiii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_viiiii": nullFunc_viiiii, "nullFunc_dii": nullFunc_dii, "nullFunc_viiiiiii": nullFunc_viiiiiii, "nullFunc_di": nullFunc_di, "nullFunc_i": nullFunc_i, "nullFunc_iiiiiiiiiii": nullFunc_iiiiiiiiiii, "nullFunc_vii": nullFunc_vii, "nullFunc_iiiiiii": nullFunc_iiiiiii, "nullFunc_ii": nullFunc_ii, "nullFunc_viii": nullFunc_viii, "nullFunc_viiiiiiiiii": nullFunc_viiiiiiiiii, "nullFunc_v": nullFunc_v, "nullFunc_viid": nullFunc_viid, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_viiii": nullFunc_viiii, "nullFunc_iii": nullFunc_iii, "nullFunc_diii": nullFunc_diii, "invoke_vi": invoke_vi, "invoke_iiii": invoke_iiii, "invoke_viiiiiiidiiii": invoke_viiiiiiidiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_viiiii": invoke_viiiii, "invoke_dii": invoke_dii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_di": invoke_di, "invoke_i": invoke_i, "invoke_iiiiiiiiiii": invoke_iiiiiiiiiii, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_v": invoke_v, "invoke_viid": invoke_viid, "invoke_iiiii": invoke_iiiii, "invoke_viiii": invoke_viiii, "invoke_iii": invoke_iii, "invoke_diii": invoke_diii, "_pthread_getspecific": _pthread_getspecific, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___syscall54": ___syscall54, "_abort": _abort, "___gxx_personality_v0": ___gxx_personality_v0, "___assert_fail": ___assert_fail, "___cxa_free_exception": ___cxa_free_exception, "___cxa_find_matching_catch_2": ___cxa_find_matching_catch_2, "___cxa_find_matching_catch_3": ___cxa_find_matching_catch_3, "___setErrNo": ___setErrNo, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "___cxa_end_catch": ___cxa_end_catch, "___resumeException": ___resumeException, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_call_unexpected": ___cxa_call_unexpected, "_pthread_once": _pthread_once, "_pthread_key_create": _pthread_key_create, "___unlock": ___unlock, "_pthread_setspecific": _pthread_setspecific, "___cxa_atexit": ___cxa_atexit, "___cxa_throw": ___cxa_throw, "___lock": ___lock, "___syscall6": ___syscall6, "___cxa_allocate_exception": ___cxa_allocate_exception, "_atexit": _atexit, "___syscall140": ___syscall140, "___syscall146": ___syscall146, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "cttz_i8": cttz_i8, "___dso_handle": ___dso_handle };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
'almost asm';


  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);

  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var cttz_i8=env.cttz_i8|0;
  var ___dso_handle=env.___dso_handle|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntS = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var abortStackOverflow=env.abortStackOverflow;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_viiiiiiidiiii=env.nullFunc_viiiiiiidiiii;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_viiiii=env.nullFunc_viiiii;
  var nullFunc_dii=env.nullFunc_dii;
  var nullFunc_viiiiiii=env.nullFunc_viiiiiii;
  var nullFunc_di=env.nullFunc_di;
  var nullFunc_i=env.nullFunc_i;
  var nullFunc_iiiiiiiiiii=env.nullFunc_iiiiiiiiiii;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_iiiiiii=env.nullFunc_iiiiiii;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_viiiiiiiiii=env.nullFunc_viiiiiiiiii;
  var nullFunc_v=env.nullFunc_v;
  var nullFunc_viid=env.nullFunc_viid;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_viiii=env.nullFunc_viiii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_diii=env.nullFunc_diii;
  var invoke_vi=env.invoke_vi;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiiiidiiii=env.invoke_viiiiiiidiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_dii=env.invoke_dii;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_di=env.invoke_di;
  var invoke_i=env.invoke_i;
  var invoke_iiiiiiiiiii=env.invoke_iiiiiiiiiii;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_viiiiiiiiii=env.invoke_viiiiiiiiii;
  var invoke_v=env.invoke_v;
  var invoke_viid=env.invoke_viid;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiii=env.invoke_viiii;
  var invoke_iii=env.invoke_iii;
  var invoke_diii=env.invoke_diii;
  var _pthread_getspecific=env._pthread_getspecific;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var ___syscall54=env.___syscall54;
  var _abort=env._abort;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var ___cxa_find_matching_catch_2=env.___cxa_find_matching_catch_2;
  var ___cxa_find_matching_catch_3=env.___cxa_find_matching_catch_3;
  var ___setErrNo=env.___setErrNo;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var ___resumeException=env.___resumeException;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_call_unexpected=env.___cxa_call_unexpected;
  var _pthread_once=env._pthread_once;
  var _pthread_key_create=env._pthread_key_create;
  var ___unlock=env.___unlock;
  var _pthread_setspecific=env._pthread_setspecific;
  var ___cxa_atexit=env.___cxa_atexit;
  var ___cxa_throw=env.___cxa_throw;
  var ___lock=env.___lock;
  var ___syscall6=env.___syscall6;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _atexit=env._atexit;
  var ___syscall140=env.___syscall140;
  var ___syscall146=env.___syscall146;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
  if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(size|0);

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function __Z17calcLaplacianRealPdRKN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEEPiiiRKNSt3__26vectorIiNS6_9allocatorIiEEEESC_NS7_ISA_NS8_ISA_EEEERNS7_INS1_IdLin1ELin1ELi0ELin1ELin1EEENS8_ISF_EEEE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0;
 var $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0;
 var $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0;
 var $1050 = 0.0, $1051 = 0.0, $1052 = 0.0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0.0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0.0, $1066 = 0.0, $1067 = 0, $1068 = 0;
 var $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0.0, $1077 = 0.0, $1078 = 0.0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0.0, $1084 = 0.0, $1085 = 0.0, $1086 = 0;
 var $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0.0, $1096 = 0.0, $1097 = 0.0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0.0, $1103 = 0.0;
 var $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0.0, $1114 = 0.0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0;
 var $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0;
 var $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0.0, $1148 = 0.0, $1149 = 0.0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0.0, $1158 = 0;
 var $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0.0, $1163 = 0.0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0.0, $1174 = 0.0, $1175 = 0.0, $1176 = 0;
 var $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0.0, $1181 = 0.0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0.0, $1192 = 0.0, $1193 = 0.0, $1194 = 0;
 var $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0.0, $1199 = 0.0, $12 = 0, $120 = 0, $1200 = 0.0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0.0, $1211 = 0.0;
 var $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0.0, $1227 = 0.0, $1228 = 0.0, $1229 = 0, $123 = 0;
 var $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0.0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0.0, $1242 = 0.0, $1243 = 0.0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0;
 var $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0.0, $1254 = 0.0, $1255 = 0.0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0.0, $1261 = 0.0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0;
 var $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0.0, $1272 = 0.0, $1273 = 0.0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0.0, $1279 = 0.0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0;
 var $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0.0, $129 = 0, $1290 = 0.0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0.0;
 var $1302 = 0.0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0;
 var $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0;
 var $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0;
 var $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0;
 var $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0;
 var $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0;
 var $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0;
 var $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0;
 var $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0;
 var $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0;
 var $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0.0, $306 = 0;
 var $307 = 0.0, $308 = 0.0, $309 = 0.0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0;
 var $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0;
 var $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0;
 var $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0;
 var $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0;
 var $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0;
 var $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0;
 var $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0;
 var $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0;
 var $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0;
 var $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0;
 var $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0.0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0;
 var $525 = 0, $526 = 0.0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0.0, $542 = 0;
 var $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0.0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0;
 var $561 = 0, $562 = 0, $563 = 0, $564 = 0.0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0.0, $575 = 0.0, $576 = 0, $577 = 0, $578 = 0, $579 = 0;
 var $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0;
 var $598 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0.0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0.0, $614 = 0.0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0.0, $631 = 0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0.0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0.0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0.0, $679 = 0.0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0;
 var $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0;
 var $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0;
 var $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0;
 var $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0;
 var $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0;
 var $798 = 0, $799 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0.0, $813 = 0, $814 = 0.0, $815 = 0.0;
 var $816 = 0.0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0;
 var $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0.0, $84 = 0, $840 = 0.0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0;
 var $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0.0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0;
 var $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0.0, $887 = 0, $888 = 0;
 var $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0.0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0.0, $905 = 0, $906 = 0;
 var $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0;
 var $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0;
 var $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0;
 var $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0;
 var $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0;
 var $998 = 0, $999 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1776|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1776|0);
 $46 = sp + 1762|0;
 $80 = sp + 1761|0;
 $97 = sp + 1760|0;
 $100 = sp + 1404|0;
 $104 = sp + 1388|0;
 $108 = sp + 1372|0;
 $113 = sp + 1352|0;
 $116 = sp + 1340|0;
 $119 = sp + 1328|0;
 $120 = sp + 1324|0;
 $121 = sp + 1320|0;
 $141 = sp + 1240|0;
 $145 = sp + 1224|0;
 $149 = sp + 1208|0;
 $154 = sp + 1188|0;
 $157 = sp + 1176|0;
 $160 = sp + 1164|0;
 $161 = sp + 1160|0;
 $162 = sp + 1156|0;
 $177 = sp + 1096|0;
 $180 = sp + 1084|0;
 $184 = sp + 1068|0;
 $187 = sp + 1056|0;
 $195 = sp + 96|0;
 $196 = sp + 88|0;
 $197 = sp + 80|0;
 $215 = sp + 1759|0;
 $239 = sp + 1758|0;
 $242 = sp + 856|0;
 $246 = sp + 840|0;
 $250 = sp + 824|0;
 $255 = sp + 804|0;
 $258 = sp + 792|0;
 $261 = sp + 780|0;
 $262 = sp + 776|0;
 $263 = sp + 772|0;
 $273 = sp + 732|0;
 $274 = sp + 720|0;
 $278 = sp + 696|0;
 $279 = sp + 692|0;
 $280 = sp + 688|0;
 $285 = sp + 56|0;
 $289 = sp + 648|0;
 $290 = sp + 644|0;
 $291 = sp + 632|0;
 $292 = sp + 624|0;
 $293 = sp + 608|0;
 $294 = sp + 604|0;
 $295 = sp + 592|0;
 $296 = sp + 584|0;
 $298 = sp + 568|0;
 $299 = sp + 48|0;
 $300 = sp + 1757|0;
 $301 = sp + 564|0;
 $304 = sp + 552|0;
 $310 = sp + 536|0;
 $312 = sp + 520|0;
 $313 = sp + 512|0;
 $314 = sp + 480|0;
 $315 = sp + 472|0;
 $316 = sp + 440|0;
 $317 = sp + 432|0;
 $318 = sp + 400|0;
 $319 = sp + 392|0;
 $320 = sp + 360|0;
 $321 = sp + 352|0;
 $322 = sp + 320|0;
 $323 = sp + 312|0;
 $324 = sp + 280|0;
 $325 = sp + 272|0;
 $326 = sp + 244|0;
 $328 = sp + 212|0;
 $333 = sp + 168|0;
 $338 = sp + 124|0;
 $342 = sp + 108|0;
 $343 = sp;
 $344 = sp + 104|0;
 $345 = sp + 100|0;
 $346 = sp + 1756|0;
 $265 = $1;
 $266 = $2;
 $267 = $3;
 $268 = $4;
 $269 = $5;
 $270 = $6;
 $271 = $7;
 $272 = $9;
 $347 = $272;
 $348 = $269;
 __ZNSt3__26vectorIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9allocatorIS3_EEE6resizeEj($347,$348);
 HEAP32[$273>>2] = 0;
 L1: while(1) {
  $349 = HEAP32[$273>>2]|0;
  $350 = $269;
  $351 = ($349|0)<($350|0);
  if (!($351)) {
   label = 82;
   break;
  }
  $264 = $274;
  $352 = $264;
  $260 = $352;
  $353 = $260;
  $259 = $353;
  $240 = $242;
  $241 = -1;
  $354 = $240;
  HEAP32[$354>>2] = 0;
  $355 = HEAP32[$242>>2]|0;
  HEAP32[$261>>2] = $355;
  $243 = $261;
  HEAP32[$353>>2] = 0;
  $356 = ((($353)) + 4|0);
  $244 = $246;
  $245 = -1;
  $357 = $244;
  HEAP32[$357>>2] = 0;
  $358 = HEAP32[$246>>2]|0;
  HEAP32[$262>>2] = $358;
  $247 = $262;
  HEAP32[$356>>2] = 0;
  $359 = ((($353)) + 8|0);
  $248 = $250;
  $249 = -1;
  $360 = $248;
  HEAP32[$360>>2] = 0;
  $361 = HEAP32[$250>>2]|0;
  HEAP32[$263>>2] = $361;
  $251 = $263;
  $257 = $359;
  HEAP32[$258>>2] = 0;
  $362 = $257;
  $256 = $258;
  $363 = $256;
  $364 = HEAP32[$363>>2]|0;
  $254 = $362;
  HEAP32[$255>>2] = $364;
  $365 = $254;
  $253 = $365;
  $252 = $255;
  $366 = $252;
  $367 = HEAP32[$366>>2]|0;
  HEAP32[$365>>2] = $367;
  $237 = $274;
  $238 = $273;
  $368 = $237;
  $369 = ((($368)) + 4|0);
  $370 = HEAP32[$369>>2]|0;
  $236 = $368;
  $371 = $236;
  $372 = ((($371)) + 8|0);
  $235 = $372;
  $373 = $235;
  $234 = $373;
  $374 = $234;
  $375 = HEAP32[$374>>2]|0;
  $376 = ($370|0)!=($375|0);
  if ($376) {
   $231 = $239;
   $232 = $368;
   $233 = 1;
   $225 = $368;
   $377 = $225;
   $378 = ((($377)) + 8|0);
   $224 = $378;
   $379 = $224;
   $223 = $379;
   $380 = $223;
   $381 = ((($368)) + 4|0);
   $382 = HEAP32[$381>>2]|0;
   $226 = $382;
   $383 = $226;
   $384 = $238;
   $227 = $380;
   $228 = $383;
   $229 = $384;
   $385 = $228;
   $386 = $229;
   $387 = HEAP32[$386>>2]|0;
   HEAP32[$385>>2] = $387;
   $230 = $239;
   $388 = ((($368)) + 4|0);
   $389 = HEAP32[$388>>2]|0;
   $390 = ((($389)) + 4|0);
   HEAP32[$388>>2] = $390;
  } else {
   $391 = $238;
   __THREW__ = 0;
   invoke_vii(25,($368|0),($391|0));
   $392 = __THREW__; __THREW__ = 0;
   $393 = $392&1;
   if ($393) {
    label = 12;
    break;
   }
  }
  $277 = 0;
  while(1) {
   $394 = $277;
   $395 = HEAP32[$273>>2]|0;
   $221 = $8;
   $222 = $395;
   $396 = $221;
   $397 = HEAP32[$396>>2]|0;
   $398 = $222;
   $399 = (($397) + (($398*12)|0)|0);
   $220 = $399;
   $400 = $220;
   $401 = ((($400)) + 4|0);
   $402 = HEAP32[$401>>2]|0;
   $403 = HEAP32[$400>>2]|0;
   $404 = $402;
   $405 = $403;
   $406 = (($404) - ($405))|0;
   $407 = (($406|0) / 4)&-1;
   $408 = ($394>>>0)<($407>>>0);
   if (!($408)) {
    break;
   }
   $409 = HEAP32[$273>>2]|0;
   $218 = $8;
   $219 = $409;
   $410 = $218;
   $411 = HEAP32[$410>>2]|0;
   $412 = $219;
   $413 = (($411) + (($412*12)|0)|0);
   $414 = $277;
   $216 = $413;
   $217 = $414;
   $415 = $216;
   $416 = HEAP32[$415>>2]|0;
   $417 = $217;
   $418 = (($416) + ($417<<2)|0);
   $213 = $274;
   $214 = $418;
   $419 = $213;
   $420 = ((($419)) + 4|0);
   $421 = HEAP32[$420>>2]|0;
   $212 = $419;
   $422 = $212;
   $423 = ((($422)) + 8|0);
   $211 = $423;
   $424 = $211;
   $210 = $424;
   $425 = $210;
   $426 = HEAP32[$425>>2]|0;
   $427 = ($421|0)!=($426|0);
   if ($427) {
    $207 = $215;
    $208 = $419;
    $209 = 1;
    $201 = $419;
    $428 = $201;
    $429 = ((($428)) + 8|0);
    $200 = $429;
    $430 = $200;
    $199 = $430;
    $431 = $199;
    $432 = ((($419)) + 4|0);
    $433 = HEAP32[$432>>2]|0;
    $202 = $433;
    $434 = $202;
    $435 = $214;
    $203 = $431;
    $204 = $434;
    $205 = $435;
    $436 = $204;
    $437 = $205;
    $438 = HEAP32[$437>>2]|0;
    HEAP32[$436>>2] = $438;
    $206 = $215;
    $439 = ((($419)) + 4|0);
    $440 = HEAP32[$439>>2]|0;
    $441 = ((($440)) + 4|0);
    HEAP32[$439>>2] = $441;
   } else {
    $442 = $214;
    __THREW__ = 0;
    invoke_vii(25,($419|0),($442|0));
    $443 = __THREW__; __THREW__ = 0;
    $444 = $443&1;
    if ($444) {
     label = 12;
     break L1;
    }
   }
   $445 = $277;
   $446 = (($445) + 1)|0;
   $277 = $446;
  }
  HEAP32[$279>>2] = 7;
  $198 = $274;
  $449 = $198;
  $450 = ((($449)) + 4|0);
  $451 = HEAP32[$450>>2]|0;
  $452 = HEAP32[$449>>2]|0;
  $453 = $451;
  $454 = $452;
  $455 = (($453) - ($454))|0;
  $456 = (($455|0) / 4)&-1;
  $457 = ($456*3)|0;
  HEAP32[$280>>2] = $457;
  __THREW__ = 0;
  invoke_viii(26,($278|0),($279|0),($280|0));
  $458 = __THREW__; __THREW__ = 0;
  $459 = $458&1;
  if ($459) {
   label = 12;
   break;
  }
  $281 = 0;
  while(1) {
   $460 = $281;
   $461 = ($460|0)<(7);
   if (!($461)) {
    break;
   }
   $282 = 0;
   while(1) {
    $462 = $282;
    $189 = $274;
    $463 = $189;
    $464 = ((($463)) + 4|0);
    $465 = HEAP32[$464>>2]|0;
    $466 = HEAP32[$463>>2]|0;
    $467 = $465;
    $468 = $466;
    $469 = (($467) - ($468))|0;
    $470 = (($469|0) / 4)&-1;
    $471 = ($470*3)|0;
    $472 = ($462>>>0)<($471>>>0);
    if (!($472)) {
     break;
    }
    $473 = $281;
    $474 = $282;
    __THREW__ = 0;
    $475 = (invoke_iiii(27,($278|0),($473|0),($474|0))|0);
    $476 = __THREW__; __THREW__ = 0;
    $477 = $476&1;
    if ($477) {
     label = 20;
     break L1;
    }
    HEAPF64[$475>>3] = 0.0;
    $478 = $282;
    $479 = (($478) + 1)|0;
    $282 = $479;
   }
   $482 = $281;
   $483 = (($482) + 1)|0;
   $281 = $483;
  }
  $283 = 0;
  while(1) {
   $484 = $283;
   $174 = $274;
   $485 = $174;
   $486 = ((($485)) + 4|0);
   $487 = HEAP32[$486>>2]|0;
   $488 = HEAP32[$485>>2]|0;
   $489 = $487;
   $490 = $488;
   $491 = (($489) - ($490))|0;
   $492 = (($491|0) / 4)&-1;
   $493 = ($484>>>0)<($492>>>0);
   if (!($493)) {
    break;
   }
   $494 = $283;
   $172 = $274;
   $173 = $494;
   $495 = $172;
   $496 = HEAP32[$495>>2]|0;
   $497 = $173;
   $498 = (($496) + ($497<<2)|0);
   $499 = HEAP32[$498>>2]|0;
   $284 = $499;
   $500 = $265;
   $501 = $270;
   $502 = $284;
   $170 = $501;
   $171 = $502;
   $503 = $170;
   $504 = HEAP32[$503>>2]|0;
   $505 = $171;
   $506 = (($504) + ($505<<2)|0);
   $507 = HEAP32[$506>>2]|0;
   $508 = ($507*3)|0;
   $509 = (($508) + 0)|0;
   $510 = (($500) + ($509<<3)|0);
   $511 = +HEAPF64[$510>>3];
   __THREW__ = 0;
   $512 = (invoke_iii(28,($285|0),0)|0);
   $513 = __THREW__; __THREW__ = 0;
   $514 = $513&1;
   if ($514) {
    label = 20;
    break L1;
   }
   HEAPF64[$512>>3] = $511;
   $515 = $265;
   $516 = $270;
   $517 = $284;
   $168 = $516;
   $169 = $517;
   $518 = $168;
   $519 = HEAP32[$518>>2]|0;
   $520 = $169;
   $521 = (($519) + ($520<<2)|0);
   $522 = HEAP32[$521>>2]|0;
   $523 = ($522*3)|0;
   $524 = (($523) + 1)|0;
   $525 = (($515) + ($524<<3)|0);
   $526 = +HEAPF64[$525>>3];
   __THREW__ = 0;
   $527 = (invoke_iii(28,($285|0),1)|0);
   $528 = __THREW__; __THREW__ = 0;
   $529 = $528&1;
   if ($529) {
    label = 20;
    break L1;
   }
   HEAPF64[$527>>3] = $526;
   $530 = $265;
   $531 = $270;
   $532 = $284;
   $166 = $531;
   $167 = $532;
   $533 = $166;
   $534 = HEAP32[$533>>2]|0;
   $535 = $167;
   $536 = (($534) + ($535<<2)|0);
   $537 = HEAP32[$536>>2]|0;
   $538 = ($537*3)|0;
   $539 = (($538) + 2)|0;
   $540 = (($530) + ($539<<3)|0);
   $541 = +HEAPF64[$540>>3];
   __THREW__ = 0;
   $542 = (invoke_iii(28,($285|0),2)|0);
   $543 = __THREW__; __THREW__ = 0;
   $544 = $543&1;
   if ($544) {
    label = 20;
    break L1;
   }
   HEAPF64[$542>>3] = $541;
   $286 = 0;
   $287 = 1;
   $288 = 2;
   __THREW__ = 0;
   $545 = (invoke_iii(28,($285|0),0)|0);
   $546 = __THREW__; __THREW__ = 0;
   $547 = $546&1;
   if ($547) {
    label = 20;
    break L1;
   }
   $548 = +HEAPF64[$545>>3];
   $549 = $283;
   $550 = ($549*3)|0;
   $551 = (($550) + 0)|0;
   __THREW__ = 0;
   $552 = (invoke_iiii(27,($278|0),0,($551|0))|0);
   $553 = __THREW__; __THREW__ = 0;
   $554 = $553&1;
   if ($554) {
    label = 20;
    break L1;
   }
   HEAPF64[$552>>3] = $548;
   $555 = $283;
   $556 = ($555*3)|0;
   $557 = (($556) + 0)|0;
   __THREW__ = 0;
   $558 = (invoke_iiii(27,($278|0),1,($557|0))|0);
   $559 = __THREW__; __THREW__ = 0;
   $560 = $559&1;
   if ($560) {
    label = 20;
    break L1;
   }
   HEAPF64[$558>>3] = 0.0;
   __THREW__ = 0;
   $561 = (invoke_iii(28,($285|0),2)|0);
   $562 = __THREW__; __THREW__ = 0;
   $563 = $562&1;
   if ($563) {
    label = 20;
    break L1;
   }
   $564 = +HEAPF64[$561>>3];
   $565 = $283;
   $566 = ($565*3)|0;
   $567 = (($566) + 0)|0;
   __THREW__ = 0;
   $568 = (invoke_iiii(27,($278|0),2,($567|0))|0);
   $569 = __THREW__; __THREW__ = 0;
   $570 = $569&1;
   if ($570) {
    label = 20;
    break L1;
   }
   HEAPF64[$568>>3] = $564;
   __THREW__ = 0;
   $571 = (invoke_iii(28,($285|0),1)|0);
   $572 = __THREW__; __THREW__ = 0;
   $573 = $572&1;
   if ($573) {
    label = 20;
    break L1;
   }
   $574 = +HEAPF64[$571>>3];
   $575 = -$574;
   $576 = $283;
   $577 = ($576*3)|0;
   $578 = (($577) + 0)|0;
   __THREW__ = 0;
   $579 = (invoke_iiii(27,($278|0),3,($578|0))|0);
   $580 = __THREW__; __THREW__ = 0;
   $581 = $580&1;
   if ($581) {
    label = 20;
    break L1;
   }
   HEAPF64[$579>>3] = $575;
   $582 = $283;
   $583 = ($582*3)|0;
   $584 = (($583) + 0)|0;
   __THREW__ = 0;
   $585 = (invoke_iiii(27,($278|0),4,($584|0))|0);
   $586 = __THREW__; __THREW__ = 0;
   $587 = $586&1;
   if ($587) {
    label = 20;
    break L1;
   }
   HEAPF64[$585>>3] = 1.0;
   $588 = $283;
   $589 = ($588*3)|0;
   $590 = (($589) + 0)|0;
   __THREW__ = 0;
   $591 = (invoke_iiii(27,($278|0),5,($590|0))|0);
   $592 = __THREW__; __THREW__ = 0;
   $593 = $592&1;
   if ($593) {
    label = 20;
    break L1;
   }
   HEAPF64[$591>>3] = 0.0;
   $594 = $283;
   $595 = ($594*3)|0;
   $596 = (($595) + 0)|0;
   __THREW__ = 0;
   $597 = (invoke_iiii(27,($278|0),6,($596|0))|0);
   $598 = __THREW__; __THREW__ = 0;
   $599 = $598&1;
   if ($599) {
    label = 20;
    break L1;
   }
   HEAPF64[$597>>3] = 0.0;
   __THREW__ = 0;
   $600 = (invoke_iii(28,($285|0),1)|0);
   $601 = __THREW__; __THREW__ = 0;
   $602 = $601&1;
   if ($602) {
    label = 20;
    break L1;
   }
   $603 = +HEAPF64[$600>>3];
   $604 = $283;
   $605 = ($604*3)|0;
   $606 = (($605) + 1)|0;
   __THREW__ = 0;
   $607 = (invoke_iiii(27,($278|0),0,($606|0))|0);
   $608 = __THREW__; __THREW__ = 0;
   $609 = $608&1;
   if ($609) {
    label = 20;
    break L1;
   }
   HEAPF64[$607>>3] = $603;
   __THREW__ = 0;
   $610 = (invoke_iii(28,($285|0),2)|0);
   $611 = __THREW__; __THREW__ = 0;
   $612 = $611&1;
   if ($612) {
    label = 20;
    break L1;
   }
   $613 = +HEAPF64[$610>>3];
   $614 = -$613;
   $615 = $283;
   $616 = ($615*3)|0;
   $617 = (($616) + 1)|0;
   __THREW__ = 0;
   $618 = (invoke_iiii(27,($278|0),1,($617|0))|0);
   $619 = __THREW__; __THREW__ = 0;
   $620 = $619&1;
   if ($620) {
    label = 20;
    break L1;
   }
   HEAPF64[$618>>3] = $614;
   $621 = $283;
   $622 = ($621*3)|0;
   $623 = (($622) + 1)|0;
   __THREW__ = 0;
   $624 = (invoke_iiii(27,($278|0),2,($623|0))|0);
   $625 = __THREW__; __THREW__ = 0;
   $626 = $625&1;
   if ($626) {
    label = 20;
    break L1;
   }
   HEAPF64[$624>>3] = 0.0;
   __THREW__ = 0;
   $627 = (invoke_iii(28,($285|0),0)|0);
   $628 = __THREW__; __THREW__ = 0;
   $629 = $628&1;
   if ($629) {
    label = 20;
    break L1;
   }
   $630 = +HEAPF64[$627>>3];
   $631 = $283;
   $632 = ($631*3)|0;
   $633 = (($632) + 1)|0;
   __THREW__ = 0;
   $634 = (invoke_iiii(27,($278|0),3,($633|0))|0);
   $635 = __THREW__; __THREW__ = 0;
   $636 = $635&1;
   if ($636) {
    label = 20;
    break L1;
   }
   HEAPF64[$634>>3] = $630;
   $637 = $283;
   $638 = ($637*3)|0;
   $639 = (($638) + 1)|0;
   __THREW__ = 0;
   $640 = (invoke_iiii(27,($278|0),4,($639|0))|0);
   $641 = __THREW__; __THREW__ = 0;
   $642 = $641&1;
   if ($642) {
    label = 20;
    break L1;
   }
   HEAPF64[$640>>3] = 0.0;
   $643 = $283;
   $644 = ($643*3)|0;
   $645 = (($644) + 1)|0;
   __THREW__ = 0;
   $646 = (invoke_iiii(27,($278|0),5,($645|0))|0);
   $647 = __THREW__; __THREW__ = 0;
   $648 = $647&1;
   if ($648) {
    label = 20;
    break L1;
   }
   HEAPF64[$646>>3] = 1.0;
   $649 = $283;
   $650 = ($649*3)|0;
   $651 = (($650) + 1)|0;
   __THREW__ = 0;
   $652 = (invoke_iiii(27,($278|0),6,($651|0))|0);
   $653 = __THREW__; __THREW__ = 0;
   $654 = $653&1;
   if ($654) {
    label = 20;
    break L1;
   }
   HEAPF64[$652>>3] = 0.0;
   __THREW__ = 0;
   $655 = (invoke_iii(28,($285|0),2)|0);
   $656 = __THREW__; __THREW__ = 0;
   $657 = $656&1;
   if ($657) {
    label = 20;
    break L1;
   }
   $658 = +HEAPF64[$655>>3];
   $659 = $283;
   $660 = ($659*3)|0;
   $661 = (($660) + 2)|0;
   __THREW__ = 0;
   $662 = (invoke_iiii(27,($278|0),0,($661|0))|0);
   $663 = __THREW__; __THREW__ = 0;
   $664 = $663&1;
   if ($664) {
    label = 20;
    break L1;
   }
   HEAPF64[$662>>3] = $658;
   __THREW__ = 0;
   $665 = (invoke_iii(28,($285|0),1)|0);
   $666 = __THREW__; __THREW__ = 0;
   $667 = $666&1;
   if ($667) {
    label = 20;
    break L1;
   }
   $668 = +HEAPF64[$665>>3];
   $669 = $283;
   $670 = ($669*3)|0;
   $671 = (($670) + 2)|0;
   __THREW__ = 0;
   $672 = (invoke_iiii(27,($278|0),1,($671|0))|0);
   $673 = __THREW__; __THREW__ = 0;
   $674 = $673&1;
   if ($674) {
    label = 20;
    break L1;
   }
   HEAPF64[$672>>3] = $668;
   __THREW__ = 0;
   $675 = (invoke_iii(28,($285|0),0)|0);
   $676 = __THREW__; __THREW__ = 0;
   $677 = $676&1;
   if ($677) {
    label = 20;
    break L1;
   }
   $678 = +HEAPF64[$675>>3];
   $679 = -$678;
   $680 = $283;
   $681 = ($680*3)|0;
   $682 = (($681) + 2)|0;
   __THREW__ = 0;
   $683 = (invoke_iiii(27,($278|0),2,($682|0))|0);
   $684 = __THREW__; __THREW__ = 0;
   $685 = $684&1;
   if ($685) {
    label = 20;
    break L1;
   }
   HEAPF64[$683>>3] = $679;
   $686 = $283;
   $687 = ($686*3)|0;
   $688 = (($687) + 2)|0;
   __THREW__ = 0;
   $689 = (invoke_iiii(27,($278|0),3,($688|0))|0);
   $690 = __THREW__; __THREW__ = 0;
   $691 = $690&1;
   if ($691) {
    label = 20;
    break L1;
   }
   HEAPF64[$689>>3] = 0.0;
   $692 = $283;
   $693 = ($692*3)|0;
   $694 = (($693) + 2)|0;
   __THREW__ = 0;
   $695 = (invoke_iiii(27,($278|0),4,($694|0))|0);
   $696 = __THREW__; __THREW__ = 0;
   $697 = $696&1;
   if ($697) {
    label = 20;
    break L1;
   }
   HEAPF64[$695>>3] = 0.0;
   $698 = $283;
   $699 = ($698*3)|0;
   $700 = (($699) + 2)|0;
   __THREW__ = 0;
   $701 = (invoke_iiii(27,($278|0),5,($700|0))|0);
   $702 = __THREW__; __THREW__ = 0;
   $703 = $702&1;
   if ($703) {
    label = 20;
    break L1;
   }
   HEAPF64[$701>>3] = 0.0;
   $704 = $283;
   $705 = ($704*3)|0;
   $706 = (($705) + 2)|0;
   __THREW__ = 0;
   $707 = (invoke_iiii(27,($278|0),6,($706|0))|0);
   $708 = __THREW__; __THREW__ = 0;
   $709 = $708&1;
   if ($709) {
    label = 20;
    break L1;
   }
   HEAPF64[$707>>3] = 1.0;
   $710 = $283;
   $711 = (($710) + 1)|0;
   $283 = $711;
  }
  __THREW__ = 0;
  $712 = (invoke_ii(29,($278|0))|0);
  $713 = __THREW__; __THREW__ = 0;
  $714 = $713&1;
  if ($714) {
   label = 20;
   break;
  }
  HEAP32[$290>>2] = $712;
  __THREW__ = 0;
  invoke_vii(30,($289|0),($290|0));
  $715 = __THREW__; __THREW__ = 0;
  $716 = $715&1;
  if ($716) {
   label = 20;
   break;
  }
  __THREW__ = 0;
  invoke_viii(31,($292|0),($278|0),($289|0));
  $717 = __THREW__; __THREW__ = 0;
  $718 = $717&1;
  if ($718) {
   label = 73;
   break;
  }
  __THREW__ = 0;
  invoke_vii(32,($291|0),($292|0));
  $719 = __THREW__; __THREW__ = 0;
  $720 = $719&1;
  if ($720) {
   label = 73;
   break;
  }
  __THREW__ = 0;
  $721 = (invoke_ii(33,($291|0))|0);
  $722 = __THREW__; __THREW__ = 0;
  $723 = $722&1;
  if ($723) {
   label = 74;
   break;
  }
  HEAP32[$294>>2] = $721;
  __THREW__ = 0;
  invoke_vii(34,($293|0),($294|0));
  $724 = __THREW__; __THREW__ = 0;
  $725 = $724&1;
  if ($725) {
   label = 74;
   break;
  }
  __THREW__ = 0;
  invoke_viii(31,($296|0),($293|0),($278|0));
  $726 = __THREW__; __THREW__ = 0;
  $727 = $726&1;
  if ($727) {
   label = 75;
   break;
  }
  __THREW__ = 0;
  invoke_vii(32,($295|0),($296|0));
  $728 = __THREW__; __THREW__ = 0;
  $729 = $728&1;
  if ($729) {
   label = 75;
   break;
  }
  $730 = $272;
  $731 = HEAP32[$273>>2]|0;
  $164 = $730;
  $165 = $731;
  $732 = $164;
  $733 = HEAP32[$732>>2]|0;
  $734 = $165;
  $735 = (($733) + (($734*12)|0)|0);
  __THREW__ = 0;
  (invoke_iii(35,($735|0),($295|0))|0);
  $736 = __THREW__; __THREW__ = 0;
  $737 = $736&1;
  if ($737) {
   label = 76;
   break;
  }
  __THREW__ = 0;
  invoke_vi(36,($295|0));
  $738 = __THREW__; __THREW__ = 0;
  $739 = $738&1;
  if ($739) {
   label = 75;
   break;
  }
  __THREW__ = 0;
  invoke_vi(36,($293|0));
  $740 = __THREW__; __THREW__ = 0;
  $741 = $740&1;
  if ($741) {
   label = 74;
   break;
  }
  __THREW__ = 0;
  invoke_vi(36,($291|0));
  $742 = __THREW__; __THREW__ = 0;
  $743 = $742&1;
  if ($743) {
   label = 73;
   break;
  }
  __THREW__ = 0;
  invoke_vi(36,($289|0));
  $744 = __THREW__; __THREW__ = 0;
  $745 = $744&1;
  if ($745) {
   label = 20;
   break;
  }
  __THREW__ = 0;
  invoke_vi(36,($278|0));
  $746 = __THREW__; __THREW__ = 0;
  $747 = $746&1;
  if ($747) {
   label = 12;
   break;
  }
  __ZNSt3__26vectorIiNS_9allocatorIiEEED2Ev($274);
  $748 = HEAP32[$273>>2]|0;
  $749 = (($748) + 1)|0;
  HEAP32[$273>>2] = $749;
 }
 if ((label|0) == 12) {
  $447 = ___cxa_find_matching_catch_2()|0;
  $448 = tempRet0;
  $275 = $447;
  $276 = $448;
 }
 else if ((label|0) == 20) {
  $480 = ___cxa_find_matching_catch_2()|0;
  $481 = tempRet0;
  $275 = $480;
  $276 = $481;
  label = 80;
 }
 else if ((label|0) == 73) {
  $750 = ___cxa_find_matching_catch_2()|0;
  $751 = tempRet0;
  $275 = $750;
  $276 = $751;
  label = 79;
 }
 else if ((label|0) == 74) {
  $752 = ___cxa_find_matching_catch_2()|0;
  $753 = tempRet0;
  $275 = $752;
  $276 = $753;
  label = 78;
 }
 else if ((label|0) == 75) {
  $754 = ___cxa_find_matching_catch_2()|0;
  $755 = tempRet0;
  $275 = $754;
  $276 = $755;
  label = 77;
 }
 else if ((label|0) == 76) {
  $756 = ___cxa_find_matching_catch_2()|0;
  $757 = tempRet0;
  $275 = $756;
  $276 = $757;
  __THREW__ = 0;
  invoke_vi(36,($295|0));
  $758 = __THREW__; __THREW__ = 0;
  $759 = $758&1;
  if ($759) {
   $1407 = ___cxa_find_matching_catch_3(0|0)|0;
   $1408 = tempRet0;
   ___clang_call_terminate($1407);
   // unreachable;
  } else {
   label = 77;
  }
 }
 else if ((label|0) == 82) {
  $770 = $268;
  $771 = ($770*3)|0;
  $297 = $771;
  $772 = $297;
  HEAPF64[$299>>3] = 0.0;
  __ZNSt3__26vectorIdNS_9allocatorIdEEEC2EjRKd($298,$772,$299);
  $$expand_i1_val = 0;
  HEAP8[$300>>0] = $$expand_i1_val;
  $163 = $0;
  $773 = $163;
  $159 = $773;
  $774 = $159;
  $158 = $774;
  $139 = $141;
  $140 = -1;
  $775 = $139;
  HEAP32[$775>>2] = 0;
  $776 = HEAP32[$141>>2]|0;
  HEAP32[$160>>2] = $776;
  $142 = $160;
  HEAP32[$774>>2] = 0;
  $777 = ((($774)) + 4|0);
  $143 = $145;
  $144 = -1;
  $778 = $143;
  HEAP32[$778>>2] = 0;
  $779 = HEAP32[$145>>2]|0;
  HEAP32[$161>>2] = $779;
  $146 = $161;
  HEAP32[$777>>2] = 0;
  $780 = ((($774)) + 8|0);
  $147 = $149;
  $148 = -1;
  $781 = $147;
  HEAP32[$781>>2] = 0;
  $782 = HEAP32[$149>>2]|0;
  HEAP32[$162>>2] = $782;
  $150 = $162;
  $156 = $780;
  HEAP32[$157>>2] = 0;
  $783 = $156;
  $155 = $157;
  $784 = $155;
  $785 = HEAP32[$784>>2]|0;
  $153 = $783;
  HEAP32[$154>>2] = $785;
  $786 = $153;
  $152 = $786;
  $151 = $154;
  $787 = $151;
  $788 = HEAP32[$787>>2]|0;
  HEAP32[$786>>2] = $788;
  HEAP32[$301>>2] = 0;
  L79: while(1) {
   $789 = HEAP32[$301>>2]|0;
   $790 = $297;
   $791 = ($789|0)<($790|0);
   if (!($791)) {
    label = 182;
    break;
   }
   $302 = 0;
   while(1) {
    $792 = $302;
    $793 = $297;
    $794 = ($792|0)<($793|0);
    if (!($794)) {
     break;
    }
    $795 = $302;
    $137 = $298;
    $138 = $795;
    $796 = $137;
    $797 = HEAP32[$796>>2]|0;
    $798 = $138;
    $799 = (($797) + ($798<<3)|0);
    HEAPF64[$799>>3] = 0.0;
    $800 = $302;
    $801 = (($800) + 1)|0;
    $302 = $801;
   }
   $806 = HEAP32[$301>>2]|0;
   $135 = $298;
   $136 = $806;
   $807 = $135;
   $808 = HEAP32[$807>>2]|0;
   $809 = $136;
   $810 = (($808) + ($809<<3)|0);
   HEAPF64[$810>>3] = 1.0;
   $811 = HEAP32[$301>>2]|0;
   $812 = (+($811|0));
   $813 = $268;
   $814 = (+($813|0));
   $815 = $812 / $814;
   $816 = (+Math_floor((+$815)));
   $817 = (~~(($816)));
   $303 = $817;
   $818 = HEAP32[$301>>2]|0;
   $819 = $303;
   $820 = $268;
   $821 = Math_imul($819, $820)|0;
   $822 = (($818) - ($821))|0;
   HEAP32[$304>>2] = $822;
   $823 = HEAP32[$304>>2]|0;
   $824 = $269;
   $825 = ($823|0)>=($824|0);
   if (!($825)) {
    $826 = HEAP32[$304>>2]|0;
    $133 = $8;
    $134 = $826;
    $827 = $133;
    $828 = HEAP32[$827>>2]|0;
    $829 = $134;
    $830 = (($828) + (($829*12)|0)|0);
    $132 = $830;
    $831 = $132;
    $832 = ((($831)) + 4|0);
    $833 = HEAP32[$832>>2]|0;
    $834 = HEAP32[$831>>2]|0;
    $835 = $833;
    $836 = $834;
    $837 = (($835) - ($836))|0;
    $838 = (($837|0) / 4)&-1;
    $839 = (+($838>>>0));
    $840 = -1.0 / $839;
    $305 = $840;
    $306 = 0;
    while(1) {
     $841 = $306;
     $842 = HEAP32[$304>>2]|0;
     $130 = $8;
     $131 = $842;
     $843 = $130;
     $844 = HEAP32[$843>>2]|0;
     $845 = $131;
     $846 = (($844) + (($845*12)|0)|0);
     $129 = $846;
     $847 = $129;
     $848 = ((($847)) + 4|0);
     $849 = HEAP32[$848>>2]|0;
     $850 = HEAP32[$847>>2]|0;
     $851 = $849;
     $852 = $850;
     $853 = (($851) - ($852))|0;
     $854 = (($853|0) / 4)&-1;
     $855 = ($841>>>0)<($854>>>0);
     if (!($855)) {
      break;
     }
     $856 = $305;
     $857 = $303;
     $858 = $268;
     $859 = Math_imul($857, $858)|0;
     $860 = HEAP32[$304>>2]|0;
     $127 = $8;
     $128 = $860;
     $861 = $127;
     $862 = HEAP32[$861>>2]|0;
     $863 = $128;
     $864 = (($862) + (($863*12)|0)|0);
     $865 = $306;
     $125 = $864;
     $126 = $865;
     $866 = $125;
     $867 = HEAP32[$866>>2]|0;
     $868 = $126;
     $869 = (($867) + ($868<<2)|0);
     $870 = HEAP32[$869>>2]|0;
     $871 = (($859) + ($870))|0;
     $123 = $298;
     $124 = $871;
     $872 = $123;
     $873 = HEAP32[$872>>2]|0;
     $874 = $124;
     $875 = (($873) + ($874<<3)|0);
     HEAPF64[$875>>3] = $856;
     $876 = $306;
     $877 = (($876) + 1)|0;
     $306 = $877;
    }
    $878 = $266;
    $879 = HEAP32[$304>>2]|0;
    $880 = $268;
    $881 = 0;
    $882 = (($879) + ($881))|0;
    __THREW__ = 0;
    $883 = (invoke_iii(38,($878|0),($882|0))|0);
    $884 = __THREW__; __THREW__ = 0;
    $885 = $884&1;
    if ($885) {
     label = 88;
     break;
    }
    $886 = +HEAPF64[$883>>3];
    $307 = $886;
    $887 = $266;
    $888 = HEAP32[$304>>2]|0;
    $889 = $268;
    $890 = $889;
    $891 = (($888) + ($890))|0;
    __THREW__ = 0;
    $892 = (invoke_iii(38,($887|0),($891|0))|0);
    $893 = __THREW__; __THREW__ = 0;
    $894 = $893&1;
    if ($894) {
     label = 88;
     break;
    }
    $895 = +HEAPF64[$892>>3];
    $308 = $895;
    $896 = $266;
    $897 = HEAP32[$304>>2]|0;
    $898 = $268;
    $899 = $898<<1;
    $900 = (($897) + ($899))|0;
    __THREW__ = 0;
    $901 = (invoke_iii(38,($896|0),($900|0))|0);
    $902 = __THREW__; __THREW__ = 0;
    $903 = $902&1;
    if ($903) {
     label = 88;
     break;
    }
    $904 = +HEAPF64[$901>>3];
    $309 = $904;
    $122 = $310;
    $905 = $122;
    $118 = $905;
    $906 = $118;
    $117 = $906;
    $98 = $100;
    $99 = -1;
    $907 = $98;
    HEAP32[$907>>2] = 0;
    $908 = HEAP32[$100>>2]|0;
    HEAP32[$119>>2] = $908;
    $101 = $119;
    HEAP32[$906>>2] = 0;
    $909 = ((($906)) + 4|0);
    $102 = $104;
    $103 = -1;
    $910 = $102;
    HEAP32[$910>>2] = 0;
    $911 = HEAP32[$104>>2]|0;
    HEAP32[$120>>2] = $911;
    $105 = $120;
    HEAP32[$909>>2] = 0;
    $912 = ((($906)) + 8|0);
    $106 = $108;
    $107 = -1;
    $913 = $106;
    HEAP32[$913>>2] = 0;
    $914 = HEAP32[$108>>2]|0;
    HEAP32[$121>>2] = $914;
    $109 = $121;
    $115 = $912;
    HEAP32[$116>>2] = 0;
    $915 = $115;
    $114 = $116;
    $916 = $114;
    $917 = HEAP32[$916>>2]|0;
    $112 = $915;
    HEAP32[$113>>2] = $917;
    $918 = $112;
    $111 = $918;
    $110 = $113;
    $919 = $110;
    $920 = HEAP32[$919>>2]|0;
    HEAP32[$918>>2] = $920;
    $78 = $310;
    $79 = $304;
    $921 = $78;
    $922 = ((($921)) + 4|0);
    $923 = HEAP32[$922>>2]|0;
    $77 = $921;
    $924 = $77;
    $925 = ((($924)) + 8|0);
    $76 = $925;
    $926 = $76;
    $75 = $926;
    $927 = $75;
    $928 = HEAP32[$927>>2]|0;
    $929 = ($923|0)!=($928|0);
    if ($929) {
     $72 = $80;
     $73 = $921;
     $74 = 1;
     $66 = $921;
     $930 = $66;
     $931 = ((($930)) + 8|0);
     $65 = $931;
     $932 = $65;
     $64 = $932;
     $933 = $64;
     $934 = ((($921)) + 4|0);
     $935 = HEAP32[$934>>2]|0;
     $67 = $935;
     $936 = $67;
     $937 = $79;
     $68 = $933;
     $69 = $936;
     $70 = $937;
     $938 = $69;
     $939 = $70;
     $940 = HEAP32[$939>>2]|0;
     HEAP32[$938>>2] = $940;
     $71 = $80;
     $941 = ((($921)) + 4|0);
     $942 = HEAP32[$941>>2]|0;
     $943 = ((($942)) + 4|0);
     HEAP32[$941>>2] = $943;
    } else {
     $944 = $79;
     __THREW__ = 0;
     invoke_vii(25,($921|0),($944|0));
     $945 = __THREW__; __THREW__ = 0;
     $946 = $945&1;
     if ($946) {
      label = 105;
      break;
     }
    }
    $311 = 0;
    while(1) {
     $947 = $311;
     $948 = HEAP32[$304>>2]|0;
     $62 = $8;
     $63 = $948;
     $949 = $62;
     $950 = HEAP32[$949>>2]|0;
     $951 = $63;
     $952 = (($950) + (($951*12)|0)|0);
     $61 = $952;
     $953 = $61;
     $954 = ((($953)) + 4|0);
     $955 = HEAP32[$954>>2]|0;
     $956 = HEAP32[$953>>2]|0;
     $957 = $955;
     $958 = $956;
     $959 = (($957) - ($958))|0;
     $960 = (($959|0) / 4)&-1;
     $961 = ($947>>>0)<($960>>>0);
     if (!($961)) {
      break;
     }
     $962 = HEAP32[$304>>2]|0;
     $53 = $8;
     $54 = $962;
     $963 = $53;
     $964 = HEAP32[$963>>2]|0;
     $965 = $54;
     $966 = (($964) + (($965*12)|0)|0);
     $967 = $311;
     $49 = $966;
     $50 = $967;
     $968 = $49;
     $969 = HEAP32[$968>>2]|0;
     $970 = $50;
     $971 = (($969) + ($970<<2)|0);
     $44 = $310;
     $45 = $971;
     $972 = $44;
     $973 = ((($972)) + 4|0);
     $974 = HEAP32[$973>>2]|0;
     $43 = $972;
     $975 = $43;
     $976 = ((($975)) + 8|0);
     $42 = $976;
     $977 = $42;
     $41 = $977;
     $978 = $41;
     $979 = HEAP32[$978>>2]|0;
     $980 = ($974|0)!=($979|0);
     if ($980) {
      $38 = $46;
      $39 = $972;
      $40 = 1;
      $32 = $972;
      $981 = $32;
      $982 = ((($981)) + 8|0);
      $31 = $982;
      $983 = $31;
      $30 = $983;
      $984 = $30;
      $985 = ((($972)) + 4|0);
      $986 = HEAP32[$985>>2]|0;
      $33 = $986;
      $987 = $33;
      $988 = $45;
      $34 = $984;
      $35 = $987;
      $36 = $988;
      $989 = $35;
      $990 = $36;
      $991 = HEAP32[$990>>2]|0;
      HEAP32[$989>>2] = $991;
      $37 = $46;
      $992 = ((($972)) + 4|0);
      $993 = HEAP32[$992>>2]|0;
      $994 = ((($993)) + 4|0);
      HEAP32[$992>>2] = $994;
     } else {
      $995 = $45;
      __THREW__ = 0;
      invoke_vii(25,($972|0),($995|0));
      $996 = __THREW__; __THREW__ = 0;
      $997 = $996&1;
      if ($997) {
       label = 105;
       break L79;
      }
     }
     $998 = $311;
     $999 = (($998) + 1)|0;
     $311 = $999;
    }
    $1002 = $272;
    $1003 = HEAP32[$304>>2]|0;
    $28 = $1002;
    $29 = $1003;
    $1004 = $28;
    $1005 = HEAP32[$1004>>2]|0;
    $1006 = $29;
    $1007 = (($1005) + (($1006*12)|0)|0);
    __THREW__ = 0;
    invoke_vii(39,($312|0),($1007|0));
    $1008 = __THREW__; __THREW__ = 0;
    $1009 = $1008&1;
    if ($1009) {
     label = 105;
     break;
    }
    __THREW__ = 0;
    invoke_viii(40,($314|0),($312|0),0);
    $1010 = __THREW__; __THREW__ = 0;
    $1011 = $1010&1;
    if ($1011) {
     label = 130;
     break;
    }
    __THREW__ = 0;
    invoke_vii(41,($313|0),($314|0));
    $1012 = __THREW__; __THREW__ = 0;
    $1013 = $1012&1;
    if ($1013) {
     label = 130;
     break;
    }
    __THREW__ = 0;
    invoke_viii(40,($316|0),($312|0),1);
    $1014 = __THREW__; __THREW__ = 0;
    $1015 = $1014&1;
    if ($1015) {
     label = 131;
     break;
    }
    __THREW__ = 0;
    invoke_vii(41,($315|0),($316|0));
    $1016 = __THREW__; __THREW__ = 0;
    $1017 = $1016&1;
    if ($1017) {
     label = 131;
     break;
    }
    __THREW__ = 0;
    invoke_viii(40,($318|0),($312|0),2);
    $1018 = __THREW__; __THREW__ = 0;
    $1019 = $1018&1;
    if ($1019) {
     label = 132;
     break;
    }
    __THREW__ = 0;
    invoke_vii(41,($317|0),($318|0));
    $1020 = __THREW__; __THREW__ = 0;
    $1021 = $1020&1;
    if ($1021) {
     label = 132;
     break;
    }
    __THREW__ = 0;
    invoke_viii(40,($320|0),($312|0),3);
    $1022 = __THREW__; __THREW__ = 0;
    $1023 = $1022&1;
    if ($1023) {
     label = 133;
     break;
    }
    __THREW__ = 0;
    invoke_vii(41,($319|0),($320|0));
    $1024 = __THREW__; __THREW__ = 0;
    $1025 = $1024&1;
    if ($1025) {
     label = 133;
     break;
    }
    __THREW__ = 0;
    invoke_viii(40,($322|0),($312|0),4);
    $1026 = __THREW__; __THREW__ = 0;
    $1027 = $1026&1;
    if ($1027) {
     label = 134;
     break;
    }
    __THREW__ = 0;
    invoke_vii(41,($321|0),($322|0));
    $1028 = __THREW__; __THREW__ = 0;
    $1029 = $1028&1;
    if ($1029) {
     label = 134;
     break;
    }
    __THREW__ = 0;
    invoke_viii(40,($324|0),($312|0),5);
    $1030 = __THREW__; __THREW__ = 0;
    $1031 = $1030&1;
    if ($1031) {
     label = 135;
     break;
    }
    __THREW__ = 0;
    invoke_vii(41,($323|0),($324|0));
    $1032 = __THREW__; __THREW__ = 0;
    $1033 = $1032&1;
    if ($1033) {
     label = 135;
     break;
    }
    __THREW__ = 0;
    invoke_viii(40,($326|0),($312|0),6);
    $1034 = __THREW__; __THREW__ = 0;
    $1035 = $1034&1;
    if ($1035) {
     label = 136;
     break;
    }
    __THREW__ = 0;
    invoke_vii(41,($325|0),($326|0));
    $1036 = __THREW__; __THREW__ = 0;
    $1037 = $1036&1;
    if ($1037) {
     label = 136;
     break;
    }
    $1038 = $303;
    $1039 = ($1038|0)==(0);
    L122: do {
     if ($1039) {
      $327 = 0;
      while(1) {
       $1040 = $327;
       __THREW__ = 0;
       invoke_viii(40,($328|0),($312|0),0);
       $1041 = __THREW__; __THREW__ = 0;
       $1042 = $1041&1;
       if ($1042) {
        label = 137;
        break L79;
       }
       __THREW__ = 0;
       $1043 = (invoke_ii(42,($328|0))|0);
       $1044 = __THREW__; __THREW__ = 0;
       $1045 = $1044&1;
       if ($1045) {
        label = 137;
        break L79;
       }
       $1046 = ($1040|0)<($1043|0);
       if (!($1046)) {
        break L122;
       }
       $1047 = $327;
       $1048 = (($1047|0) % 3)&-1;
       $329 = $1048;
       $1049 = $327;
       $1050 = (+($1049|0));
       $1051 = $1050 / 3.0;
       $1052 = (+Math_floor((+$1051)));
       $1053 = (~~(($1052)));
       $330 = $1053;
       $1054 = $330;
       $24 = $310;
       $25 = $1054;
       $1055 = $24;
       $1056 = HEAP32[$1055>>2]|0;
       $1057 = $25;
       $1058 = (($1056) + ($1057<<2)|0);
       $1059 = HEAP32[$1058>>2]|0;
       $331 = $1059;
       $1060 = $307;
       $1061 = $327;
       __THREW__ = 0;
       $1062 = (invoke_iii(43,($313|0),($1061|0))|0);
       $1063 = __THREW__; __THREW__ = 0;
       $1064 = $1063&1;
       if ($1064) {
        label = 137;
        break L79;
       }
       $1065 = +HEAPF64[$1062>>3];
       $1066 = $1060 * $1065;
       $1067 = $329;
       $1068 = $268;
       $1069 = Math_imul($1067, $1068)|0;
       $1070 = $331;
       $1071 = (($1069) + ($1070))|0;
       $22 = $298;
       $23 = $1071;
       $1072 = $22;
       $1073 = HEAP32[$1072>>2]|0;
       $1074 = $23;
       $1075 = (($1073) + ($1074<<3)|0);
       $1076 = +HEAPF64[$1075>>3];
       $1077 = $1076 - $1066;
       HEAPF64[$1075>>3] = $1077;
       $1078 = $308;
       $1079 = $327;
       __THREW__ = 0;
       $1080 = (invoke_iii(43,($319|0),($1079|0))|0);
       $1081 = __THREW__; __THREW__ = 0;
       $1082 = $1081&1;
       if ($1082) {
        label = 137;
        break L79;
       }
       $1083 = +HEAPF64[$1080>>3];
       $1084 = -$1083;
       $1085 = $1078 * $1084;
       $1086 = $329;
       $1087 = $268;
       $1088 = Math_imul($1086, $1087)|0;
       $1089 = $331;
       $1090 = (($1088) + ($1089))|0;
       $18 = $298;
       $19 = $1090;
       $1091 = $18;
       $1092 = HEAP32[$1091>>2]|0;
       $1093 = $19;
       $1094 = (($1092) + ($1093<<3)|0);
       $1095 = +HEAPF64[$1094>>3];
       $1096 = $1095 - $1085;
       HEAPF64[$1094>>3] = $1096;
       $1097 = $309;
       $1098 = $327;
       __THREW__ = 0;
       $1099 = (invoke_iii(43,($317|0),($1098|0))|0);
       $1100 = __THREW__; __THREW__ = 0;
       $1101 = $1100&1;
       if ($1101) {
        label = 137;
        break L79;
       }
       $1102 = +HEAPF64[$1099>>3];
       $1103 = $1097 * $1102;
       $1104 = $329;
       $1105 = $268;
       $1106 = Math_imul($1104, $1105)|0;
       $1107 = $331;
       $1108 = (($1106) + ($1107))|0;
       $14 = $298;
       $15 = $1108;
       $1109 = $14;
       $1110 = HEAP32[$1109>>2]|0;
       $1111 = $15;
       $1112 = (($1110) + ($1111<<3)|0);
       $1113 = +HEAPF64[$1112>>3];
       $1114 = $1113 - $1103;
       HEAPF64[$1112>>3] = $1114;
       $1115 = $327;
       $1116 = (($1115) + 1)|0;
       $327 = $1116;
      }
     } else {
      $1135 = $303;
      $1136 = ($1135|0)==(1);
      if ($1136) {
       $332 = 0;
       while(1) {
        $1137 = $332;
        __THREW__ = 0;
        invoke_viii(40,($333|0),($312|0),0);
        $1138 = __THREW__; __THREW__ = 0;
        $1139 = $1138&1;
        if ($1139) {
         label = 137;
         break L79;
        }
        __THREW__ = 0;
        $1140 = (invoke_ii(42,($333|0))|0);
        $1141 = __THREW__; __THREW__ = 0;
        $1142 = $1141&1;
        if ($1142) {
         label = 137;
         break L79;
        }
        $1143 = ($1137|0)<($1140|0);
        if (!($1143)) {
         break L122;
        }
        $1144 = $332;
        $1145 = (($1144|0) % 3)&-1;
        $334 = $1145;
        $1146 = $332;
        $1147 = (+($1146|0));
        $1148 = $1147 / 3.0;
        $1149 = (+Math_floor((+$1148)));
        $1150 = (~~(($1149)));
        $335 = $1150;
        $1151 = $335;
        $10 = $310;
        $11 = $1151;
        $1152 = $10;
        $1153 = HEAP32[$1152>>2]|0;
        $1154 = $11;
        $1155 = (($1153) + ($1154<<2)|0);
        $1156 = HEAP32[$1155>>2]|0;
        $336 = $1156;
        $1157 = $307;
        $1158 = $332;
        __THREW__ = 0;
        $1159 = (invoke_iii(43,($319|0),($1158|0))|0);
        $1160 = __THREW__; __THREW__ = 0;
        $1161 = $1160&1;
        if ($1161) {
         label = 137;
         break L79;
        }
        $1162 = +HEAPF64[$1159>>3];
        $1163 = $1157 * $1162;
        $1164 = $334;
        $1165 = $268;
        $1166 = Math_imul($1164, $1165)|0;
        $1167 = $336;
        $1168 = (($1166) + ($1167))|0;
        $12 = $298;
        $13 = $1168;
        $1169 = $12;
        $1170 = HEAP32[$1169>>2]|0;
        $1171 = $13;
        $1172 = (($1170) + ($1171<<3)|0);
        $1173 = +HEAPF64[$1172>>3];
        $1174 = $1173 - $1163;
        HEAPF64[$1172>>3] = $1174;
        $1175 = $308;
        $1176 = $332;
        __THREW__ = 0;
        $1177 = (invoke_iii(43,($313|0),($1176|0))|0);
        $1178 = __THREW__; __THREW__ = 0;
        $1179 = $1178&1;
        if ($1179) {
         label = 137;
         break L79;
        }
        $1180 = +HEAPF64[$1177>>3];
        $1181 = $1175 * $1180;
        $1182 = $334;
        $1183 = $268;
        $1184 = Math_imul($1182, $1183)|0;
        $1185 = $336;
        $1186 = (($1184) + ($1185))|0;
        $16 = $298;
        $17 = $1186;
        $1187 = $16;
        $1188 = HEAP32[$1187>>2]|0;
        $1189 = $17;
        $1190 = (($1188) + ($1189<<3)|0);
        $1191 = +HEAPF64[$1190>>3];
        $1192 = $1191 - $1181;
        HEAPF64[$1190>>3] = $1192;
        $1193 = $309;
        $1194 = $332;
        __THREW__ = 0;
        $1195 = (invoke_iii(43,($315|0),($1194|0))|0);
        $1196 = __THREW__; __THREW__ = 0;
        $1197 = $1196&1;
        if ($1197) {
         label = 137;
         break L79;
        }
        $1198 = +HEAPF64[$1195>>3];
        $1199 = -$1198;
        $1200 = $1193 * $1199;
        $1201 = $334;
        $1202 = $268;
        $1203 = Math_imul($1201, $1202)|0;
        $1204 = $336;
        $1205 = (($1203) + ($1204))|0;
        $20 = $298;
        $21 = $1205;
        $1206 = $20;
        $1207 = HEAP32[$1206>>2]|0;
        $1208 = $21;
        $1209 = (($1207) + ($1208<<3)|0);
        $1210 = +HEAPF64[$1209>>3];
        $1211 = $1210 - $1200;
        HEAPF64[$1209>>3] = $1211;
        $1212 = $332;
        $1213 = (($1212) + 1)|0;
        $332 = $1213;
       }
      }
      $1214 = $303;
      $1215 = ($1214|0)==(2);
      if (!($1215)) {
       break;
      }
      $337 = 0;
      while(1) {
       $1216 = $337;
       __THREW__ = 0;
       invoke_viii(40,($338|0),($312|0),0);
       $1217 = __THREW__; __THREW__ = 0;
       $1218 = $1217&1;
       if ($1218) {
        label = 137;
        break L79;
       }
       __THREW__ = 0;
       $1219 = (invoke_ii(42,($338|0))|0);
       $1220 = __THREW__; __THREW__ = 0;
       $1221 = $1220&1;
       if ($1221) {
        label = 137;
        break L79;
       }
       $1222 = ($1216|0)<($1219|0);
       if (!($1222)) {
        break L122;
       }
       $1223 = $337;
       $1224 = (($1223|0) % 3)&-1;
       $339 = $1224;
       $1225 = $337;
       $1226 = (+($1225|0));
       $1227 = $1226 / 3.0;
       $1228 = (+Math_floor((+$1227)));
       $1229 = (~~(($1228)));
       $340 = $1229;
       $1230 = $340;
       $26 = $310;
       $27 = $1230;
       $1231 = $26;
       $1232 = HEAP32[$1231>>2]|0;
       $1233 = $27;
       $1234 = (($1232) + ($1233<<2)|0);
       $1235 = HEAP32[$1234>>2]|0;
       $341 = $1235;
       $1236 = $307;
       $1237 = $337;
       __THREW__ = 0;
       $1238 = (invoke_iii(43,($317|0),($1237|0))|0);
       $1239 = __THREW__; __THREW__ = 0;
       $1240 = $1239&1;
       if ($1240) {
        label = 137;
        break L79;
       }
       $1241 = +HEAPF64[$1238>>3];
       $1242 = -$1241;
       $1243 = $1236 * $1242;
       $1244 = $339;
       $1245 = $268;
       $1246 = Math_imul($1244, $1245)|0;
       $1247 = $341;
       $1248 = (($1246) + ($1247))|0;
       $47 = $298;
       $48 = $1248;
       $1249 = $47;
       $1250 = HEAP32[$1249>>2]|0;
       $1251 = $48;
       $1252 = (($1250) + ($1251<<3)|0);
       $1253 = +HEAPF64[$1252>>3];
       $1254 = $1253 - $1243;
       HEAPF64[$1252>>3] = $1254;
       $1255 = $308;
       $1256 = $337;
       __THREW__ = 0;
       $1257 = (invoke_iii(43,($315|0),($1256|0))|0);
       $1258 = __THREW__; __THREW__ = 0;
       $1259 = $1258&1;
       if ($1259) {
        label = 137;
        break L79;
       }
       $1260 = +HEAPF64[$1257>>3];
       $1261 = $1255 * $1260;
       $1262 = $339;
       $1263 = $268;
       $1264 = Math_imul($1262, $1263)|0;
       $1265 = $341;
       $1266 = (($1264) + ($1265))|0;
       $51 = $298;
       $52 = $1266;
       $1267 = $51;
       $1268 = HEAP32[$1267>>2]|0;
       $1269 = $52;
       $1270 = (($1268) + ($1269<<3)|0);
       $1271 = +HEAPF64[$1270>>3];
       $1272 = $1271 - $1261;
       HEAPF64[$1270>>3] = $1272;
       $1273 = $309;
       $1274 = $337;
       __THREW__ = 0;
       $1275 = (invoke_iii(43,($313|0),($1274|0))|0);
       $1276 = __THREW__; __THREW__ = 0;
       $1277 = $1276&1;
       if ($1277) {
        label = 137;
        break L79;
       }
       $1278 = +HEAPF64[$1275>>3];
       $1279 = $1273 * $1278;
       $1280 = $339;
       $1281 = $268;
       $1282 = Math_imul($1280, $1281)|0;
       $1283 = $341;
       $1284 = (($1282) + ($1283))|0;
       $55 = $298;
       $56 = $1284;
       $1285 = $55;
       $1286 = HEAP32[$1285>>2]|0;
       $1287 = $56;
       $1288 = (($1286) + ($1287<<3)|0);
       $1289 = +HEAPF64[$1288>>3];
       $1290 = $1289 - $1279;
       HEAPF64[$1288>>3] = $1290;
       $1291 = $337;
       $1292 = (($1291) + 1)|0;
       $337 = $1292;
      }
     }
    } while(0);
    HEAP32[$342>>2] = 0;
    while(1) {
     $1293 = HEAP32[$342>>2]|0;
     $1294 = $297;
     $1295 = ($1293|0)<($1294|0);
     if (!($1295)) {
      break;
     }
     $1296 = HEAP32[$342>>2]|0;
     $57 = $298;
     $58 = $1296;
     $1297 = $57;
     $1298 = HEAP32[$1297>>2]|0;
     $1299 = $58;
     $1300 = (($1298) + ($1299<<3)|0);
     $1301 = +HEAPF64[$1300>>3];
     $1302 = (+Math_abs((+$1301)));
     $1303 = $1302 > 9.9999999999999995E-8;
     do {
      if ($1303) {
       $1304 = HEAP32[$342>>2]|0;
       $59 = $298;
       $60 = $1304;
       $1305 = $59;
       $1306 = HEAP32[$1305>>2]|0;
       $1307 = $60;
       $1308 = (($1306) + ($1307<<3)|0);
       __THREW__ = 0;
       invoke_viiii(45,($343|0),($301|0),($342|0),($1308|0));
       $1309 = __THREW__; __THREW__ = 0;
       $1310 = $1309&1;
       if ($1310) {
        label = 137;
        break L79;
       }
       $95 = $0;
       $96 = $343;
       $1311 = $95;
       $1312 = ((($1311)) + 4|0);
       $1313 = HEAP32[$1312>>2]|0;
       $94 = $1311;
       $1314 = $94;
       $1315 = ((($1314)) + 8|0);
       $93 = $1315;
       $1316 = $93;
       $92 = $1316;
       $1317 = $92;
       $1318 = HEAP32[$1317>>2]|0;
       $1319 = ($1313|0)!=($1318|0);
       if ($1319) {
        $89 = $97;
        $90 = $1311;
        $91 = 1;
        $83 = $1311;
        $1320 = $83;
        $1321 = ((($1320)) + 8|0);
        $82 = $1321;
        $1322 = $82;
        $81 = $1322;
        $1323 = $81;
        $1324 = ((($1311)) + 4|0);
        $1325 = HEAP32[$1324>>2]|0;
        $84 = $1325;
        $1326 = $84;
        $1327 = $96;
        $85 = $1323;
        $86 = $1326;
        $87 = $1327;
        $1328 = $86;
        $1329 = $87;
        ;HEAP32[$1328>>2]=HEAP32[$1329>>2]|0;HEAP32[$1328+4>>2]=HEAP32[$1329+4>>2]|0;HEAP32[$1328+8>>2]=HEAP32[$1329+8>>2]|0;HEAP32[$1328+12>>2]=HEAP32[$1329+12>>2]|0;
        $88 = $97;
        $1330 = ((($1311)) + 4|0);
        $1331 = HEAP32[$1330>>2]|0;
        $1332 = ((($1331)) + 16|0);
        HEAP32[$1330>>2] = $1332;
        break;
       } else {
        $1333 = $96;
        __THREW__ = 0;
        invoke_vii(46,($1311|0),($1333|0));
        $1334 = __THREW__; __THREW__ = 0;
        $1335 = $1334&1;
        if ($1335) {
         label = 137;
         break L79;
        } else {
         break;
        }
       }
      }
     } while(0);
     $1336 = HEAP32[$342>>2]|0;
     $1337 = (($1336) + 1)|0;
     HEAP32[$342>>2] = $1337;
    }
    __THREW__ = 0;
    invoke_vi(44,($325|0));
    $1338 = __THREW__; __THREW__ = 0;
    $1339 = $1338&1;
    if ($1339) {
     label = 136;
     break;
    }
    __THREW__ = 0;
    invoke_vi(44,($323|0));
    $1340 = __THREW__; __THREW__ = 0;
    $1341 = $1340&1;
    if ($1341) {
     label = 135;
     break;
    }
    __THREW__ = 0;
    invoke_vi(44,($321|0));
    $1342 = __THREW__; __THREW__ = 0;
    $1343 = $1342&1;
    if ($1343) {
     label = 134;
     break;
    }
    __THREW__ = 0;
    invoke_vi(44,($319|0));
    $1344 = __THREW__; __THREW__ = 0;
    $1345 = $1344&1;
    if ($1345) {
     label = 133;
     break;
    }
    __THREW__ = 0;
    invoke_vi(44,($317|0));
    $1346 = __THREW__; __THREW__ = 0;
    $1347 = $1346&1;
    if ($1347) {
     label = 132;
     break;
    }
    __THREW__ = 0;
    invoke_vi(44,($315|0));
    $1348 = __THREW__; __THREW__ = 0;
    $1349 = $1348&1;
    if ($1349) {
     label = 131;
     break;
    }
    __THREW__ = 0;
    invoke_vi(44,($313|0));
    $1350 = __THREW__; __THREW__ = 0;
    $1351 = $1350&1;
    if ($1351) {
     label = 130;
     break;
    }
    __THREW__ = 0;
    invoke_vi(36,($312|0));
    $1352 = __THREW__; __THREW__ = 0;
    $1353 = $1352&1;
    if ($1353) {
     label = 105;
     break;
    }
    __THREW__ = 0;
    invoke_vi(37,($310|0));
    $1354 = __THREW__; __THREW__ = 0;
    $1355 = $1354&1;
    if ($1355) {
     label = 88;
     break;
    }
   }
   $1356 = HEAP32[$301>>2]|0;
   $1357 = (($1356) + 1)|0;
   HEAP32[$301>>2] = $1357;
  }
  switch (label|0) {
   case 105: {
    $1000 = ___cxa_find_matching_catch_2()|0;
    $1001 = tempRet0;
    $275 = $1000;
    $276 = $1001;
    label = 181;
    break;
   }
   case 130: {
    $1117 = ___cxa_find_matching_catch_2()|0;
    $1118 = tempRet0;
    $275 = $1117;
    $276 = $1118;
    label = 180;
    break;
   }
   case 131: {
    $1119 = ___cxa_find_matching_catch_2()|0;
    $1120 = tempRet0;
    $275 = $1119;
    $276 = $1120;
    label = 179;
    break;
   }
   case 132: {
    $1121 = ___cxa_find_matching_catch_2()|0;
    $1122 = tempRet0;
    $275 = $1121;
    $276 = $1122;
    label = 178;
    break;
   }
   case 133: {
    $1123 = ___cxa_find_matching_catch_2()|0;
    $1124 = tempRet0;
    $275 = $1123;
    $276 = $1124;
    label = 177;
    break;
   }
   case 134: {
    $1125 = ___cxa_find_matching_catch_2()|0;
    $1126 = tempRet0;
    $275 = $1125;
    $276 = $1126;
    label = 176;
    break;
   }
   case 135: {
    $1127 = ___cxa_find_matching_catch_2()|0;
    $1128 = tempRet0;
    $275 = $1127;
    $276 = $1128;
    label = 175;
    break;
   }
   case 136: {
    $1129 = ___cxa_find_matching_catch_2()|0;
    $1130 = tempRet0;
    $275 = $1129;
    $276 = $1130;
    label = 174;
    break;
   }
   case 137: {
    $1131 = ___cxa_find_matching_catch_2()|0;
    $1132 = tempRet0;
    $275 = $1131;
    $276 = $1132;
    __THREW__ = 0;
    invoke_vi(44,($325|0));
    $1133 = __THREW__; __THREW__ = 0;
    $1134 = $1133&1;
    if ($1134) {
     $1407 = ___cxa_find_matching_catch_3(0|0)|0;
     $1408 = tempRet0;
     ___clang_call_terminate($1407);
     // unreachable;
    } else {
     label = 174;
    }
    break;
   }
   case 182: {
    $181 = $0;
    $1374 = $181;
    $1375 = HEAP32[$1374>>2]|0;
    $178 = $1374;
    $179 = $1375;
    $1376 = $179;
    $175 = $177;
    $176 = $1376;
    $1377 = $175;
    $1378 = $176;
    HEAP32[$1377>>2] = $1378;
    $1379 = HEAP32[$177>>2]|0;
    HEAP32[$180>>2] = $1379;
    $1380 = HEAP32[$180>>2]|0;
    HEAP32[$344>>2] = $1380;
    $188 = $0;
    $1381 = $188;
    $1382 = ((($1381)) + 4|0);
    $1383 = HEAP32[$1382>>2]|0;
    $185 = $1381;
    $186 = $1383;
    $1384 = $186;
    $182 = $184;
    $183 = $1384;
    $1385 = $182;
    $1386 = $183;
    HEAP32[$1385>>2] = $1386;
    $1387 = HEAP32[$184>>2]|0;
    HEAP32[$187>>2] = $1387;
    $1388 = HEAP32[$187>>2]|0;
    HEAP32[$345>>2] = $1388;
    ;HEAP8[$195>>0]=HEAP8[$346>>0]|0;
    ;HEAP8[$196>>0]=HEAP8[$345>>0]|0;HEAP8[$196+1>>0]=HEAP8[$345+1>>0]|0;HEAP8[$196+2>>0]=HEAP8[$345+2>>0]|0;HEAP8[$196+3>>0]=HEAP8[$345+3>>0]|0;
    ;HEAP8[$197>>0]=HEAP8[$344>>0]|0;HEAP8[$197+1>>0]=HEAP8[$344+1>>0]|0;HEAP8[$197+2>>0]=HEAP8[$344+2>>0]|0;HEAP8[$197+3>>0]=HEAP8[$344+3>>0]|0;
    $194 = $197;
    $1389 = $194;
    $1390 = HEAP32[$1389>>2]|0;
    $190 = $196;
    $1391 = $190;
    $1392 = HEAP32[$1391>>2]|0;
    $191 = $1390;
    $192 = $1392;
    $193 = $195;
    $1393 = $191;
    $1394 = $192;
    $1395 = $193;
    __THREW__ = 0;
    invoke_viii(47,($1393|0),($1394|0),($1395|0));
    $1396 = __THREW__; __THREW__ = 0;
    $1397 = $1396&1;
    if ($1397) {
     label = 88;
    } else {
     $$expand_i1_val2 = 1;
     HEAP8[$300>>0] = $$expand_i1_val2;
     $$pre_trunc = HEAP8[$300>>0]|0;
     $1398 = $$pre_trunc&1;
     if ($1398) {
      __ZNSt3__26vectorIdNS_9allocatorIdEEED2Ev($298);
      STACKTOP = sp;return;
     }
     __THREW__ = 0;
     invoke_vi(48,($0|0));
     $1399 = __THREW__; __THREW__ = 0;
     $1400 = $1399&1;
     if ($1400) {
      $802 = ___cxa_find_matching_catch_2()|0;
      $803 = tempRet0;
      $275 = $802;
      $276 = $803;
      break;
     } else {
      __ZNSt3__26vectorIdNS_9allocatorIdEEED2Ev($298);
      STACKTOP = sp;return;
     }
    }
    break;
   }
  }
  if ((label|0) == 88) {
   $804 = ___cxa_find_matching_catch_2()|0;
   $805 = tempRet0;
   $275 = $804;
   $276 = $805;
   label = 186;
  }
  else if ((label|0) == 174) {
   __THREW__ = 0;
   invoke_vi(44,($323|0));
   $1358 = __THREW__; __THREW__ = 0;
   $1359 = $1358&1;
   if ($1359) {
    $1407 = ___cxa_find_matching_catch_3(0|0)|0;
    $1408 = tempRet0;
    ___clang_call_terminate($1407);
    // unreachable;
   } else {
    label = 175;
   }
  }
  if ((label|0) == 175) {
   __THREW__ = 0;
   invoke_vi(44,($321|0));
   $1360 = __THREW__; __THREW__ = 0;
   $1361 = $1360&1;
   if ($1361) {
    $1407 = ___cxa_find_matching_catch_3(0|0)|0;
    $1408 = tempRet0;
    ___clang_call_terminate($1407);
    // unreachable;
   } else {
    label = 176;
   }
  }
  if ((label|0) == 176) {
   __THREW__ = 0;
   invoke_vi(44,($319|0));
   $1362 = __THREW__; __THREW__ = 0;
   $1363 = $1362&1;
   if ($1363) {
    $1407 = ___cxa_find_matching_catch_3(0|0)|0;
    $1408 = tempRet0;
    ___clang_call_terminate($1407);
    // unreachable;
   } else {
    label = 177;
   }
  }
  if ((label|0) == 177) {
   __THREW__ = 0;
   invoke_vi(44,($317|0));
   $1364 = __THREW__; __THREW__ = 0;
   $1365 = $1364&1;
   if ($1365) {
    $1407 = ___cxa_find_matching_catch_3(0|0)|0;
    $1408 = tempRet0;
    ___clang_call_terminate($1407);
    // unreachable;
   } else {
    label = 178;
   }
  }
  if ((label|0) == 178) {
   __THREW__ = 0;
   invoke_vi(44,($315|0));
   $1366 = __THREW__; __THREW__ = 0;
   $1367 = $1366&1;
   if ($1367) {
    $1407 = ___cxa_find_matching_catch_3(0|0)|0;
    $1408 = tempRet0;
    ___clang_call_terminate($1407);
    // unreachable;
   } else {
    label = 179;
   }
  }
  if ((label|0) == 179) {
   __THREW__ = 0;
   invoke_vi(44,($313|0));
   $1368 = __THREW__; __THREW__ = 0;
   $1369 = $1368&1;
   if ($1369) {
    $1407 = ___cxa_find_matching_catch_3(0|0)|0;
    $1408 = tempRet0;
    ___clang_call_terminate($1407);
    // unreachable;
   } else {
    label = 180;
   }
  }
  if ((label|0) == 180) {
   __THREW__ = 0;
   invoke_vi(36,($312|0));
   $1370 = __THREW__; __THREW__ = 0;
   $1371 = $1370&1;
   if ($1371) {
    $1407 = ___cxa_find_matching_catch_3(0|0)|0;
    $1408 = tempRet0;
    ___clang_call_terminate($1407);
    // unreachable;
   } else {
    label = 181;
   }
  }
  if ((label|0) == 181) {
   __THREW__ = 0;
   invoke_vi(37,($310|0));
   $1372 = __THREW__; __THREW__ = 0;
   $1373 = $1372&1;
   if ($1373) {
    $1407 = ___cxa_find_matching_catch_3(0|0)|0;
    $1408 = tempRet0;
    ___clang_call_terminate($1407);
    // unreachable;
   } else {
    label = 186;
   }
  }
  if ((label|0) == 186) {
   __THREW__ = 0;
   invoke_vi(48,($0|0));
   $1401 = __THREW__; __THREW__ = 0;
   $1402 = $1401&1;
   if ($1402) {
    $1407 = ___cxa_find_matching_catch_3(0|0)|0;
    $1408 = tempRet0;
    ___clang_call_terminate($1407);
    // unreachable;
   }
  }
  __THREW__ = 0;
  invoke_vi(49,($298|0));
  $1403 = __THREW__; __THREW__ = 0;
  $1404 = $1403&1;
  if ($1404) {
   $1407 = ___cxa_find_matching_catch_3(0|0)|0;
   $1408 = tempRet0;
   ___clang_call_terminate($1407);
   // unreachable;
  } else {
   $1405 = $275;
   $1406 = $276;
   ___resumeException($1405|0);
   // unreachable;
  }
 }
 if ((label|0) == 77) {
  __THREW__ = 0;
  invoke_vi(36,($293|0));
  $760 = __THREW__; __THREW__ = 0;
  $761 = $760&1;
  if ($761) {
   $1407 = ___cxa_find_matching_catch_3(0|0)|0;
   $1408 = tempRet0;
   ___clang_call_terminate($1407);
   // unreachable;
  } else {
   label = 78;
  }
 }
 if ((label|0) == 78) {
  __THREW__ = 0;
  invoke_vi(36,($291|0));
  $762 = __THREW__; __THREW__ = 0;
  $763 = $762&1;
  if ($763) {
   $1407 = ___cxa_find_matching_catch_3(0|0)|0;
   $1408 = tempRet0;
   ___clang_call_terminate($1407);
   // unreachable;
  } else {
   label = 79;
  }
 }
 if ((label|0) == 79) {
  __THREW__ = 0;
  invoke_vi(36,($289|0));
  $764 = __THREW__; __THREW__ = 0;
  $765 = $764&1;
  if ($765) {
   $1407 = ___cxa_find_matching_catch_3(0|0)|0;
   $1408 = tempRet0;
   ___clang_call_terminate($1407);
   // unreachable;
  } else {
   label = 80;
  }
 }
 if ((label|0) == 80) {
  __THREW__ = 0;
  invoke_vi(36,($278|0));
  $766 = __THREW__; __THREW__ = 0;
  $767 = $766&1;
  if ($767) {
   $1407 = ___cxa_find_matching_catch_3(0|0)|0;
   $1408 = tempRet0;
   ___clang_call_terminate($1407);
   // unreachable;
  }
 }
 __THREW__ = 0;
 invoke_vi(37,($274|0));
 $768 = __THREW__; __THREW__ = 0;
 $769 = $768&1;
 if ($769) {
  $1407 = ___cxa_find_matching_catch_3(0|0)|0;
  $1408 = tempRet0;
  ___clang_call_terminate($1407);
  // unreachable;
 } else {
  $1405 = $275;
  $1406 = $276;
  ___resumeException($1405|0);
  // unreachable;
 }
}
function __ZNSt3__26vectorIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9allocatorIS3_EEE6resizeEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $6 = sp;
 $9 = sp + 176|0;
 $44 = $0;
 $45 = $1;
 $47 = $44;
 $43 = $47;
 $48 = $43;
 $49 = ((($48)) + 4|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = HEAP32[$48>>2]|0;
 $52 = $50;
 $53 = $51;
 $54 = (($52) - ($53))|0;
 $55 = (($54|0) / 12)&-1;
 $46 = $55;
 $56 = $46;
 $57 = $45;
 $58 = ($56>>>0)<($57>>>0);
 if ($58) {
  $59 = $45;
  $60 = $46;
  $61 = (($59) - ($60))|0;
  __ZNSt3__26vectorIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9allocatorIS3_EEE8__appendEj($47,$61);
  STACKTOP = sp;return;
 }
 $62 = $46;
 $63 = $45;
 $64 = ($62>>>0)>($63>>>0);
 if (!($64)) {
  STACKTOP = sp;return;
 }
 $65 = HEAP32[$47>>2]|0;
 $66 = $45;
 $67 = (($65) + (($66*12)|0)|0);
 $40 = $47;
 $41 = $67;
 $68 = $40;
 $69 = $41;
 $38 = $68;
 $39 = $69;
 $2 = $68;
 $70 = $2;
 $71 = ((($70)) + 4|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$70>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $77 = (($76|0) / 12)&-1;
 $42 = $77;
 $78 = $41;
 $13 = $68;
 $14 = $78;
 $79 = $13;
 while(1) {
  $80 = $14;
  $81 = ((($79)) + 4|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = ($80|0)!=($82|0);
  if (!($83)) {
   break;
  }
  $12 = $79;
  $84 = $12;
  $85 = ((($84)) + 8|0);
  $11 = $85;
  $86 = $11;
  $10 = $86;
  $87 = $10;
  $88 = ((($79)) + 4|0);
  $89 = HEAP32[$88>>2]|0;
  $90 = ((($89)) + -12|0);
  HEAP32[$88>>2] = $90;
  $3 = $90;
  $91 = $3;
  $7 = $87;
  $8 = $91;
  $92 = $7;
  $93 = $8;
  ;HEAP8[$6>>0]=HEAP8[$9>>0]|0;
  $4 = $92;
  $5 = $93;
  $94 = $5;
  __THREW__ = 0;
  invoke_vi(36,($94|0));
  $95 = __THREW__; __THREW__ = 0;
  $96 = $95&1;
  if ($96) {
   label = 7;
   break;
  }
 }
 if ((label|0) == 7) {
  $97 = ___cxa_find_matching_catch_2()|0;
  $98 = tempRet0;
  $15 = $97;
  $16 = $98;
  $99 = $15;
  ___cxa_call_unexpected(($99|0));
  // unreachable;
 }
 $100 = $42;
 $36 = $68;
 $37 = $100;
 $101 = $36;
 $35 = $101;
 $102 = $35;
 $103 = HEAP32[$102>>2]|0;
 $34 = $103;
 $104 = $34;
 $18 = $101;
 $105 = $18;
 $106 = HEAP32[$105>>2]|0;
 $17 = $106;
 $107 = $17;
 $23 = $101;
 $108 = $23;
 $22 = $108;
 $109 = $22;
 $21 = $109;
 $110 = $21;
 $111 = ((($110)) + 8|0);
 $20 = $111;
 $112 = $20;
 $19 = $112;
 $113 = $19;
 $114 = HEAP32[$113>>2]|0;
 $115 = HEAP32[$109>>2]|0;
 $116 = $114;
 $117 = $115;
 $118 = (($116) - ($117))|0;
 $119 = (($118|0) / 12)&-1;
 $120 = (($107) + (($119*12)|0)|0);
 $25 = $101;
 $121 = $25;
 $122 = HEAP32[$121>>2]|0;
 $24 = $122;
 $123 = $24;
 $124 = $37;
 $125 = (($123) + (($124*12)|0)|0);
 $27 = $101;
 $126 = $27;
 $127 = HEAP32[$126>>2]|0;
 $26 = $127;
 $128 = $26;
 $28 = $101;
 $129 = $28;
 $130 = ((($129)) + 4|0);
 $131 = HEAP32[$130>>2]|0;
 $132 = HEAP32[$129>>2]|0;
 $133 = $131;
 $134 = $132;
 $135 = (($133) - ($134))|0;
 $136 = (($135|0) / 12)&-1;
 $137 = (($128) + (($136*12)|0)|0);
 $29 = $101;
 $30 = $104;
 $31 = $120;
 $32 = $125;
 $33 = $137;
 STACKTOP = sp;return;
}
function __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2IijEERKT_RKT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2Ev($8);
 __THREW__ = 0;
 invoke_v(50);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  $11 = $4;
  $12 = HEAP32[$11>>2]|0;
  $13 = $5;
  $14 = HEAP32[$13>>2]|0;
  __THREW__ = 0;
  invoke_viiii(51,($8|0),($12|0),($14|0),(0|0));
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if (!($16)) {
   STACKTOP = sp;return;
  }
 }
 $17 = ___cxa_find_matching_catch_2()|0;
 $18 = tempRet0;
 $6 = $17;
 $7 = $18;
 __THREW__ = 0;
 invoke_vi(52,($8|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $23 = ___cxa_find_matching_catch_3(0|0)|0;
  $24 = tempRet0;
  ___clang_call_terminate($23);
  // unreachable;
 } else {
  $21 = $6;
  $22 = $7;
  ___resumeException($21|0);
  // unreachable;
 }
}
function __ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1EEclEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = ($7|0)>=(0);
 if ($8) {
  $9 = $4;
  $10 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($6)|0);
  $11 = ($9|0)<($10|0);
  $12 = $5;
  $13 = ($12|0)>=(0);
  $or$cond = $11 & $13;
  if ($or$cond) {
   $14 = $5;
   $15 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($6)|0);
   $16 = ($14|0)<($15|0);
   if ($16) {
    $17 = $4;
    $18 = $5;
    $19 = (__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1EE8coeffRefEii($6,$17,$18)|0);
    STACKTOP = sp;return ($19|0);
   }
  }
 }
 ___assert_fail((1625|0),(1678|0),365,(1719|0));
 // unreachable;
 return (0)|0;
}
function __ZN3PosixEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ($5|0)>=(0);
 $7 = $3;
 $8 = ($7|0)<=(2);
 $or$cond = $6 & $8;
 if ($or$cond) {
  $9 = $3;
  $10 = (($4) + ($9<<3)|0);
  STACKTOP = sp;return ($10|0);
 } else {
  ___assert_fail((1063|0),(1088|0),37,(1099|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE9transposeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = $0;
 $3 = $2;
 $4 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($3)|0);
 __ZN5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERS2_($1,$4);
 $5 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2INS_9TransposeIS1_EEEERKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($5)|0);
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2INS_9TransposeIS2_EEEERKNS_9DenseBaseIT_EE($4,$6);
 STACKTOP = sp;return;
}
function __ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEmlIS2_EEKNS_7ProductIS2_T_Li0EEERKNS0_IS6_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($5)|0);
 $7 = $4;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($7)|0);
 __ZN5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EEC2ERKS2_S5_($0,$6,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2INS_7ProductIS1_S1_Li0EEEEERKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li0EEEE7derivedEv($5)|0);
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2INS_7ProductIS2_S2_Li0EEEEERKNS_9DenseBaseIT_EE($4,$6);
 STACKTOP = sp;return;
}
function __ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7inverseEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = $0;
 $3 = $2;
 $4 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($3)|0);
 $5 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($3)|0);
 $6 = ($4|0)==($5|0);
 if ($6) {
  $7 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($3)|0);
  __ZN5Eigen7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS2_($1,$7);
  $8 = HEAP32[$1>>2]|0;
  STACKTOP = sp;return ($8|0);
 } else {
  ___assert_fail((3792|0),(3809|0),338,(3844|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2INS_7InverseIS1_EEEERKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($5)|0);
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2INS_7InverseIS2_EEEERKNS_9DenseBaseIT_EE($4,$6);
 STACKTOP = sp;return;
}
function __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEaSERKS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4_setIS2_EERS2_RKNS_9DenseBaseIT_EE($4,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function ___clang_call_terminate($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___cxa_begin_catch(($0|0))|0);
 __ZSt9terminatev();
 // unreachable;
}
function __ZNSt3__26vectorIiNS_9allocatorIiEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIdNS_9allocatorIdEEEC2EjRKd($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0.0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $18 = sp + 176|0;
 $21 = sp + 104|0;
 $25 = sp + 88|0;
 $29 = sp + 72|0;
 $34 = sp + 52|0;
 $37 = sp + 40|0;
 $40 = sp + 28|0;
 $41 = sp + 24|0;
 $42 = sp + 20|0;
 $43 = $0;
 $44 = $1;
 $45 = $2;
 $48 = $43;
 $39 = $48;
 $49 = $39;
 $38 = $49;
 $19 = $21;
 $20 = -1;
 $50 = $19;
 HEAP32[$50>>2] = 0;
 $51 = HEAP32[$21>>2]|0;
 HEAP32[$40>>2] = $51;
 $22 = $40;
 HEAP32[$49>>2] = 0;
 $52 = ((($49)) + 4|0);
 $23 = $25;
 $24 = -1;
 $53 = $23;
 HEAP32[$53>>2] = 0;
 $54 = HEAP32[$25>>2]|0;
 HEAP32[$41>>2] = $54;
 $26 = $41;
 HEAP32[$52>>2] = 0;
 $55 = ((($49)) + 8|0);
 $27 = $29;
 $28 = -1;
 $56 = $27;
 HEAP32[$56>>2] = 0;
 $57 = HEAP32[$29>>2]|0;
 HEAP32[$42>>2] = $57;
 $30 = $42;
 $36 = $55;
 HEAP32[$37>>2] = 0;
 $58 = $36;
 $35 = $37;
 $59 = $35;
 $60 = HEAP32[$59>>2]|0;
 $33 = $58;
 HEAP32[$34>>2] = $60;
 $61 = $33;
 $32 = $61;
 $31 = $34;
 $62 = $31;
 $63 = HEAP32[$62>>2]|0;
 HEAP32[$61>>2] = $63;
 $64 = $44;
 $65 = ($64>>>0)>(0);
 if (!($65)) {
  STACKTOP = sp;return;
 }
 $66 = $44;
 __THREW__ = 0;
 invoke_vii(53,($48|0),($66|0));
 $67 = __THREW__; __THREW__ = 0;
 $68 = $67&1;
 if ($68) {
  $91 = ___cxa_find_matching_catch_2()|0;
  $92 = tempRet0;
  $46 = $91;
  $47 = $92;
  __THREW__ = 0;
  invoke_vi(54,($48|0));
  $93 = __THREW__; __THREW__ = 0;
  $94 = $93&1;
  if ($94) {
   $97 = ___cxa_find_matching_catch_3(0|0)|0;
   $98 = tempRet0;
   ___clang_call_terminate($97);
   // unreachable;
  } else {
   $95 = $46;
   $96 = $47;
   ___resumeException($95|0);
   // unreachable;
  }
 } else {
  $69 = $44;
  $70 = $45;
  $14 = $48;
  $15 = $69;
  $16 = $70;
  $71 = $14;
  $13 = $71;
  $72 = $13;
  $73 = ((($72)) + 8|0);
  $12 = $73;
  $74 = $12;
  $11 = $74;
  $75 = $11;
  $17 = $75;
  while(1) {
   $3 = $18;
   $4 = $71;
   $5 = 1;
   $76 = $17;
   $77 = ((($71)) + 4|0);
   $78 = HEAP32[$77>>2]|0;
   $6 = $78;
   $79 = $6;
   $80 = $16;
   $7 = $76;
   $8 = $79;
   $9 = $80;
   $81 = $8;
   $82 = $9;
   $83 = +HEAPF64[$82>>3];
   HEAPF64[$81>>3] = $83;
   $84 = ((($71)) + 4|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = ((($85)) + 8|0);
   HEAP32[$84>>2] = $86;
   $87 = $15;
   $88 = (($87) + -1)|0;
   $15 = $88;
   $10 = $18;
   $89 = $15;
   $90 = ($89>>>0)>(0);
   if (!($90)) {
    break;
   }
  }
  STACKTOP = sp;return;
 }
}
function __ZNK5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EEixEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ($5|0)>=(0);
 if (!($6)) {
  ___assert_fail((5177|0),(1678|0),162,(1099|0));
  // unreachable;
 }
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($4)|0);
 $9 = ($7|0)<($8|0);
 if ($9) {
  $10 = $3;
  $11 = (__ZNK5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE5coeffEi($4,$10)|0);
  STACKTOP = sp;return ($11|0);
 } else {
  ___assert_fail((5177|0),(1678|0),162,(1099|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2ERKS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS3_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE3rowEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($5)|0);
 $7 = $4;
 __ZN5Eigen5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEC2ERS2_i($0,$6,$7);
 STACKTOP = sp;return;
}
function __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEC2INS_5BlockINS0_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEERKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE7derivedEv($5)|0);
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2INS_5BlockINS1_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEERKNS_9DenseBaseIT_EE($4,$6);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1EEixEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ($5|0)>=(0);
 if (!($6)) {
  ___assert_fail((5177|0),(1678|0),408,(1099|0));
  // unreachable;
 }
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($4)|0);
 $9 = ($7|0)<($8|0);
 if ($9) {
  $10 = $3;
  $11 = (__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1EE8coeffRefEi($4,$10)|0);
  STACKTOP = sp;return ($11|0);
 } else {
  ___assert_fail((5177|0),(1678|0),408,(1099|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen7TripletIdiEC2ERKiS3_RKd($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = HEAP32[$9>>2]|0;
 HEAP32[$8>>2] = $10;
 $11 = ((($8)) + 4|0);
 $12 = $6;
 $13 = HEAP32[$12>>2]|0;
 HEAP32[$11>>2] = $13;
 $14 = ((($8)) + 8|0);
 $15 = $7;
 $16 = +HEAPF64[$15>>3];
 HEAPF64[$14>>3] = $16;
 STACKTOP = sp;return;
}
function __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__213__vector_baseIN5Eigen7TripletIdiEENS_9allocatorIS3_EEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIdNS_9allocatorIdEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__213__vector_baseIdNS_9allocatorIdEEED2Ev($2);
 STACKTOP = sp;return;
}
function __Z13calcLaplacianPiiRKNSt3__26vectorIiNS0_9allocatorIiEEEENS1_IS4_NS2_IS4_EEEE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0.0;
 var $133 = 0, $134 = 0.0, $135 = 0.0, $136 = 0.0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0.0, $157 = 0.0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0.0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0.0, $226 = 0.0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0.0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(368|0);
 $vararg_buffer = sp + 32|0;
 $38 = sp + 357|0;
 $48 = sp + 184|0;
 $52 = sp + 168|0;
 $56 = sp + 152|0;
 $61 = sp + 132|0;
 $64 = sp + 120|0;
 $67 = sp + 108|0;
 $68 = sp + 104|0;
 $69 = sp + 100|0;
 $75 = sp + 68|0;
 $76 = sp + 24|0;
 $77 = sp + 356|0;
 $80 = sp + 56|0;
 $86 = sp + 36|0;
 $87 = sp;
 $71 = $1;
 $72 = $2;
 $73 = $3;
 $88 = $72;
 $89 = ($88*3)|0;
 $74 = $89;
 $90 = $74;
 HEAPF64[$76>>3] = 0.0;
 __ZNSt3__26vectorIdNS_9allocatorIdEEEC2EjRKd($75,$90,$76);
 $$expand_i1_val = 0;
 HEAP8[$77>>0] = $$expand_i1_val;
 $70 = $0;
 $91 = $70;
 $66 = $91;
 $92 = $66;
 $65 = $92;
 $46 = $48;
 $47 = -1;
 $93 = $46;
 HEAP32[$93>>2] = 0;
 $94 = HEAP32[$48>>2]|0;
 HEAP32[$67>>2] = $94;
 $49 = $67;
 HEAP32[$92>>2] = 0;
 $95 = ((($92)) + 4|0);
 $50 = $52;
 $51 = -1;
 $96 = $50;
 HEAP32[$96>>2] = 0;
 $97 = HEAP32[$52>>2]|0;
 HEAP32[$68>>2] = $97;
 $53 = $68;
 HEAP32[$95>>2] = 0;
 $98 = ((($92)) + 8|0);
 $54 = $56;
 $55 = -1;
 $99 = $54;
 HEAP32[$99>>2] = 0;
 $100 = HEAP32[$56>>2]|0;
 HEAP32[$69>>2] = $100;
 $57 = $69;
 $63 = $98;
 HEAP32[$64>>2] = 0;
 $101 = $63;
 $62 = $64;
 $102 = $62;
 $103 = HEAP32[$102>>2]|0;
 $60 = $101;
 HEAP32[$61>>2] = $103;
 $104 = $60;
 $59 = $104;
 $58 = $61;
 $105 = $58;
 $106 = HEAP32[$105>>2]|0;
 HEAP32[$104>>2] = $106;
 HEAP32[$80>>2] = 0;
 L1: while(1) {
  $107 = HEAP32[$80>>2]|0;
  $108 = $74;
  $109 = ($107|0)<($108|0);
  if (!($109)) {
   label = 22;
   break;
  }
  $81 = 0;
  while(1) {
   $110 = $81;
   $111 = $74;
   $112 = ($110|0)<($111|0);
   if (!($112)) {
    break;
   }
   $113 = $81;
   $44 = $75;
   $45 = $113;
   $114 = $44;
   $115 = HEAP32[$114>>2]|0;
   $116 = $45;
   $117 = (($115) + ($116<<3)|0);
   HEAPF64[$117>>3] = 0.0;
   $118 = $81;
   $119 = (($118) + 1)|0;
   $81 = $119;
  }
  $126 = HEAP32[$80>>2]|0;
  $42 = $75;
  $43 = $126;
  $127 = $42;
  $128 = HEAP32[$127>>2]|0;
  $129 = $43;
  $130 = (($128) + ($129<<3)|0);
  HEAPF64[$130>>3] = 1.0;
  $131 = HEAP32[$80>>2]|0;
  $132 = (+($131|0));
  $133 = $72;
  $134 = (+($133|0));
  $135 = $132 / $134;
  $136 = (+Math_floor((+$135)));
  $137 = (~~(($136)));
  $82 = $137;
  $138 = HEAP32[$80>>2]|0;
  $139 = $82;
  $140 = $72;
  $141 = Math_imul($139, $140)|0;
  $142 = (($138) - ($141))|0;
  $83 = $142;
  $143 = $83;
  $40 = $4;
  $41 = $143;
  $144 = $40;
  $145 = HEAP32[$144>>2]|0;
  $146 = $41;
  $147 = (($145) + (($146*12)|0)|0);
  $39 = $147;
  $148 = $39;
  $149 = ((($148)) + 4|0);
  $150 = HEAP32[$149>>2]|0;
  $151 = HEAP32[$148>>2]|0;
  $152 = $150;
  $153 = $151;
  $154 = (($152) - ($153))|0;
  $155 = (($154|0) / 4)&-1;
  $156 = (+($155>>>0));
  $157 = -1.0 / $156;
  $84 = $157;
  $85 = 0;
  while(1) {
   $158 = $85;
   $159 = $83;
   $20 = $4;
   $21 = $159;
   $160 = $20;
   $161 = HEAP32[$160>>2]|0;
   $162 = $21;
   $163 = (($161) + (($162*12)|0)|0);
   $19 = $163;
   $164 = $19;
   $165 = ((($164)) + 4|0);
   $166 = HEAP32[$165>>2]|0;
   $167 = HEAP32[$164>>2]|0;
   $168 = $166;
   $169 = $167;
   $170 = (($168) - ($169))|0;
   $171 = (($170|0) / 4)&-1;
   $172 = ($158>>>0)<($171>>>0);
   if (!($172)) {
    break;
   }
   $173 = $82;
   $174 = $72;
   $175 = Math_imul($173, $174)|0;
   $176 = $83;
   $5 = $4;
   $6 = $176;
   $177 = $5;
   $178 = HEAP32[$177>>2]|0;
   $179 = $6;
   $180 = (($178) + (($179*12)|0)|0);
   $181 = $85;
   $7 = $180;
   $8 = $181;
   $182 = $7;
   $183 = HEAP32[$182>>2]|0;
   $184 = $8;
   $185 = (($183) + ($184<<2)|0);
   $186 = HEAP32[$185>>2]|0;
   $187 = (($175) + ($186))|0;
   $188 = $82;
   $189 = (($188) + 1)|0;
   $190 = $72;
   $191 = Math_imul($189, $190)|0;
   $192 = ($187|0)>($191|0);
   if ($192) {
    __THREW__ = 0;
    (invoke_iii(55,(932|0),($vararg_buffer|0))|0);
    $193 = __THREW__; __THREW__ = 0;
    $194 = $193&1;
    if ($194) {
     label = 7;
     break L1;
    }
   }
   $195 = $84;
   $196 = $82;
   $197 = $72;
   $198 = Math_imul($196, $197)|0;
   $199 = $83;
   $9 = $4;
   $10 = $199;
   $200 = $9;
   $201 = HEAP32[$200>>2]|0;
   $202 = $10;
   $203 = (($201) + (($202*12)|0)|0);
   $204 = $85;
   $11 = $203;
   $12 = $204;
   $205 = $11;
   $206 = HEAP32[$205>>2]|0;
   $207 = $12;
   $208 = (($206) + ($207<<2)|0);
   $209 = HEAP32[$208>>2]|0;
   $210 = (($198) + ($209))|0;
   $13 = $75;
   $14 = $210;
   $211 = $13;
   $212 = HEAP32[$211>>2]|0;
   $213 = $14;
   $214 = (($212) + ($213<<3)|0);
   HEAPF64[$214>>3] = $195;
   $215 = $85;
   $216 = (($215) + 1)|0;
   $85 = $216;
  }
  HEAP32[$86>>2] = 0;
  while(1) {
   $217 = HEAP32[$86>>2]|0;
   $218 = $74;
   $219 = ($217|0)<($218|0);
   if (!($219)) {
    break;
   }
   $220 = HEAP32[$86>>2]|0;
   $15 = $75;
   $16 = $220;
   $221 = $15;
   $222 = HEAP32[$221>>2]|0;
   $223 = $16;
   $224 = (($222) + ($223<<3)|0);
   $225 = +HEAPF64[$224>>3];
   $226 = (+Math_abs((+$225)));
   $227 = $226 > 9.9999999999999995E-8;
   do {
    if ($227) {
     $228 = HEAP32[$86>>2]|0;
     $17 = $75;
     $18 = $228;
     $229 = $17;
     $230 = HEAP32[$229>>2]|0;
     $231 = $18;
     $232 = (($230) + ($231<<3)|0);
     __THREW__ = 0;
     invoke_viiii(45,($87|0),($80|0),($86|0),($232|0));
     $233 = __THREW__; __THREW__ = 0;
     $234 = $233&1;
     if ($234) {
      label = 7;
      break L1;
     }
     $36 = $0;
     $37 = $87;
     $235 = $36;
     $236 = ((($235)) + 4|0);
     $237 = HEAP32[$236>>2]|0;
     $35 = $235;
     $238 = $35;
     $239 = ((($238)) + 8|0);
     $34 = $239;
     $240 = $34;
     $33 = $240;
     $241 = $33;
     $242 = HEAP32[$241>>2]|0;
     $243 = ($237|0)!=($242|0);
     if ($243) {
      $30 = $38;
      $31 = $235;
      $32 = 1;
      $24 = $235;
      $244 = $24;
      $245 = ((($244)) + 8|0);
      $23 = $245;
      $246 = $23;
      $22 = $246;
      $247 = $22;
      $248 = ((($235)) + 4|0);
      $249 = HEAP32[$248>>2]|0;
      $25 = $249;
      $250 = $25;
      $251 = $37;
      $26 = $247;
      $27 = $250;
      $28 = $251;
      $252 = $27;
      $253 = $28;
      ;HEAP32[$252>>2]=HEAP32[$253>>2]|0;HEAP32[$252+4>>2]=HEAP32[$253+4>>2]|0;HEAP32[$252+8>>2]=HEAP32[$253+8>>2]|0;HEAP32[$252+12>>2]=HEAP32[$253+12>>2]|0;
      $29 = $38;
      $254 = ((($235)) + 4|0);
      $255 = HEAP32[$254>>2]|0;
      $256 = ((($255)) + 16|0);
      HEAP32[$254>>2] = $256;
      break;
     } else {
      $257 = $37;
      __THREW__ = 0;
      invoke_vii(46,($235|0),($257|0));
      $258 = __THREW__; __THREW__ = 0;
      $259 = $258&1;
      if ($259) {
       label = 7;
       break L1;
      } else {
       break;
      }
     }
    }
   } while(0);
   $260 = HEAP32[$86>>2]|0;
   $261 = (($260) + 1)|0;
   HEAP32[$86>>2] = $261;
  }
  $262 = HEAP32[$80>>2]|0;
  $263 = (($262) + 1)|0;
  HEAP32[$80>>2] = $263;
 }
 do {
  if ((label|0) == 7) {
   $122 = ___cxa_find_matching_catch_2()|0;
   $123 = tempRet0;
   $78 = $122;
   $79 = $123;
   __THREW__ = 0;
   invoke_vi(48,($0|0));
   $124 = __THREW__; __THREW__ = 0;
   $125 = $124&1;
   if ($125) {
    $271 = ___cxa_find_matching_catch_3(0|0)|0;
    $272 = tempRet0;
    ___clang_call_terminate($271);
    // unreachable;
   }
  }
  else if ((label|0) == 22) {
   $$expand_i1_val2 = 1;
   HEAP8[$77>>0] = $$expand_i1_val2;
   $$pre_trunc = HEAP8[$77>>0]|0;
   $264 = $$pre_trunc&1;
   if ($264) {
    __ZNSt3__26vectorIdNS_9allocatorIdEEED2Ev($75);
    STACKTOP = sp;return;
   }
   __THREW__ = 0;
   invoke_vi(48,($0|0));
   $265 = __THREW__; __THREW__ = 0;
   $266 = $265&1;
   if ($266) {
    $120 = ___cxa_find_matching_catch_2()|0;
    $121 = tempRet0;
    $78 = $120;
    $79 = $121;
    break;
   } else {
    __ZNSt3__26vectorIdNS_9allocatorIdEEED2Ev($75);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(49,($75|0));
 $267 = __THREW__; __THREW__ = 0;
 $268 = $267&1;
 if ($268) {
  $271 = ___cxa_find_matching_catch_3(0|0)|0;
  $272 = tempRet0;
  ___clang_call_terminate($271);
  // unreachable;
 } else {
  $269 = $78;
  $270 = $79;
  ___resumeException($269|0);
  // unreachable;
 }
}
function __Z13augmentMatrixRNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEEEPiiiiiiRKNS0_IiNS4_IiEEEEbRNS1_12SparseMatrixIdLi0EiEE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0;
 var $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0;
 var $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0;
 var $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0;
 var $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0;
 var $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0;
 var $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0;
 var $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0;
 var $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0;
 var $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0;
 var $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0;
 var $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0;
 var $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0;
 var $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0;
 var $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0;
 var $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0;
 var $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0;
 var $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0;
 var $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0;
 var $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0;
 var $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0.0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0;
 var $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0;
 var $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0;
 var $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0;
 var $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0;
 var $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0;
 var $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1664|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1664|0);
 $12 = sp + 1632|0;
 $15 = sp + 1620|0;
 $22 = sp + 248|0;
 $23 = sp + 240|0;
 $24 = sp + 232|0;
 $27 = sp + 1584|0;
 $30 = sp + 1572|0;
 $48 = sp + 1655|0;
 $54 = sp + 1480|0;
 $57 = sp + 1468|0;
 $61 = sp + 1452|0;
 $64 = sp + 1440|0;
 $68 = sp + 1424|0;
 $72 = sp + 1408|0;
 $76 = sp + 1392|0;
 $81 = sp + 1372|0;
 $84 = sp + 1360|0;
 $87 = sp + 1348|0;
 $88 = sp + 1344|0;
 $89 = sp + 1340|0;
 $93 = sp + 1324|0;
 $96 = sp + 1312|0;
 $100 = sp + 1296|0;
 $103 = sp + 1284|0;
 $121 = sp + 1654|0;
 $140 = sp + 1653|0;
 $159 = sp + 1652|0;
 $178 = sp + 1651|0;
 $197 = sp + 1650|0;
 $216 = sp + 1649|0;
 $221 = sp + 224|0;
 $224 = sp + 1648|0;
 $232 = sp + 216|0;
 $233 = sp + 208|0;
 $234 = sp + 200|0;
 $237 = sp + 792|0;
 $240 = sp + 780|0;
 $244 = sp + 764|0;
 $247 = sp + 752|0;
 $265 = sp + 1647|0;
 $271 = sp + 660|0;
 $275 = sp + 644|0;
 $279 = sp + 628|0;
 $284 = sp + 608|0;
 $287 = sp + 596|0;
 $290 = sp + 584|0;
 $291 = sp + 580|0;
 $292 = sp + 576|0;
 $304 = sp + 524|0;
 $310 = sp + 184|0;
 $311 = sp + 500|0;
 $312 = sp + 496|0;
 $313 = sp + 1645|0;
 $316 = sp + 168|0;
 $317 = sp + 484|0;
 $318 = sp + 480|0;
 $319 = sp + 160|0;
 $320 = sp + 144|0;
 $321 = sp + 476|0;
 $322 = sp + 472|0;
 $323 = sp + 136|0;
 $324 = sp + 120|0;
 $325 = sp + 468|0;
 $326 = sp + 464|0;
 $327 = sp + 112|0;
 $329 = sp + 96|0;
 $330 = sp + 456|0;
 $331 = sp + 452|0;
 $332 = sp + 88|0;
 $333 = sp + 72|0;
 $334 = sp + 448|0;
 $335 = sp + 444|0;
 $336 = sp + 64|0;
 $337 = sp + 48|0;
 $338 = sp + 440|0;
 $339 = sp + 436|0;
 $340 = sp + 40|0;
 $341 = sp + 400|0;
 $342 = sp + 396|0;
 $343 = sp + 392|0;
 $344 = sp + 380|0;
 $346 = sp + 24|0;
 $347 = sp + 372|0;
 $348 = sp + 368|0;
 $349 = sp + 16|0;
 $350 = sp;
 $351 = sp + 364|0;
 $352 = sp + 360|0;
 $353 = sp + 1644|0;
 $354 = sp + 324|0;
 $355 = sp + 320|0;
 $356 = sp + 316|0;
 $357 = sp + 280|0;
 $358 = sp + 264|0;
 $359 = sp + 256|0;
 $294 = $0;
 $295 = $1;
 $296 = $2;
 $297 = $3;
 $298 = $4;
 $299 = $5;
 $300 = $6;
 $301 = $7;
 $361 = $8&1;
 $302 = $361;
 $303 = $9;
 $362 = $302;
 $363 = $362&1;
 L1: do {
  if ($363) {
   $293 = $304;
   $364 = $293;
   $289 = $364;
   $365 = $289;
   $288 = $365;
   $269 = $271;
   $270 = -1;
   $366 = $269;
   HEAP32[$366>>2] = 0;
   $367 = HEAP32[$271>>2]|0;
   HEAP32[$290>>2] = $367;
   $272 = $290;
   HEAP32[$365>>2] = 0;
   $368 = ((($365)) + 4|0);
   $273 = $275;
   $274 = -1;
   $369 = $273;
   HEAP32[$369>>2] = 0;
   $370 = HEAP32[$275>>2]|0;
   HEAP32[$291>>2] = $370;
   $276 = $291;
   HEAP32[$368>>2] = 0;
   $371 = ((($365)) + 8|0);
   $277 = $279;
   $278 = -1;
   $372 = $277;
   HEAP32[$372>>2] = 0;
   $373 = HEAP32[$279>>2]|0;
   HEAP32[$292>>2] = $373;
   $280 = $292;
   $286 = $371;
   HEAP32[$287>>2] = 0;
   $374 = $286;
   $285 = $287;
   $375 = $285;
   $376 = HEAP32[$375>>2]|0;
   $283 = $374;
   HEAP32[$284>>2] = $376;
   $377 = $283;
   $282 = $377;
   $281 = $284;
   $378 = $281;
   $379 = HEAP32[$378>>2]|0;
   HEAP32[$377>>2] = $379;
   $305 = 0;
   L3: while(1) {
    $380 = $305;
    $381 = $294;
    $268 = $381;
    $382 = $268;
    $383 = ((($382)) + 4|0);
    $384 = HEAP32[$383>>2]|0;
    $385 = HEAP32[$382>>2]|0;
    $386 = $384;
    $387 = $385;
    $388 = (($386) - ($387))|0;
    $389 = (($388|0) / 16)&-1;
    $390 = ($380>>>0)<($389>>>0);
    if (!($390)) {
     label = 16;
     break;
    }
    $391 = $294;
    $392 = $305;
    $266 = $391;
    $267 = $392;
    $393 = $266;
    $394 = HEAP32[$393>>2]|0;
    $395 = $267;
    $396 = (($394) + ($395<<4)|0);
    $306 = $396;
    $397 = $306;
    __THREW__ = 0;
    $398 = (invoke_ii(56,($397|0))|0);
    $399 = __THREW__; __THREW__ = 0;
    $400 = $399&1;
    if ($400) {
     break;
    }
    $401 = HEAP32[$398>>2]|0;
    $402 = $296;
    $403 = (($401|0) % ($402|0))&-1;
    $309 = $403;
    $404 = $297;
    $405 = $309;
    $406 = ($404|0)>($405|0);
    $407 = $306;
    do {
     if ($406) {
      __THREW__ = 0;
      $408 = (invoke_ii(56,($407|0))|0);
      $409 = __THREW__; __THREW__ = 0;
      $410 = $409&1;
      if ($410) {
       break L3;
      }
      $411 = $306;
      __THREW__ = 0;
      $412 = (invoke_ii(57,($411|0))|0);
      $413 = __THREW__; __THREW__ = 0;
      $414 = $413&1;
      if ($414) {
       break L3;
      }
      $415 = $306;
      __THREW__ = 0;
      $416 = (invoke_ii(58,($415|0))|0);
      $417 = __THREW__; __THREW__ = 0;
      $418 = $417&1;
      if ($418) {
       break L3;
      }
      __THREW__ = 0;
      invoke_viiii(45,($310|0),($408|0),($412|0),($416|0));
      $419 = __THREW__; __THREW__ = 0;
      $420 = $419&1;
      if ($420) {
       break L3;
      }
      $263 = $304;
      $264 = $310;
      $421 = $263;
      $422 = ((($421)) + 4|0);
      $423 = HEAP32[$422>>2]|0;
      $262 = $421;
      $424 = $262;
      $425 = ((($424)) + 8|0);
      $261 = $425;
      $426 = $261;
      $260 = $426;
      $427 = $260;
      $428 = HEAP32[$427>>2]|0;
      $429 = ($423|0)!=($428|0);
      if ($429) {
       $257 = $265;
       $258 = $421;
       $259 = 1;
       $251 = $421;
       $430 = $251;
       $431 = ((($430)) + 8|0);
       $250 = $431;
       $432 = $250;
       $249 = $432;
       $433 = $249;
       $434 = ((($421)) + 4|0);
       $435 = HEAP32[$434>>2]|0;
       $252 = $435;
       $436 = $252;
       $437 = $264;
       $253 = $433;
       $254 = $436;
       $255 = $437;
       $438 = $254;
       $439 = $255;
       ;HEAP32[$438>>2]=HEAP32[$439>>2]|0;HEAP32[$438+4>>2]=HEAP32[$439+4>>2]|0;HEAP32[$438+8>>2]=HEAP32[$439+8>>2]|0;HEAP32[$438+12>>2]=HEAP32[$439+12>>2]|0;
       $256 = $265;
       $440 = ((($421)) + 4|0);
       $441 = HEAP32[$440>>2]|0;
       $442 = ((($441)) + 16|0);
       HEAP32[$440>>2] = $442;
       break;
      } else {
       $443 = $264;
       __THREW__ = 0;
       invoke_vii(46,($421|0),($443|0));
       $444 = __THREW__; __THREW__ = 0;
       $445 = $444&1;
       if ($445) {
        break L3;
       } else {
        break;
       }
      }
     } else {
      $450 = $306;
      ;HEAP32[$450>>2]=HEAP32[$407>>2]|0;HEAP32[$450+4>>2]=HEAP32[$407+4>>2]|0;HEAP32[$450+8>>2]=HEAP32[$407+8>>2]|0;HEAP32[$450+12>>2]=HEAP32[$407+12>>2]|0;
     }
    } while(0);
    $451 = $305;
    $452 = (($451) + 1)|0;
    $305 = $452;
   }
   do {
    if ((label|0) == 16) {
     $248 = $304;
     $453 = $248;
     $454 = HEAP32[$453>>2]|0;
     $245 = $453;
     $246 = $454;
     $455 = $246;
     $242 = $244;
     $243 = $455;
     $456 = $242;
     $457 = $243;
     HEAP32[$456>>2] = $457;
     $458 = HEAP32[$244>>2]|0;
     HEAP32[$247>>2] = $458;
     $459 = HEAP32[$247>>2]|0;
     HEAP32[$311>>2] = $459;
     $241 = $304;
     $460 = $241;
     $461 = ((($460)) + 4|0);
     $462 = HEAP32[$461>>2]|0;
     $238 = $460;
     $239 = $462;
     $463 = $239;
     $235 = $237;
     $236 = $463;
     $464 = $235;
     $465 = $236;
     HEAP32[$464>>2] = $465;
     $466 = HEAP32[$237>>2]|0;
     HEAP32[$240>>2] = $466;
     $467 = HEAP32[$240>>2]|0;
     HEAP32[$312>>2] = $467;
     ;HEAP8[$232>>0]=HEAP8[$313>>0]|0;
     ;HEAP8[$233>>0]=HEAP8[$312>>0]|0;HEAP8[$233+1>>0]=HEAP8[$312+1>>0]|0;HEAP8[$233+2>>0]=HEAP8[$312+2>>0]|0;HEAP8[$233+3>>0]=HEAP8[$312+3>>0]|0;
     ;HEAP8[$234>>0]=HEAP8[$311>>0]|0;HEAP8[$234+1>>0]=HEAP8[$311+1>>0]|0;HEAP8[$234+2>>0]=HEAP8[$311+2>>0]|0;HEAP8[$234+3>>0]=HEAP8[$311+3>>0]|0;
     $231 = $234;
     $468 = $231;
     $469 = HEAP32[$468>>2]|0;
     $227 = $233;
     $470 = $227;
     $471 = HEAP32[$470>>2]|0;
     $228 = $469;
     $229 = $471;
     $230 = $232;
     $472 = $228;
     $473 = $229;
     $474 = $230;
     __THREW__ = 0;
     invoke_viii(47,($472|0),($473|0),($474|0));
     $475 = __THREW__; __THREW__ = 0;
     $476 = $475&1;
     if (!($476)) {
      $477 = $294;
      $225 = $477;
      $226 = $304;
      $478 = $225;
      $479 = $226;
      $480 = ($478|0)!=($479|0);
      if ($480) {
       $481 = $226;
       $222 = $478;
       $223 = $481;
       $482 = $222;
       $483 = $223;
       ;HEAP8[$221>>0]=HEAP8[$224>>0]|0;
       $219 = $482;
       $220 = $483;
       $484 = $226;
       $485 = HEAP32[$484>>2]|0;
       $486 = $226;
       $487 = ((($486)) + 4|0);
       $488 = HEAP32[$487>>2]|0;
       __THREW__ = 0;
       invoke_viii(59,($478|0),($485|0),($488|0));
       $489 = __THREW__; __THREW__ = 0;
       $490 = $489&1;
       if ($490) {
        break;
       }
      }
      __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEED2Ev($304);
      break L1;
     }
    }
   } while(0);
   $446 = ___cxa_find_matching_catch_2()|0;
   $447 = tempRet0;
   $307 = $446;
   $308 = $447;
   __THREW__ = 0;
   invoke_vi(48,($304|0));
   $448 = __THREW__; __THREW__ = 0;
   $449 = $448&1;
   if ($449) {
    $952 = ___cxa_find_matching_catch_3(0|0)|0;
    $953 = tempRet0;
    ___clang_call_terminate($952);
    // unreachable;
   } else {
    $950 = $307;
    $951 = $308;
    ___resumeException($950|0);
    // unreachable;
   }
  }
 } while(0);
 $491 = $296;
 $314 = $491;
 $315 = 0;
 while(1) {
  $492 = $315;
  $493 = $298;
  $494 = ($492|0)<($493|0);
  if (!($494)) {
   break;
  }
  $495 = $294;
  $496 = $315;
  $497 = ($496*3)|0;
  $498 = $299;
  $499 = (($497) + ($498))|0;
  $500 = (($499) + 0)|0;
  HEAP32[$317>>2] = $500;
  $501 = $301;
  $502 = $295;
  $503 = $315;
  $504 = (($502) + ($503<<2)|0);
  $505 = HEAP32[$504>>2]|0;
  $217 = $501;
  $218 = $505;
  $506 = $217;
  $507 = HEAP32[$506>>2]|0;
  $508 = $218;
  $509 = (($507) + ($508<<2)|0);
  $510 = HEAP32[$509>>2]|0;
  $511 = $314;
  $512 = 0;
  $513 = (($510) + ($512))|0;
  HEAP32[$318>>2] = $513;
  HEAPF64[$319>>3] = 1.0;
  __ZN5Eigen7TripletIdiEC2ERKiS3_RKd($316,$317,$318,$319);
  $214 = $495;
  $215 = $316;
  $514 = $214;
  $515 = ((($514)) + 4|0);
  $516 = HEAP32[$515>>2]|0;
  $213 = $514;
  $517 = $213;
  $518 = ((($517)) + 8|0);
  $212 = $518;
  $519 = $212;
  $211 = $519;
  $520 = $211;
  $521 = HEAP32[$520>>2]|0;
  $522 = ($516|0)!=($521|0);
  if ($522) {
   $208 = $216;
   $209 = $514;
   $210 = 1;
   $202 = $514;
   $523 = $202;
   $524 = ((($523)) + 8|0);
   $201 = $524;
   $525 = $201;
   $200 = $525;
   $526 = $200;
   $527 = ((($514)) + 4|0);
   $528 = HEAP32[$527>>2]|0;
   $203 = $528;
   $529 = $203;
   $530 = $215;
   $204 = $526;
   $205 = $529;
   $206 = $530;
   $531 = $205;
   $532 = $206;
   ;HEAP32[$531>>2]=HEAP32[$532>>2]|0;HEAP32[$531+4>>2]=HEAP32[$532+4>>2]|0;HEAP32[$531+8>>2]=HEAP32[$532+8>>2]|0;HEAP32[$531+12>>2]=HEAP32[$532+12>>2]|0;
   $207 = $216;
   $533 = ((($514)) + 4|0);
   $534 = HEAP32[$533>>2]|0;
   $535 = ((($534)) + 16|0);
   HEAP32[$533>>2] = $535;
  } else {
   $536 = $215;
   __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($514,$536);
  }
  $537 = $294;
  $538 = $315;
  $539 = ($538*3)|0;
  $540 = $299;
  $541 = (($539) + ($540))|0;
  $542 = (($541) + 1)|0;
  HEAP32[$321>>2] = $542;
  $543 = $301;
  $544 = $295;
  $545 = $315;
  $546 = (($544) + ($545<<2)|0);
  $547 = HEAP32[$546>>2]|0;
  $198 = $543;
  $199 = $547;
  $548 = $198;
  $549 = HEAP32[$548>>2]|0;
  $550 = $199;
  $551 = (($549) + ($550<<2)|0);
  $552 = HEAP32[$551>>2]|0;
  $553 = $314;
  $554 = $553;
  $555 = (($552) + ($554))|0;
  HEAP32[$322>>2] = $555;
  HEAPF64[$323>>3] = 1.0;
  __ZN5Eigen7TripletIdiEC2ERKiS3_RKd($320,$321,$322,$323);
  $195 = $537;
  $196 = $320;
  $556 = $195;
  $557 = ((($556)) + 4|0);
  $558 = HEAP32[$557>>2]|0;
  $194 = $556;
  $559 = $194;
  $560 = ((($559)) + 8|0);
  $193 = $560;
  $561 = $193;
  $192 = $561;
  $562 = $192;
  $563 = HEAP32[$562>>2]|0;
  $564 = ($558|0)!=($563|0);
  if ($564) {
   $189 = $197;
   $190 = $556;
   $191 = 1;
   $183 = $556;
   $565 = $183;
   $566 = ((($565)) + 8|0);
   $182 = $566;
   $567 = $182;
   $181 = $567;
   $568 = $181;
   $569 = ((($556)) + 4|0);
   $570 = HEAP32[$569>>2]|0;
   $184 = $570;
   $571 = $184;
   $572 = $196;
   $185 = $568;
   $186 = $571;
   $187 = $572;
   $573 = $186;
   $574 = $187;
   ;HEAP32[$573>>2]=HEAP32[$574>>2]|0;HEAP32[$573+4>>2]=HEAP32[$574+4>>2]|0;HEAP32[$573+8>>2]=HEAP32[$574+8>>2]|0;HEAP32[$573+12>>2]=HEAP32[$574+12>>2]|0;
   $188 = $197;
   $575 = ((($556)) + 4|0);
   $576 = HEAP32[$575>>2]|0;
   $577 = ((($576)) + 16|0);
   HEAP32[$575>>2] = $577;
  } else {
   $578 = $196;
   __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($556,$578);
  }
  $579 = $294;
  $580 = $315;
  $581 = ($580*3)|0;
  $582 = $299;
  $583 = (($581) + ($582))|0;
  $584 = (($583) + 2)|0;
  HEAP32[$325>>2] = $584;
  $585 = $301;
  $586 = $295;
  $587 = $315;
  $588 = (($586) + ($587<<2)|0);
  $589 = HEAP32[$588>>2]|0;
  $179 = $585;
  $180 = $589;
  $590 = $179;
  $591 = HEAP32[$590>>2]|0;
  $592 = $180;
  $593 = (($591) + ($592<<2)|0);
  $594 = HEAP32[$593>>2]|0;
  $595 = $314;
  $596 = $595<<1;
  $597 = (($594) + ($596))|0;
  HEAP32[$326>>2] = $597;
  HEAPF64[$327>>3] = 1.0;
  __ZN5Eigen7TripletIdiEC2ERKiS3_RKd($324,$325,$326,$327);
  $176 = $579;
  $177 = $324;
  $598 = $176;
  $599 = ((($598)) + 4|0);
  $600 = HEAP32[$599>>2]|0;
  $175 = $598;
  $601 = $175;
  $602 = ((($601)) + 8|0);
  $174 = $602;
  $603 = $174;
  $173 = $603;
  $604 = $173;
  $605 = HEAP32[$604>>2]|0;
  $606 = ($600|0)!=($605|0);
  if ($606) {
   $170 = $178;
   $171 = $598;
   $172 = 1;
   $164 = $598;
   $607 = $164;
   $608 = ((($607)) + 8|0);
   $163 = $608;
   $609 = $163;
   $162 = $609;
   $610 = $162;
   $611 = ((($598)) + 4|0);
   $612 = HEAP32[$611>>2]|0;
   $165 = $612;
   $613 = $165;
   $614 = $177;
   $166 = $610;
   $167 = $613;
   $168 = $614;
   $615 = $167;
   $616 = $168;
   ;HEAP32[$615>>2]=HEAP32[$616>>2]|0;HEAP32[$615+4>>2]=HEAP32[$616+4>>2]|0;HEAP32[$615+8>>2]=HEAP32[$616+8>>2]|0;HEAP32[$615+12>>2]=HEAP32[$616+12>>2]|0;
   $169 = $178;
   $617 = ((($598)) + 4|0);
   $618 = HEAP32[$617>>2]|0;
   $619 = ((($618)) + 16|0);
   HEAP32[$617>>2] = $619;
  } else {
   $620 = $177;
   __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($598,$620);
  }
  $621 = $315;
  $622 = (($621) + 1)|0;
  $315 = $622;
 }
 $623 = $297;
 $328 = $623;
 while(1) {
  $624 = $328;
  $625 = $296;
  $626 = ($624|0)<($625|0);
  if (!($626)) {
   break;
  }
  $627 = $294;
  $628 = $328;
  $629 = $297;
  $630 = (($628) - ($629))|0;
  $631 = ($630*3)|0;
  $632 = $299;
  $633 = (($631) + ($632))|0;
  $634 = (($633) + 0)|0;
  $635 = $298;
  $636 = ($635*3)|0;
  $637 = (($634) + ($636))|0;
  HEAP32[$330>>2] = $637;
  $638 = $301;
  $639 = $295;
  $640 = $328;
  $641 = (($639) + ($640<<2)|0);
  $642 = HEAP32[$641>>2]|0;
  $160 = $638;
  $161 = $642;
  $643 = $160;
  $644 = HEAP32[$643>>2]|0;
  $645 = $161;
  $646 = (($644) + ($645<<2)|0);
  $647 = HEAP32[$646>>2]|0;
  $648 = $314;
  $649 = 0;
  $650 = (($647) + ($649))|0;
  HEAP32[$331>>2] = $650;
  HEAPF64[$332>>3] = 1.0;
  __ZN5Eigen7TripletIdiEC2ERKiS3_RKd($329,$330,$331,$332);
  $157 = $627;
  $158 = $329;
  $651 = $157;
  $652 = ((($651)) + 4|0);
  $653 = HEAP32[$652>>2]|0;
  $156 = $651;
  $654 = $156;
  $655 = ((($654)) + 8|0);
  $155 = $655;
  $656 = $155;
  $154 = $656;
  $657 = $154;
  $658 = HEAP32[$657>>2]|0;
  $659 = ($653|0)!=($658|0);
  if ($659) {
   $151 = $159;
   $152 = $651;
   $153 = 1;
   $145 = $651;
   $660 = $145;
   $661 = ((($660)) + 8|0);
   $144 = $661;
   $662 = $144;
   $143 = $662;
   $663 = $143;
   $664 = ((($651)) + 4|0);
   $665 = HEAP32[$664>>2]|0;
   $146 = $665;
   $666 = $146;
   $667 = $158;
   $147 = $663;
   $148 = $666;
   $149 = $667;
   $668 = $148;
   $669 = $149;
   ;HEAP32[$668>>2]=HEAP32[$669>>2]|0;HEAP32[$668+4>>2]=HEAP32[$669+4>>2]|0;HEAP32[$668+8>>2]=HEAP32[$669+8>>2]|0;HEAP32[$668+12>>2]=HEAP32[$669+12>>2]|0;
   $150 = $159;
   $670 = ((($651)) + 4|0);
   $671 = HEAP32[$670>>2]|0;
   $672 = ((($671)) + 16|0);
   HEAP32[$670>>2] = $672;
  } else {
   $673 = $158;
   __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($651,$673);
  }
  $674 = $294;
  $675 = $328;
  $676 = $297;
  $677 = (($675) - ($676))|0;
  $678 = ($677*3)|0;
  $679 = $299;
  $680 = (($678) + ($679))|0;
  $681 = (($680) + 1)|0;
  $682 = $298;
  $683 = ($682*3)|0;
  $684 = (($681) + ($683))|0;
  HEAP32[$334>>2] = $684;
  $685 = $301;
  $686 = $295;
  $687 = $328;
  $688 = (($686) + ($687<<2)|0);
  $689 = HEAP32[$688>>2]|0;
  $141 = $685;
  $142 = $689;
  $690 = $141;
  $691 = HEAP32[$690>>2]|0;
  $692 = $142;
  $693 = (($691) + ($692<<2)|0);
  $694 = HEAP32[$693>>2]|0;
  $695 = $314;
  $696 = $695;
  $697 = (($694) + ($696))|0;
  HEAP32[$335>>2] = $697;
  HEAPF64[$336>>3] = 1.0;
  __ZN5Eigen7TripletIdiEC2ERKiS3_RKd($333,$334,$335,$336);
  $138 = $674;
  $139 = $333;
  $698 = $138;
  $699 = ((($698)) + 4|0);
  $700 = HEAP32[$699>>2]|0;
  $137 = $698;
  $701 = $137;
  $702 = ((($701)) + 8|0);
  $136 = $702;
  $703 = $136;
  $135 = $703;
  $704 = $135;
  $705 = HEAP32[$704>>2]|0;
  $706 = ($700|0)!=($705|0);
  if ($706) {
   $132 = $140;
   $133 = $698;
   $134 = 1;
   $126 = $698;
   $707 = $126;
   $708 = ((($707)) + 8|0);
   $125 = $708;
   $709 = $125;
   $124 = $709;
   $710 = $124;
   $711 = ((($698)) + 4|0);
   $712 = HEAP32[$711>>2]|0;
   $127 = $712;
   $713 = $127;
   $714 = $139;
   $128 = $710;
   $129 = $713;
   $130 = $714;
   $715 = $129;
   $716 = $130;
   ;HEAP32[$715>>2]=HEAP32[$716>>2]|0;HEAP32[$715+4>>2]=HEAP32[$716+4>>2]|0;HEAP32[$715+8>>2]=HEAP32[$716+8>>2]|0;HEAP32[$715+12>>2]=HEAP32[$716+12>>2]|0;
   $131 = $140;
   $717 = ((($698)) + 4|0);
   $718 = HEAP32[$717>>2]|0;
   $719 = ((($718)) + 16|0);
   HEAP32[$717>>2] = $719;
  } else {
   $720 = $139;
   __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($698,$720);
  }
  $721 = $294;
  $722 = $328;
  $723 = $297;
  $724 = (($722) - ($723))|0;
  $725 = ($724*3)|0;
  $726 = $299;
  $727 = (($725) + ($726))|0;
  $728 = (($727) + 2)|0;
  $729 = $298;
  $730 = ($729*3)|0;
  $731 = (($728) + ($730))|0;
  HEAP32[$338>>2] = $731;
  $732 = $301;
  $733 = $295;
  $734 = $328;
  $735 = (($733) + ($734<<2)|0);
  $736 = HEAP32[$735>>2]|0;
  $122 = $732;
  $123 = $736;
  $737 = $122;
  $738 = HEAP32[$737>>2]|0;
  $739 = $123;
  $740 = (($738) + ($739<<2)|0);
  $741 = HEAP32[$740>>2]|0;
  $742 = $314;
  $743 = $742<<1;
  $744 = (($741) + ($743))|0;
  HEAP32[$339>>2] = $744;
  HEAPF64[$340>>3] = 1.0;
  __ZN5Eigen7TripletIdiEC2ERKiS3_RKd($337,$338,$339,$340);
  $119 = $721;
  $120 = $337;
  $745 = $119;
  $746 = ((($745)) + 4|0);
  $747 = HEAP32[$746>>2]|0;
  $118 = $745;
  $748 = $118;
  $749 = ((($748)) + 8|0);
  $117 = $749;
  $750 = $117;
  $116 = $750;
  $751 = $116;
  $752 = HEAP32[$751>>2]|0;
  $753 = ($747|0)!=($752|0);
  if ($753) {
   $113 = $121;
   $114 = $745;
   $115 = 1;
   $107 = $745;
   $754 = $107;
   $755 = ((($754)) + 8|0);
   $106 = $755;
   $756 = $106;
   $105 = $756;
   $757 = $105;
   $758 = ((($745)) + 4|0);
   $759 = HEAP32[$758>>2]|0;
   $108 = $759;
   $760 = $108;
   $761 = $120;
   $109 = $757;
   $110 = $760;
   $111 = $761;
   $762 = $110;
   $763 = $111;
   ;HEAP32[$762>>2]=HEAP32[$763>>2]|0;HEAP32[$762+4>>2]=HEAP32[$763+4>>2]|0;HEAP32[$762+8>>2]=HEAP32[$763+8>>2]|0;HEAP32[$762+12>>2]=HEAP32[$763+12>>2]|0;
   $112 = $121;
   $764 = ((($745)) + 4|0);
   $765 = HEAP32[$764>>2]|0;
   $766 = ((($765)) + 16|0);
   HEAP32[$764>>2] = $766;
  } else {
   $767 = $120;
   __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($745,$767);
  }
  $768 = $328;
  $769 = (($768) + 1)|0;
  $328 = $769;
 }
 $770 = $300;
 $771 = $299;
 __ZN5Eigen12SparseMatrixIdLi0EiEC2Eii($341,$770,$771);
 $772 = $294;
 $104 = $772;
 $773 = $104;
 $774 = HEAP32[$773>>2]|0;
 $101 = $773;
 $102 = $774;
 $775 = $102;
 $98 = $100;
 $99 = $775;
 $776 = $98;
 $777 = $99;
 HEAP32[$776>>2] = $777;
 $778 = HEAP32[$100>>2]|0;
 HEAP32[$103>>2] = $778;
 $779 = HEAP32[$103>>2]|0;
 HEAP32[$342>>2] = $779;
 $780 = $294;
 $97 = $780;
 $781 = $97;
 $782 = ((($781)) + 4|0);
 $783 = HEAP32[$782>>2]|0;
 $94 = $781;
 $95 = $783;
 $784 = $95;
 $91 = $93;
 $92 = $784;
 $785 = $91;
 $786 = $92;
 HEAP32[$785>>2] = $786;
 $787 = HEAP32[$93>>2]|0;
 HEAP32[$96>>2] = $787;
 $788 = HEAP32[$96>>2]|0;
 HEAP32[$343>>2] = $788;
 __THREW__ = 0;
 invoke_viii(60,($341|0),($342|0),($343|0));
 $789 = __THREW__; __THREW__ = 0;
 $790 = $789&1;
 L61: do {
  if ($790) {
   label = 55;
  } else {
   $90 = $344;
   $791 = $90;
   $86 = $791;
   $792 = $86;
   $85 = $792;
   $66 = $68;
   $67 = -1;
   $793 = $66;
   HEAP32[$793>>2] = 0;
   $794 = HEAP32[$68>>2]|0;
   HEAP32[$87>>2] = $794;
   $69 = $87;
   HEAP32[$792>>2] = 0;
   $795 = ((($792)) + 4|0);
   $70 = $72;
   $71 = -1;
   $796 = $70;
   HEAP32[$796>>2] = 0;
   $797 = HEAP32[$72>>2]|0;
   HEAP32[$88>>2] = $797;
   $73 = $88;
   HEAP32[$795>>2] = 0;
   $798 = ((($792)) + 8|0);
   $74 = $76;
   $75 = -1;
   $799 = $74;
   HEAP32[$799>>2] = 0;
   $800 = HEAP32[$76>>2]|0;
   HEAP32[$89>>2] = $800;
   $77 = $89;
   $83 = $798;
   HEAP32[$84>>2] = 0;
   $801 = $83;
   $82 = $84;
   $802 = $82;
   $803 = HEAP32[$802>>2]|0;
   $80 = $801;
   HEAP32[$81>>2] = $803;
   $804 = $80;
   $79 = $804;
   $78 = $81;
   $805 = $78;
   $806 = HEAP32[$805>>2]|0;
   HEAP32[$804>>2] = $806;
   $345 = 0;
   while(1) {
    $807 = $345;
    $808 = $294;
    $51 = $808;
    $809 = $51;
    $810 = ((($809)) + 4|0);
    $811 = HEAP32[$810>>2]|0;
    $812 = HEAP32[$809>>2]|0;
    $813 = $811;
    $814 = $812;
    $815 = (($813) - ($814))|0;
    $816 = (($815|0) / 16)&-1;
    $817 = ($807>>>0)<($816>>>0);
    if (!($817)) {
     label = 57;
     break;
    }
    $818 = $294;
    $819 = $345;
    $49 = $818;
    $50 = $819;
    $820 = $49;
    $821 = HEAP32[$820>>2]|0;
    $822 = $50;
    $823 = (($821) + ($822<<4)|0);
    ;HEAP32[$346>>2]=HEAP32[$823>>2]|0;HEAP32[$346+4>>2]=HEAP32[$823+4>>2]|0;HEAP32[$346+8>>2]=HEAP32[$823+8>>2]|0;HEAP32[$346+12>>2]=HEAP32[$823+12>>2]|0;
    __THREW__ = 0;
    $824 = (invoke_ii(57,($346|0))|0);
    $825 = __THREW__; __THREW__ = 0;
    $826 = $825&1;
    if ($826) {
     label = 56;
     break;
    }
    $827 = HEAP32[$824>>2]|0;
    HEAP32[$347>>2] = $827;
    __THREW__ = 0;
    $828 = (invoke_ii(56,($346|0))|0);
    $829 = __THREW__; __THREW__ = 0;
    $830 = $829&1;
    if ($830) {
     label = 56;
     break;
    }
    $831 = HEAP32[$828>>2]|0;
    HEAP32[$348>>2] = $831;
    __THREW__ = 0;
    $832 = (invoke_ii(58,($346|0))|0);
    $833 = __THREW__; __THREW__ = 0;
    $834 = $833&1;
    if ($834) {
     label = 56;
     break;
    }
    $835 = +HEAPF64[$832>>3];
    HEAPF64[$349>>3] = $835;
    __THREW__ = 0;
    invoke_viiii(45,($350|0),($347|0),($348|0),($349|0));
    $836 = __THREW__; __THREW__ = 0;
    $837 = $836&1;
    if ($837) {
     label = 56;
     break;
    }
    $46 = $344;
    $47 = $350;
    $838 = $46;
    $839 = ((($838)) + 4|0);
    $840 = HEAP32[$839>>2]|0;
    $45 = $838;
    $841 = $45;
    $842 = ((($841)) + 8|0);
    $44 = $842;
    $843 = $44;
    $43 = $843;
    $844 = $43;
    $845 = HEAP32[$844>>2]|0;
    $846 = ($840|0)!=($845|0);
    if ($846) {
     $40 = $48;
     $41 = $838;
     $42 = 1;
     $34 = $838;
     $847 = $34;
     $848 = ((($847)) + 8|0);
     $33 = $848;
     $849 = $33;
     $32 = $849;
     $850 = $32;
     $851 = ((($838)) + 4|0);
     $852 = HEAP32[$851>>2]|0;
     $35 = $852;
     $853 = $35;
     $854 = $47;
     $36 = $850;
     $37 = $853;
     $38 = $854;
     $855 = $37;
     $856 = $38;
     ;HEAP32[$855>>2]=HEAP32[$856>>2]|0;HEAP32[$855+4>>2]=HEAP32[$856+4>>2]|0;HEAP32[$855+8>>2]=HEAP32[$856+8>>2]|0;HEAP32[$855+12>>2]=HEAP32[$856+12>>2]|0;
     $39 = $48;
     $857 = ((($838)) + 4|0);
     $858 = HEAP32[$857>>2]|0;
     $859 = ((($858)) + 16|0);
     HEAP32[$857>>2] = $859;
    } else {
     $860 = $47;
     __THREW__ = 0;
     invoke_vii(46,($838|0),($860|0));
     $861 = __THREW__; __THREW__ = 0;
     $862 = $861&1;
     if ($862) {
      label = 56;
      break;
     }
    }
    $863 = $345;
    $864 = (($863) + 1)|0;
    $345 = $864;
   }
   L74: do {
    if ((label|0) == 57) {
     $31 = $344;
     $869 = $31;
     $870 = HEAP32[$869>>2]|0;
     $28 = $869;
     $29 = $870;
     $871 = $29;
     $25 = $27;
     $26 = $871;
     $872 = $25;
     $873 = $26;
     HEAP32[$872>>2] = $873;
     $874 = HEAP32[$27>>2]|0;
     HEAP32[$30>>2] = $874;
     $875 = HEAP32[$30>>2]|0;
     HEAP32[$351>>2] = $875;
     $16 = $344;
     $876 = $16;
     $877 = ((($876)) + 4|0);
     $878 = HEAP32[$877>>2]|0;
     $13 = $876;
     $14 = $878;
     $879 = $14;
     $10 = $12;
     $11 = $879;
     $880 = $10;
     $881 = $11;
     HEAP32[$880>>2] = $881;
     $882 = HEAP32[$12>>2]|0;
     HEAP32[$15>>2] = $882;
     $883 = HEAP32[$15>>2]|0;
     HEAP32[$352>>2] = $883;
     ;HEAP8[$22>>0]=HEAP8[$353>>0]|0;
     ;HEAP8[$23>>0]=HEAP8[$352>>0]|0;HEAP8[$23+1>>0]=HEAP8[$352+1>>0]|0;HEAP8[$23+2>>0]=HEAP8[$352+2>>0]|0;HEAP8[$23+3>>0]=HEAP8[$352+3>>0]|0;
     ;HEAP8[$24>>0]=HEAP8[$351>>0]|0;HEAP8[$24+1>>0]=HEAP8[$351+1>>0]|0;HEAP8[$24+2>>0]=HEAP8[$351+2>>0]|0;HEAP8[$24+3>>0]=HEAP8[$351+3>>0]|0;
     $21 = $24;
     $884 = $21;
     $885 = HEAP32[$884>>2]|0;
     $17 = $23;
     $886 = $17;
     $887 = HEAP32[$886>>2]|0;
     $18 = $885;
     $19 = $887;
     $20 = $22;
     $888 = $18;
     $889 = $19;
     $890 = $20;
     __THREW__ = 0;
     invoke_viii(47,($888|0),($889|0),($890|0));
     $891 = __THREW__; __THREW__ = 0;
     $892 = $891&1;
     if ($892) {
      label = 56;
     } else {
      $893 = $299;
      $894 = $300;
      __THREW__ = 0;
      invoke_viii(61,($354|0),($893|0),($894|0));
      $895 = __THREW__; __THREW__ = 0;
      $896 = $895&1;
      if ($896) {
       label = 56;
      } else {
       $897 = $303;
       __THREW__ = 0;
       (invoke_iii(62,($897|0),($354|0))|0);
       $898 = __THREW__; __THREW__ = 0;
       $899 = $898&1;
       if ($899) {
        $934 = ___cxa_find_matching_catch_2()|0;
        $935 = tempRet0;
        $307 = $934;
        $308 = $935;
        __THREW__ = 0;
        invoke_vi(63,($354|0));
        $936 = __THREW__; __THREW__ = 0;
        $937 = $936&1;
        if (!($937)) {
         break;
        }
        $952 = ___cxa_find_matching_catch_3(0|0)|0;
        $953 = tempRet0;
        ___clang_call_terminate($952);
        // unreachable;
       }
       __THREW__ = 0;
       invoke_vi(63,($354|0));
       $900 = __THREW__; __THREW__ = 0;
       $901 = $900&1;
       if ($901) {
        label = 56;
       } else {
        $902 = $303;
        $58 = $344;
        $903 = $58;
        $904 = HEAP32[$903>>2]|0;
        $55 = $903;
        $56 = $904;
        $905 = $56;
        $52 = $54;
        $53 = $905;
        $906 = $52;
        $907 = $53;
        HEAP32[$906>>2] = $907;
        $908 = HEAP32[$54>>2]|0;
        HEAP32[$57>>2] = $908;
        $909 = HEAP32[$57>>2]|0;
        HEAP32[$355>>2] = $909;
        $65 = $344;
        $910 = $65;
        $911 = ((($910)) + 4|0);
        $912 = HEAP32[$911>>2]|0;
        $62 = $910;
        $63 = $912;
        $913 = $63;
        $59 = $61;
        $60 = $913;
        $914 = $59;
        $915 = $60;
        HEAP32[$914>>2] = $915;
        $916 = HEAP32[$61>>2]|0;
        HEAP32[$64>>2] = $916;
        $917 = HEAP32[$64>>2]|0;
        HEAP32[$356>>2] = $917;
        __THREW__ = 0;
        invoke_viii(60,($902|0),($355|0),($356|0));
        $918 = __THREW__; __THREW__ = 0;
        $919 = $918&1;
        if ($919) {
         label = 56;
        } else {
         __THREW__ = 0;
         invoke_vii(64,($359|0),($341|0));
         $920 = __THREW__; __THREW__ = 0;
         $921 = $920&1;
         if ($921) {
          label = 56;
         } else {
          __THREW__ = 0;
          invoke_viii(65,($358|0),($359|0),($341|0));
          $922 = __THREW__; __THREW__ = 0;
          $923 = $922&1;
          if ($923) {
           label = 56;
          } else {
           __THREW__ = 0;
           invoke_vii(66,($357|0),($358|0));
           $924 = __THREW__; __THREW__ = 0;
           $925 = $924&1;
           if ($925) {
            label = 56;
           } else {
            __THREW__ = 0;
            $926 = (invoke_ii(67,112)|0);
            $927 = __THREW__; __THREW__ = 0;
            $928 = $927&1;
            do {
             if ($928) {
              $938 = ___cxa_find_matching_catch_2()|0;
              $939 = tempRet0;
              $307 = $938;
              $308 = $939;
             } else {
              __THREW__ = 0;
              invoke_vii(68,($926|0),($357|0));
              $929 = __THREW__; __THREW__ = 0;
              $930 = $929&1;
              if ($930) {
               $940 = ___cxa_find_matching_catch_2()|0;
               $941 = tempRet0;
               $307 = $940;
               $308 = $941;
               __ZdlPv($926);
               break;
              }
              $360 = $926;
              $931 = $360;
              __THREW__ = 0;
              invoke_vi(63,($357|0));
              $932 = __THREW__; __THREW__ = 0;
              $933 = $932&1;
              if ($933) {
               label = 56;
               break L74;
              }
              __THREW__ = 0;
              invoke_vi(48,($344|0));
              $942 = __THREW__; __THREW__ = 0;
              $943 = $942&1;
              if ($943) {
               label = 55;
               break L61;
              }
              __ZN5Eigen12SparseMatrixIdLi0EiED2Ev($341);
              STACKTOP = sp;return ($931|0);
             }
            } while(0);
            __THREW__ = 0;
            invoke_vi(63,($357|0));
            $944 = __THREW__; __THREW__ = 0;
            $945 = $944&1;
            if ($945) {
             $952 = ___cxa_find_matching_catch_3(0|0)|0;
             $953 = tempRet0;
             ___clang_call_terminate($952);
             // unreachable;
            }
           }
          }
         }
        }
       }
      }
     }
    }
   } while(0);
   if ((label|0) == 56) {
    $867 = ___cxa_find_matching_catch_2()|0;
    $868 = tempRet0;
    $307 = $867;
    $308 = $868;
   }
   __THREW__ = 0;
   invoke_vi(48,($344|0));
   $946 = __THREW__; __THREW__ = 0;
   $947 = $946&1;
   if ($947) {
    $952 = ___cxa_find_matching_catch_3(0|0)|0;
    $953 = tempRet0;
    ___clang_call_terminate($952);
    // unreachable;
   }
  }
 } while(0);
 if ((label|0) == 55) {
  $865 = ___cxa_find_matching_catch_2()|0;
  $866 = tempRet0;
  $307 = $865;
  $308 = $866;
 }
 __THREW__ = 0;
 invoke_vi(63,($341|0));
 $948 = __THREW__; __THREW__ = 0;
 $949 = $948&1;
 if ($949) {
  $952 = ___cxa_find_matching_catch_3(0|0)|0;
  $953 = tempRet0;
  ___clang_call_terminate($952);
  // unreachable;
 } else {
  $950 = $307;
  $951 = $308;
  ___resumeException($950|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZNK5Eigen7TripletIdiE3rowEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7TripletIdiE3colEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7TripletIdiE5valueEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen12SparseMatrixIdLi0EiEC2Eii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEC2Ev($8);
 $9 = ((($8)) + 4|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($8)) + 8|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($8)) + 12|0);
 HEAP32[$11>>2] = 0;
 $12 = ((($8)) + 16|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($8)) + 20|0);
 __ZN5Eigen8internal17CompressedStorageIdiEC2Ev($13);
 __THREW__ = 0;
 invoke_v(69);
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 if (!($15)) {
  $16 = $4;
  $17 = $5;
  __THREW__ = 0;
  invoke_viii(70,($8|0),($16|0),($17|0));
  $18 = __THREW__; __THREW__ = 0;
  $19 = $18&1;
  if (!($19)) {
   STACKTOP = sp;return;
  }
 }
 $20 = ___cxa_find_matching_catch_2()|0;
 $21 = tempRet0;
 $6 = $20;
 $7 = $21;
 __THREW__ = 0;
 invoke_vi(71,($13|0));
 $22 = __THREW__; __THREW__ = 0;
 $23 = $22&1;
 if ($23) {
  $26 = ___cxa_find_matching_catch_3(0|0)|0;
  $27 = tempRet0;
  ___clang_call_terminate($26);
  // unreachable;
 } else {
  $24 = $6;
  $25 = $7;
  ___resumeException($24|0);
  // unreachable;
 }
}
function __ZN5Eigen12SparseMatrixIdLi0EiE15setFromTripletsINSt3__211__wrap_iterIPNS_7TripletIdiEEEEEEvRKT_SB_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp + 12|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 __ZN5Eigen8internal13scalar_sum_opIddEC2Ev($6);
 __ZN5Eigen8internal17set_from_tripletsINSt3__211__wrap_iterIPNS_7TripletIdiEEEENS_12SparseMatrixIdLi0EiEENS0_13scalar_sum_opIddEEEEvRKT_SE_RT0_T1_($8,$9,$7,$6);
 STACKTOP = sp;return;
}
function __ZN5Eigen12SparseMatrixIdLi0EiEaSERKS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE8isRValueEv($5)|0);
 $7 = $3;
 if ($6) {
  $8 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE18const_cast_derivedEv($7)|0);
  __ZN5Eigen12SparseMatrixIdLi0EiE4swapERS1_($4,$8);
  STACKTOP = sp;return ($4|0);
 }
 $9 = ($4|0)!=($7|0);
 if (!($9)) {
  STACKTOP = sp;return ($4|0);
 }
 $10 = $3;
 __ZN5Eigen12SparseMatrixIdLi0EiE14initAssignmentIS1_EEvRKT_($4,$10);
 $11 = $3;
 $12 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE12isCompressedEv($11)|0);
 if ($12) {
  $13 = $3;
  $14 = ((($13)) + 12|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = $3;
  $17 = ((($16)) + 12|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = ((($4)) + 4|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (($18) + ($20<<2)|0);
  $22 = ((($21)) + 4|0);
  $23 = ((($4)) + 12|0);
  $24 = HEAP32[$23>>2]|0;
  __ZN5Eigen8internal10smart_copyIiEEvPKT_S4_PS2_($15,$22,$24);
  $25 = $3;
  $26 = ((($25)) + 20|0);
  $27 = ((($4)) + 20|0);
  (__ZN5Eigen8internal17CompressedStorageIdiEaSERKS2_($27,$26)|0);
  STACKTOP = sp;return ($4|0);
 } else {
  $28 = $3;
  (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEEaSERKS2_($4,$28)|0);
  STACKTOP = sp;return ($4|0);
 }
 return (0)|0;
}
function __ZN5Eigen12SparseMatrixIdLi0EiED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 __THREW__ = 0;
 invoke_vi(72,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  $9 = ((($4)) + 16|0);
  $10 = HEAP32[$9>>2]|0;
  __THREW__ = 0;
  invoke_vi(72,($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   $13 = ((($4)) + 20|0);
   __ZN5Eigen8internal17CompressedStorageIdiED2Ev($13);
   STACKTOP = sp;return;
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $2 = $14;
 $3 = $15;
 $16 = ((($4)) + 20|0);
 __THREW__ = 0;
 invoke_vi(71,($16|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $21 = ___cxa_find_matching_catch_3(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 } else {
  $19 = $2;
  $20 = $3;
  ___resumeException($19|0);
  // unreachable;
 }
}
function __ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE9transposeEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $1;
 $3 = $2;
 $4 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($3)|0);
 __ZN5Eigen9TransposeINS_12SparseMatrixIdLi0EiEEEC2ERS2_($0,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEEmlIS3_EEKNS_7ProductIS4_T_Li2EEERKNS0_IS8_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEE7derivedEv($5)|0);
 $7 = $4;
 $8 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($7)|0);
 __ZN5Eigen7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES3_Li2EEC2ERKS4_RKS3_($0,$6,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen12SparseMatrixIdLi0EiEC2INS_7ProductINS_9TransposeIS1_EES1_Li2EEEEERKNS_16SparseMatrixBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $7 = $2;
 __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEC2Ev($7);
 $8 = ((($7)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($7)) + 8|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($7)) + 12|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($7)) + 16|0);
 HEAP32[$11>>2] = 0;
 $12 = ((($7)) + 20|0);
 __ZN5Eigen8internal17CompressedStorageIdiEC2Ev($12);
 __THREW__ = 0;
 invoke_v(69);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if (!($14)) {
  $6 = 0;
  $15 = $3;
  __THREW__ = 0;
  $16 = (invoke_ii(73,($15|0))|0);
  $17 = __THREW__; __THREW__ = 0;
  $18 = $17&1;
  if (!($18)) {
   __THREW__ = 0;
   invoke_vii(74,($7|0),($16|0));
   $19 = __THREW__; __THREW__ = 0;
   $20 = $19&1;
   if (!($20)) {
    STACKTOP = sp;return;
   }
  }
 }
 $21 = ___cxa_find_matching_catch_2()|0;
 $22 = tempRet0;
 $4 = $21;
 $5 = $22;
 __THREW__ = 0;
 invoke_vi(71,($12|0));
 $23 = __THREW__; __THREW__ = 0;
 $24 = $23&1;
 if ($24) {
  $27 = ___cxa_find_matching_catch_3(0|0)|0;
  $28 = tempRet0;
  ___clang_call_terminate($27);
  // unreachable;
 } else {
  $25 = $4;
  $26 = $5;
  ___resumeException($25|0);
  // unreachable;
 }
}
function __ZN5Eigen18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEEC2Ev($6);
 $7 = ((($6)) + 104|0);
 HEAP8[$7>>0] = 1;
 $8 = $3;
 __THREW__ = 0;
 (invoke_iii(75,($6|0),($8|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  STACKTOP = sp;return;
 }
 $11 = ___cxa_find_matching_catch_2()|0;
 $12 = tempRet0;
 $4 = $11;
 $5 = $12;
 __THREW__ = 0;
 invoke_vi(76,($6|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  $17 = ___cxa_find_matching_catch_3(0|0)|0;
  $18 = tempRet0;
  ___clang_call_terminate($17);
  // unreachable;
 } else {
  $15 = $4;
  $16 = $5;
  ___resumeException($15|0);
  // unreachable;
 }
}
function ___cxx_global_var_init() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN5StateC2Ev(10480);
 (___cxa_atexit((77|0),(10480|0),(___dso_handle|0))|0);
 return;
}
function __ZN5StateC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $3 = sp + 200|0;
 $7 = sp + 184|0;
 $11 = sp + 168|0;
 $16 = sp + 148|0;
 $19 = sp + 136|0;
 $22 = sp + 124|0;
 $23 = sp + 120|0;
 $24 = sp + 116|0;
 $28 = sp + 100|0;
 $32 = sp + 84|0;
 $36 = sp + 68|0;
 $41 = sp + 48|0;
 $44 = sp + 36|0;
 $47 = sp + 24|0;
 $48 = sp + 20|0;
 $49 = sp + 16|0;
 $51 = $0;
 $54 = $51;
 $55 = ((($54)) + 4|0);
 __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEC2Ev($55);
 $56 = ((($54)) + 12|0);
 __THREW__ = 0;
 invoke_vi(78,($56|0));
 $57 = __THREW__; __THREW__ = 0;
 $58 = $57&1;
 if ($58) {
  $99 = ___cxa_find_matching_catch_2()|0;
  $100 = tempRet0;
  $52 = $99;
  $53 = $100;
 } else {
  $59 = ((($54)) + 48|0);
  __THREW__ = 0;
  invoke_vi(78,($59|0));
  $60 = __THREW__; __THREW__ = 0;
  $61 = $60&1;
  if ($61) {
   $101 = ___cxa_find_matching_catch_2()|0;
   $102 = tempRet0;
   $52 = $101;
   $53 = $102;
  } else {
   $62 = ((($54)) + 108|0);
   $50 = $62;
   $63 = $50;
   $46 = $63;
   $64 = $46;
   $45 = $64;
   $26 = $28;
   $27 = -1;
   $65 = $26;
   HEAP32[$65>>2] = 0;
   $66 = HEAP32[$28>>2]|0;
   HEAP32[$47>>2] = $66;
   $29 = $47;
   HEAP32[$64>>2] = 0;
   $67 = ((($64)) + 4|0);
   $30 = $32;
   $31 = -1;
   $68 = $30;
   HEAP32[$68>>2] = 0;
   $69 = HEAP32[$32>>2]|0;
   HEAP32[$48>>2] = $69;
   $33 = $48;
   HEAP32[$67>>2] = 0;
   $70 = ((($64)) + 8|0);
   $34 = $36;
   $35 = -1;
   $71 = $34;
   HEAP32[$71>>2] = 0;
   $72 = HEAP32[$36>>2]|0;
   HEAP32[$49>>2] = $72;
   $37 = $49;
   $43 = $70;
   HEAP32[$44>>2] = 0;
   $73 = $43;
   $42 = $44;
   $74 = $42;
   $75 = HEAP32[$74>>2]|0;
   $40 = $73;
   HEAP32[$41>>2] = $75;
   $76 = $40;
   $39 = $76;
   $38 = $41;
   $77 = $38;
   $78 = HEAP32[$77>>2]|0;
   HEAP32[$76>>2] = $78;
   $79 = ((($54)) + 120|0);
   __THREW__ = 0;
   invoke_vi(78,($79|0));
   $80 = __THREW__; __THREW__ = 0;
   $81 = $80&1;
   if (!($81)) {
    $82 = ((($54)) + 160|0);
    $25 = $82;
    $83 = $25;
    $21 = $83;
    $84 = $21;
    $20 = $84;
    $1 = $3;
    $2 = -1;
    $85 = $1;
    HEAP32[$85>>2] = 0;
    $86 = HEAP32[$3>>2]|0;
    HEAP32[$22>>2] = $86;
    $4 = $22;
    HEAP32[$84>>2] = 0;
    $87 = ((($84)) + 4|0);
    $5 = $7;
    $6 = -1;
    $88 = $5;
    HEAP32[$88>>2] = 0;
    $89 = HEAP32[$7>>2]|0;
    HEAP32[$23>>2] = $89;
    $8 = $23;
    HEAP32[$87>>2] = 0;
    $90 = ((($84)) + 8|0);
    $9 = $11;
    $10 = -1;
    $91 = $9;
    HEAP32[$91>>2] = 0;
    $92 = HEAP32[$11>>2]|0;
    HEAP32[$24>>2] = $92;
    $12 = $24;
    $18 = $90;
    HEAP32[$19>>2] = 0;
    $93 = $18;
    $17 = $19;
    $94 = $17;
    $95 = HEAP32[$94>>2]|0;
    $15 = $93;
    HEAP32[$16>>2] = $95;
    $96 = $15;
    $14 = $96;
    $13 = $16;
    $97 = $13;
    $98 = HEAP32[$97>>2]|0;
    HEAP32[$96>>2] = $98;
    STACKTOP = sp;return;
   }
   $103 = ___cxa_find_matching_catch_2()|0;
   $104 = tempRet0;
   $52 = $103;
   $53 = $104;
   __THREW__ = 0;
   invoke_vi(37,($62|0));
   $105 = __THREW__; __THREW__ = 0;
   $106 = $105&1;
   if ($106) {
    $115 = ___cxa_find_matching_catch_3(0|0)|0;
    $116 = tempRet0;
    ___clang_call_terminate($115);
    // unreachable;
   }
   __THREW__ = 0;
   invoke_vi(63,($59|0));
   $107 = __THREW__; __THREW__ = 0;
   $108 = $107&1;
   if ($108) {
    $115 = ___cxa_find_matching_catch_3(0|0)|0;
    $116 = tempRet0;
    ___clang_call_terminate($115);
    // unreachable;
   }
  }
  __THREW__ = 0;
  invoke_vi(63,($56|0));
  $109 = __THREW__; __THREW__ = 0;
  $110 = $109&1;
  if ($110) {
   $115 = ___cxa_find_matching_catch_3(0|0)|0;
   $116 = tempRet0;
   ___clang_call_terminate($115);
   // unreachable;
  }
 }
 __THREW__ = 0;
 invoke_vi(44,($55|0));
 $111 = __THREW__; __THREW__ = 0;
 $112 = $111&1;
 if ($112) {
  $115 = ___cxa_find_matching_catch_3(0|0)|0;
  $116 = tempRet0;
  ___clang_call_terminate($115);
  // unreachable;
 } else {
  $113 = $52;
  $114 = $53;
  ___resumeException($113|0);
  // unreachable;
 }
}
function __ZN5StateD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 160|0);
 __THREW__ = 0;
 invoke_vi(49,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 do {
  if ($7) {
   $21 = ___cxa_find_matching_catch_2()|0;
   $22 = tempRet0;
   $2 = $21;
   $3 = $22;
   $23 = ((($4)) + 120|0);
   __THREW__ = 0;
   invoke_vi(63,($23|0));
   $24 = __THREW__; __THREW__ = 0;
   $25 = $24&1;
   if (!($25)) {
    label = 10;
   }
  } else {
   $8 = ((($4)) + 120|0);
   __THREW__ = 0;
   invoke_vi(63,($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $26 = ___cxa_find_matching_catch_2()|0;
    $27 = tempRet0;
    $2 = $26;
    $3 = $27;
    label = 10;
    break;
   }
   $11 = ((($4)) + 108|0);
   __THREW__ = 0;
   invoke_vi(37,($11|0));
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    $28 = ___cxa_find_matching_catch_2()|0;
    $29 = tempRet0;
    $2 = $28;
    $3 = $29;
    label = 12;
    break;
   }
   $14 = ((($4)) + 48|0);
   __THREW__ = 0;
   invoke_vi(63,($14|0));
   $15 = __THREW__; __THREW__ = 0;
   $16 = $15&1;
   if ($16) {
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $2 = $33;
    $3 = $34;
    label = 14;
    break;
   }
   $17 = ((($4)) + 12|0);
   __THREW__ = 0;
   invoke_vi(63,($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    $38 = ___cxa_find_matching_catch_2()|0;
    $39 = tempRet0;
    $2 = $38;
    $3 = $39;
    label = 15;
    break;
   } else {
    $20 = ((($4)) + 4|0);
    __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EED2Ev($20);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 10) {
  $30 = ((($4)) + 108|0);
  __THREW__ = 0;
  invoke_vi(37,($30|0));
  $31 = __THREW__; __THREW__ = 0;
  $32 = $31&1;
  if (!($32)) {
   label = 12;
  }
 }
 if ((label|0) == 12) {
  $35 = ((($4)) + 48|0);
  __THREW__ = 0;
  invoke_vi(63,($35|0));
  $36 = __THREW__; __THREW__ = 0;
  $37 = $36&1;
  if (!($37)) {
   label = 14;
  }
 }
 if ((label|0) == 14) {
  $40 = ((($4)) + 12|0);
  __THREW__ = 0;
  invoke_vi(63,($40|0));
  $41 = __THREW__; __THREW__ = 0;
  $42 = $41&1;
  if (!($42)) {
   label = 15;
  }
 }
 if ((label|0) == 15) {
  $43 = ((($4)) + 4|0);
  __THREW__ = 0;
  invoke_vi(44,($43|0));
  $44 = __THREW__; __THREW__ = 0;
  $45 = $44&1;
  if (!($45)) {
   $46 = $2;
   $47 = $3;
   ___resumeException($46|0);
   // unreachable;
  }
 }
 $48 = ___cxa_find_matching_catch_3(0|0)|0;
 $49 = tempRet0;
 ___clang_call_terminate($48);
 // unreachable;
}
function _prepareDeform($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0.0, $238 = 0.0, $239 = 0.0, $24 = 0, $240 = 0.0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0.0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0;
 var $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0;
 var $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0;
 var $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0;
 var $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0;
 var $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0;
 var $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0;
 var $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0;
 var $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0.0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0;
 var $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0;
 var $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0;
 var $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0.0, $608 = 0;
 var $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0.0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0.0, $626 = 0.0;
 var $627 = 0.0, $628 = 0.0, $629 = 0.0, $63 = 0, $630 = 0.0, $631 = 0.0, $632 = 0.0, $633 = 0.0, $634 = 0.0, $635 = 0.0, $636 = 0.0, $637 = 0.0, $638 = 0.0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0;
 var $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0;
 var $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0;
 var $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0;
 var $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer18 = 0, $vararg_buffer2 = 0, $vararg_buffer21 = 0, $vararg_buffer23 = 0, $vararg_buffer26 = 0, $vararg_buffer29 = 0;
 var $vararg_buffer5 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1200|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1200|0);
 $vararg_buffer29 = sp + 168|0;
 $vararg_buffer26 = sp + 160|0;
 $vararg_buffer23 = sp + 152|0;
 $vararg_buffer21 = sp + 144|0;
 $vararg_buffer18 = sp + 136|0;
 $vararg_buffer15 = sp + 128|0;
 $vararg_buffer13 = sp + 120|0;
 $vararg_buffer10 = sp + 112|0;
 $vararg_buffer7 = sp + 104|0;
 $vararg_buffer5 = sp + 96|0;
 $vararg_buffer2 = sp + 88|0;
 $vararg_buffer = sp + 80|0;
 $11 = sp + 72|0;
 $14 = sp + 1198|0;
 $19 = sp + 64|0;
 $22 = sp + 1197|0;
 $27 = sp + 1132|0;
 $31 = sp + 1116|0;
 $35 = sp + 1100|0;
 $40 = sp + 1080|0;
 $43 = sp + 1068|0;
 $46 = sp + 1056|0;
 $47 = sp + 1052|0;
 $48 = sp + 1048|0;
 $52 = sp + 1032|0;
 $56 = sp + 1016|0;
 $60 = sp + 1000|0;
 $65 = sp + 980|0;
 $68 = sp + 968|0;
 $71 = sp + 956|0;
 $72 = sp + 952|0;
 $73 = sp + 948|0;
 $79 = sp + 56|0;
 $82 = sp + 1196|0;
 $87 = sp + 900|0;
 $90 = sp + 888|0;
 $94 = sp + 872|0;
 $97 = sp + 860|0;
 $115 = sp + 1195|0;
 $124 = sp + 48|0;
 $127 = sp + 1194|0;
 $134 = sp + 724|0;
 $138 = sp + 708|0;
 $142 = sp + 692|0;
 $147 = sp + 672|0;
 $150 = sp + 660|0;
 $153 = sp + 648|0;
 $154 = sp + 644|0;
 $155 = sp + 640|0;
 $160 = sp + 620|0;
 $164 = sp + 604|0;
 $168 = sp + 588|0;
 $173 = sp + 568|0;
 $176 = sp + 556|0;
 $179 = sp + 544|0;
 $180 = sp + 540|0;
 $181 = sp + 536|0;
 $189 = sp + 40|0;
 $192 = sp + 1193|0;
 $209 = sp + 428|0;
 $210 = sp + 424|0;
 $211 = sp + 412|0;
 $212 = sp + 408|0;
 $216 = sp + 384|0;
 $218 = sp + 368|0;
 $220 = sp + 352|0;
 $223 = sp + 340|0;
 $224 = sp + 328|0;
 $225 = sp + 316|0;
 $226 = sp + 280|0;
 $227 = sp + 276|0;
 $228 = sp + 272|0;
 $229 = sp + 264|0;
 $233 = sp + 240|0;
 $234 = sp + 224|0;
 $235 = sp + 32|0;
 $241 = sp + 208|0;
 $242 = sp + 196|0;
 $243 = sp + 184|0;
 $244 = sp + 172|0;
 $195 = $0;
 $196 = $1;
 $197 = $2;
 $198 = $3;
 $199 = $4;
 $200 = $5;
 $201 = $6;
 $202 = $7;
 $245 = $8&1;
 $203 = $245;
 $246 = $196;
 HEAP32[$vararg_buffer>>2] = $246;
 (_printf(937,$vararg_buffer)|0);
 $204 = 0;
 while(1) {
  $247 = $204;
  $248 = ($247|0)<(20);
  if (!($248)) {
   break;
  }
  $249 = $195;
  $250 = $204;
  $251 = (($249) + ($250<<2)|0);
  $252 = HEAP32[$251>>2]|0;
  HEAP32[$vararg_buffer2>>2] = $252;
  (_printf(947,$vararg_buffer2)|0);
  $253 = $204;
  $254 = (($253) + 1)|0;
  $204 = $254;
 }
 (_printf(952,$vararg_buffer5)|0);
 $255 = $198;
 HEAP32[$vararg_buffer7>>2] = $255;
 (_printf(954,$vararg_buffer7)|0);
 $205 = 0;
 while(1) {
  $256 = $205;
  $257 = ($256|0)<(20);
  if (!($257)) {
   break;
  }
  $258 = $197;
  $259 = $205;
  $260 = (($258) + ($259<<3)|0);
  $261 = +HEAPF64[$260>>3];
  HEAPF64[$vararg_buffer10>>3] = $261;
  (_printf(968,$vararg_buffer10)|0);
  $262 = $205;
  $263 = (($262) + 1)|0;
  $205 = $263;
 }
 (_printf(952,$vararg_buffer13)|0);
 $264 = $200;
 HEAP32[$vararg_buffer15>>2] = $264;
 (_printf(973,$vararg_buffer15)|0);
 $206 = 0;
 while(1) {
  $265 = $206;
  $266 = ($265|0)<(20);
  if (!($266)) {
   break;
  }
  $267 = $199;
  $268 = $206;
  $269 = (($267) + ($268<<2)|0);
  $270 = HEAP32[$269>>2]|0;
  HEAP32[$vararg_buffer18>>2] = $270;
  (_printf(947,$vararg_buffer18)|0);
  $271 = $206;
  $272 = (($271) + 1)|0;
  $206 = $272;
 }
 (_printf(952,$vararg_buffer21)|0);
 $273 = $201;
 HEAP32[$vararg_buffer23>>2] = $273;
 (_printf(985,$vararg_buffer23)|0);
 $274 = $202;
 HEAP32[$vararg_buffer26>>2] = $274;
 (_printf(1006,$vararg_buffer26)|0);
 $275 = $203;
 $276 = $275&1;
 $277 = $276&1;
 HEAP32[$vararg_buffer29>>2] = $277;
 (_printf(1030,$vararg_buffer29)|0);
 $278 = $199;
 HEAP32[(10572)>>2] = $278;
 $279 = $200;
 HEAP32[(10576)>>2] = $279;
 $280 = $201;
 HEAP32[(10636)>>2] = $280;
 $281 = $200;
 $282 = ($281*3)|0;
 HEAP32[(10584)>>2] = $282;
 $283 = $202;
 $284 = (($283) - 0)|0;
 $207 = $284;
 $285 = $200;
 $286 = $201;
 $287 = (($285) - ($286))|0;
 $208 = $287;
 $288 = HEAP32[(10584)>>2]|0;
 $289 = $207;
 $290 = $208;
 $291 = (($289) + ($290))|0;
 $292 = ($291*3)|0;
 $293 = (($288) + ($292))|0;
 HEAP32[(10580)>>2] = $293;
 $294 = $198;
 HEAP32[$210>>2] = -1;
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2EjRKi($209,$294,$210);
 $295 = $198;
 HEAP32[$212>>2] = -1;
 __THREW__ = 0;
 invoke_viii(79,($211|0),($295|0),($212|0));
 $296 = __THREW__; __THREW__ = 0;
 $297 = $296&1;
 L13: do {
  if ($297) {
   label = 17;
  } else {
   $193 = (10588);
   $194 = $211;
   $298 = $193;
   $299 = $194;
   $300 = ($298|0)!=($299|0);
   if ($300) {
    $301 = $194;
    $190 = $298;
    $191 = $301;
    $302 = $190;
    $303 = $191;
    ;HEAP8[$189>>0]=HEAP8[$192>>0]|0;
    $187 = $302;
    $188 = $303;
    $304 = $194;
    $305 = HEAP32[$304>>2]|0;
    $306 = $194;
    $307 = ((($306)) + 4|0);
    $308 = HEAP32[$307>>2]|0;
    __THREW__ = 0;
    invoke_viii(80,($298|0),($305|0),($308|0));
    $309 = __THREW__; __THREW__ = 0;
    $310 = $309&1;
    if ($310) {
     $338 = ___cxa_find_matching_catch_2()|0;
     $339 = tempRet0;
     $213 = $338;
     $214 = $339;
     __THREW__ = 0;
     invoke_vi(37,($211|0));
     $340 = __THREW__; __THREW__ = 0;
     $341 = $340&1;
     if (!($341)) {
      break;
     }
     $776 = ___cxa_find_matching_catch_3(0|0)|0;
     $777 = tempRet0;
     ___clang_call_terminate($776);
     // unreachable;
    }
   }
   __THREW__ = 0;
   invoke_vi(37,($211|0));
   $311 = __THREW__; __THREW__ = 0;
   $312 = $311&1;
   if ($312) {
    label = 17;
   } else {
    $215 = 0;
    while(1) {
     $313 = $215;
     $314 = $200;
     $315 = ($313|0)<($314|0);
     if (!($315)) {
      break;
     }
     $316 = $215;
     $317 = $199;
     $318 = $215;
     $319 = (($317) + ($318<<2)|0);
     $320 = HEAP32[$319>>2]|0;
     $185 = $209;
     $186 = $320;
     $321 = $185;
     $322 = HEAP32[$321>>2]|0;
     $323 = $186;
     $324 = (($322) + ($323<<2)|0);
     HEAP32[$324>>2] = $316;
     $325 = $199;
     $326 = $215;
     $327 = (($325) + ($326<<2)|0);
     $328 = HEAP32[$327>>2]|0;
     $329 = $215;
     $183 = (10588);
     $184 = $329;
     $330 = $183;
     $331 = HEAP32[$330>>2]|0;
     $332 = $184;
     $333 = (($331) + ($332<<2)|0);
     HEAP32[$333>>2] = $328;
     $334 = $215;
     $335 = (($334) + 1)|0;
     $215 = $335;
    }
    $182 = $216;
    $342 = $182;
    $178 = $342;
    $343 = $178;
    $177 = $343;
    $158 = $160;
    $159 = -1;
    $344 = $158;
    HEAP32[$344>>2] = 0;
    $345 = HEAP32[$160>>2]|0;
    HEAP32[$179>>2] = $345;
    $161 = $179;
    HEAP32[$343>>2] = 0;
    $346 = ((($343)) + 4|0);
    $162 = $164;
    $163 = -1;
    $347 = $162;
    HEAP32[$347>>2] = 0;
    $348 = HEAP32[$164>>2]|0;
    HEAP32[$180>>2] = $348;
    $165 = $180;
    HEAP32[$346>>2] = 0;
    $349 = ((($343)) + 8|0);
    $166 = $168;
    $167 = -1;
    $350 = $166;
    HEAP32[$350>>2] = 0;
    $351 = HEAP32[$168>>2]|0;
    HEAP32[$181>>2] = $351;
    $169 = $181;
    $175 = $349;
    HEAP32[$176>>2] = 0;
    $352 = $175;
    $174 = $176;
    $353 = $174;
    $354 = HEAP32[$353>>2]|0;
    $172 = $352;
    HEAP32[$173>>2] = $354;
    $355 = $172;
    $171 = $355;
    $170 = $173;
    $356 = $170;
    $357 = HEAP32[$356>>2]|0;
    HEAP32[$355>>2] = $357;
    $358 = $200;
    __THREW__ = 0;
    invoke_vii(81,($216|0),($358|0));
    $359 = __THREW__; __THREW__ = 0;
    $360 = $359&1;
    L25: do {
     if ($360) {
      label = 26;
     } else {
      $217 = 0;
      while(1) {
       $361 = $217;
       $157 = $216;
       $362 = $157;
       $363 = ((($362)) + 4|0);
       $364 = HEAP32[$363>>2]|0;
       $365 = HEAP32[$362>>2]|0;
       $366 = $364;
       $367 = $365;
       $368 = (($366) - ($367))|0;
       $369 = (($368|0) / 12)&-1;
       $370 = ($361>>>0)<($369>>>0);
       if (!($370)) {
        break;
       }
       $156 = $218;
       $371 = $156;
       $152 = $371;
       $372 = $152;
       $151 = $372;
       $132 = $134;
       $133 = -1;
       $373 = $132;
       HEAP32[$373>>2] = 0;
       $374 = HEAP32[$134>>2]|0;
       HEAP32[$153>>2] = $374;
       $135 = $153;
       HEAP32[$372>>2] = 0;
       $375 = ((($372)) + 4|0);
       $136 = $138;
       $137 = -1;
       $376 = $136;
       HEAP32[$376>>2] = 0;
       $377 = HEAP32[$138>>2]|0;
       HEAP32[$154>>2] = $377;
       $139 = $154;
       HEAP32[$375>>2] = 0;
       $378 = ((($372)) + 8|0);
       $140 = $142;
       $141 = -1;
       $379 = $140;
       HEAP32[$379>>2] = 0;
       $380 = HEAP32[$142>>2]|0;
       HEAP32[$155>>2] = $380;
       $143 = $155;
       $149 = $378;
       HEAP32[$150>>2] = 0;
       $381 = $149;
       $148 = $150;
       $382 = $148;
       $383 = HEAP32[$382>>2]|0;
       $146 = $381;
       HEAP32[$147>>2] = $383;
       $384 = $146;
       $145 = $384;
       $144 = $147;
       $385 = $144;
       $386 = HEAP32[$385>>2]|0;
       HEAP32[$384>>2] = $386;
       $387 = $217;
       $130 = $216;
       $131 = $387;
       $388 = $130;
       $389 = HEAP32[$388>>2]|0;
       $390 = $131;
       $391 = (($389) + (($390*12)|0)|0);
       $128 = $391;
       $129 = $218;
       $392 = $128;
       $393 = $129;
       $394 = ($392|0)!=($393|0);
       if ($394) {
        $395 = $129;
        $125 = $392;
        $126 = $395;
        $396 = $125;
        $397 = $126;
        ;HEAP8[$124>>0]=HEAP8[$127>>0]|0;
        $122 = $396;
        $123 = $397;
        $398 = $129;
        $399 = HEAP32[$398>>2]|0;
        $400 = $129;
        $401 = ((($400)) + 4|0);
        $402 = HEAP32[$401>>2]|0;
        __THREW__ = 0;
        invoke_viii(80,($392|0),($399|0),($402|0));
        $403 = __THREW__; __THREW__ = 0;
        $404 = $403&1;
        if ($404) {
         label = 27;
         break;
        }
       }
       __THREW__ = 0;
       invoke_vi(37,($218|0));
       $405 = __THREW__; __THREW__ = 0;
       $406 = $405&1;
       if ($406) {
        label = 26;
        break L25;
       }
       $407 = $217;
       $408 = (($407) + 1)|0;
       $217 = $408;
      }
      if ((label|0) == 27) {
       $411 = ___cxa_find_matching_catch_2()|0;
       $412 = tempRet0;
       $213 = $411;
       $214 = $412;
       __THREW__ = 0;
       invoke_vi(37,($218|0));
       $413 = __THREW__; __THREW__ = 0;
       $414 = $413&1;
       if (!($414)) {
        break;
       }
       $776 = ___cxa_find_matching_catch_3(0|0)|0;
       $777 = tempRet0;
       ___clang_call_terminate($776);
       // unreachable;
      }
      $415 = $203;
      $416 = $415&1;
      $417 = $416&1;
      HEAP8[10480] = $417;
      $219 = 0;
      while(1) {
       $418 = $219;
       $419 = $196;
       $420 = ($418|0)<($419|0);
       if (!($420)) {
        break;
       }
       $421 = $195;
       $422 = $219;
       $423 = (($422) + 0)|0;
       $424 = (($421) + ($423<<2)|0);
       $425 = HEAP32[$424>>2]|0;
       HEAP32[$220>>2] = $425;
       $426 = ((($220)) + 4|0);
       $427 = $195;
       $428 = $219;
       $429 = (($428) + 1)|0;
       $430 = (($427) + ($429<<2)|0);
       $431 = HEAP32[$430>>2]|0;
       HEAP32[$426>>2] = $431;
       $432 = ((($426)) + 4|0);
       $433 = $195;
       $434 = $219;
       $435 = (($434) + 2)|0;
       $436 = (($433) + ($435<<2)|0);
       $437 = HEAP32[$436>>2]|0;
       HEAP32[$432>>2] = $437;
       $221 = 0;
       while(1) {
        $438 = $221;
        $439 = ($438|0)<(3);
        if (!($439)) {
         break;
        }
        $440 = $221;
        $441 = (($220) + ($440<<2)|0);
        $442 = HEAP32[$441>>2]|0;
        $120 = $209;
        $121 = $442;
        $443 = $120;
        $444 = HEAP32[$443>>2]|0;
        $445 = $121;
        $446 = (($444) + ($445<<2)|0);
        $447 = HEAP32[$446>>2]|0;
        $222 = $447;
        $448 = $221;
        $449 = (($448) + 1)|0;
        $450 = (($449|0) % 3)&-1;
        $451 = (($220) + ($450<<2)|0);
        $452 = HEAP32[$451>>2]|0;
        $118 = $209;
        $119 = $452;
        $453 = $118;
        $454 = HEAP32[$453>>2]|0;
        $455 = $119;
        $456 = (($454) + ($455<<2)|0);
        $457 = HEAP32[$456>>2]|0;
        HEAP32[$223>>2] = $457;
        $458 = $222;
        $459 = ($458|0)!=(-1);
        $460 = HEAP32[$223>>2]|0;
        $461 = ($460|0)!=(-1);
        $or$cond = $459 & $461;
        do {
         if ($or$cond) {
          $462 = $222;
          $116 = $216;
          $117 = $462;
          $463 = $116;
          $464 = HEAP32[$463>>2]|0;
          $465 = $117;
          $466 = (($464) + (($465*12)|0)|0);
          $113 = $466;
          $114 = $223;
          $467 = $113;
          $468 = ((($467)) + 4|0);
          $469 = HEAP32[$468>>2]|0;
          $112 = $467;
          $470 = $112;
          $471 = ((($470)) + 8|0);
          $111 = $471;
          $472 = $111;
          $110 = $472;
          $473 = $110;
          $474 = HEAP32[$473>>2]|0;
          $475 = ($469|0)!=($474|0);
          if ($475) {
           $107 = $115;
           $108 = $467;
           $109 = 1;
           $101 = $467;
           $476 = $101;
           $477 = ((($476)) + 8|0);
           $100 = $477;
           $478 = $100;
           $99 = $478;
           $479 = $99;
           $480 = ((($467)) + 4|0);
           $481 = HEAP32[$480>>2]|0;
           $102 = $481;
           $482 = $102;
           $483 = $114;
           $103 = $479;
           $104 = $482;
           $105 = $483;
           $484 = $104;
           $485 = $105;
           $486 = HEAP32[$485>>2]|0;
           HEAP32[$484>>2] = $486;
           $106 = $115;
           $487 = ((($467)) + 4|0);
           $488 = HEAP32[$487>>2]|0;
           $489 = ((($488)) + 4|0);
           HEAP32[$487>>2] = $489;
           break;
          } else {
           $490 = $114;
           __THREW__ = 0;
           invoke_vii(25,($467|0),($490|0));
           $491 = __THREW__; __THREW__ = 0;
           $492 = $491&1;
           if ($492) {
            label = 26;
            break L25;
           } else {
            break;
           }
          }
         }
        } while(0);
        $493 = $221;
        $494 = (($493) + 1)|0;
        $221 = $494;
       }
       $495 = $219;
       $496 = (($495) + 3)|0;
       $219 = $496;
      }
      $497 = $199;
      $498 = $200;
      __THREW__ = 0;
      invoke_vii(82,($225|0),($216|0));
      $499 = __THREW__; __THREW__ = 0;
      $500 = $499&1;
      if ($500) {
       label = 26;
      } else {
       __THREW__ = 0;
       invoke_viiiii(83,($224|0),($497|0),($498|0),($209|0),($225|0));
       $501 = __THREW__; __THREW__ = 0;
       $502 = $501&1;
       if ($502) {
        $554 = ___cxa_find_matching_catch_2()|0;
        $555 = tempRet0;
        $213 = $554;
        $214 = $555;
        __THREW__ = 0;
        invoke_vi(84,($225|0));
        $556 = __THREW__; __THREW__ = 0;
        $557 = $556&1;
        if (!($557)) {
         break;
        }
        $776 = ___cxa_find_matching_catch_3(0|0)|0;
        $777 = tempRet0;
        ___clang_call_terminate($776);
        // unreachable;
       }
       __THREW__ = 0;
       invoke_vi(84,($225|0));
       $503 = __THREW__; __THREW__ = 0;
       $504 = $503&1;
       if ($504) {
        label = 26;
       } else {
        $505 = HEAP32[(10584)>>2]|0;
        $506 = HEAP32[(10584)>>2]|0;
        __THREW__ = 0;
        invoke_viii(61,($226|0),($505|0),($506|0));
        $507 = __THREW__; __THREW__ = 0;
        $508 = $507&1;
        L58: do {
         if ($508) {
          label = 53;
         } else {
          __THREW__ = 0;
          (invoke_iii(62,((10600)|0),($226|0))|0);
          $509 = __THREW__; __THREW__ = 0;
          $510 = $509&1;
          if ($510) {
           $560 = ___cxa_find_matching_catch_2()|0;
           $561 = tempRet0;
           $213 = $560;
           $214 = $561;
           __THREW__ = 0;
           invoke_vi(63,($226|0));
           $562 = __THREW__; __THREW__ = 0;
           $563 = $562&1;
           if (!($563)) {
            break;
           }
           $776 = ___cxa_find_matching_catch_3(0|0)|0;
           $777 = tempRet0;
           ___clang_call_terminate($776);
           // unreachable;
          }
          __THREW__ = 0;
          invoke_vi(63,($226|0));
          $511 = __THREW__; __THREW__ = 0;
          $512 = $511&1;
          if ($512) {
           label = 53;
          } else {
           $98 = $224;
           $513 = $98;
           $514 = HEAP32[$513>>2]|0;
           $95 = $513;
           $96 = $514;
           $515 = $96;
           $92 = $94;
           $93 = $515;
           $516 = $92;
           $517 = $93;
           HEAP32[$516>>2] = $517;
           $518 = HEAP32[$94>>2]|0;
           HEAP32[$97>>2] = $518;
           $519 = HEAP32[$97>>2]|0;
           HEAP32[$227>>2] = $519;
           $91 = $224;
           $520 = $91;
           $521 = ((($520)) + 4|0);
           $522 = HEAP32[$521>>2]|0;
           $88 = $520;
           $89 = $522;
           $523 = $89;
           $85 = $87;
           $86 = $523;
           $524 = $85;
           $525 = $86;
           HEAP32[$524>>2] = $525;
           $526 = HEAP32[$87>>2]|0;
           HEAP32[$90>>2] = $526;
           $527 = HEAP32[$90>>2]|0;
           HEAP32[$228>>2] = $527;
           __THREW__ = 0;
           invoke_viii(60,((10600)|0),($227|0),($228|0));
           $528 = __THREW__; __THREW__ = 0;
           $529 = $528&1;
           if ($529) {
            label = 53;
           } else {
            __THREW__ = 0;
            invoke_vii(85,($229|0),((10584)|0));
            $530 = __THREW__; __THREW__ = 0;
            $531 = $530&1;
            if ($531) {
             label = 53;
            } else {
             $230 = 0;
             $231 = 0;
             L67: while(1) {
              $532 = $231;
              $533 = ($532|0)<(3);
              if (!($533)) {
               label = 57;
               break;
              }
              $232 = 0;
              while(1) {
               $534 = $232;
               $535 = $200;
               $536 = ($534|0)<($535|0);
               if (!($536)) {
                break;
               }
               $537 = $197;
               $538 = $199;
               $539 = $232;
               $540 = (($538) + ($539<<2)|0);
               $541 = HEAP32[$540>>2]|0;
               $542 = ($541*3)|0;
               $543 = $231;
               $544 = (($542) + ($543))|0;
               $545 = (($537) + ($544<<3)|0);
               $546 = +HEAPF64[$545>>3];
               $547 = $230;
               $548 = (($547) + 1)|0;
               $230 = $548;
               __THREW__ = 0;
               $549 = (invoke_iii(43,($229|0),($547|0))|0);
               $550 = __THREW__; __THREW__ = 0;
               $551 = $550&1;
               if ($551) {
                label = 55;
                break L67;
               }
               HEAPF64[$549>>3] = $546;
               $552 = $232;
               $553 = (($552) + 1)|0;
               $232 = $553;
              }
              $566 = $231;
              $567 = (($566) + 1)|0;
              $231 = $567;
             }
             L75: do {
              if ((label|0) == 57) {
               __THREW__ = 0;
               invoke_viii(86,($233|0),((10600)|0),($229|0));
               $568 = __THREW__; __THREW__ = 0;
               $569 = $568&1;
               if ($569) {
                label = 55;
               } else {
                __THREW__ = 0;
                (invoke_iii(87,((10484)|0),($233|0))|0);
                $570 = __THREW__; __THREW__ = 0;
                $571 = $570&1;
                if ($571) {
                 label = 55;
                } else {
                 __THREW__ = 0;
                 $572 = (invoke_ii(88,((10484)|0))|0);
                 $573 = __THREW__; __THREW__ = 0;
                 $574 = $573&1;
                 if ($574) {
                  label = 55;
                 } else {
                  $575 = (($572|0) / 3)&-1;
                  HEAPF64[$235>>3] = 0.0;
                  __THREW__ = 0;
                  invoke_viii(89,($234|0),($575|0),($235|0));
                  $576 = __THREW__; __THREW__ = 0;
                  $577 = $576&1;
                  if ($577) {
                   label = 55;
                  } else {
                   $83 = (10640);
                   $84 = $234;
                   $578 = $83;
                   $579 = $84;
                   $580 = ($578|0)!=($579|0);
                   do {
                    if ($580) {
                     $581 = $84;
                     $80 = $578;
                     $81 = $581;
                     $582 = $80;
                     $583 = $81;
                     ;HEAP8[$79>>0]=HEAP8[$82>>0]|0;
                     $77 = $582;
                     $78 = $583;
                     $584 = $84;
                     $585 = HEAP32[$584>>2]|0;
                     $586 = $84;
                     $587 = ((($586)) + 4|0);
                     $588 = HEAP32[$587>>2]|0;
                     __THREW__ = 0;
                     invoke_viii(90,($578|0),($585|0),($588|0));
                     $589 = __THREW__; __THREW__ = 0;
                     $590 = $589&1;
                     if (!($590)) {
                      break;
                     }
                     $646 = ___cxa_find_matching_catch_2()|0;
                     $647 = tempRet0;
                     $213 = $646;
                     $214 = $647;
                     __THREW__ = 0;
                     invoke_vi(49,($234|0));
                     $648 = __THREW__; __THREW__ = 0;
                     $649 = $648&1;
                     if (!($649)) {
                      break L75;
                     }
                     $776 = ___cxa_find_matching_catch_3(0|0)|0;
                     $777 = tempRet0;
                     ___clang_call_terminate($776);
                     // unreachable;
                    }
                   } while(0);
                   __THREW__ = 0;
                   invoke_vi(49,($234|0));
                   $591 = __THREW__; __THREW__ = 0;
                   $592 = $591&1;
                   if ($592) {
                    label = 55;
                    break;
                   }
                   $236 = 0;
                   while(1) {
                    $593 = $236;
                    __THREW__ = 0;
                    $594 = (invoke_ii(88,((10484)|0))|0);
                    $595 = __THREW__; __THREW__ = 0;
                    $596 = $595&1;
                    if ($596) {
                     label = 55;
                     break L75;
                    }
                    $597 = (($594|0) / 3)&-1;
                    $598 = ($593|0)<($597|0);
                    if (!($598)) {
                     break;
                    }
                    $599 = $236;
                    $600 = HEAP32[(10584)>>2]|0;
                    $601 = (($600|0) / 3)&-1;
                    $602 = 0;
                    $603 = (($599) + ($602))|0;
                    __THREW__ = 0;
                    $604 = (invoke_iii(43,((10484)|0),($603|0))|0);
                    $605 = __THREW__; __THREW__ = 0;
                    $606 = $605&1;
                    if ($606) {
                     label = 55;
                     break L75;
                    }
                    $607 = +HEAPF64[$604>>3];
                    $237 = $607;
                    $608 = $236;
                    $609 = HEAP32[(10584)>>2]|0;
                    $610 = (($609|0) / 3)&-1;
                    $611 = $610;
                    $612 = (($608) + ($611))|0;
                    __THREW__ = 0;
                    $613 = (invoke_iii(43,((10484)|0),($612|0))|0);
                    $614 = __THREW__; __THREW__ = 0;
                    $615 = $614&1;
                    if ($615) {
                     label = 55;
                     break L75;
                    }
                    $616 = +HEAPF64[$613>>3];
                    $238 = $616;
                    $617 = $236;
                    $618 = HEAP32[(10584)>>2]|0;
                    $619 = (($618|0) / 3)&-1;
                    $620 = $619<<1;
                    $621 = (($617) + ($620))|0;
                    __THREW__ = 0;
                    $622 = (invoke_iii(43,((10484)|0),($621|0))|0);
                    $623 = __THREW__; __THREW__ = 0;
                    $624 = $623&1;
                    if ($624) {
                     label = 55;
                     break L75;
                    }
                    $625 = +HEAPF64[$622>>3];
                    $239 = $625;
                    $626 = $237;
                    $627 = $237;
                    $628 = $626 * $627;
                    $629 = $238;
                    $630 = $238;
                    $631 = $629 * $630;
                    $632 = $628 + $631;
                    $633 = $239;
                    $634 = $239;
                    $635 = $633 * $634;
                    $636 = $632 + $635;
                    $637 = (+Math_sqrt((+$636)));
                    $240 = $637;
                    $638 = $240;
                    $639 = $236;
                    $75 = (10640);
                    $76 = $639;
                    $640 = $75;
                    $641 = HEAP32[$640>>2]|0;
                    $642 = $76;
                    $643 = (($641) + ($642<<3)|0);
                    HEAPF64[$643>>3] = $638;
                    $644 = $236;
                    $645 = (($644) + 1)|0;
                    $236 = $645;
                   }
                   $74 = $241;
                   $650 = $74;
                   $70 = $650;
                   $651 = $70;
                   $69 = $651;
                   $50 = $52;
                   $51 = -1;
                   $652 = $50;
                   HEAP32[$652>>2] = 0;
                   $653 = HEAP32[$52>>2]|0;
                   HEAP32[$71>>2] = $653;
                   $53 = $71;
                   HEAP32[$651>>2] = 0;
                   $654 = ((($651)) + 4|0);
                   $54 = $56;
                   $55 = -1;
                   $655 = $54;
                   HEAP32[$655>>2] = 0;
                   $656 = HEAP32[$56>>2]|0;
                   HEAP32[$72>>2] = $656;
                   $57 = $72;
                   HEAP32[$654>>2] = 0;
                   $657 = ((($651)) + 8|0);
                   $58 = $60;
                   $59 = -1;
                   $658 = $58;
                   HEAP32[$658>>2] = 0;
                   $659 = HEAP32[$60>>2]|0;
                   HEAP32[$73>>2] = $659;
                   $61 = $73;
                   $67 = $657;
                   HEAP32[$68>>2] = 0;
                   $660 = $67;
                   $66 = $68;
                   $661 = $66;
                   $662 = HEAP32[$661>>2]|0;
                   $64 = $660;
                   HEAP32[$65>>2] = $662;
                   $663 = $64;
                   $63 = $663;
                   $62 = $65;
                   $664 = $62;
                   $665 = HEAP32[$664>>2]|0;
                   HEAP32[$663>>2] = $665;
                   $49 = $242;
                   $666 = $49;
                   $45 = $666;
                   $667 = $45;
                   $44 = $667;
                   $25 = $27;
                   $26 = -1;
                   $668 = $25;
                   HEAP32[$668>>2] = 0;
                   $669 = HEAP32[$27>>2]|0;
                   HEAP32[$46>>2] = $669;
                   $28 = $46;
                   HEAP32[$667>>2] = 0;
                   $670 = ((($667)) + 4|0);
                   $29 = $31;
                   $30 = -1;
                   $671 = $29;
                   HEAP32[$671>>2] = 0;
                   $672 = HEAP32[$31>>2]|0;
                   HEAP32[$47>>2] = $672;
                   $32 = $47;
                   HEAP32[$670>>2] = 0;
                   $673 = ((($667)) + 8|0);
                   $33 = $35;
                   $34 = -1;
                   $674 = $33;
                   HEAP32[$674>>2] = 0;
                   $675 = HEAP32[$35>>2]|0;
                   HEAP32[$48>>2] = $675;
                   $36 = $48;
                   $42 = $673;
                   HEAP32[$43>>2] = 0;
                   $676 = $42;
                   $41 = $43;
                   $677 = $41;
                   $678 = HEAP32[$677>>2]|0;
                   $39 = $676;
                   HEAP32[$40>>2] = $678;
                   $679 = $39;
                   $38 = $679;
                   $37 = $40;
                   $680 = $37;
                   $681 = HEAP32[$680>>2]|0;
                   HEAP32[$679>>2] = $681;
                   $682 = $203;
                   $683 = $682&1;
                   L95: do {
                    if ($683) {
                     $684 = $197;
                     $685 = $199;
                     $686 = $200;
                     $687 = $201;
                     __THREW__ = 0;
                     invoke_vii(82,($244|0),($216|0));
                     $688 = __THREW__; __THREW__ = 0;
                     $689 = $688&1;
                     if ($689) {
                      label = 80;
                      break;
                     }
                     __THREW__ = 0;
                     invoke_viiiiiiiiii(91,($243|0),($684|0),((10484)|0),($685|0),($686|0),($687|0),((10588)|0),($209|0),($244|0),($242|0));
                     $690 = __THREW__; __THREW__ = 0;
                     $691 = $690&1;
                     L98: do {
                      if ($691) {
                       label = 81;
                      } else {
                       $23 = $241;
                       $24 = $243;
                       $692 = $23;
                       $693 = $24;
                       $694 = ($692|0)!=($693|0);
                       do {
                        if ($694) {
                         $695 = $24;
                         $20 = $692;
                         $21 = $695;
                         $696 = $20;
                         $697 = $21;
                         ;HEAP8[$19>>0]=HEAP8[$22>>0]|0;
                         $17 = $696;
                         $18 = $697;
                         $698 = $24;
                         $699 = HEAP32[$698>>2]|0;
                         $700 = $24;
                         $701 = ((($700)) + 4|0);
                         $702 = HEAP32[$701>>2]|0;
                         __THREW__ = 0;
                         invoke_viii(59,($692|0),($699|0),($702|0));
                         $703 = __THREW__; __THREW__ = 0;
                         $704 = $703&1;
                         if (!($704)) {
                          break;
                         }
                         $715 = ___cxa_find_matching_catch_2()|0;
                         $716 = tempRet0;
                         $213 = $715;
                         $214 = $716;
                         __THREW__ = 0;
                         invoke_vi(48,($243|0));
                         $717 = __THREW__; __THREW__ = 0;
                         $718 = $717&1;
                         if (!($718)) {
                          break L98;
                         }
                         $776 = ___cxa_find_matching_catch_3(0|0)|0;
                         $777 = tempRet0;
                         ___clang_call_terminate($776);
                         // unreachable;
                        }
                       } while(0);
                       __THREW__ = 0;
                       invoke_vi(48,($243|0));
                       $705 = __THREW__; __THREW__ = 0;
                       $706 = $705&1;
                       if ($706) {
                        label = 81;
                        break;
                       }
                       __THREW__ = 0;
                       invoke_vi(84,($244|0));
                       $707 = __THREW__; __THREW__ = 0;
                       $708 = $707&1;
                       if ($708) {
                        label = 80;
                        break L95;
                       } else {
                        label = 86;
                        break L95;
                       }
                      }
                     } while(0);
                     if ((label|0) == 81) {
                      $713 = ___cxa_find_matching_catch_2()|0;
                      $714 = tempRet0;
                      $213 = $713;
                      $214 = $714;
                     }
                     __THREW__ = 0;
                     invoke_vi(84,($244|0));
                     $719 = __THREW__; __THREW__ = 0;
                     $720 = $719&1;
                     if (!($720)) {
                      label = 94;
                      break;
                     }
                     $776 = ___cxa_find_matching_catch_3(0|0)|0;
                     $777 = tempRet0;
                     ___clang_call_terminate($776);
                     // unreachable;
                    } else {
                     $15 = $241;
                     $16 = $224;
                     $721 = $15;
                     $722 = $16;
                     $723 = ($721|0)!=($722|0);
                     if (!($723)) {
                      label = 86;
                      break;
                     }
                     $724 = $16;
                     $12 = $721;
                     $13 = $724;
                     $725 = $12;
                     $726 = $13;
                     ;HEAP8[$11>>0]=HEAP8[$14>>0]|0;
                     $9 = $725;
                     $10 = $726;
                     $727 = $16;
                     $728 = HEAP32[$727>>2]|0;
                     $729 = $16;
                     $730 = ((($729)) + 4|0);
                     $731 = HEAP32[$730>>2]|0;
                     __THREW__ = 0;
                     invoke_viii(59,($721|0),($728|0),($731|0));
                     $732 = __THREW__; __THREW__ = 0;
                     $733 = $732&1;
                     if ($733) {
                      label = 80;
                     } else {
                      label = 86;
                     }
                    }
                   } while(0);
                   do {
                    if ((label|0) == 86) {
                     $734 = $199;
                     $735 = $200;
                     $736 = $201;
                     $737 = $202;
                     $738 = HEAP32[(10584)>>2]|0;
                     $739 = HEAP32[(10580)>>2]|0;
                     __THREW__ = 0;
                     $740 = (invoke_iiiiiiiiiii(92,($241|0),($734|0),($735|0),($736|0),($737|0),($738|0),($739|0),($209|0),0,((10492)|0))|0);
                     $741 = __THREW__; __THREW__ = 0;
                     $742 = $741&1;
                     if ($742) {
                      label = 80;
                      break;
                     }
                     HEAP32[(10564)>>2] = $740;
                     $743 = $199;
                     $744 = $200;
                     $745 = $201;
                     $746 = $202;
                     $747 = HEAP32[(10584)>>2]|0;
                     $748 = HEAP32[(10580)>>2]|0;
                     __THREW__ = 0;
                     $749 = (invoke_iiiiiiiiiii(92,($224|0),($743|0),($744|0),($745|0),($746|0),($747|0),($748|0),($209|0),1,((10528)|0))|0);
                     $750 = __THREW__; __THREW__ = 0;
                     $751 = $750&1;
                     if ($751) {
                      label = 80;
                      break;
                     }
                     HEAP32[(10568)>>2] = $749;
                     __THREW__ = 0;
                     invoke_vi(93,($242|0));
                     $752 = __THREW__; __THREW__ = 0;
                     $753 = $752&1;
                     if ($753) {
                      $709 = ___cxa_find_matching_catch_2()|0;
                      $710 = tempRet0;
                      $213 = $709;
                      $214 = $710;
                      break;
                     }
                     __THREW__ = 0;
                     invoke_vi(48,($241|0));
                     $754 = __THREW__; __THREW__ = 0;
                     $755 = $754&1;
                     if ($755) {
                      label = 55;
                      break L75;
                     }
                     __THREW__ = 0;
                     invoke_vi(44,($229|0));
                     $756 = __THREW__; __THREW__ = 0;
                     $757 = $756&1;
                     if ($757) {
                      label = 53;
                      break L58;
                     }
                     __THREW__ = 0;
                     invoke_vi(48,($224|0));
                     $758 = __THREW__; __THREW__ = 0;
                     $759 = $758&1;
                     if ($759) {
                      label = 26;
                      break L25;
                     }
                     __THREW__ = 0;
                     invoke_vi(84,($216|0));
                     $760 = __THREW__; __THREW__ = 0;
                     $761 = $760&1;
                     if ($761) {
                      label = 17;
                      break L13;
                     }
                     __ZNSt3__26vectorIiNS_9allocatorIiEEED2Ev($209);
                     STACKTOP = sp;return;
                    }
                   } while(0);
                   if ((label|0) == 80) {
                    $711 = ___cxa_find_matching_catch_2()|0;
                    $712 = tempRet0;
                    $213 = $711;
                    $214 = $712;
                    label = 94;
                   }
                   do {
                    if ((label|0) == 94) {
                     __THREW__ = 0;
                     invoke_vi(93,($242|0));
                     $762 = __THREW__; __THREW__ = 0;
                     $763 = $762&1;
                     if (!($763)) {
                      break;
                     }
                     $776 = ___cxa_find_matching_catch_3(0|0)|0;
                     $777 = tempRet0;
                     ___clang_call_terminate($776);
                     // unreachable;
                    }
                   } while(0);
                   __THREW__ = 0;
                   invoke_vi(48,($241|0));
                   $764 = __THREW__; __THREW__ = 0;
                   $765 = $764&1;
                   if (!($765)) {
                    break;
                   }
                   $776 = ___cxa_find_matching_catch_3(0|0)|0;
                   $777 = tempRet0;
                   ___clang_call_terminate($776);
                   // unreachable;
                  }
                 }
                }
               }
              }
             } while(0);
             if ((label|0) == 55) {
              $564 = ___cxa_find_matching_catch_2()|0;
              $565 = tempRet0;
              $213 = $564;
              $214 = $565;
             }
             __THREW__ = 0;
             invoke_vi(44,($229|0));
             $766 = __THREW__; __THREW__ = 0;
             $767 = $766&1;
             if ($767) {
              $776 = ___cxa_find_matching_catch_3(0|0)|0;
              $777 = tempRet0;
              ___clang_call_terminate($776);
              // unreachable;
             }
            }
           }
          }
         }
        } while(0);
        if ((label|0) == 53) {
         $558 = ___cxa_find_matching_catch_2()|0;
         $559 = tempRet0;
         $213 = $558;
         $214 = $559;
        }
        __THREW__ = 0;
        invoke_vi(48,($224|0));
        $768 = __THREW__; __THREW__ = 0;
        $769 = $768&1;
        if ($769) {
         $776 = ___cxa_find_matching_catch_3(0|0)|0;
         $777 = tempRet0;
         ___clang_call_terminate($776);
         // unreachable;
        }
       }
      }
     }
    } while(0);
    if ((label|0) == 26) {
     $409 = ___cxa_find_matching_catch_2()|0;
     $410 = tempRet0;
     $213 = $409;
     $214 = $410;
    }
    __THREW__ = 0;
    invoke_vi(84,($216|0));
    $770 = __THREW__; __THREW__ = 0;
    $771 = $770&1;
    if ($771) {
     $776 = ___cxa_find_matching_catch_3(0|0)|0;
     $777 = tempRet0;
     ___clang_call_terminate($776);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 17) {
  $336 = ___cxa_find_matching_catch_2()|0;
  $337 = tempRet0;
  $213 = $336;
  $214 = $337;
 }
 __THREW__ = 0;
 invoke_vi(37,($209|0));
 $772 = __THREW__; __THREW__ = 0;
 $773 = $772&1;
 if ($773) {
  $776 = ___cxa_find_matching_catch_3(0|0)|0;
  $777 = tempRet0;
  ___clang_call_terminate($776);
  // unreachable;
 } else {
  $774 = $213;
  $775 = $214;
  ___resumeException($774|0);
  // unreachable;
 }
}
function __ZNSt3__26vectorIiNS_9allocatorIiEEEC2EjRKi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $18 = sp + 176|0;
 $21 = sp + 104|0;
 $25 = sp + 88|0;
 $29 = sp + 72|0;
 $34 = sp + 52|0;
 $37 = sp + 40|0;
 $40 = sp + 28|0;
 $41 = sp + 24|0;
 $42 = sp + 20|0;
 $43 = $0;
 $44 = $1;
 $45 = $2;
 $48 = $43;
 $39 = $48;
 $49 = $39;
 $38 = $49;
 $19 = $21;
 $20 = -1;
 $50 = $19;
 HEAP32[$50>>2] = 0;
 $51 = HEAP32[$21>>2]|0;
 HEAP32[$40>>2] = $51;
 $22 = $40;
 HEAP32[$49>>2] = 0;
 $52 = ((($49)) + 4|0);
 $23 = $25;
 $24 = -1;
 $53 = $23;
 HEAP32[$53>>2] = 0;
 $54 = HEAP32[$25>>2]|0;
 HEAP32[$41>>2] = $54;
 $26 = $41;
 HEAP32[$52>>2] = 0;
 $55 = ((($49)) + 8|0);
 $27 = $29;
 $28 = -1;
 $56 = $27;
 HEAP32[$56>>2] = 0;
 $57 = HEAP32[$29>>2]|0;
 HEAP32[$42>>2] = $57;
 $30 = $42;
 $36 = $55;
 HEAP32[$37>>2] = 0;
 $58 = $36;
 $35 = $37;
 $59 = $35;
 $60 = HEAP32[$59>>2]|0;
 $33 = $58;
 HEAP32[$34>>2] = $60;
 $61 = $33;
 $32 = $61;
 $31 = $34;
 $62 = $31;
 $63 = HEAP32[$62>>2]|0;
 HEAP32[$61>>2] = $63;
 $64 = $44;
 $65 = ($64>>>0)>(0);
 if (!($65)) {
  STACKTOP = sp;return;
 }
 $66 = $44;
 __THREW__ = 0;
 invoke_vii(94,($48|0),($66|0));
 $67 = __THREW__; __THREW__ = 0;
 $68 = $67&1;
 if ($68) {
  $91 = ___cxa_find_matching_catch_2()|0;
  $92 = tempRet0;
  $46 = $91;
  $47 = $92;
  __THREW__ = 0;
  invoke_vi(95,($48|0));
  $93 = __THREW__; __THREW__ = 0;
  $94 = $93&1;
  if ($94) {
   $97 = ___cxa_find_matching_catch_3(0|0)|0;
   $98 = tempRet0;
   ___clang_call_terminate($97);
   // unreachable;
  } else {
   $95 = $46;
   $96 = $47;
   ___resumeException($95|0);
   // unreachable;
  }
 } else {
  $69 = $44;
  $70 = $45;
  $14 = $48;
  $15 = $69;
  $16 = $70;
  $71 = $14;
  $13 = $71;
  $72 = $13;
  $73 = ((($72)) + 8|0);
  $12 = $73;
  $74 = $12;
  $11 = $74;
  $75 = $11;
  $17 = $75;
  while(1) {
   $3 = $18;
   $4 = $71;
   $5 = 1;
   $76 = $17;
   $77 = ((($71)) + 4|0);
   $78 = HEAP32[$77>>2]|0;
   $6 = $78;
   $79 = $6;
   $80 = $16;
   $7 = $76;
   $8 = $79;
   $9 = $80;
   $81 = $8;
   $82 = $9;
   $83 = HEAP32[$82>>2]|0;
   HEAP32[$81>>2] = $83;
   $84 = ((($71)) + 4|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = ((($85)) + 4|0);
   HEAP32[$84>>2] = $86;
   $87 = $15;
   $88 = (($87) + -1)|0;
   $15 = $88;
   $10 = $18;
   $89 = $15;
   $90 = ($89>>>0)>(0);
   if (!($90)) {
    break;
   }
  }
  STACKTOP = sp;return;
 }
}
function __ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE6resizeEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $6 = sp;
 $9 = sp + 176|0;
 $44 = $0;
 $45 = $1;
 $47 = $44;
 $43 = $47;
 $48 = $43;
 $49 = ((($48)) + 4|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = HEAP32[$48>>2]|0;
 $52 = $50;
 $53 = $51;
 $54 = (($52) - ($53))|0;
 $55 = (($54|0) / 12)&-1;
 $46 = $55;
 $56 = $46;
 $57 = $45;
 $58 = ($56>>>0)<($57>>>0);
 if ($58) {
  $59 = $45;
  $60 = $46;
  $61 = (($59) - ($60))|0;
  __ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEj($47,$61);
  STACKTOP = sp;return;
 }
 $62 = $46;
 $63 = $45;
 $64 = ($62>>>0)>($63>>>0);
 if (!($64)) {
  STACKTOP = sp;return;
 }
 $65 = HEAP32[$47>>2]|0;
 $66 = $45;
 $67 = (($65) + (($66*12)|0)|0);
 $40 = $47;
 $41 = $67;
 $68 = $40;
 $69 = $41;
 $38 = $68;
 $39 = $69;
 $2 = $68;
 $70 = $2;
 $71 = ((($70)) + 4|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = HEAP32[$70>>2]|0;
 $74 = $72;
 $75 = $73;
 $76 = (($74) - ($75))|0;
 $77 = (($76|0) / 12)&-1;
 $42 = $77;
 $78 = $41;
 $13 = $68;
 $14 = $78;
 $79 = $13;
 while(1) {
  $80 = $14;
  $81 = ((($79)) + 4|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = ($80|0)!=($82|0);
  if (!($83)) {
   break;
  }
  $12 = $79;
  $84 = $12;
  $85 = ((($84)) + 8|0);
  $11 = $85;
  $86 = $11;
  $10 = $86;
  $87 = $10;
  $88 = ((($79)) + 4|0);
  $89 = HEAP32[$88>>2]|0;
  $90 = ((($89)) + -12|0);
  HEAP32[$88>>2] = $90;
  $3 = $90;
  $91 = $3;
  $7 = $87;
  $8 = $91;
  $92 = $7;
  $93 = $8;
  ;HEAP8[$6>>0]=HEAP8[$9>>0]|0;
  $4 = $92;
  $5 = $93;
  $94 = $5;
  __THREW__ = 0;
  invoke_vi(37,($94|0));
  $95 = __THREW__; __THREW__ = 0;
  $96 = $95&1;
  if ($96) {
   label = 7;
   break;
  }
 }
 if ((label|0) == 7) {
  $97 = ___cxa_find_matching_catch_2()|0;
  $98 = tempRet0;
  $15 = $97;
  $16 = $98;
  $99 = $15;
  ___cxa_call_unexpected(($99|0));
  // unreachable;
 }
 $100 = $42;
 $36 = $68;
 $37 = $100;
 $101 = $36;
 $35 = $101;
 $102 = $35;
 $103 = HEAP32[$102>>2]|0;
 $34 = $103;
 $104 = $34;
 $18 = $101;
 $105 = $18;
 $106 = HEAP32[$105>>2]|0;
 $17 = $106;
 $107 = $17;
 $23 = $101;
 $108 = $23;
 $22 = $108;
 $109 = $22;
 $21 = $109;
 $110 = $21;
 $111 = ((($110)) + 8|0);
 $20 = $111;
 $112 = $20;
 $19 = $112;
 $113 = $19;
 $114 = HEAP32[$113>>2]|0;
 $115 = HEAP32[$109>>2]|0;
 $116 = $114;
 $117 = $115;
 $118 = (($116) - ($117))|0;
 $119 = (($118|0) / 12)&-1;
 $120 = (($107) + (($119*12)|0)|0);
 $25 = $101;
 $121 = $25;
 $122 = HEAP32[$121>>2]|0;
 $24 = $122;
 $123 = $24;
 $124 = $37;
 $125 = (($123) + (($124*12)|0)|0);
 $27 = $101;
 $126 = $27;
 $127 = HEAP32[$126>>2]|0;
 $26 = $127;
 $128 = $26;
 $28 = $101;
 $129 = $28;
 $130 = ((($129)) + 4|0);
 $131 = HEAP32[$130>>2]|0;
 $132 = HEAP32[$129>>2]|0;
 $133 = $131;
 $134 = $132;
 $135 = (($133) - ($134))|0;
 $136 = (($135|0) / 12)&-1;
 $137 = (($128) + (($136*12)|0)|0);
 $29 = $101;
 $30 = $104;
 $31 = $120;
 $32 = $125;
 $33 = $137;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $5 = sp + 152|0;
 $9 = sp + 136|0;
 $13 = sp + 120|0;
 $19 = sp + 96|0;
 $20 = sp + 16|0;
 $23 = sp + 84|0;
 $24 = sp + 171|0;
 $25 = sp + 8|0;
 $29 = sp + 68|0;
 $30 = sp + 64|0;
 $31 = sp + 60|0;
 $32 = sp + 170|0;
 $34 = sp;
 $36 = sp + 169|0;
 $42 = sp + 168|0;
 $40 = $0;
 $41 = $1;
 $46 = $40;
 $47 = $41;
 $39 = $47;
 $48 = $39;
 $49 = ((($48)) + 8|0);
 $38 = $49;
 $50 = $38;
 $37 = $50;
 $51 = $37;
 $35 = $51;
 $52 = $35;
 ;HEAP8[$34>>0]=HEAP8[$36>>0]|0;
 $33 = $52;
 $27 = $46;
 $28 = $42;
 $53 = $27;
 $26 = $53;
 $3 = $5;
 $4 = -1;
 $54 = $3;
 HEAP32[$54>>2] = 0;
 $55 = HEAP32[$5>>2]|0;
 HEAP32[$29>>2] = $55;
 $6 = $29;
 HEAP32[$53>>2] = 0;
 $56 = ((($53)) + 4|0);
 $7 = $9;
 $8 = -1;
 $57 = $7;
 HEAP32[$57>>2] = 0;
 $58 = HEAP32[$9>>2]|0;
 HEAP32[$30>>2] = $58;
 $10 = $30;
 HEAP32[$56>>2] = 0;
 $59 = ((($53)) + 8|0);
 $11 = $13;
 $12 = -1;
 $60 = $11;
 HEAP32[$60>>2] = 0;
 $61 = HEAP32[$13>>2]|0;
 HEAP32[$31>>2] = $61;
 $14 = $31;
 ;HEAP8[$25>>0]=HEAP8[$32>>0]|0;
 $22 = $59;
 HEAP32[$23>>2] = 0;
 $62 = $22;
 $21 = $23;
 $63 = $21;
 $64 = HEAP32[$63>>2]|0;
 $15 = $25;
 ;HEAP8[$20>>0]=HEAP8[$24>>0]|0;
 $18 = $62;
 HEAP32[$19>>2] = $64;
 $65 = $18;
 $17 = $20;
 $16 = $19;
 $66 = $16;
 $67 = HEAP32[$66>>2]|0;
 HEAP32[$65>>2] = $67;
 $68 = $41;
 $2 = $68;
 $69 = $2;
 $70 = ((($69)) + 4|0);
 $71 = HEAP32[$70>>2]|0;
 $72 = HEAP32[$69>>2]|0;
 $73 = $71;
 $74 = $72;
 $75 = (($73) - ($74))|0;
 $76 = (($75|0) / 12)&-1;
 $43 = $76;
 $77 = $43;
 $78 = ($77>>>0)>(0);
 if (!($78)) {
  STACKTOP = sp;return;
 }
 $79 = $43;
 __THREW__ = 0;
 invoke_vii(96,($46|0),($79|0));
 $80 = __THREW__; __THREW__ = 0;
 $81 = $80&1;
 if (!($81)) {
  $82 = $41;
  $83 = HEAP32[$82>>2]|0;
  $84 = $41;
  $85 = ((($84)) + 4|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = $43;
  __THREW__ = 0;
  invoke_viiii(97,($46|0),($83|0),($86|0),($87|0));
  $88 = __THREW__; __THREW__ = 0;
  $89 = $88&1;
  if (!($89)) {
   STACKTOP = sp;return;
  }
 }
 $90 = ___cxa_find_matching_catch_2()|0;
 $91 = tempRet0;
 $44 = $90;
 $45 = $91;
 __THREW__ = 0;
 invoke_vi(98,($46|0));
 $92 = __THREW__; __THREW__ = 0;
 $93 = $92&1;
 if ($93) {
  $96 = ___cxa_find_matching_catch_3(0|0)|0;
  $97 = tempRet0;
  ___clang_call_terminate($96);
  // unreachable;
 } else {
  $94 = $44;
  $95 = $45;
  ___resumeException($94|0);
  // unreachable;
 }
}
function __ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__213__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEC2IiEERKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2Ev($6);
 __THREW__ = 0;
 invoke_v(99);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  $9 = $3;
  $10 = HEAP32[$9>>2]|0;
  __THREW__ = 0;
  invoke_viii(100,($6|0),($10|0),(0|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $4 = $13;
 $5 = $14;
 __THREW__ = 0;
 invoke_vi(101,($6|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $4;
  $18 = $5;
  ___resumeException($17|0);
  // unreachable;
 }
}
function __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEEmlINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_7ProductIS2_T_Li0EEERKNS_10MatrixBaseIS8_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($5)|0);
 $7 = $4;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($7)|0);
 __ZN5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EEC2ERKS2_RKS4_($0,$6,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEaSINS_7ProductINS_12SparseMatrixIdLi0EiEES1_Li0EEEEERS1_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4_setINS_7ProductINS_12SparseMatrixIdLi0EiEES2_Li0EEEEERS2_RKNS_9DenseBaseIT_EE($4,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNSt3__26vectorIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__213__vector_baseIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9allocatorIS3_EEED2Ev($2);
 STACKTOP = sp;return;
}
function _doDeform($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0.0, $$sink2 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0.0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0.0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0.0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0.0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0.0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0.0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0.0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0.0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0.0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0.0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0.0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0.0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0.0, $337 = 0.0, $338 = 0.0, $339 = 0.0, $34 = 0, $340 = 0.0, $341 = 0.0, $342 = 0.0, $343 = 0.0, $344 = 0.0, $345 = 0.0, $346 = 0.0, $347 = 0.0, $348 = 0.0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0.0, $355 = 0.0, $356 = 0.0, $357 = 0.0, $358 = 0.0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0.0, $368 = 0.0, $369 = 0;
 var $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0.0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0.0, $387 = 0.0;
 var $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0.0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0;
 var $405 = 0.0, $406 = 0.0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0;
 var $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0.0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0;
 var $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0;
 var $46 = 0, $460 = 0.0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0;
 var $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0.0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0;
 var $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0;
 var $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0;
 var $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(416|0);
 $vararg_buffer6 = sp + 64|0;
 $vararg_buffer3 = sp + 56|0;
 $vararg_buffer = sp + 48|0;
 $44 = sp + 240|0;
 $45 = sp + 232|0;
 $47 = sp + 216|0;
 $48 = sp + 208|0;
 $54 = sp + 176|0;
 $55 = sp + 168|0;
 $56 = sp + 152|0;
 $58 = sp + 136|0;
 $69 = sp + 112|0;
 $70 = sp + 104|0;
 $72 = sp + 88|0;
 $73 = sp + 80|0;
 $35 = $0;
 $36 = $1;
 $37 = $2;
 $76 = $36;
 HEAP32[$vararg_buffer>>2] = $76;
 (_printf(1043,$vararg_buffer)|0);
 $38 = 0;
 while(1) {
  $77 = $38;
  $78 = ($77|0)<(20);
  if (!($78)) {
   break;
  }
  $79 = $35;
  $80 = $38;
  $81 = (($79) + ($80<<3)|0);
  $82 = +HEAPF64[$81>>3];
  HEAPF64[$vararg_buffer3>>3] = $82;
  (_printf(968,$vararg_buffer3)|0);
  $83 = $38;
  $84 = (($83) + 1)|0;
  $38 = $84;
 }
 (_printf(952,$vararg_buffer6)|0);
 $85 = HEAP8[10448]|0;
 $86 = ($85<<24>>24)==(0);
 do {
  if ($86) {
   $87 = (___cxa_guard_acquire(10448)|0);
   $88 = ($87|0)!=(0);
   if ($88) {
    __THREW__ = 0;
    invoke_vii(85,(10652|0),((10580)|0));
    $89 = __THREW__; __THREW__ = 0;
    $90 = $89&1;
    if (!($90)) {
     (___cxa_atexit((44|0),(10652|0),(___dso_handle|0))|0);
     break;
    }
    $110 = ___cxa_find_matching_catch_2()|0;
    $111 = tempRet0;
    $39 = $110;
    $40 = $111;
    $532 = $39;
    $533 = $40;
    ___resumeException($532|0);
    // unreachable;
   }
  }
 } while(0);
 $91 = HEAP8[10456]|0;
 $92 = ($91<<24>>24)==(0);
 do {
  if ($92) {
   $93 = (___cxa_guard_acquire(10456)|0);
   $94 = ($93|0)!=(0);
   if ($94) {
    __THREW__ = 0;
    invoke_vii(85,(10660|0),((10584)|0));
    $95 = __THREW__; __THREW__ = 0;
    $96 = $95&1;
    if (!($96)) {
     (___cxa_atexit((44|0),(10660|0),(___dso_handle|0))|0);
     break;
    }
    $112 = ___cxa_find_matching_catch_2()|0;
    $113 = tempRet0;
    $39 = $112;
    $40 = $113;
    $532 = $39;
    $533 = $40;
    ___resumeException($532|0);
    // unreachable;
   }
  }
 } while(0);
 $97 = HEAP8[10464]|0;
 $98 = ($97<<24>>24)==(0);
 do {
  if ($98) {
   $99 = (___cxa_guard_acquire(10464)|0);
   $100 = ($99|0)!=(0);
   if ($100) {
    __THREW__ = 0;
    invoke_vii(85,(10668|0),((10584)|0));
    $101 = __THREW__; __THREW__ = 0;
    $102 = $101&1;
    if (!($102)) {
     (___cxa_atexit((44|0),(10668|0),(___dso_handle|0))|0);
     break;
    }
    $114 = ___cxa_find_matching_catch_2()|0;
    $115 = tempRet0;
    $39 = $114;
    $40 = $115;
    $532 = $39;
    $533 = $40;
    ___resumeException($532|0);
    // unreachable;
   }
  }
 } while(0);
 $41 = 0;
 $42 = 0;
 while(1) {
  $103 = $42;
  $104 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4sizeEv((10484))|0);
  $105 = ($103|0)<($104|0);
  if (!($105)) {
   break;
  }
  $106 = HEAP8[10480]|0;
  $107 = $106&1;
  if ($107) {
   $108 = $41;
   $109 = (($108) + 1)|0;
   $41 = $109;
   $$sink = 0.0;$$sink2 = $108;
  } else {
   $116 = $42;
   $117 = (__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1EEixEi((10484),$116)|0);
   $118 = +HEAPF64[$117>>3];
   $119 = $41;
   $120 = (($119) + 1)|0;
   $41 = $120;
   $$sink = $118;$$sink2 = $119;
  }
  $121 = (__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1EEixEi(10652,$$sink2)|0);
  HEAPF64[$121>>3] = $$sink;
  $122 = $42;
  $123 = (($122) + 1)|0;
  $42 = $123;
 }
 $43 = 0;
 while(1) {
  $124 = $43;
  $125 = $36;
  $126 = ($124|0)<($125|0);
  if (!($126)) {
   break;
  }
  $127 = $35;
  $128 = $43;
  $129 = ($128*3)|0;
  $130 = (($129) + 0)|0;
  $131 = (($127) + ($130<<3)|0);
  $132 = +HEAPF64[$131>>3];
  $133 = $41;
  $134 = (($133) + 1)|0;
  $41 = $134;
  $135 = (__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1EEixEi(10652,$133)|0);
  HEAPF64[$135>>3] = $132;
  $136 = $35;
  $137 = $43;
  $138 = ($137*3)|0;
  $139 = (($138) + 1)|0;
  $140 = (($136) + ($139<<3)|0);
  $141 = +HEAPF64[$140>>3];
  $142 = $41;
  $143 = (($142) + 1)|0;
  $41 = $143;
  $144 = (__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1EEixEi(10652,$142)|0);
  HEAPF64[$144>>3] = $141;
  $145 = $35;
  $146 = $43;
  $147 = ($146*3)|0;
  $148 = (($147) + 2)|0;
  $149 = (($145) + ($148<<3)|0);
  $150 = +HEAPF64[$149>>3];
  $151 = $41;
  $152 = (($151) + 1)|0;
  $41 = $152;
  $153 = (__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1EEixEi(10652,$151)|0);
  HEAPF64[$153>>3] = $150;
  $154 = $43;
  $155 = (($154) + 1)|0;
  $43 = $155;
 }
 __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEEmlINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_7ProductIS2_T_Li0EEERKNS_10MatrixBaseIS8_EE($45,(10492),10652);
 __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEC2INS_7ProductINS_12SparseMatrixIdLi0EiEES1_Li0EEEEERKNS_9EigenBaseIT_EE($44,$45);
 $46 = 0;
 while(1) {
  $156 = $46;
  __THREW__ = 0;
  $157 = (invoke_ii(88,($44|0))|0);
  $158 = __THREW__; __THREW__ = 0;
  $159 = $158&1;
  if ($159) {
   label = 34;
   break;
  }
  $160 = ($156|0)<($157|0);
  if (!($160)) {
   label = 35;
   break;
  }
  $161 = $46;
  __THREW__ = 0;
  $162 = (invoke_iii(43,($44|0),($161|0))|0);
  $163 = __THREW__; __THREW__ = 0;
  $164 = $163&1;
  if ($164) {
   label = 34;
   break;
  }
  $165 = +HEAPF64[$162>>3];
  $166 = $46;
  __THREW__ = 0;
  $167 = (invoke_iii(43,(10660|0),($166|0))|0);
  $168 = __THREW__; __THREW__ = 0;
  $169 = $168&1;
  if ($169) {
   label = 34;
   break;
  }
  HEAPF64[$167>>3] = $165;
  $170 = $46;
  $171 = (($170) + 1)|0;
  $46 = $171;
 }
 L47: do {
  if ((label|0) == 35) {
   $174 = HEAP32[(10564)>>2]|0;
   __THREW__ = 0;
   invoke_viii(102,($48|0),($174|0),(10660|0));
   $175 = __THREW__; __THREW__ = 0;
   $176 = $175&1;
   if ($176) {
    label = 34;
   } else {
    __THREW__ = 0;
    invoke_vii(103,($47|0),($48|0));
    $177 = __THREW__; __THREW__ = 0;
    $178 = $177&1;
    if ($178) {
     label = 34;
    } else {
     $49 = 0;
     L51: while(1) {
      $179 = $49;
      $180 = ($179|0)<(3);
      if (!($180)) {
       label = 45;
       break;
      }
      $50 = 0;
      while(1) {
       $181 = $50;
       $182 = HEAP32[(10576)>>2]|0;
       $183 = ($181|0)<($182|0);
       if (!($183)) {
        break;
       }
       $184 = $50;
       $185 = $49;
       $186 = HEAP32[(10584)>>2]|0;
       $187 = (($186|0) / 3)&-1;
       $188 = Math_imul($185, $187)|0;
       $189 = (($184) + ($188))|0;
       __THREW__ = 0;
       $190 = (invoke_iii(43,($47|0),($189|0))|0);
       $191 = __THREW__; __THREW__ = 0;
       $192 = $191&1;
       if ($192) {
        label = 43;
        break L51;
       }
       $193 = +HEAPF64[$190>>3];
       $194 = $37;
       $195 = $50;
       $33 = (10588);
       $34 = $195;
       $196 = $33;
       $197 = HEAP32[$196>>2]|0;
       $198 = $34;
       $199 = (($197) + ($198<<2)|0);
       $200 = HEAP32[$199>>2]|0;
       $201 = ($200*3)|0;
       $202 = $49;
       $203 = (($201) + ($202))|0;
       $204 = (($194) + ($203<<3)|0);
       HEAPF64[$204>>3] = $193;
       $205 = $50;
       $206 = (($205) + 1)|0;
       $50 = $206;
      }
      $209 = $49;
      $210 = (($209) + 1)|0;
      $49 = $210;
     }
     L59: do {
      if ((label|0) == 45) {
       $211 = HEAP8[10480]|0;
       $212 = $211&1;
       L61: do {
        if ($212) {
         $51 = 0;
         $52 = 0;
         while(1) {
          $213 = $52;
          $214 = ($213|0)<(3);
          if (!($214)) {
           break;
          }
          $53 = 0;
          while(1) {
           $215 = $53;
           $216 = HEAP32[(10576)>>2]|0;
           $217 = ($215|0)<($216|0);
           if (!($217)) {
            break;
           }
           $218 = $37;
           $219 = HEAP32[(10572)>>2]|0;
           $220 = $53;
           $221 = (($219) + ($220<<2)|0);
           $222 = HEAP32[$221>>2]|0;
           $223 = ($222*3)|0;
           $224 = $52;
           $225 = (($223) + ($224))|0;
           $226 = (($218) + ($225<<3)|0);
           $227 = +HEAPF64[$226>>3];
           $228 = $51;
           $229 = (($228) + 1)|0;
           $51 = $229;
           __THREW__ = 0;
           $230 = (invoke_iii(104,(10668|0),($228|0))|0);
           $231 = __THREW__; __THREW__ = 0;
           $232 = $231&1;
           if ($232) {
            label = 43;
            break L59;
           }
           HEAPF64[$230>>3] = $227;
           $233 = $53;
           $234 = (($233) + 1)|0;
           $53 = $234;
          }
          $235 = $52;
          $236 = (($235) + 1)|0;
          $52 = $236;
         }
         __THREW__ = 0;
         invoke_viii(86,($55|0),((10600)|0),(10668|0));
         $237 = __THREW__; __THREW__ = 0;
         $238 = $237&1;
         if ($238) {
          label = 43;
          break L59;
         }
         __THREW__ = 0;
         invoke_vii(105,($54|0),($55|0));
         $239 = __THREW__; __THREW__ = 0;
         $240 = $239&1;
         if ($240) {
          label = 43;
          break L59;
         }
         $241 = HEAP32[(10576)>>2]|0;
         __THREW__ = 0;
         invoke_vii(106,($56|0),($241|0));
         $242 = __THREW__; __THREW__ = 0;
         $243 = $242&1;
         L74: do {
          if ($243) {
           label = 65;
          } else {
           $57 = 0;
           while(1) {
            $244 = $57;
            $245 = HEAP32[(10576)>>2]|0;
            $246 = ($244|0)<($245|0);
            if (!($246)) {
             label = 67;
             break;
            }
            $247 = $57;
            $248 = HEAP32[(10584)>>2]|0;
            $249 = (($248|0) / 3)&-1;
            $250 = 0;
            $251 = (($247) + ($250))|0;
            __THREW__ = 0;
            $252 = (invoke_iii(43,($54|0),($251|0))|0);
            $253 = __THREW__; __THREW__ = 0;
            $254 = $253&1;
            if ($254) {
             label = 66;
             break;
            }
            $255 = +HEAPF64[$252>>3];
            $256 = $57;
            $31 = $56;
            $32 = $256;
            $257 = $31;
            $258 = HEAP32[$257>>2]|0;
            $259 = $32;
            $260 = (($258) + (($259*24)|0)|0);
            __THREW__ = 0;
            $261 = (invoke_iii(28,($260|0),0)|0);
            $262 = __THREW__; __THREW__ = 0;
            $263 = $262&1;
            if ($263) {
             label = 66;
             break;
            }
            HEAPF64[$261>>3] = $255;
            $264 = $57;
            $265 = HEAP32[(10584)>>2]|0;
            $266 = (($265|0) / 3)&-1;
            $267 = $266;
            $268 = (($264) + ($267))|0;
            __THREW__ = 0;
            $269 = (invoke_iii(43,($54|0),($268|0))|0);
            $270 = __THREW__; __THREW__ = 0;
            $271 = $270&1;
            if ($271) {
             label = 66;
             break;
            }
            $272 = +HEAPF64[$269>>3];
            $273 = $57;
            $29 = $56;
            $30 = $273;
            $274 = $29;
            $275 = HEAP32[$274>>2]|0;
            $276 = $30;
            $277 = (($275) + (($276*24)|0)|0);
            __THREW__ = 0;
            $278 = (invoke_iii(28,($277|0),1)|0);
            $279 = __THREW__; __THREW__ = 0;
            $280 = $279&1;
            if ($280) {
             label = 66;
             break;
            }
            HEAPF64[$278>>3] = $272;
            $281 = $57;
            $282 = HEAP32[(10584)>>2]|0;
            $283 = (($282|0) / 3)&-1;
            $284 = $283<<1;
            $285 = (($281) + ($284))|0;
            __THREW__ = 0;
            $286 = (invoke_iii(43,($54|0),($285|0))|0);
            $287 = __THREW__; __THREW__ = 0;
            $288 = $287&1;
            if ($288) {
             label = 66;
             break;
            }
            $289 = +HEAPF64[$286>>3];
            $290 = $57;
            $27 = $56;
            $28 = $290;
            $291 = $27;
            $292 = HEAP32[$291>>2]|0;
            $293 = $28;
            $294 = (($292) + (($293*24)|0)|0);
            __THREW__ = 0;
            $295 = (invoke_iii(28,($294|0),2)|0);
            $296 = __THREW__; __THREW__ = 0;
            $297 = $296&1;
            if ($297) {
             label = 66;
             break;
            }
            HEAPF64[$295>>3] = $289;
            $298 = $57;
            $299 = (($298) + 1)|0;
            $57 = $299;
           }
           L85: do {
            if ((label|0) == 67) {
             $304 = HEAP32[(10636)>>2]|0;
             __THREW__ = 0;
             invoke_vii(106,($58|0),($304|0));
             $305 = __THREW__; __THREW__ = 0;
             $306 = $305&1;
             if ($306) {
              label = 66;
             } else {
              $59 = 0;
              while(1) {
               $307 = $59;
               $308 = HEAP32[(10636)>>2]|0;
               $309 = ($307|0)<($308|0);
               if (!($309)) {
                label = 81;
                break;
               }
               $310 = $59;
               $25 = $56;
               $26 = $310;
               $311 = $25;
               $312 = HEAP32[$311>>2]|0;
               $313 = $26;
               $314 = (($312) + (($313*24)|0)|0);
               __THREW__ = 0;
               $315 = (invoke_iii(28,($314|0),0)|0);
               $316 = __THREW__; __THREW__ = 0;
               $317 = $316&1;
               if ($317) {
                label = 80;
                break;
               }
               $318 = +HEAPF64[$315>>3];
               $60 = $318;
               $319 = $59;
               $23 = $56;
               $24 = $319;
               $320 = $23;
               $321 = HEAP32[$320>>2]|0;
               $322 = $24;
               $323 = (($321) + (($322*24)|0)|0);
               __THREW__ = 0;
               $324 = (invoke_iii(28,($323|0),1)|0);
               $325 = __THREW__; __THREW__ = 0;
               $326 = $325&1;
               if ($326) {
                label = 80;
                break;
               }
               $327 = +HEAPF64[$324>>3];
               $61 = $327;
               $328 = $59;
               $21 = $56;
               $22 = $328;
               $329 = $21;
               $330 = HEAP32[$329>>2]|0;
               $331 = $22;
               $332 = (($330) + (($331*24)|0)|0);
               __THREW__ = 0;
               $333 = (invoke_iii(28,($332|0),2)|0);
               $334 = __THREW__; __THREW__ = 0;
               $335 = $334&1;
               if ($335) {
                label = 80;
                break;
               }
               $336 = +HEAPF64[$333>>3];
               $62 = $336;
               $337 = $60;
               $338 = $60;
               $339 = $337 * $338;
               $340 = $61;
               $341 = $61;
               $342 = $340 * $341;
               $343 = $339 + $342;
               $344 = $62;
               $345 = $62;
               $346 = $344 * $345;
               $347 = $343 + $346;
               $348 = (+Math_sqrt((+$347)));
               $63 = $348;
               $349 = $59;
               $19 = (10640);
               $20 = $349;
               $350 = $19;
               $351 = HEAP32[$350>>2]|0;
               $352 = $20;
               $353 = (($351) + ($352<<3)|0);
               $354 = +HEAPF64[$353>>3];
               $64 = $354;
               $355 = $64;
               $356 = $63;
               $357 = $355 / $356;
               $65 = $357;
               $358 = $65;
               $359 = $59;
               $17 = $56;
               $18 = $359;
               $360 = $17;
               $361 = HEAP32[$360>>2]|0;
               $362 = $18;
               $363 = (($361) + (($362*24)|0)|0);
               __THREW__ = 0;
               $364 = (invoke_iii(28,($363|0),0)|0);
               $365 = __THREW__; __THREW__ = 0;
               $366 = $365&1;
               if ($366) {
                label = 80;
                break;
               }
               $367 = +HEAPF64[$364>>3];
               $368 = $358 * $367;
               $369 = $59;
               $15 = $58;
               $16 = $369;
               $370 = $15;
               $371 = HEAP32[$370>>2]|0;
               $372 = $16;
               $373 = (($371) + (($372*24)|0)|0);
               __THREW__ = 0;
               $374 = (invoke_iii(28,($373|0),0)|0);
               $375 = __THREW__; __THREW__ = 0;
               $376 = $375&1;
               if ($376) {
                label = 80;
                break;
               }
               HEAPF64[$374>>3] = $368;
               $377 = $65;
               $378 = $59;
               $13 = $56;
               $14 = $378;
               $379 = $13;
               $380 = HEAP32[$379>>2]|0;
               $381 = $14;
               $382 = (($380) + (($381*24)|0)|0);
               __THREW__ = 0;
               $383 = (invoke_iii(28,($382|0),1)|0);
               $384 = __THREW__; __THREW__ = 0;
               $385 = $384&1;
               if ($385) {
                label = 80;
                break;
               }
               $386 = +HEAPF64[$383>>3];
               $387 = $377 * $386;
               $388 = $59;
               $11 = $58;
               $12 = $388;
               $389 = $11;
               $390 = HEAP32[$389>>2]|0;
               $391 = $12;
               $392 = (($390) + (($391*24)|0)|0);
               __THREW__ = 0;
               $393 = (invoke_iii(28,($392|0),1)|0);
               $394 = __THREW__; __THREW__ = 0;
               $395 = $394&1;
               if ($395) {
                label = 80;
                break;
               }
               HEAPF64[$393>>3] = $387;
               $396 = $65;
               $397 = $59;
               $9 = $56;
               $10 = $397;
               $398 = $9;
               $399 = HEAP32[$398>>2]|0;
               $400 = $10;
               $401 = (($399) + (($400*24)|0)|0);
               __THREW__ = 0;
               $402 = (invoke_iii(28,($401|0),2)|0);
               $403 = __THREW__; __THREW__ = 0;
               $404 = $403&1;
               if ($404) {
                label = 80;
                break;
               }
               $405 = +HEAPF64[$402>>3];
               $406 = $396 * $405;
               $407 = $59;
               $7 = $58;
               $8 = $407;
               $408 = $7;
               $409 = HEAP32[$408>>2]|0;
               $410 = $8;
               $411 = (($409) + (($410*24)|0)|0);
               __THREW__ = 0;
               $412 = (invoke_iii(28,($411|0),2)|0);
               $413 = __THREW__; __THREW__ = 0;
               $414 = $413&1;
               if ($414) {
                label = 80;
                break;
               }
               HEAPF64[$412>>3] = $406;
               $415 = $59;
               $416 = (($415) + 1)|0;
               $59 = $416;
              }
              L100: do {
               if ((label|0) == 81) {
                $66 = 0;
                while(1) {
                 $419 = $66;
                 $420 = ($419|0)<(3);
                 if (!($420)) {
                  break;
                 }
                 $67 = 0;
                 $68 = 0;
                 while(1) {
                  $421 = $68;
                  $422 = HEAP32[(10636)>>2]|0;
                  $423 = ($421|0)<($422|0);
                  if (!($423)) {
                   break;
                  }
                  $424 = $68;
                  $5 = $58;
                  $6 = $424;
                  $425 = $5;
                  $426 = HEAP32[$425>>2]|0;
                  $427 = $6;
                  $428 = (($426) + (($427*24)|0)|0);
                  $429 = $66;
                  __THREW__ = 0;
                  $430 = (invoke_iii(28,($428|0),($429|0))|0);
                  $431 = __THREW__; __THREW__ = 0;
                  $432 = $431&1;
                  if ($432) {
                   label = 80;
                   break L100;
                  }
                  $433 = +HEAPF64[$430>>3];
                  $434 = $66;
                  $435 = HEAP32[(10576)>>2]|0;
                  $436 = Math_imul($434, $435)|0;
                  $437 = $67;
                  $438 = (($437) + 1)|0;
                  $67 = $438;
                  $439 = (($436) + ($437))|0;
                  __THREW__ = 0;
                  $440 = (invoke_iii(43,(10652|0),($439|0))|0);
                  $441 = __THREW__; __THREW__ = 0;
                  $442 = $441&1;
                  if ($442) {
                   label = 80;
                   break L100;
                  }
                  HEAPF64[$440>>3] = $433;
                  $443 = $68;
                  $444 = (($443) + 1)|0;
                  $68 = $444;
                 }
                 $445 = $66;
                 $446 = (($445) + 1)|0;
                 $66 = $446;
                }
                __THREW__ = 0;
                invoke_viii(86,($70|0),((10528)|0),(10652|0));
                $447 = __THREW__; __THREW__ = 0;
                $448 = $447&1;
                if ($448) {
                 label = 80;
                } else {
                 __THREW__ = 0;
                 invoke_vii(105,($69|0),($70|0));
                 $449 = __THREW__; __THREW__ = 0;
                 $450 = $449&1;
                 if ($450) {
                  label = 80;
                 } else {
                  $71 = 0;
                  while(1) {
                   $451 = $71;
                   __THREW__ = 0;
                   $452 = (invoke_ii(88,($69|0))|0);
                   $453 = __THREW__; __THREW__ = 0;
                   $454 = $453&1;
                   if ($454) {
                    label = 97;
                    break;
                   }
                   $455 = ($451|0)<($452|0);
                   if (!($455)) {
                    label = 98;
                    break;
                   }
                   $456 = $71;
                   __THREW__ = 0;
                   $457 = (invoke_iii(43,($69|0),($456|0))|0);
                   $458 = __THREW__; __THREW__ = 0;
                   $459 = $458&1;
                   if ($459) {
                    label = 97;
                    break;
                   }
                   $460 = +HEAPF64[$457>>3];
                   $461 = $71;
                   __THREW__ = 0;
                   $462 = (invoke_iii(43,(10660|0),($461|0))|0);
                   $463 = __THREW__; __THREW__ = 0;
                   $464 = $463&1;
                   if ($464) {
                    label = 97;
                    break;
                   }
                   HEAPF64[$462>>3] = $460;
                   $465 = $71;
                   $466 = (($465) + 1)|0;
                   $71 = $466;
                  }
                  do {
                   if ((label|0) == 98) {
                    $469 = HEAP32[(10568)>>2]|0;
                    __THREW__ = 0;
                    invoke_viii(102,($73|0),($469|0),(10660|0));
                    $470 = __THREW__; __THREW__ = 0;
                    $471 = $470&1;
                    if ($471) {
                     label = 97;
                    } else {
                     __THREW__ = 0;
                     invoke_vii(103,($72|0),($73|0));
                     $472 = __THREW__; __THREW__ = 0;
                     $473 = $472&1;
                     if ($473) {
                      label = 97;
                      break;
                     }
                     $74 = 0;
                     L124: while(1) {
                      $474 = $74;
                      $475 = ($474|0)<(3);
                      if (!($475)) {
                       break;
                      }
                      $75 = 0;
                      while(1) {
                       $476 = $75;
                       $477 = HEAP32[(10576)>>2]|0;
                       $478 = ($476|0)<($477|0);
                       if (!($478)) {
                        break;
                       }
                       $479 = $75;
                       $480 = $74;
                       $481 = HEAP32[(10584)>>2]|0;
                       $482 = (($481|0) / 3)&-1;
                       $483 = Math_imul($480, $482)|0;
                       $484 = (($479) + ($483))|0;
                       __THREW__ = 0;
                       $485 = (invoke_iii(43,($72|0),($484|0))|0);
                       $486 = __THREW__; __THREW__ = 0;
                       $487 = $486&1;
                       if ($487) {
                        label = 106;
                        break L124;
                       }
                       $488 = +HEAPF64[$485>>3];
                       $489 = $37;
                       $490 = $75;
                       $3 = (10588);
                       $4 = $490;
                       $491 = $3;
                       $492 = HEAP32[$491>>2]|0;
                       $493 = $4;
                       $494 = (($492) + ($493<<2)|0);
                       $495 = HEAP32[$494>>2]|0;
                       $496 = ($495*3)|0;
                       $497 = $74;
                       $498 = (($496) + ($497))|0;
                       $499 = (($489) + ($498<<3)|0);
                       HEAPF64[$499>>3] = $488;
                       $500 = $75;
                       $501 = (($500) + 1)|0;
                       $75 = $501;
                      }
                      $506 = $74;
                      $507 = (($506) + 1)|0;
                      $74 = $507;
                     }
                     if ((label|0) == 106) {
                      $502 = ___cxa_find_matching_catch_2()|0;
                      $503 = tempRet0;
                      $39 = $502;
                      $40 = $503;
                      __THREW__ = 0;
                      invoke_vi(44,($72|0));
                      $504 = __THREW__; __THREW__ = 0;
                      $505 = $504&1;
                      if (!($505)) {
                       break;
                      }
                      $534 = ___cxa_find_matching_catch_3(0|0)|0;
                      $535 = tempRet0;
                      ___clang_call_terminate($534);
                      // unreachable;
                     }
                     __THREW__ = 0;
                     invoke_vi(44,($72|0));
                     $508 = __THREW__; __THREW__ = 0;
                     $509 = $508&1;
                     if ($509) {
                      label = 97;
                      break;
                     }
                     __THREW__ = 0;
                     invoke_vi(44,($69|0));
                     $510 = __THREW__; __THREW__ = 0;
                     $511 = $510&1;
                     if ($511) {
                      label = 80;
                      break L100;
                     }
                     __THREW__ = 0;
                     invoke_vi(107,($58|0));
                     $512 = __THREW__; __THREW__ = 0;
                     $513 = $512&1;
                     if ($513) {
                      label = 66;
                      break L85;
                     }
                     __THREW__ = 0;
                     invoke_vi(107,($56|0));
                     $514 = __THREW__; __THREW__ = 0;
                     $515 = $514&1;
                     if ($515) {
                      label = 65;
                      break L74;
                     }
                     __THREW__ = 0;
                     invoke_vi(44,($54|0));
                     $516 = __THREW__; __THREW__ = 0;
                     $517 = $516&1;
                     if ($517) {
                      label = 43;
                      break L59;
                     } else {
                      break L61;
                     }
                    }
                   }
                  } while(0);
                  if ((label|0) == 97) {
                   $467 = ___cxa_find_matching_catch_2()|0;
                   $468 = tempRet0;
                   $39 = $467;
                   $40 = $468;
                  }
                  __THREW__ = 0;
                  invoke_vi(44,($69|0));
                  $518 = __THREW__; __THREW__ = 0;
                  $519 = $518&1;
                  if ($519) {
                   $534 = ___cxa_find_matching_catch_3(0|0)|0;
                   $535 = tempRet0;
                   ___clang_call_terminate($534);
                   // unreachable;
                  }
                 }
                }
               }
              } while(0);
              if ((label|0) == 80) {
               $417 = ___cxa_find_matching_catch_2()|0;
               $418 = tempRet0;
               $39 = $417;
               $40 = $418;
              }
              __THREW__ = 0;
              invoke_vi(107,($58|0));
              $520 = __THREW__; __THREW__ = 0;
              $521 = $520&1;
              if ($521) {
               $534 = ___cxa_find_matching_catch_3(0|0)|0;
               $535 = tempRet0;
               ___clang_call_terminate($534);
               // unreachable;
              }
             }
            }
           } while(0);
           if ((label|0) == 66) {
            $302 = ___cxa_find_matching_catch_2()|0;
            $303 = tempRet0;
            $39 = $302;
            $40 = $303;
           }
           __THREW__ = 0;
           invoke_vi(107,($56|0));
           $522 = __THREW__; __THREW__ = 0;
           $523 = $522&1;
           if ($523) {
            $534 = ___cxa_find_matching_catch_3(0|0)|0;
            $535 = tempRet0;
            ___clang_call_terminate($534);
            // unreachable;
           }
          }
         } while(0);
         if ((label|0) == 65) {
          $300 = ___cxa_find_matching_catch_2()|0;
          $301 = tempRet0;
          $39 = $300;
          $40 = $301;
         }
         __THREW__ = 0;
         invoke_vi(44,($54|0));
         $524 = __THREW__; __THREW__ = 0;
         $525 = $524&1;
         if (!($525)) {
          break L59;
         }
         $534 = ___cxa_find_matching_catch_3(0|0)|0;
         $535 = tempRet0;
         ___clang_call_terminate($534);
         // unreachable;
        }
       } while(0);
       __THREW__ = 0;
       invoke_vi(44,($47|0));
       $526 = __THREW__; __THREW__ = 0;
       $527 = $526&1;
       if ($527) {
        label = 34;
        break L47;
       }
       __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EED2Ev($44);
       STACKTOP = sp;return;
      }
     } while(0);
     if ((label|0) == 43) {
      $207 = ___cxa_find_matching_catch_2()|0;
      $208 = tempRet0;
      $39 = $207;
      $40 = $208;
     }
     __THREW__ = 0;
     invoke_vi(44,($47|0));
     $528 = __THREW__; __THREW__ = 0;
     $529 = $528&1;
     if ($529) {
      $534 = ___cxa_find_matching_catch_3(0|0)|0;
      $535 = tempRet0;
      ___clang_call_terminate($534);
      // unreachable;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 34) {
  $172 = ___cxa_find_matching_catch_2()|0;
  $173 = tempRet0;
  $39 = $172;
  $40 = $173;
 }
 __THREW__ = 0;
 invoke_vi(44,($44|0));
 $530 = __THREW__; __THREW__ = 0;
 $531 = $530&1;
 if ($531) {
  $534 = ___cxa_find_matching_catch_3(0|0)|0;
  $535 = tempRet0;
  ___clang_call_terminate($534);
  // unreachable;
 } else {
  $532 = $39;
  $533 = $40;
  ___resumeException($532|0);
  // unreachable;
 }
}
function __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEC2INS_7ProductINS_12SparseMatrixIdLi0EiEES1_Li0EEEEERKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EEEE7derivedEv($5)|0);
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2INS_7ProductINS_12SparseMatrixIdLi0EiEES2_Li0EEEEERKNS_9DenseBaseIT_EE($4,$6);
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseSolverBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE5solveINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5SolveIS6_T_EERKNS_10MatrixBaseISC_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&1;
 if (!($7)) {
  ___assert_fail((6848|0),(6896|0),90,(5120|0));
  // unreachable;
 }
 $8 = (__ZNK5Eigen16SparseSolverBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE7derivedEv($5)|0);
 $9 = (__ZNK5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE4rowsEv($8)|0);
 $10 = $4;
 $11 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($10)|0);
 $12 = ($9|0)==($11|0);
 if ($12) {
  $13 = (__ZNK5Eigen16SparseSolverBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE7derivedEv($5)|0);
  $14 = $4;
  $15 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($14)|0);
  __ZN5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS6_RKS8_($0,$13,$15);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((6944|0),(6896|0),91,(5120|0));
  // unreachable;
 }
}
function __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEC2INS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEES1_EEEERKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($5)|0);
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2INS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEES2_EEEERKNS_9DenseBaseIT_EE($4,$6);
 STACKTOP = sp;return;
}
function __ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1EEclEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ($5|0)>=(0);
 if (!($6)) {
  ___assert_fail((5177|0),(1678|0),425,(1719|0));
  // unreachable;
 }
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($4)|0);
 $9 = ($7|0)<($8|0);
 if ($9) {
  $10 = $3;
  $11 = (__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1EE8coeffRefEi($4,$10)|0);
  STACKTOP = sp;return ($11|0);
 } else {
  ___assert_fail((5177|0),(1678|0),425,(1719|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZNSt3__26vectorI3PosNS_9allocatorIS1_EEEC2Ej($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $4 = sp + 100|0;
 $8 = sp + 84|0;
 $12 = sp + 68|0;
 $17 = sp + 48|0;
 $20 = sp + 36|0;
 $23 = sp + 24|0;
 $24 = sp + 20|0;
 $25 = sp + 16|0;
 $26 = $0;
 $27 = $1;
 $30 = $26;
 $22 = $30;
 $31 = $22;
 $21 = $31;
 $2 = $4;
 $3 = -1;
 $32 = $2;
 HEAP32[$32>>2] = 0;
 $33 = HEAP32[$4>>2]|0;
 HEAP32[$23>>2] = $33;
 $5 = $23;
 HEAP32[$31>>2] = 0;
 $34 = ((($31)) + 4|0);
 $6 = $8;
 $7 = -1;
 $35 = $6;
 HEAP32[$35>>2] = 0;
 $36 = HEAP32[$8>>2]|0;
 HEAP32[$24>>2] = $36;
 $9 = $24;
 HEAP32[$34>>2] = 0;
 $37 = ((($31)) + 8|0);
 $10 = $12;
 $11 = -1;
 $38 = $10;
 HEAP32[$38>>2] = 0;
 $39 = HEAP32[$12>>2]|0;
 HEAP32[$25>>2] = $39;
 $13 = $25;
 $19 = $37;
 HEAP32[$20>>2] = 0;
 $40 = $19;
 $18 = $20;
 $41 = $18;
 $42 = HEAP32[$41>>2]|0;
 $16 = $40;
 HEAP32[$17>>2] = $42;
 $43 = $16;
 $15 = $43;
 $14 = $17;
 $44 = $14;
 $45 = HEAP32[$44>>2]|0;
 HEAP32[$43>>2] = $45;
 $46 = $27;
 $47 = ($46>>>0)>(0);
 if (!($47)) {
  STACKTOP = sp;return;
 }
 $48 = $27;
 __THREW__ = 0;
 invoke_vii(108,($30|0),($48|0));
 $49 = __THREW__; __THREW__ = 0;
 $50 = $49&1;
 if (!($50)) {
  $51 = $27;
  __THREW__ = 0;
  invoke_vii(109,($30|0),($51|0));
  $52 = __THREW__; __THREW__ = 0;
  $53 = $52&1;
  if (!($53)) {
   STACKTOP = sp;return;
  }
 }
 $54 = ___cxa_find_matching_catch_2()|0;
 $55 = tempRet0;
 $28 = $54;
 $29 = $55;
 __THREW__ = 0;
 invoke_vi(110,($30|0));
 $56 = __THREW__; __THREW__ = 0;
 $57 = $56&1;
 if ($57) {
  $60 = ___cxa_find_matching_catch_3(0|0)|0;
  $61 = tempRet0;
  ___clang_call_terminate($60);
  // unreachable;
 } else {
  $58 = $28;
  $59 = $29;
  ___resumeException($58|0);
  // unreachable;
 }
}
function __ZNSt3__26vectorI3PosNS_9allocatorIS1_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZNSt3__213__vector_baseI3PosNS_9allocatorIS1_EEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($2)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = Math_imul($5, $7)|0;
 __ZN5Eigen8internal31conditional_aligned_delete_autoIdLb1EEEvPT_j($3,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal31conditional_aligned_delete_autoIdLb1EEEvPT_j($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen8internal24conditional_aligned_freeILb1EEEvPv($4);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24conditional_aligned_freeILb1EEEvPv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal12aligned_freeEPv($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal12aligned_freeEPv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal21handmade_aligned_freeEPv($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21handmade_aligned_freeEPv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = $1;
 $5 = ((($4)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 _free($6);
 STACKTOP = sp;return;
}
function __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $4 = sp;
 $7 = sp + 128|0;
 $31 = sp + 12|0;
 $33 = sp + 4|0;
 $32 = $0;
 $34 = $32;
 $35 = HEAP32[$34>>2]|0;
 $29 = $31;
 $30 = -1;
 $36 = $29;
 HEAP32[$36>>2] = 0;
 $37 = HEAP32[$31>>2]|0;
 HEAP32[$33>>2] = $37;
 $21 = $33;
 $38 = ($35|0)!=(0|0);
 if (!($38)) {
  STACKTOP = sp;return;
 }
 $13 = $34;
 $39 = $13;
 $40 = HEAP32[$39>>2]|0;
 $11 = $39;
 $12 = $40;
 $41 = $11;
 while(1) {
  $42 = $12;
  $43 = ((($41)) + 4|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($42|0)!=($44|0);
  if (!($45)) {
   break;
  }
  $10 = $41;
  $46 = $10;
  $47 = ((($46)) + 8|0);
  $9 = $47;
  $48 = $9;
  $8 = $48;
  $49 = $8;
  $50 = ((($41)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = ((($51)) + -4|0);
  HEAP32[$50>>2] = $52;
  $1 = $52;
  $53 = $1;
  $5 = $49;
  $6 = $53;
  $54 = $5;
  $55 = $6;
  ;HEAP8[$4>>0]=HEAP8[$7>>0]|0;
  $2 = $54;
  $3 = $55;
 }
 $16 = $34;
 $56 = $16;
 $57 = ((($56)) + 8|0);
 $15 = $57;
 $58 = $15;
 $14 = $58;
 $59 = $14;
 $60 = HEAP32[$34>>2]|0;
 $20 = $34;
 $61 = $20;
 $19 = $61;
 $62 = $19;
 $63 = ((($62)) + 8|0);
 $18 = $63;
 $64 = $18;
 $17 = $64;
 $65 = $17;
 $66 = HEAP32[$65>>2]|0;
 $67 = HEAP32[$61>>2]|0;
 $68 = $66;
 $69 = $67;
 $70 = (($68) - ($69))|0;
 $71 = (($70|0) / 4)&-1;
 $26 = $59;
 $27 = $60;
 $28 = $71;
 $72 = $26;
 $73 = $27;
 $74 = $28;
 $23 = $72;
 $24 = $73;
 $25 = $74;
 $75 = $24;
 $22 = $75;
 $76 = $22;
 __ZdlPv($76);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5;
 __ZN5Eigen8internal31conditional_aligned_delete_autoIdLb1EEEvPT_j($3,$6);
 STACKTOP = sp;return;
}
function __ZNSt3__213__vector_baseIN5Eigen7TripletIdiEENS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $4 = sp;
 $7 = sp + 128|0;
 $31 = sp + 12|0;
 $33 = sp + 4|0;
 $32 = $0;
 $34 = $32;
 $35 = HEAP32[$34>>2]|0;
 $29 = $31;
 $30 = -1;
 $36 = $29;
 HEAP32[$36>>2] = 0;
 $37 = HEAP32[$31>>2]|0;
 HEAP32[$33>>2] = $37;
 $21 = $33;
 $38 = ($35|0)!=(0|0);
 if (!($38)) {
  STACKTOP = sp;return;
 }
 $13 = $34;
 $39 = $13;
 $40 = HEAP32[$39>>2]|0;
 $11 = $39;
 $12 = $40;
 $41 = $11;
 while(1) {
  $42 = $12;
  $43 = ((($41)) + 4|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($42|0)!=($44|0);
  if (!($45)) {
   break;
  }
  $10 = $41;
  $46 = $10;
  $47 = ((($46)) + 8|0);
  $9 = $47;
  $48 = $9;
  $8 = $48;
  $49 = $8;
  $50 = ((($41)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = ((($51)) + -16|0);
  HEAP32[$50>>2] = $52;
  $1 = $52;
  $53 = $1;
  $5 = $49;
  $6 = $53;
  $54 = $5;
  $55 = $6;
  ;HEAP8[$4>>0]=HEAP8[$7>>0]|0;
  $2 = $54;
  $3 = $55;
 }
 $16 = $34;
 $56 = $16;
 $57 = ((($56)) + 8|0);
 $15 = $57;
 $58 = $15;
 $14 = $58;
 $59 = $14;
 $60 = HEAP32[$34>>2]|0;
 $20 = $34;
 $61 = $20;
 $19 = $61;
 $62 = $19;
 $63 = ((($62)) + 8|0);
 $18 = $63;
 $64 = $18;
 $17 = $64;
 $65 = $17;
 $66 = HEAP32[$65>>2]|0;
 $67 = HEAP32[$61>>2]|0;
 $68 = $66;
 $69 = $67;
 $70 = (($68) - ($69))|0;
 $71 = (($70|0) / 16)&-1;
 $26 = $59;
 $27 = $60;
 $28 = $71;
 $72 = $26;
 $73 = $27;
 $74 = $28;
 $23 = $72;
 $24 = $73;
 $25 = $74;
 $75 = $24;
 $22 = $75;
 $76 = $22;
 __ZdlPv($76);
 STACKTOP = sp;return;
}
function __ZNSt3__213__vector_baseIdNS_9allocatorIdEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $4 = sp;
 $7 = sp + 128|0;
 $31 = sp + 12|0;
 $33 = sp + 4|0;
 $32 = $0;
 $34 = $32;
 $35 = HEAP32[$34>>2]|0;
 $29 = $31;
 $30 = -1;
 $36 = $29;
 HEAP32[$36>>2] = 0;
 $37 = HEAP32[$31>>2]|0;
 HEAP32[$33>>2] = $37;
 $21 = $33;
 $38 = ($35|0)!=(0|0);
 if (!($38)) {
  STACKTOP = sp;return;
 }
 $13 = $34;
 $39 = $13;
 $40 = HEAP32[$39>>2]|0;
 $11 = $39;
 $12 = $40;
 $41 = $11;
 while(1) {
  $42 = $12;
  $43 = ((($41)) + 4|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($42|0)!=($44|0);
  if (!($45)) {
   break;
  }
  $10 = $41;
  $46 = $10;
  $47 = ((($46)) + 8|0);
  $9 = $47;
  $48 = $9;
  $8 = $48;
  $49 = $8;
  $50 = ((($41)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = ((($51)) + -8|0);
  HEAP32[$50>>2] = $52;
  $1 = $52;
  $53 = $1;
  $5 = $49;
  $6 = $53;
  $54 = $5;
  $55 = $6;
  ;HEAP8[$4>>0]=HEAP8[$7>>0]|0;
  $2 = $54;
  $3 = $55;
 }
 $16 = $34;
 $56 = $16;
 $57 = ((($56)) + 8|0);
 $15 = $57;
 $58 = $15;
 $14 = $58;
 $59 = $14;
 $60 = HEAP32[$34>>2]|0;
 $20 = $34;
 $61 = $20;
 $19 = $61;
 $62 = $19;
 $63 = ((($62)) + 8|0);
 $18 = $63;
 $64 = $18;
 $17 = $64;
 $65 = $17;
 $66 = HEAP32[$65>>2]|0;
 $67 = HEAP32[$61>>2]|0;
 $68 = $66;
 $69 = $67;
 $70 = (($68) - ($69))|0;
 $71 = (($70|0) / 8)&-1;
 $26 = $59;
 $27 = $60;
 $28 = $71;
 $72 = $26;
 $73 = $27;
 $74 = $28;
 $23 = $72;
 $24 = $73;
 $25 = $74;
 $75 = $24;
 $22 = $75;
 $76 = $22;
 __ZdlPv($76);
 STACKTOP = sp;return;
}
function __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2Ev($4);
 __THREW__ = 0;
 invoke_v(99);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = ___cxa_find_matching_catch_2()|0;
 $8 = tempRet0;
 $2 = $7;
 $3 = $8;
 __THREW__ = 0;
 invoke_vi(101,($4|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $13 = ___cxa_find_matching_catch_3(0|0)|0;
  $14 = tempRet0;
  ___clang_call_terminate($13);
  // unreachable;
 } else {
  $11 = $2;
  $12 = $3;
  ___resumeException($11|0);
  // unreachable;
 }
}
function __ZN5Eigen12SparseMatrixIdLi0EiEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEC2Ev($4);
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = -1;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($4)) + 12|0);
 HEAP32[$7>>2] = 0;
 $8 = ((($4)) + 16|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($4)) + 20|0);
 __ZN5Eigen8internal17CompressedStorageIdiEC2Ev($9);
 __THREW__ = 0;
 invoke_v(69);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  __THREW__ = 0;
  invoke_viii(70,($4|0),0,0);
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if (!($13)) {
   STACKTOP = sp;return;
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $2 = $14;
 $3 = $15;
 __THREW__ = 0;
 invoke_vi(71,($9|0));
 $16 = __THREW__; __THREW__ = 0;
 $17 = $16&1;
 if ($17) {
  $20 = ___cxa_find_matching_catch_3(0|0)|0;
  $21 = tempRet0;
  ___clang_call_terminate($20);
  // unreachable;
 } else {
  $18 = $2;
  $19 = $3;
  ___resumeException($18|0);
  // unreachable;
 }
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2Ev($2);
 __ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE22_check_template_paramsEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17CompressedStorageIdiEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($2)) + 12|0);
 HEAP32[$5>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN5Eigen12SparseMatrixIdLi0EiE25check_template_parametersEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN5Eigen12SparseMatrixIdLi0EiE6resizeEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $8 = $5;
 $6 = $8;
 $9 = $4;
 $10 = ((($7)) + 8|0);
 HEAP32[$10>>2] = $9;
 $11 = ((($7)) + 20|0);
 __ZN5Eigen8internal17CompressedStorageIdiE5clearEv($11);
 $12 = ((($7)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = ((($7)) + 4|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ($17|0)==(0);
  if ($18) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $19 = ((($7)) + 12|0);
  $20 = HEAP32[$19>>2]|0;
  _free($20);
  $21 = $6;
  $22 = (($21) + 1)|0;
  $23 = $22<<2;
  $24 = (_malloc($23)|0);
  $25 = ((($7)) + 12|0);
  HEAP32[$25>>2] = $24;
  $26 = ((($7)) + 12|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ($27|0)!=(0|0);
  if (!($28)) {
   __ZN5Eigen8internal19throw_std_bad_allocEv();
  }
  $29 = $6;
  $30 = ((($7)) + 4|0);
  HEAP32[$30>>2] = $29;
 }
 $31 = ((($7)) + 16|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ($32|0)!=(0|0);
 if (!($33)) {
  $37 = ((($7)) + 12|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ((($7)) + 4|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = (($40) + 1)|0;
  $42 = $41<<2;
  _memset(($38|0),0,($42|0))|0;
  STACKTOP = sp;return;
 }
 $34 = ((($7)) + 16|0);
 $35 = HEAP32[$34>>2]|0;
 _free($35);
 $36 = ((($7)) + 16|0);
 HEAP32[$36>>2] = 0;
 $37 = ((($7)) + 12|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = ((($7)) + 4|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = (($40) + 1)|0;
 $42 = $41<<2;
 _memset(($38|0),0,($42|0))|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17CompressedStorageIdiED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  __ZdaPv($3);
 }
 $5 = ((($2)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  STACKTOP = sp;return;
 }
 __ZdaPv($6);
 STACKTOP = sp;return;
}
function __ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17CompressedStorageIdiE5clearEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 HEAP32[$3>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal19throw_std_bad_allocEv() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___cxa_allocate_exception(4)|0);
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw(($0|0),(72|0),(18|0));
 // unreachable;
}
function __ZNSt3__213__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $4 = sp;
 $7 = sp + 136|0;
 $33 = sp + 12|0;
 $35 = sp + 4|0;
 $34 = $0;
 $36 = $34;
 $37 = HEAP32[$36>>2]|0;
 $31 = $33;
 $32 = -1;
 $38 = $31;
 HEAP32[$38>>2] = 0;
 $39 = HEAP32[$33>>2]|0;
 HEAP32[$35>>2] = $39;
 $23 = $35;
 $40 = ($37|0)!=(0|0);
 if (!($40)) {
  STACKTOP = sp;return;
 }
 $15 = $36;
 $41 = $15;
 $42 = HEAP32[$41>>2]|0;
 $11 = $41;
 $12 = $42;
 $43 = $11;
 while(1) {
  $44 = $12;
  $45 = ((($43)) + 4|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = ($44|0)!=($46|0);
  if (!($47)) {
   break;
  }
  $10 = $43;
  $48 = $10;
  $49 = ((($48)) + 8|0);
  $9 = $49;
  $50 = $9;
  $8 = $50;
  $51 = $8;
  $52 = ((($43)) + 4|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = ((($53)) + -12|0);
  HEAP32[$52>>2] = $54;
  $1 = $54;
  $55 = $1;
  $5 = $51;
  $6 = $55;
  $56 = $5;
  $57 = $6;
  ;HEAP8[$4>>0]=HEAP8[$7>>0]|0;
  $2 = $56;
  $3 = $57;
  $58 = $3;
  __THREW__ = 0;
  invoke_vi(37,($58|0));
  $59 = __THREW__; __THREW__ = 0;
  $60 = $59&1;
  if ($60) {
   label = 5;
   break;
  }
 }
 if ((label|0) == 5) {
  $61 = ___cxa_find_matching_catch_2()|0;
  $62 = tempRet0;
  $13 = $61;
  $14 = $62;
  $63 = $13;
  ___cxa_call_unexpected(($63|0));
  // unreachable;
 }
 $18 = $36;
 $64 = $18;
 $65 = ((($64)) + 8|0);
 $17 = $65;
 $66 = $17;
 $16 = $66;
 $67 = $16;
 $68 = HEAP32[$36>>2]|0;
 $22 = $36;
 $69 = $22;
 $21 = $69;
 $70 = $21;
 $71 = ((($70)) + 8|0);
 $20 = $71;
 $72 = $20;
 $19 = $72;
 $73 = $19;
 $74 = HEAP32[$73>>2]|0;
 $75 = HEAP32[$69>>2]|0;
 $76 = $74;
 $77 = $75;
 $78 = (($76) - ($77))|0;
 $79 = (($78|0) / 12)&-1;
 $28 = $67;
 $29 = $68;
 $30 = $79;
 $80 = $28;
 $81 = $29;
 $82 = $30;
 $25 = $80;
 $26 = $81;
 $27 = $82;
 $83 = $26;
 $24 = $83;
 $84 = $24;
 __ZdlPv($84);
 STACKTOP = sp;return;
}
function __ZNSt3__213__vector_baseIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $4 = sp;
 $7 = sp + 136|0;
 $33 = sp + 12|0;
 $35 = sp + 4|0;
 $34 = $0;
 $36 = $34;
 $37 = HEAP32[$36>>2]|0;
 $31 = $33;
 $32 = -1;
 $38 = $31;
 HEAP32[$38>>2] = 0;
 $39 = HEAP32[$33>>2]|0;
 HEAP32[$35>>2] = $39;
 $23 = $35;
 $40 = ($37|0)!=(0|0);
 if (!($40)) {
  STACKTOP = sp;return;
 }
 $15 = $36;
 $41 = $15;
 $42 = HEAP32[$41>>2]|0;
 $11 = $41;
 $12 = $42;
 $43 = $11;
 while(1) {
  $44 = $12;
  $45 = ((($43)) + 4|0);
  $46 = HEAP32[$45>>2]|0;
  $47 = ($44|0)!=($46|0);
  if (!($47)) {
   break;
  }
  $10 = $43;
  $48 = $10;
  $49 = ((($48)) + 8|0);
  $9 = $49;
  $50 = $9;
  $8 = $50;
  $51 = $8;
  $52 = ((($43)) + 4|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = ((($53)) + -12|0);
  HEAP32[$52>>2] = $54;
  $1 = $54;
  $55 = $1;
  $5 = $51;
  $6 = $55;
  $56 = $5;
  $57 = $6;
  ;HEAP8[$4>>0]=HEAP8[$7>>0]|0;
  $2 = $56;
  $3 = $57;
  $58 = $3;
  __THREW__ = 0;
  invoke_vi(36,($58|0));
  $59 = __THREW__; __THREW__ = 0;
  $60 = $59&1;
  if ($60) {
   label = 5;
   break;
  }
 }
 if ((label|0) == 5) {
  $61 = ___cxa_find_matching_catch_2()|0;
  $62 = tempRet0;
  $13 = $61;
  $14 = $62;
  $63 = $13;
  ___cxa_call_unexpected(($63|0));
  // unreachable;
 }
 $18 = $36;
 $64 = $18;
 $65 = ((($64)) + 8|0);
 $17 = $65;
 $66 = $17;
 $16 = $66;
 $67 = $16;
 $68 = HEAP32[$36>>2]|0;
 $22 = $36;
 $69 = $22;
 $21 = $69;
 $70 = $21;
 $71 = ((($70)) + 8|0);
 $20 = $71;
 $72 = $20;
 $19 = $72;
 $73 = $19;
 $74 = HEAP32[$73>>2]|0;
 $75 = HEAP32[$69>>2]|0;
 $76 = $74;
 $77 = $75;
 $78 = (($76) - ($77))|0;
 $79 = (($78|0) / 12)&-1;
 $28 = $67;
 $29 = $68;
 $30 = $79;
 $80 = $28;
 $81 = $29;
 $82 = $30;
 $25 = $80;
 $26 = $81;
 $27 = $82;
 $83 = $26;
 $24 = $83;
 $84 = $24;
 __ZdlPv($84);
 STACKTOP = sp;return;
}
function __ZNSt3__213__vector_baseI3PosNS_9allocatorIS1_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $4 = sp;
 $7 = sp + 128|0;
 $31 = sp + 12|0;
 $33 = sp + 4|0;
 $32 = $0;
 $34 = $32;
 $35 = HEAP32[$34>>2]|0;
 $29 = $31;
 $30 = -1;
 $36 = $29;
 HEAP32[$36>>2] = 0;
 $37 = HEAP32[$31>>2]|0;
 HEAP32[$33>>2] = $37;
 $21 = $33;
 $38 = ($35|0)!=(0|0);
 if (!($38)) {
  STACKTOP = sp;return;
 }
 $13 = $34;
 $39 = $13;
 $40 = HEAP32[$39>>2]|0;
 $11 = $39;
 $12 = $40;
 $41 = $11;
 while(1) {
  $42 = $12;
  $43 = ((($41)) + 4|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($42|0)!=($44|0);
  if (!($45)) {
   break;
  }
  $10 = $41;
  $46 = $10;
  $47 = ((($46)) + 8|0);
  $9 = $47;
  $48 = $9;
  $8 = $48;
  $49 = $8;
  $50 = ((($41)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = ((($51)) + -24|0);
  HEAP32[$50>>2] = $52;
  $1 = $52;
  $53 = $1;
  $5 = $49;
  $6 = $53;
  $54 = $5;
  $55 = $6;
  ;HEAP8[$4>>0]=HEAP8[$7>>0]|0;
  $2 = $54;
  $3 = $55;
 }
 $16 = $34;
 $56 = $16;
 $57 = ((($56)) + 8|0);
 $15 = $57;
 $58 = $15;
 $14 = $58;
 $59 = $14;
 $60 = HEAP32[$34>>2]|0;
 $20 = $34;
 $61 = $20;
 $19 = $61;
 $62 = $19;
 $63 = ((($62)) + 8|0);
 $18 = $63;
 $64 = $18;
 $17 = $64;
 $65 = $17;
 $66 = HEAP32[$65>>2]|0;
 $67 = HEAP32[$61>>2]|0;
 $68 = $66;
 $69 = $67;
 $70 = (($68) - ($69))|0;
 $71 = (($70|0) / 24)&-1;
 $26 = $59;
 $27 = $60;
 $28 = $71;
 $72 = $26;
 $73 = $27;
 $74 = $28;
 $23 = $72;
 $24 = $73;
 $25 = $74;
 $75 = $24;
 $22 = $75;
 $76 = $22;
 __ZdlPv($76);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9allocatorIS3_EEE8__appendEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $8 = sp;
 $11 = sp + 148|0;
 $19 = sp + 84|0;
 $22 = sp + 72|0;
 $33 = sp + 12|0;
 $30 = $0;
 $31 = $1;
 $36 = $30;
 $29 = $36;
 $37 = $29;
 $38 = ((($37)) + 8|0);
 $28 = $38;
 $39 = $28;
 $27 = $39;
 $40 = $27;
 $41 = HEAP32[$40>>2]|0;
 $42 = ((($36)) + 4|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = $41;
 $45 = $43;
 $46 = (($44) - ($45))|0;
 $47 = (($46|0) / 12)&-1;
 $48 = $31;
 $49 = ($47>>>0)>=($48>>>0);
 if ($49) {
  $50 = $31;
  __ZNSt3__26vectorIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9allocatorIS3_EEE18__construct_at_endEj($36,$50);
  STACKTOP = sp;return;
 }
 $26 = $36;
 $51 = $26;
 $52 = ((($51)) + 8|0);
 $25 = $52;
 $53 = $25;
 $24 = $53;
 $54 = $24;
 $32 = $54;
 $23 = $36;
 $55 = $23;
 $56 = ((($55)) + 4|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = HEAP32[$55>>2]|0;
 $59 = $57;
 $60 = $58;
 $61 = (($59) - ($60))|0;
 $62 = (($61|0) / 12)&-1;
 $63 = $31;
 $64 = (($62) + ($63))|0;
 $18 = $36;
 HEAP32[$19>>2] = $64;
 $65 = $18;
 $66 = (__ZNKSt3__26vectorIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9allocatorIS3_EEE8max_sizeEv($65)|0);
 $20 = $66;
 $67 = HEAP32[$19>>2]|0;
 $68 = $20;
 $69 = ($67>>>0)>($68>>>0);
 if ($69) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($65);
  // unreachable;
 }
 $16 = $65;
 $70 = $16;
 $15 = $70;
 $71 = $15;
 $14 = $71;
 $72 = $14;
 $73 = ((($72)) + 8|0);
 $13 = $73;
 $74 = $13;
 $12 = $74;
 $75 = $12;
 $76 = HEAP32[$75>>2]|0;
 $77 = HEAP32[$71>>2]|0;
 $78 = $76;
 $79 = $77;
 $80 = (($78) - ($79))|0;
 $81 = (($80|0) / 12)&-1;
 $21 = $81;
 $82 = $21;
 $83 = $20;
 $84 = (($83>>>0) / 2)&-1;
 $85 = ($82>>>0)>=($84>>>0);
 if ($85) {
  $86 = $20;
  $17 = $86;
 } else {
  $87 = $21;
  $88 = $87<<1;
  HEAP32[$22>>2] = $88;
  $9 = $22;
  $10 = $19;
  $89 = $9;
  $90 = $10;
  ;HEAP8[$8>>0]=HEAP8[$11>>0]|0;
  $6 = $89;
  $7 = $90;
  $91 = $6;
  $92 = $7;
  $3 = $8;
  $4 = $91;
  $5 = $92;
  $93 = $4;
  $94 = HEAP32[$93>>2]|0;
  $95 = $5;
  $96 = HEAP32[$95>>2]|0;
  $97 = ($94>>>0)<($96>>>0);
  $98 = $7;
  $99 = $6;
  $100 = $97 ? $98 : $99;
  $101 = HEAP32[$100>>2]|0;
  $17 = $101;
 }
 $102 = $17;
 $2 = $36;
 $103 = $2;
 $104 = ((($103)) + 4|0);
 $105 = HEAP32[$104>>2]|0;
 $106 = HEAP32[$103>>2]|0;
 $107 = $105;
 $108 = $106;
 $109 = (($107) - ($108))|0;
 $110 = (($109|0) / 12)&-1;
 $111 = $32;
 __ZNSt3__214__split_bufferIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEERNS_9allocatorIS3_EEEC2EjjS6_($33,$102,$110,$111);
 $112 = $31;
 __THREW__ = 0;
 invoke_vii(111,($33|0),($112|0));
 $113 = __THREW__; __THREW__ = 0;
 $114 = $113&1;
 if (!($114)) {
  __THREW__ = 0;
  invoke_vii(112,($36|0),($33|0));
  $115 = __THREW__; __THREW__ = 0;
  $116 = $115&1;
  if (!($116)) {
   __ZNSt3__214__split_bufferIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEERNS_9allocatorIS3_EEED2Ev($33);
   STACKTOP = sp;return;
  }
 }
 $117 = ___cxa_find_matching_catch_2()|0;
 $118 = tempRet0;
 $34 = $117;
 $35 = $118;
 __THREW__ = 0;
 invoke_vi(113,($33|0));
 $119 = __THREW__; __THREW__ = 0;
 $120 = $119&1;
 if ($120) {
  $123 = ___cxa_find_matching_catch_3(0|0)|0;
  $124 = tempRet0;
  ___clang_call_terminate($123);
  // unreachable;
 } else {
  $121 = $34;
  $122 = $35;
  ___resumeException($121|0);
  // unreachable;
 }
}
function __ZNSt3__26vectorIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9allocatorIS3_EEE18__construct_at_endEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $15 = sp + 52|0;
 $12 = $0;
 $13 = $1;
 $16 = $12;
 $11 = $16;
 $17 = $11;
 $18 = ((($17)) + 8|0);
 $10 = $18;
 $19 = $10;
 $9 = $19;
 $20 = $9;
 $14 = $20;
 while(1) {
  $3 = $15;
  $4 = $16;
  $5 = 1;
  $21 = $14;
  $22 = ((($16)) + 4|0);
  $23 = HEAP32[$22>>2]|0;
  $2 = $23;
  $24 = $2;
  $6 = $21;
  $7 = $24;
  $25 = $7;
  __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2Ev($25);
  $26 = ((($16)) + 4|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ((($27)) + 12|0);
  HEAP32[$26>>2] = $28;
  $29 = $13;
  $30 = (($29) + -1)|0;
  $13 = $30;
  $8 = $15;
  $31 = $13;
  $32 = ($31>>>0)>(0);
  if (!($32)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEERNS_9allocatorIS3_EEEC2EjjS6_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $11 = sp + 136|0;
 $15 = sp + 120|0;
 $32 = sp + 52|0;
 $39 = sp + 24|0;
 $44 = sp + 4|0;
 $45 = sp;
 $40 = $0;
 $41 = $1;
 $42 = $2;
 $43 = $3;
 $46 = $40;
 $47 = ((($46)) + 12|0);
 $37 = $39;
 $38 = -1;
 $48 = $37;
 HEAP32[$48>>2] = 0;
 $49 = HEAP32[$39>>2]|0;
 HEAP32[$44>>2] = $49;
 $17 = $44;
 $50 = $43;
 $14 = $47;
 HEAP32[$15>>2] = 0;
 $16 = $50;
 $51 = $14;
 $13 = $15;
 $52 = $13;
 $53 = HEAP32[$52>>2]|0;
 $54 = $16;
 $7 = $54;
 $55 = $7;
 $10 = $51;
 HEAP32[$11>>2] = $53;
 $12 = $55;
 $56 = $10;
 $9 = $11;
 $57 = $9;
 $58 = HEAP32[$57>>2]|0;
 HEAP32[$56>>2] = $58;
 $59 = ((($56)) + 4|0);
 $60 = $12;
 $8 = $60;
 $61 = $8;
 HEAP32[$59>>2] = $61;
 $62 = $41;
 $63 = ($62|0)!=(0);
 if (!($63)) {
  $30 = $32;
  $31 = -1;
  $90 = $30;
  HEAP32[$90>>2] = 0;
  $91 = HEAP32[$32>>2]|0;
  HEAP32[$45>>2] = $91;
  $33 = $45;
  $92 = 0;
  HEAP32[$46>>2] = $92;
  $93 = HEAP32[$46>>2]|0;
  $94 = $42;
  $95 = (($93) + (($94*12)|0)|0);
  $96 = ((($46)) + 8|0);
  HEAP32[$96>>2] = $95;
  $97 = ((($46)) + 4|0);
  HEAP32[$97>>2] = $95;
  $98 = HEAP32[$46>>2]|0;
  $99 = $41;
  $100 = (($98) + (($99*12)|0)|0);
  $36 = $46;
  $101 = $36;
  $102 = ((($101)) + 12|0);
  $35 = $102;
  $103 = $35;
  $34 = $103;
  $104 = $34;
  HEAP32[$104>>2] = $100;
  STACKTOP = sp;return;
 }
 $6 = $46;
 $64 = $6;
 $65 = ((($64)) + 12|0);
 $5 = $65;
 $66 = $5;
 $4 = $66;
 $67 = $4;
 $68 = ((($67)) + 4|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = $41;
 $28 = $69;
 $29 = $70;
 $71 = $28;
 $72 = $29;
 $25 = $71;
 $26 = $72;
 $27 = 0;
 $73 = $25;
 $74 = $26;
 $24 = $73;
 $75 = ($74>>>0)>(357913941);
 if (!($75)) {
  $86 = $26;
  $87 = ($86*12)|0;
  $23 = $87;
  $88 = $23;
  $89 = (__Znwj($88)|0);
  $92 = $89;
  HEAP32[$46>>2] = $92;
  $93 = HEAP32[$46>>2]|0;
  $94 = $42;
  $95 = (($93) + (($94*12)|0)|0);
  $96 = ((($46)) + 8|0);
  HEAP32[$96>>2] = $95;
  $97 = ((($46)) + 4|0);
  HEAP32[$97>>2] = $95;
  $98 = HEAP32[$46>>2]|0;
  $99 = $41;
  $100 = (($98) + (($99*12)|0)|0);
  $36 = $46;
  $101 = $36;
  $102 = ((($101)) + 12|0);
  $35 = $102;
  $103 = $35;
  $34 = $103;
  $104 = $34;
  HEAP32[$104>>2] = $100;
  STACKTOP = sp;return;
 }
 $20 = 1110;
 $76 = (___cxa_allocate_exception(8)|0);
 $77 = $20;
 $18 = $76;
 $19 = $77;
 $78 = $18;
 $79 = $19;
 __THREW__ = 0;
 invoke_vii(114,($78|0),($79|0));
 $80 = __THREW__; __THREW__ = 0;
 $81 = $80&1;
 if ($81) {
  $82 = ___cxa_find_matching_catch_2()|0;
  $83 = tempRet0;
  $21 = $82;
  $22 = $83;
  ___cxa_free_exception(($76|0));
  $84 = $21;
  $85 = $22;
  ___resumeException($84|0);
  // unreachable;
 } else {
  HEAP32[$78>>2] = (920);
  ___cxa_throw(($76|0),(104|0),(21|0));
  // unreachable;
 }
}
function __ZNSt3__214__split_bufferIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEERNS_9allocatorIS3_EEE18__construct_at_endEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $8 = $0;
 $9 = $1;
 $11 = $8;
 $7 = $11;
 $12 = $7;
 $13 = ((($12)) + 12|0);
 $6 = $13;
 $14 = $6;
 $5 = $14;
 $15 = $5;
 $16 = ((($15)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $10 = $17;
 while(1) {
  $18 = $10;
  $19 = ((($11)) + 8|0);
  $20 = HEAP32[$19>>2]|0;
  $2 = $20;
  $21 = $2;
  $3 = $18;
  $4 = $21;
  $22 = $4;
  __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2Ev($22);
  $23 = ((($11)) + 8|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ((($24)) + 12|0);
  HEAP32[$23>>2] = $25;
  $26 = $9;
  $27 = (($26) + -1)|0;
  $9 = $27;
  $28 = $9;
  $29 = ($28>>>0)>(0);
  if (!($29)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(368|0);
 $20 = sp + 288|0;
 $26 = sp + 264|0;
 $38 = sp + 216|0;
 $91 = $0;
 $92 = $1;
 $93 = $91;
 $90 = $93;
 $94 = $90;
 $89 = $94;
 $95 = $89;
 $96 = HEAP32[$95>>2]|0;
 $88 = $96;
 $97 = $88;
 $67 = $94;
 $98 = $67;
 $99 = HEAP32[$98>>2]|0;
 $66 = $99;
 $100 = $66;
 $72 = $94;
 $101 = $72;
 $71 = $101;
 $102 = $71;
 $70 = $102;
 $103 = $70;
 $104 = ((($103)) + 8|0);
 $69 = $104;
 $105 = $69;
 $68 = $105;
 $106 = $68;
 $107 = HEAP32[$106>>2]|0;
 $108 = HEAP32[$102>>2]|0;
 $109 = $107;
 $110 = $108;
 $111 = (($109) - ($110))|0;
 $112 = (($111|0) / 12)&-1;
 $113 = (($100) + (($112*12)|0)|0);
 $74 = $94;
 $114 = $74;
 $115 = HEAP32[$114>>2]|0;
 $73 = $115;
 $116 = $73;
 $75 = $94;
 $117 = $75;
 $118 = ((($117)) + 4|0);
 $119 = HEAP32[$118>>2]|0;
 $120 = HEAP32[$117>>2]|0;
 $121 = $119;
 $122 = $120;
 $123 = (($121) - ($122))|0;
 $124 = (($123|0) / 12)&-1;
 $125 = (($116) + (($124*12)|0)|0);
 $77 = $94;
 $126 = $77;
 $127 = HEAP32[$126>>2]|0;
 $76 = $127;
 $128 = $76;
 $82 = $94;
 $129 = $82;
 $81 = $129;
 $130 = $81;
 $80 = $130;
 $131 = $80;
 $132 = ((($131)) + 8|0);
 $79 = $132;
 $133 = $79;
 $78 = $133;
 $134 = $78;
 $135 = HEAP32[$134>>2]|0;
 $136 = HEAP32[$130>>2]|0;
 $137 = $135;
 $138 = $136;
 $139 = (($137) - ($138))|0;
 $140 = (($139|0) / 12)&-1;
 $141 = (($128) + (($140*12)|0)|0);
 $83 = $94;
 $84 = $97;
 $85 = $113;
 $86 = $125;
 $87 = $141;
 $4 = $93;
 $142 = $4;
 $143 = ((($142)) + 8|0);
 $3 = $143;
 $144 = $3;
 $2 = $144;
 $145 = $2;
 $146 = HEAP32[$93>>2]|0;
 $147 = ((($93)) + 4|0);
 $148 = HEAP32[$147>>2]|0;
 $149 = $92;
 $150 = ((($149)) + 4|0);
 $11 = $145;
 $12 = $146;
 $13 = $148;
 $14 = $150;
 while(1) {
  $151 = $13;
  $152 = $12;
  $153 = ($151|0)!=($152|0);
  if (!($153)) {
   break;
  }
  $154 = $11;
  $155 = $14;
  $156 = HEAP32[$155>>2]|0;
  $157 = ((($156)) + -12|0);
  $10 = $157;
  $158 = $10;
  $159 = $13;
  $160 = ((($159)) + -12|0);
  $13 = $160;
  $6 = $160;
  $161 = $6;
  $5 = $161;
  $162 = $5;
  $7 = $154;
  $8 = $158;
  $9 = $162;
  $163 = $8;
  $164 = $9;
  __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2ERKS1_($163,$164);
  $165 = $14;
  $166 = HEAP32[$165>>2]|0;
  $167 = ((($166)) + -12|0);
  HEAP32[$165>>2] = $167;
 }
 $168 = $92;
 $169 = ((($168)) + 4|0);
 $18 = $93;
 $19 = $169;
 $170 = $18;
 $17 = $170;
 $171 = $17;
 $172 = HEAP32[$171>>2]|0;
 HEAP32[$20>>2] = $172;
 $173 = $19;
 $15 = $173;
 $174 = $15;
 $175 = HEAP32[$174>>2]|0;
 $176 = $18;
 HEAP32[$176>>2] = $175;
 $16 = $20;
 $177 = $16;
 $178 = HEAP32[$177>>2]|0;
 $179 = $19;
 HEAP32[$179>>2] = $178;
 $180 = ((($93)) + 4|0);
 $181 = $92;
 $182 = ((($181)) + 8|0);
 $24 = $180;
 $25 = $182;
 $183 = $24;
 $23 = $183;
 $184 = $23;
 $185 = HEAP32[$184>>2]|0;
 HEAP32[$26>>2] = $185;
 $186 = $25;
 $21 = $186;
 $187 = $21;
 $188 = HEAP32[$187>>2]|0;
 $189 = $24;
 HEAP32[$189>>2] = $188;
 $22 = $26;
 $190 = $22;
 $191 = HEAP32[$190>>2]|0;
 $192 = $25;
 HEAP32[$192>>2] = $191;
 $29 = $93;
 $193 = $29;
 $194 = ((($193)) + 8|0);
 $28 = $194;
 $195 = $28;
 $27 = $195;
 $196 = $27;
 $197 = $92;
 $32 = $197;
 $198 = $32;
 $199 = ((($198)) + 12|0);
 $31 = $199;
 $200 = $31;
 $30 = $200;
 $201 = $30;
 $36 = $196;
 $37 = $201;
 $202 = $36;
 $35 = $202;
 $203 = $35;
 $204 = HEAP32[$203>>2]|0;
 HEAP32[$38>>2] = $204;
 $205 = $37;
 $33 = $205;
 $206 = $33;
 $207 = HEAP32[$206>>2]|0;
 $208 = $36;
 HEAP32[$208>>2] = $207;
 $34 = $38;
 $209 = $34;
 $210 = HEAP32[$209>>2]|0;
 $211 = $37;
 HEAP32[$211>>2] = $210;
 $212 = $92;
 $213 = ((($212)) + 4|0);
 $214 = HEAP32[$213>>2]|0;
 $215 = $92;
 HEAP32[$215>>2] = $214;
 $39 = $93;
 $216 = $39;
 $217 = ((($216)) + 4|0);
 $218 = HEAP32[$217>>2]|0;
 $219 = HEAP32[$216>>2]|0;
 $220 = $218;
 $221 = $219;
 $222 = (($220) - ($221))|0;
 $223 = (($222|0) / 12)&-1;
 $63 = $93;
 $64 = $223;
 $224 = $63;
 $62 = $224;
 $225 = $62;
 $226 = HEAP32[$225>>2]|0;
 $61 = $226;
 $227 = $61;
 $41 = $224;
 $228 = $41;
 $229 = HEAP32[$228>>2]|0;
 $40 = $229;
 $230 = $40;
 $46 = $224;
 $231 = $46;
 $45 = $231;
 $232 = $45;
 $44 = $232;
 $233 = $44;
 $234 = ((($233)) + 8|0);
 $43 = $234;
 $235 = $43;
 $42 = $235;
 $236 = $42;
 $237 = HEAP32[$236>>2]|0;
 $238 = HEAP32[$232>>2]|0;
 $239 = $237;
 $240 = $238;
 $241 = (($239) - ($240))|0;
 $242 = (($241|0) / 12)&-1;
 $243 = (($230) + (($242*12)|0)|0);
 $48 = $224;
 $244 = $48;
 $245 = HEAP32[$244>>2]|0;
 $47 = $245;
 $246 = $47;
 $53 = $224;
 $247 = $53;
 $52 = $247;
 $248 = $52;
 $51 = $248;
 $249 = $51;
 $250 = ((($249)) + 8|0);
 $50 = $250;
 $251 = $50;
 $49 = $251;
 $252 = $49;
 $253 = HEAP32[$252>>2]|0;
 $254 = HEAP32[$248>>2]|0;
 $255 = $253;
 $256 = $254;
 $257 = (($255) - ($256))|0;
 $258 = (($257|0) / 12)&-1;
 $259 = (($246) + (($258*12)|0)|0);
 $55 = $224;
 $260 = $55;
 $261 = HEAP32[$260>>2]|0;
 $54 = $261;
 $262 = $54;
 $263 = $64;
 $264 = (($262) + (($263*12)|0)|0);
 $56 = $224;
 $57 = $227;
 $58 = $243;
 $59 = $259;
 $60 = $264;
 $65 = $93;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEERNS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $18 = sp + 8|0;
 $21 = sp + 133|0;
 $29 = sp;
 $32 = sp + 132|0;
 $34 = $0;
 $35 = $34;
 $33 = $35;
 $36 = $33;
 $37 = ((($36)) + 4|0);
 $38 = HEAP32[$37>>2]|0;
 $30 = $36;
 $31 = $38;
 $39 = $30;
 $40 = $31;
 ;HEAP8[$29>>0]=HEAP8[$32>>0]|0;
 $25 = $39;
 $26 = $40;
 $41 = $25;
 while(1) {
  $42 = $26;
  $43 = ((($41)) + 8|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($42|0)!=($44|0);
  if (!($45)) {
   break;
  }
  $24 = $41;
  $46 = $24;
  $47 = ((($46)) + 12|0);
  $23 = $47;
  $48 = $23;
  $22 = $48;
  $49 = $22;
  $50 = ((($49)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = ((($41)) + 8|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = ((($53)) + -12|0);
  HEAP32[$52>>2] = $54;
  $15 = $54;
  $55 = $15;
  $19 = $51;
  $20 = $55;
  $56 = $19;
  $57 = $20;
  ;HEAP8[$18>>0]=HEAP8[$21>>0]|0;
  $16 = $56;
  $17 = $57;
  $58 = $17;
  __THREW__ = 0;
  invoke_vi(36,($58|0));
  $59 = __THREW__; __THREW__ = 0;
  $60 = $59&1;
  if ($60) {
   label = 4;
   break;
  }
 }
 if ((label|0) == 4) {
  $61 = ___cxa_find_matching_catch_2()|0;
  $62 = tempRet0;
  $27 = $61;
  $28 = $62;
  $63 = $27;
  ___cxa_call_unexpected(($63|0));
  // unreachable;
 }
 $64 = HEAP32[$35>>2]|0;
 $65 = ($64|0)!=(0|0);
 if (!($65)) {
  STACKTOP = sp;return;
 }
 $14 = $35;
 $66 = $14;
 $67 = ((($66)) + 12|0);
 $13 = $67;
 $68 = $13;
 $12 = $68;
 $69 = $12;
 $70 = ((($69)) + 4|0);
 $71 = HEAP32[$70>>2]|0;
 $72 = HEAP32[$35>>2]|0;
 $11 = $35;
 $73 = $11;
 $10 = $73;
 $74 = $10;
 $75 = ((($74)) + 12|0);
 $9 = $75;
 $76 = $9;
 $8 = $76;
 $77 = $8;
 $78 = HEAP32[$77>>2]|0;
 $79 = HEAP32[$73>>2]|0;
 $80 = $78;
 $81 = $79;
 $82 = (($80) - ($81))|0;
 $83 = (($82|0) / 12)&-1;
 $5 = $71;
 $6 = $72;
 $7 = $83;
 $84 = $5;
 $85 = $6;
 $86 = $7;
 $2 = $84;
 $3 = $85;
 $4 = $86;
 $87 = $3;
 $1 = $87;
 $88 = $1;
 __ZdlPv($88);
 STACKTOP = sp;return;
}
function __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2Ev($4);
 __THREW__ = 0;
 invoke_v(50);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = ___cxa_find_matching_catch_2()|0;
 $8 = tempRet0;
 $2 = $7;
 $3 = $8;
 __THREW__ = 0;
 invoke_vi(52,($4|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $13 = ___cxa_find_matching_catch_3(0|0)|0;
  $14 = tempRet0;
  ___clang_call_terminate($13);
  // unreachable;
 } else {
  $11 = $2;
  $12 = $3;
  ___resumeException($11|0);
  // unreachable;
 }
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2Ev($2);
 __ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE22_check_template_paramsEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNKSt3__26vectorIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9allocatorIS3_EEE8max_sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $3 = sp + 8|0;
 $5 = sp + 77|0;
 $11 = sp;
 $14 = sp + 76|0;
 $19 = sp + 16|0;
 $20 = sp + 12|0;
 $18 = $0;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $4 = $25;
 $26 = $4;
 ;HEAP8[$3>>0]=HEAP8[$5>>0]|0;
 $2 = $26;
 $27 = $2;
 $1 = $27;
 HEAP32[$19>>2] = 357913941;
 HEAP32[$20>>2] = 2147483647;
 $12 = $19;
 $13 = $20;
 $28 = $12;
 $29 = $13;
 ;HEAP8[$11>>0]=HEAP8[$14>>0]|0;
 $9 = $28;
 $10 = $29;
 $30 = $10;
 $31 = $9;
 $6 = $11;
 $7 = $30;
 $8 = $31;
 $32 = $7;
 $33 = HEAP32[$32>>2]|0;
 $34 = $8;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $10;
 $38 = $9;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIKiEEvRT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $13 = sp;
 $16 = sp + 156|0;
 $24 = sp + 72|0;
 $27 = sp + 60|0;
 $35 = sp + 12|0;
 $32 = $0;
 $33 = $1;
 $38 = $32;
 $31 = $38;
 $39 = $31;
 $40 = ((($39)) + 8|0);
 $30 = $40;
 $41 = $30;
 $29 = $41;
 $42 = $29;
 $34 = $42;
 $28 = $38;
 $43 = $28;
 $44 = ((($43)) + 4|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = HEAP32[$43>>2]|0;
 $47 = $45;
 $48 = $46;
 $49 = (($47) - ($48))|0;
 $50 = (($49|0) / 4)&-1;
 $51 = (($50) + 1)|0;
 $23 = $38;
 HEAP32[$24>>2] = $51;
 $52 = $23;
 $53 = (__ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv($52)|0);
 $25 = $53;
 $54 = HEAP32[$24>>2]|0;
 $55 = $25;
 $56 = ($54>>>0)>($55>>>0);
 if ($56) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($52);
  // unreachable;
 }
 $21 = $52;
 $57 = $21;
 $20 = $57;
 $58 = $20;
 $19 = $58;
 $59 = $19;
 $60 = ((($59)) + 8|0);
 $18 = $60;
 $61 = $18;
 $17 = $61;
 $62 = $17;
 $63 = HEAP32[$62>>2]|0;
 $64 = HEAP32[$58>>2]|0;
 $65 = $63;
 $66 = $64;
 $67 = (($65) - ($66))|0;
 $68 = (($67|0) / 4)&-1;
 $26 = $68;
 $69 = $26;
 $70 = $25;
 $71 = (($70>>>0) / 2)&-1;
 $72 = ($69>>>0)>=($71>>>0);
 if ($72) {
  $73 = $25;
  $22 = $73;
 } else {
  $74 = $26;
  $75 = $74<<1;
  HEAP32[$27>>2] = $75;
  $14 = $27;
  $15 = $24;
  $76 = $14;
  $77 = $15;
  ;HEAP8[$13>>0]=HEAP8[$16>>0]|0;
  $11 = $76;
  $12 = $77;
  $78 = $11;
  $79 = $12;
  $8 = $13;
  $9 = $78;
  $10 = $79;
  $80 = $9;
  $81 = HEAP32[$80>>2]|0;
  $82 = $10;
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81>>>0)<($83>>>0);
  $85 = $12;
  $86 = $11;
  $87 = $84 ? $85 : $86;
  $88 = HEAP32[$87>>2]|0;
  $22 = $88;
 }
 $89 = $22;
 $7 = $38;
 $90 = $7;
 $91 = ((($90)) + 4|0);
 $92 = HEAP32[$91>>2]|0;
 $93 = HEAP32[$90>>2]|0;
 $94 = $92;
 $95 = $93;
 $96 = (($94) - ($95))|0;
 $97 = (($96|0) / 4)&-1;
 $98 = $34;
 __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEEC2EjjS3_($35,$89,$97,$98);
 $99 = $34;
 $100 = ((($35)) + 8|0);
 $101 = HEAP32[$100>>2]|0;
 $6 = $101;
 $102 = $6;
 $103 = $33;
 $5 = $103;
 $104 = $5;
 $2 = $99;
 $3 = $102;
 $4 = $104;
 $105 = $3;
 $106 = $4;
 $107 = HEAP32[$106>>2]|0;
 HEAP32[$105>>2] = $107;
 $108 = ((($35)) + 8|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = ((($109)) + 4|0);
 HEAP32[$108>>2] = $110;
 __THREW__ = 0;
 invoke_vii(115,($38|0),($35|0));
 $111 = __THREW__; __THREW__ = 0;
 $112 = $111&1;
 if (!($112)) {
  __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev($35);
  STACKTOP = sp;return;
 }
 $113 = ___cxa_find_matching_catch_2()|0;
 $114 = tempRet0;
 $36 = $113;
 $37 = $114;
 __THREW__ = 0;
 invoke_vi(116,($35|0));
 $115 = __THREW__; __THREW__ = 0;
 $116 = $115&1;
 if ($116) {
  $119 = ___cxa_find_matching_catch_3(0|0)|0;
  $120 = tempRet0;
  ___clang_call_terminate($119);
  // unreachable;
 } else {
  $117 = $36;
  $118 = $37;
  ___resumeException($117|0);
  // unreachable;
 }
}
function __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEEC2EjjS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $11 = sp + 136|0;
 $15 = sp + 120|0;
 $32 = sp + 52|0;
 $39 = sp + 24|0;
 $44 = sp + 4|0;
 $45 = sp;
 $40 = $0;
 $41 = $1;
 $42 = $2;
 $43 = $3;
 $46 = $40;
 $47 = ((($46)) + 12|0);
 $37 = $39;
 $38 = -1;
 $48 = $37;
 HEAP32[$48>>2] = 0;
 $49 = HEAP32[$39>>2]|0;
 HEAP32[$44>>2] = $49;
 $17 = $44;
 $50 = $43;
 $14 = $47;
 HEAP32[$15>>2] = 0;
 $16 = $50;
 $51 = $14;
 $13 = $15;
 $52 = $13;
 $53 = HEAP32[$52>>2]|0;
 $54 = $16;
 $7 = $54;
 $55 = $7;
 $10 = $51;
 HEAP32[$11>>2] = $53;
 $12 = $55;
 $56 = $10;
 $9 = $11;
 $57 = $9;
 $58 = HEAP32[$57>>2]|0;
 HEAP32[$56>>2] = $58;
 $59 = ((($56)) + 4|0);
 $60 = $12;
 $8 = $60;
 $61 = $8;
 HEAP32[$59>>2] = $61;
 $62 = $41;
 $63 = ($62|0)!=(0);
 if (!($63)) {
  $30 = $32;
  $31 = -1;
  $90 = $30;
  HEAP32[$90>>2] = 0;
  $91 = HEAP32[$32>>2]|0;
  HEAP32[$45>>2] = $91;
  $33 = $45;
  $92 = 0;
  HEAP32[$46>>2] = $92;
  $93 = HEAP32[$46>>2]|0;
  $94 = $42;
  $95 = (($93) + ($94<<2)|0);
  $96 = ((($46)) + 8|0);
  HEAP32[$96>>2] = $95;
  $97 = ((($46)) + 4|0);
  HEAP32[$97>>2] = $95;
  $98 = HEAP32[$46>>2]|0;
  $99 = $41;
  $100 = (($98) + ($99<<2)|0);
  $36 = $46;
  $101 = $36;
  $102 = ((($101)) + 12|0);
  $35 = $102;
  $103 = $35;
  $34 = $103;
  $104 = $34;
  HEAP32[$104>>2] = $100;
  STACKTOP = sp;return;
 }
 $6 = $46;
 $64 = $6;
 $65 = ((($64)) + 12|0);
 $5 = $65;
 $66 = $5;
 $4 = $66;
 $67 = $4;
 $68 = ((($67)) + 4|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = $41;
 $28 = $69;
 $29 = $70;
 $71 = $28;
 $72 = $29;
 $25 = $71;
 $26 = $72;
 $27 = 0;
 $73 = $25;
 $74 = $26;
 $24 = $73;
 $75 = ($74>>>0)>(1073741823);
 if (!($75)) {
  $86 = $26;
  $87 = $86<<2;
  $23 = $87;
  $88 = $23;
  $89 = (__Znwj($88)|0);
  $92 = $89;
  HEAP32[$46>>2] = $92;
  $93 = HEAP32[$46>>2]|0;
  $94 = $42;
  $95 = (($93) + ($94<<2)|0);
  $96 = ((($46)) + 8|0);
  HEAP32[$96>>2] = $95;
  $97 = ((($46)) + 4|0);
  HEAP32[$97>>2] = $95;
  $98 = HEAP32[$46>>2]|0;
  $99 = $41;
  $100 = (($98) + ($99<<2)|0);
  $36 = $46;
  $101 = $36;
  $102 = ((($101)) + 12|0);
  $35 = $102;
  $103 = $35;
  $34 = $103;
  $104 = $34;
  HEAP32[$104>>2] = $100;
  STACKTOP = sp;return;
 }
 $20 = 1110;
 $76 = (___cxa_allocate_exception(8)|0);
 $77 = $20;
 $18 = $76;
 $19 = $77;
 $78 = $18;
 $79 = $19;
 __THREW__ = 0;
 invoke_vii(114,($78|0),($79|0));
 $80 = __THREW__; __THREW__ = 0;
 $81 = $80&1;
 if ($81) {
  $82 = ___cxa_find_matching_catch_2()|0;
  $83 = tempRet0;
  $21 = $82;
  $22 = $83;
  ___cxa_free_exception(($76|0));
  $84 = $21;
  $85 = $22;
  ___resumeException($84|0);
  // unreachable;
 } else {
  HEAP32[$78>>2] = (920);
  ___cxa_throw(($76|0),(104|0),(21|0));
  // unreachable;
 }
}
function __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(352|0);
 $15 = sp + 288|0;
 $21 = sp + 264|0;
 $33 = sp + 216|0;
 $86 = $0;
 $87 = $1;
 $88 = $86;
 $85 = $88;
 $89 = $85;
 $84 = $89;
 $90 = $84;
 $91 = HEAP32[$90>>2]|0;
 $83 = $91;
 $92 = $83;
 $62 = $89;
 $93 = $62;
 $94 = HEAP32[$93>>2]|0;
 $61 = $94;
 $95 = $61;
 $67 = $89;
 $96 = $67;
 $66 = $96;
 $97 = $66;
 $65 = $97;
 $98 = $65;
 $99 = ((($98)) + 8|0);
 $64 = $99;
 $100 = $64;
 $63 = $100;
 $101 = $63;
 $102 = HEAP32[$101>>2]|0;
 $103 = HEAP32[$97>>2]|0;
 $104 = $102;
 $105 = $103;
 $106 = (($104) - ($105))|0;
 $107 = (($106|0) / 4)&-1;
 $108 = (($95) + ($107<<2)|0);
 $69 = $89;
 $109 = $69;
 $110 = HEAP32[$109>>2]|0;
 $68 = $110;
 $111 = $68;
 $70 = $89;
 $112 = $70;
 $113 = ((($112)) + 4|0);
 $114 = HEAP32[$113>>2]|0;
 $115 = HEAP32[$112>>2]|0;
 $116 = $114;
 $117 = $115;
 $118 = (($116) - ($117))|0;
 $119 = (($118|0) / 4)&-1;
 $120 = (($111) + ($119<<2)|0);
 $72 = $89;
 $121 = $72;
 $122 = HEAP32[$121>>2]|0;
 $71 = $122;
 $123 = $71;
 $77 = $89;
 $124 = $77;
 $76 = $124;
 $125 = $76;
 $75 = $125;
 $126 = $75;
 $127 = ((($126)) + 8|0);
 $74 = $127;
 $128 = $74;
 $73 = $128;
 $129 = $73;
 $130 = HEAP32[$129>>2]|0;
 $131 = HEAP32[$125>>2]|0;
 $132 = $130;
 $133 = $131;
 $134 = (($132) - ($133))|0;
 $135 = (($134|0) / 4)&-1;
 $136 = (($123) + ($135<<2)|0);
 $78 = $89;
 $79 = $92;
 $80 = $108;
 $81 = $120;
 $82 = $136;
 $4 = $88;
 $137 = $4;
 $138 = ((($137)) + 8|0);
 $3 = $138;
 $139 = $3;
 $2 = $139;
 $140 = $2;
 $141 = HEAP32[$88>>2]|0;
 $142 = ((($88)) + 4|0);
 $143 = HEAP32[$142>>2]|0;
 $144 = $87;
 $145 = ((($144)) + 4|0);
 $5 = $140;
 $6 = $141;
 $7 = $143;
 $8 = $145;
 $146 = $7;
 $147 = $6;
 $148 = $146;
 $149 = $147;
 $150 = (($148) - ($149))|0;
 $151 = (($150|0) / 4)&-1;
 $9 = $151;
 $152 = $9;
 $153 = $8;
 $154 = HEAP32[$153>>2]|0;
 $155 = (0 - ($152))|0;
 $156 = (($154) + ($155<<2)|0);
 HEAP32[$153>>2] = $156;
 $157 = $9;
 $158 = ($157|0)>(0);
 if ($158) {
  $159 = $8;
  $160 = HEAP32[$159>>2]|0;
  $161 = $6;
  $162 = $9;
  $163 = $162<<2;
  _memcpy(($160|0),($161|0),($163|0))|0;
 }
 $164 = $87;
 $165 = ((($164)) + 4|0);
 $13 = $88;
 $14 = $165;
 $166 = $13;
 $12 = $166;
 $167 = $12;
 $168 = HEAP32[$167>>2]|0;
 HEAP32[$15>>2] = $168;
 $169 = $14;
 $10 = $169;
 $170 = $10;
 $171 = HEAP32[$170>>2]|0;
 $172 = $13;
 HEAP32[$172>>2] = $171;
 $11 = $15;
 $173 = $11;
 $174 = HEAP32[$173>>2]|0;
 $175 = $14;
 HEAP32[$175>>2] = $174;
 $176 = ((($88)) + 4|0);
 $177 = $87;
 $178 = ((($177)) + 8|0);
 $19 = $176;
 $20 = $178;
 $179 = $19;
 $18 = $179;
 $180 = $18;
 $181 = HEAP32[$180>>2]|0;
 HEAP32[$21>>2] = $181;
 $182 = $20;
 $16 = $182;
 $183 = $16;
 $184 = HEAP32[$183>>2]|0;
 $185 = $19;
 HEAP32[$185>>2] = $184;
 $17 = $21;
 $186 = $17;
 $187 = HEAP32[$186>>2]|0;
 $188 = $20;
 HEAP32[$188>>2] = $187;
 $24 = $88;
 $189 = $24;
 $190 = ((($189)) + 8|0);
 $23 = $190;
 $191 = $23;
 $22 = $191;
 $192 = $22;
 $193 = $87;
 $27 = $193;
 $194 = $27;
 $195 = ((($194)) + 12|0);
 $26 = $195;
 $196 = $26;
 $25 = $196;
 $197 = $25;
 $31 = $192;
 $32 = $197;
 $198 = $31;
 $30 = $198;
 $199 = $30;
 $200 = HEAP32[$199>>2]|0;
 HEAP32[$33>>2] = $200;
 $201 = $32;
 $28 = $201;
 $202 = $28;
 $203 = HEAP32[$202>>2]|0;
 $204 = $31;
 HEAP32[$204>>2] = $203;
 $29 = $33;
 $205 = $29;
 $206 = HEAP32[$205>>2]|0;
 $207 = $32;
 HEAP32[$207>>2] = $206;
 $208 = $87;
 $209 = ((($208)) + 4|0);
 $210 = HEAP32[$209>>2]|0;
 $211 = $87;
 HEAP32[$211>>2] = $210;
 $34 = $88;
 $212 = $34;
 $213 = ((($212)) + 4|0);
 $214 = HEAP32[$213>>2]|0;
 $215 = HEAP32[$212>>2]|0;
 $216 = $214;
 $217 = $215;
 $218 = (($216) - ($217))|0;
 $219 = (($218|0) / 4)&-1;
 $58 = $88;
 $59 = $219;
 $220 = $58;
 $57 = $220;
 $221 = $57;
 $222 = HEAP32[$221>>2]|0;
 $56 = $222;
 $223 = $56;
 $36 = $220;
 $224 = $36;
 $225 = HEAP32[$224>>2]|0;
 $35 = $225;
 $226 = $35;
 $41 = $220;
 $227 = $41;
 $40 = $227;
 $228 = $40;
 $39 = $228;
 $229 = $39;
 $230 = ((($229)) + 8|0);
 $38 = $230;
 $231 = $38;
 $37 = $231;
 $232 = $37;
 $233 = HEAP32[$232>>2]|0;
 $234 = HEAP32[$228>>2]|0;
 $235 = $233;
 $236 = $234;
 $237 = (($235) - ($236))|0;
 $238 = (($237|0) / 4)&-1;
 $239 = (($226) + ($238<<2)|0);
 $43 = $220;
 $240 = $43;
 $241 = HEAP32[$240>>2]|0;
 $42 = $241;
 $242 = $42;
 $48 = $220;
 $243 = $48;
 $47 = $243;
 $244 = $47;
 $46 = $244;
 $245 = $46;
 $246 = ((($245)) + 8|0);
 $45 = $246;
 $247 = $45;
 $44 = $247;
 $248 = $44;
 $249 = HEAP32[$248>>2]|0;
 $250 = HEAP32[$244>>2]|0;
 $251 = $249;
 $252 = $250;
 $253 = (($251) - ($252))|0;
 $254 = (($253|0) / 4)&-1;
 $255 = (($242) + ($254<<2)|0);
 $50 = $220;
 $256 = $50;
 $257 = HEAP32[$256>>2]|0;
 $49 = $257;
 $258 = $49;
 $259 = $59;
 $260 = (($258) + ($259<<2)|0);
 $51 = $220;
 $52 = $223;
 $53 = $239;
 $54 = $255;
 $55 = $260;
 $60 = $88;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $18 = sp + 8|0;
 $21 = sp + 125|0;
 $27 = sp;
 $30 = sp + 124|0;
 $32 = $0;
 $33 = $32;
 $31 = $33;
 $34 = $31;
 $35 = ((($34)) + 4|0);
 $36 = HEAP32[$35>>2]|0;
 $28 = $34;
 $29 = $36;
 $37 = $28;
 $38 = $29;
 ;HEAP8[$27>>0]=HEAP8[$30>>0]|0;
 $25 = $37;
 $26 = $38;
 $39 = $25;
 while(1) {
  $40 = $26;
  $41 = ((($39)) + 8|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = ($40|0)!=($42|0);
  if (!($43)) {
   break;
  }
  $24 = $39;
  $44 = $24;
  $45 = ((($44)) + 12|0);
  $23 = $45;
  $46 = $23;
  $22 = $46;
  $47 = $22;
  $48 = ((($47)) + 4|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ((($39)) + 8|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = ((($51)) + -4|0);
  HEAP32[$50>>2] = $52;
  $15 = $52;
  $53 = $15;
  $19 = $49;
  $20 = $53;
  $54 = $19;
  $55 = $20;
  ;HEAP8[$18>>0]=HEAP8[$21>>0]|0;
  $16 = $54;
  $17 = $55;
 }
 $56 = HEAP32[$33>>2]|0;
 $57 = ($56|0)!=(0|0);
 if (!($57)) {
  STACKTOP = sp;return;
 }
 $7 = $33;
 $58 = $7;
 $59 = ((($58)) + 12|0);
 $6 = $59;
 $60 = $6;
 $5 = $60;
 $61 = $5;
 $62 = ((($61)) + 4|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = HEAP32[$33>>2]|0;
 $4 = $33;
 $65 = $4;
 $3 = $65;
 $66 = $3;
 $67 = ((($66)) + 12|0);
 $2 = $67;
 $68 = $2;
 $1 = $68;
 $69 = $1;
 $70 = HEAP32[$69>>2]|0;
 $71 = HEAP32[$65>>2]|0;
 $72 = $70;
 $73 = $71;
 $74 = (($72) - ($73))|0;
 $75 = (($74|0) / 4)&-1;
 $12 = $63;
 $13 = $64;
 $14 = $75;
 $76 = $12;
 $77 = $13;
 $78 = $14;
 $9 = $76;
 $10 = $77;
 $11 = $78;
 $79 = $10;
 $8 = $79;
 $80 = $8;
 __ZdlPv($80);
 STACKTOP = sp;return;
}
function __ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $3 = sp + 8|0;
 $5 = sp + 77|0;
 $11 = sp;
 $14 = sp + 76|0;
 $19 = sp + 16|0;
 $20 = sp + 12|0;
 $18 = $0;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $4 = $25;
 $26 = $4;
 ;HEAP8[$3>>0]=HEAP8[$5>>0]|0;
 $2 = $26;
 $27 = $2;
 $1 = $27;
 HEAP32[$19>>2] = 1073741823;
 HEAP32[$20>>2] = 2147483647;
 $12 = $19;
 $13 = $20;
 $28 = $12;
 $29 = $13;
 ;HEAP8[$11>>0]=HEAP8[$14>>0]|0;
 $9 = $28;
 $10 = $29;
 $30 = $10;
 $31 = $9;
 $6 = $11;
 $7 = $30;
 $8 = $31;
 $32 = $7;
 $33 = HEAP32[$32>>2]|0;
 $34 = $8;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $10;
 $38 = $9;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6_init2IijEEviiPNS_8internal9enable_ifILb1ET_E4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6resizeEii($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6resizeEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $7;
 $11 = $8;
 $12 = ($11|0)>=(0);
 $13 = $9;
 $14 = ($13|0)>=(0);
 $or$cond = $12 & $14;
 if (!($or$cond)) {
  ___assert_fail((1178|0),(1577|0),285,(1618|0));
  // unreachable;
 }
 $15 = $8;
 $16 = $9;
 $3 = $15;
 $4 = $16;
 $5 = 2147483647;
 $17 = $3;
 $18 = ($17|0)==(0);
 $19 = $4;
 $20 = ($19|0)==(0);
 $or$cond3 = $18 | $20;
 if ($or$cond3) {
  $27 = 0;
 } else {
  $21 = $3;
  $22 = $5;
  $23 = $4;
  $24 = (($22|0) / ($23|0))&-1;
  $25 = ($21|0)>($24|0);
  $27 = $25;
 }
 $26 = $27&1;
 $6 = $26;
 $28 = $6;
 $29 = $28&1;
 if ($29) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $30 = $8;
 $31 = $9;
 $32 = Math_imul($30, $31)|0;
 $33 = $8;
 $34 = $9;
 __ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EE6resizeEiii($10,$32,$33,$34);
 STACKTOP = sp;return;
}
function __ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EE6resizeEiii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = ((($8)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($8)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = Math_imul($11, $13)|0;
 $15 = ($9|0)!=($14|0);
 if (!($15)) {
  $26 = $6;
  $27 = ((($8)) + 4|0);
  HEAP32[$27>>2] = $26;
  $28 = $7;
  $29 = ((($8)) + 8|0);
  HEAP32[$29>>2] = $28;
  STACKTOP = sp;return;
 }
 $16 = HEAP32[$8>>2]|0;
 $17 = ((($8)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($8)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = Math_imul($18, $20)|0;
 __ZN5Eigen8internal31conditional_aligned_delete_autoIdLb1EEEvPT_j($16,$21);
 $22 = $5;
 $23 = ($22|0)!=(0);
 if ($23) {
  $24 = $5;
  $25 = (__ZN5Eigen8internal28conditional_aligned_new_autoIdLb1EEEPT_j($24)|0);
  $$sink = $25;
 } else {
  $$sink = 0;
 }
 HEAP32[$8>>2] = $$sink;
 $26 = $6;
 $27 = ((($8)) + 4|0);
 HEAP32[$27>>2] = $26;
 $28 = $7;
 $29 = ((($8)) + 8|0);
 HEAP32[$29>>2] = $28;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal28conditional_aligned_new_autoIdLb1EEEPT_j($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $5 = $3;
 $6 = ($5|0)==(0);
 if ($6) {
  $2 = 0;
  $14 = $2;
  STACKTOP = sp;return ($14|0);
 }
 $7 = $3;
 $1 = $7;
 $8 = $1;
 $9 = ($8>>>0)>(536870911);
 if ($9) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $10 = $3;
 $11 = $10<<3;
 $12 = (__ZN5Eigen8internal26conditional_aligned_mallocILb1EEEPvj($11)|0);
 $4 = $12;
 $13 = $4;
 $2 = $13;
 $14 = $2;
 STACKTOP = sp;return ($14|0);
}
function __ZN5Eigen8internal26conditional_aligned_mallocILb1EEEPvj($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN5Eigen8internal14aligned_mallocEj($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14aligned_mallocEj($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 __ZN5Eigen8internal28check_that_malloc_is_allowedEv();
 $3 = $1;
 $4 = (__ZN5Eigen8internal23handmade_aligned_mallocEj($3)|0);
 $2 = $4;
 $5 = $2;
 $6 = ($5|0)==(0|0);
 $7 = $1;
 $8 = ($7|0)!=(0);
 $or$cond = $6 & $8;
 if (!($or$cond)) {
  $9 = $2;
  STACKTOP = sp;return ($9|0);
 }
 __ZN5Eigen8internal19throw_std_bad_allocEv();
 $9 = $2;
 STACKTOP = sp;return ($9|0);
}
function __ZN5Eigen8internal28check_that_malloc_is_allowedEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN5Eigen8internal23handmade_aligned_mallocEj($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $5 = $2;
 $6 = (($5) + 16)|0;
 $7 = (_malloc($6)|0);
 $3 = $7;
 $8 = $3;
 $9 = ($8|0)==(0|0);
 if ($9) {
  $1 = 0;
  $19 = $1;
  STACKTOP = sp;return ($19|0);
 } else {
  $10 = $3;
  $11 = $10;
  $12 = $11 & -16;
  $13 = (($12) + 16)|0;
  $14 = $13;
  $4 = $14;
  $15 = $3;
  $16 = $4;
  $17 = ((($16)) + -4|0);
  HEAP32[$17>>2] = $15;
  $18 = $4;
  $1 = $18;
  $19 = $1;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1EE8coeffRefEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 8|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = $3;
 $10 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($9)|0);
 __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS3_($6,$10);
 $11 = $4;
 $12 = $5;
 __THREW__ = 0;
 $13 = (invoke_iiii(117,($6|0),($11|0),($12|0))|0);
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 if (!($15)) {
  __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev($6);
  STACKTOP = sp;return ($13|0);
 }
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $7 = $16;
 $8 = $17;
 __THREW__ = 0;
 invoke_vi(118,($6|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $7;
  $21 = $8;
  ___resumeException($20|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EE4colsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERKS5_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE8coeffRefEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $4;
 $9 = $5;
 $10 = ((($6)) + 4|0);
 $11 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($10)|0);
 $12 = Math_imul($9, $11)|0;
 $13 = (($8) + ($12))|0;
 $14 = (($7) + ($13<<3)|0);
 STACKTOP = sp;return ($14|0);
}
function __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(119,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(120,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(121,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    STACKTOP = sp;return;
   }
  }
 }
 $18 = ___cxa_find_matching_catch_2()|0;
 $19 = tempRet0;
 $4 = $18;
 $5 = $19;
 __THREW__ = 0;
 invoke_vi(122,($6|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if ($21) {
  $24 = ___cxa_find_matching_catch_3(0|0)|0;
  $25 = tempRet0;
  ___clang_call_terminate($24);
  // unreachable;
 } else {
  $22 = $4;
  $23 = $5;
  ___resumeException($22|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EE4dataEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi3EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11outerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal11noncopyableC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE9innerSizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal11noncopyableD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen13TransposeImplINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5DenseEEC2Ev($4);
 $5 = $3;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen13TransposeImplINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2INS_9TransposeIS2_EEEERKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2Ev($6);
 __ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EEC2Ev($6);
 __THREW__ = 0;
 invoke_v(50);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  $9 = $3;
  __THREW__ = 0;
  invoke_vii(123,($6|0),($9|0));
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if (!($11)) {
   $12 = $3;
   __THREW__ = 0;
   (invoke_iii(124,($6|0),($12|0))|0);
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   if (!($14)) {
    STACKTOP = sp;return;
   }
  }
 }
 $15 = ___cxa_find_matching_catch_2()|0;
 $16 = tempRet0;
 $4 = $15;
 $5 = $16;
 __THREW__ = 0;
 invoke_vi(125,($6|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $21 = ___cxa_find_matching_catch_3(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 } else {
  $19 = $4;
  $20 = $5;
  ___resumeException($19|0);
  // unreachable;
 }
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE10resizeLikeINS_9TransposeIS2_EEEEvRKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $10 = $6;
 $11 = $7;
 $12 = (__ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($11)|0);
 $8 = $12;
 $13 = $8;
 $14 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($13)|0);
 $15 = $8;
 $16 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($15)|0);
 $2 = $14;
 $3 = $16;
 $4 = 2147483647;
 $17 = $2;
 $18 = ($17|0)==(0);
 $19 = $3;
 $20 = ($19|0)==(0);
 $or$cond = $18 | $20;
 if ($or$cond) {
  $27 = 0;
 } else {
  $21 = $2;
  $22 = $4;
  $23 = $3;
  $24 = (($22|0) / ($23|0))&-1;
  $25 = ($21|0)>($24|0);
  $27 = $25;
 }
 $26 = $27&1;
 $5 = $26;
 $28 = $5;
 $29 = $28&1;
 if ($29) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $30 = $8;
 $31 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($30)|0);
 $32 = $8;
 $33 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($32)|0);
 $34 = Math_imul($31, $33)|0;
 $9 = $34;
 $35 = $8;
 $36 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($35)|0);
 $37 = $8;
 $38 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($37)|0);
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6resizeEii($10,$36,$38);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE12_set_noaliasINS_9TransposeIS2_EEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($7)|0);
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9TransposeIS3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($6,$8,$4);
 $9 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($5)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNK5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9TransposeIS3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9TransposeIS3_EENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS5_RKS7_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9assign_opIddEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9TransposeIS3_EENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS5_RKS7_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9TransposeIS3_EEEEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9TransposeIS3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9TransposeIS3_EEEEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9TransposeIS3_EELb1EE3runERKS3_RKS5_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9TransposeIS3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 32|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERKS5_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(126,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(127,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(128,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(129,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(130,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(118,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(118,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(131,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9TransposeIS3_EELb1EE3runERKS3_RKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen8internal12extract_dataINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEPKNT_6ScalarERKS4_($4)|0);
 $6 = $3;
 $7 = (__ZN5Eigen8internal42check_transpose_aliasing_run_time_selectorIdLb0ENS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE3runEPKdRKS5_($5,$6)|0);
 if ($7) {
  ___assert_fail((1730|0),(2005|0),378,(2040|0));
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZN5Eigen8internal42check_transpose_aliasing_run_time_selectorIdLb0ENS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE3runEPKdRKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  $10 = 0;
  STACKTOP = sp;return ($10|0);
 }
 $6 = $2;
 $7 = $3;
 $8 = (__ZN5Eigen8internal12extract_dataINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEEPKNT_6ScalarERKS6_($7)|0);
 $9 = ($6|0)==($8|0);
 $10 = $9;
 STACKTOP = sp;return ($10|0);
}
function __ZN5Eigen8internal12extract_dataINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEPKNT_6ScalarERKS4_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN5Eigen8internal21extract_data_selectorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELb1EE3runERKS3_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal12extract_dataINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEEPKNT_6ScalarERKS6_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN5Eigen8internal21extract_data_selectorINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELb1EE3runERKS5_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal21extract_data_selectorINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELb1EE3runERKS5_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1;
 $4 = (__ZN5Eigen8internal11blas_traitsINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7extractERKS5_($3)|0);
 HEAP32[$2>>2] = $4;
 $5 = (__ZN5Eigen13TransposeImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5DenseEE4dataEv($2)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal11blas_traitsINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7extractERKS5_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = $0;
 $3 = $2;
 $4 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE16nestedExpressionEv($3)|0);
 $5 = (__ZN5Eigen8internal11blas_traitsINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7extractERKS3_($4)|0);
 __ZN5Eigen9TransposeIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERS3_($1,$5);
 $6 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZN5Eigen13TransposeImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5DenseEE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN5Eigen9EigenBaseINS_9TransposeIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($2)|0);
 $4 = (__ZN5Eigen9TransposeIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE16nestedExpressionEv($3)|0);
 $5 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4dataEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal11blas_traitsINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7extractERKS3_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen9TransposeIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen13TransposeImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5DenseEEC2Ev($4);
 $5 = $3;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen13TransposeImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_9TransposeIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_9TransposeIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_9TransposeIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_9TransposeIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9EigenBaseINS_9TransposeIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen9TransposeIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal21extract_data_selectorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELb1EE3runERKS3_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN5Eigen8internal11blas_traitsINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7extractERKS3_($2)|0);
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4dataEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal9evaluatorINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10IndexBasedEdEC2ERKS5_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9TransposeIS3_EEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($23)|0);
 $25 = $6;
 $26 = ($24|0)==($25|0);
 if (!($26)) {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
 $27 = $3;
 $28 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($27)|0);
 $29 = $7;
 $30 = ($28|0)==($29|0);
 if ($30) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_9TransposeIS4_EEEENS0_9assign_opIddEELi0EEC2ERS5_RKS8_RKSA_RS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_INS_9TransposeIS5_EEEENS0_9assign_opIddEELi0EEELi0ELi0EE3runERSC_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = 0;
 while(1) {
  $4 = $2;
  $5 = $1;
  $6 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_9TransposeIS4_EEEENS0_9assign_opIddEELi0EE9outerSizeEv($5)|0);
  $7 = ($4|0)<($6|0);
  if (!($7)) {
   break;
  }
  $3 = 0;
  while(1) {
   $8 = $3;
   $9 = $1;
   $10 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_9TransposeIS4_EEEENS0_9assign_opIddEELi0EE9innerSizeEv($9)|0);
   $11 = ($8|0)<($10|0);
   if (!($11)) {
    break;
   }
   $12 = $1;
   $13 = $2;
   $14 = $3;
   __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_9TransposeIS4_EEEENS0_9assign_opIddEELi0EE23assignCoeffByOuterInnerEii($12,$13,$14);
   $15 = $3;
   $16 = (($15) + 1)|0;
   $3 = $16;
  }
  $17 = $2;
  $18 = (($17) + 1)|0;
  $2 = $18;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10IndexBasedEdED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10IndexBasedEdEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($6);
 $7 = ((($6)) + 4|0);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(132,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  __THREW__ = 0;
  invoke_vii(127,($7|0),($9|0));
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if (!($13)) {
   STACKTOP = sp;return;
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $4 = $14;
 $5 = $15;
 __THREW__ = 0;
 invoke_vi(133,($6|0));
 $16 = __THREW__; __THREW__ = 0;
 $17 = $16&1;
 if ($17) {
  $20 = ___cxa_find_matching_catch_3(0|0)|0;
  $21 = tempRet0;
  ___clang_call_terminate($20);
  // unreachable;
 } else {
  $18 = $4;
  $19 = $5;
  ___resumeException($18|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_9TransposeIS4_EEEENS0_9assign_opIddEELi0EE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE9outerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_9TransposeIS4_EEEENS0_9assign_opIddEELi0EE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE9innerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_9TransposeIS4_EEEENS0_9assign_opIddEELi0EE23assignCoeffByOuterInnerEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = (__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_9TransposeIS4_EEEENS0_9assign_opIddEELi0EE20rowIndexByOuterInnerEii($9,$10)|0);
 $6 = $11;
 $12 = $4;
 $13 = $5;
 $14 = (__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_9TransposeIS4_EEEENS0_9assign_opIddEELi0EE20colIndexByOuterInnerEii($12,$13)|0);
 $7 = $14;
 $15 = $6;
 $16 = $7;
 __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_9TransposeIS4_EEEENS0_9assign_opIddEELi0EE11assignCoeffEii($8,$15,$16);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_9TransposeIS4_EEEENS0_9assign_opIddEELi0EE20rowIndexByOuterInnerEii($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_9TransposeIS4_EEEENS0_9assign_opIddEELi0EE20colIndexByOuterInnerEii($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_9TransposeIS4_EEEENS0_9assign_opIddEELi0EE11assignCoeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$6>>2]|0;
 $10 = $4;
 $11 = $5;
 $12 = (__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE8coeffRefEii($9,$10,$11)|0);
 $13 = ((($6)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $4;
 $16 = $5;
 $17 = (__ZNK5Eigen8internal15unary_evaluatorINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10IndexBasedEdE5coeffEii($14,$15,$16)|0);
 __ZNK5Eigen8internal9assign_opIddE11assignCoeffERdRKd($8,$12,$17);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal9assign_opIddE11assignCoeffERdRKd($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5;
 $7 = +HEAPF64[$6>>3];
 $8 = $4;
 HEAPF64[$8>>3] = $7;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15unary_evaluatorINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10IndexBasedEdE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 4|0);
 $8 = $5;
 $9 = $4;
 $10 = (__ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE5coeffEii($7,$8,$9)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $4;
 $9 = $5;
 $10 = ((($6)) + 4|0);
 $11 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($10)|0);
 $12 = Math_imul($9, $11)|0;
 $13 = (($8) + ($12))|0;
 $14 = (($7) + ($13<<3)|0);
 STACKTOP = sp;return ($14|0);
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10IndexBasedEdED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 4|0);
 __THREW__ = 0;
 invoke_vi(118,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch_2()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 __THREW__ = 0;
 invoke_vi(133,($4|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $2;
  $13 = $3;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2Ev($4);
 $5 = $3;
 __ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EEC2ERKS1_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EEC2ERKS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($5)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $3;
 $9 = ((($8)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = Math_imul($7, $10)|0;
 $12 = (__ZN5Eigen8internal28conditional_aligned_new_autoIdLb1EEEPT_j($11)|0);
 HEAP32[$4>>2] = $12;
 $13 = ((($4)) + 4|0);
 $14 = $3;
 $15 = ((($14)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 HEAP32[$13>>2] = $16;
 $17 = ((($4)) + 8|0);
 $18 = $3;
 $19 = ((($18)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 HEAP32[$17>>2] = $20;
 $21 = $3;
 $22 = HEAP32[$21>>2]|0;
 $23 = $3;
 $24 = HEAP32[$23>>2]|0;
 $25 = $3;
 $26 = ((($25)) + 4|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = $3;
 $29 = ((($28)) + 8|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = Math_imul($27, $30)|0;
 $32 = (($24) + ($31<<3)|0);
 $33 = HEAP32[$4>>2]|0;
 __ZN5Eigen8internal10smart_copyIdEEvPKT_S4_PS2_($22,$32,$33);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10smart_copyIdEEvPKT_S4_PS2_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal17smart_copy_helperIdLb1EE3runEPKdS4_Pd($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17smart_copy_helperIdLb1EE3runEPKdS4_Pd($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $4;
 $8 = $7;
 $9 = $3;
 $10 = $9;
 $11 = (($8) - ($10))|0;
 $6 = $11;
 $12 = $6;
 $13 = ($12|0)==(0);
 if ($13) {
  STACKTOP = sp;return;
 }
 $14 = $5;
 $15 = $3;
 $16 = $6;
 _memcpy(($14|0),($15|0),($16|0))|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EEC2ERKS2_S5_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen11ProductImplINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0ENS_5DenseEEC2Ev($6);
 $7 = $4;
 HEAP32[$6>>2] = $7;
 $8 = ((($6)) + 4|0);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($10)|0);
 $12 = $5;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $14 = ($11|0)==($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2150|0),(2290|0),97,(2323|0));
  // unreachable;
 }
}
function __ZN5Eigen11ProductImplINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0ENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal18dense_product_baseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li0ELi8EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18dense_product_baseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li0ELi8EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2INS_7ProductIS2_S2_Li0EEEEERKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2Ev($6);
 __ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EEC2Ev($6);
 __THREW__ = 0;
 invoke_v(50);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  $9 = $3;
  __THREW__ = 0;
  invoke_vii(134,($6|0),($9|0));
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if (!($11)) {
   $12 = $3;
   __THREW__ = 0;
   (invoke_iii(135,($6|0),($12|0))|0);
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   if (!($14)) {
    STACKTOP = sp;return;
   }
  }
 }
 $15 = ___cxa_find_matching_catch_2()|0;
 $16 = tempRet0;
 $4 = $15;
 $5 = $16;
 __THREW__ = 0;
 invoke_vi(125,($6|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $21 = ___cxa_find_matching_catch_3(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 } else {
  $19 = $4;
  $20 = $5;
  ___resumeException($19|0);
  // unreachable;
 }
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE10resizeLikeINS_7ProductIS2_S2_Li0EEEEEvRKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $10 = $6;
 $11 = $7;
 $12 = (__ZNK5Eigen9EigenBaseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li0EEEE7derivedEv($11)|0);
 $8 = $12;
 $13 = $8;
 $14 = (__ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EE4rowsEv($13)|0);
 $15 = $8;
 $16 = (__ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EE4colsEv($15)|0);
 $2 = $14;
 $3 = $16;
 $4 = 2147483647;
 $17 = $2;
 $18 = ($17|0)==(0);
 $19 = $3;
 $20 = ($19|0)==(0);
 $or$cond = $18 | $20;
 if ($or$cond) {
  $27 = 0;
 } else {
  $21 = $2;
  $22 = $4;
  $23 = $3;
  $24 = (($22|0) / ($23|0))&-1;
  $25 = ($21|0)>($24|0);
  $27 = $25;
 }
 $26 = $27&1;
 $5 = $26;
 $28 = $5;
 $29 = $28&1;
 if ($29) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $30 = $8;
 $31 = (__ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EE4rowsEv($30)|0);
 $32 = $8;
 $33 = (__ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EE4colsEv($32)|0);
 $34 = Math_imul($31, $33)|0;
 $9 = $34;
 $35 = $8;
 $36 = (__ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EE4rowsEv($35)|0);
 $37 = $8;
 $38 = (__ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EE4colsEv($37)|0);
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6resizeEii($10,$36,$38);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE12_set_noaliasINS_7ProductIS2_S2_Li0EEEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li0EEEE7derivedEv($7)|0);
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($6,$8,$4);
 $9 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($5)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li0EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS5_RKS7_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li0EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS5_RKS7_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = $4;
 $25 = (__ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EE3lhsEv($24)|0);
 $26 = $4;
 $27 = (__ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EE3rhsEv($26)|0);
 __ZN5Eigen8internal20generic_product_implINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_NS_10DenseShapeES4_Li8EE6evalToIS3_EEvRT_RKS3_SA_($23,$25,$27);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal20generic_product_implINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_NS_10DenseShapeES4_Li8EE6evalToIS3_EEvRT_RKS3_SA_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $5;
 $8 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($7)|0);
 $9 = $3;
 $10 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($9)|0);
 $11 = (($8) + ($10))|0;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($12)|0);
 $14 = (($11) + ($13))|0;
 $15 = ($14|0)<(20);
 if ($15) {
  $16 = $5;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($16)|0);
  $18 = ($17|0)>(0);
  if ($18) {
   $19 = $3;
   $20 = $4;
   $21 = $5;
   __ZN5Eigen8internal20generic_product_implINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_NS_10DenseShapeES4_Li3EE6evalToIS3_EEvRT_RKS3_SA_($19,$20,$21);
   STACKTOP = sp;return;
  }
 }
 $22 = $3;
 (__ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7setZeroEv($22)|0);
 $23 = $3;
 $24 = $4;
 $25 = $5;
 HEAPF64[$6>>3] = 1.0;
 __ZN5Eigen8internal20generic_product_implINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_NS_10DenseShapeES4_Li8EE13scaleAndAddToIS3_EEvRT_RKS3_SA_RKd($23,$24,$25,$6);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EE3lhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li0EE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal20generic_product_implINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_NS_10DenseShapeES4_Li3EE6evalToIS3_EEvRT_RKS3_SA_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp;
 $7 = sp + 20|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE11lazyProductIS2_EEKNS_7ProductIS2_T_Li1EEERKNS0_IS6_EE($6,$9,$10);
 __ZN5Eigen8internal9assign_opIddEC2Ev($7);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li1EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$6,$7);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7setZeroEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1;
 HEAPF64[$2>>3] = 0.0;
 $4 = (__ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE11setConstantERKd($3,$2)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal20generic_product_implINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_NS_10DenseShapeES4_Li8EE13scaleAndAddToIS3_EEvRT_RKS3_SA_RKd($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $10 = sp + 32|0;
 $11 = sp + 48|0;
 $12 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $15 = $4;
 $16 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($15)|0);
 $17 = $5;
 $18 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($17)|0);
 $19 = ($16|0)==($18|0);
 if (!($19)) {
  ___assert_fail((3522|0),(3575|0),460,(3629|0));
  // unreachable;
 }
 $20 = $4;
 $21 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($20)|0);
 $22 = $6;
 $23 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($22)|0);
 $24 = ($21|0)==($23|0);
 if (!($24)) {
  ___assert_fail((3522|0),(3575|0),460,(3629|0));
  // unreachable;
 }
 $25 = $5;
 $26 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($25)|0);
 $27 = ($26|0)==(0);
 if ($27) {
  STACKTOP = sp;return;
 }
 $28 = $5;
 $29 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($28)|0);
 $30 = ($29|0)==(0);
 if ($30) {
  STACKTOP = sp;return;
 }
 $31 = $6;
 $32 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($31)|0);
 $33 = ($32|0)==(0);
 if ($33) {
  STACKTOP = sp;return;
 }
 $34 = $5;
 $35 = (__ZN5Eigen8internal11blas_traitsINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7extractERKS3_($34)|0);
 $8 = $35;
 $36 = $6;
 $37 = (__ZN5Eigen8internal11blas_traitsINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7extractERKS3_($36)|0);
 $9 = $37;
 $38 = $7;
 $39 = +HEAPF64[$38>>3];
 $40 = $5;
 $41 = (+__ZN5Eigen8internal11blas_traitsINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE19extractScalarFactorERKS3_($40));
 $42 = $39 * $41;
 $43 = $6;
 $44 = (+__ZN5Eigen8internal11blas_traitsINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE19extractScalarFactorERKS3_($43));
 $45 = $42 * $44;
 HEAPF64[$10>>3] = $45;
 $46 = $4;
 $47 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($46)|0);
 $48 = $4;
 $49 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($48)|0);
 $50 = $8;
 $51 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($50)|0);
 __ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEC2Eiiiib($11,$47,$49,$51,1,1);
 $52 = $8;
 $53 = $9;
 $54 = $4;
 __THREW__ = 0;
 invoke_viiiiii(136,($12|0),($52|0),($53|0),($54|0),($10|0),($11|0));
 $55 = __THREW__; __THREW__ = 0;
 $56 = $55&1;
 if (!($56)) {
  $57 = $5;
  __THREW__ = 0;
  $58 = (invoke_ii(137,($57|0))|0);
  $59 = __THREW__; __THREW__ = 0;
  $60 = $59&1;
  if (!($60)) {
   $61 = $6;
   __THREW__ = 0;
   $62 = (invoke_ii(138,($61|0))|0);
   $63 = __THREW__; __THREW__ = 0;
   $64 = $63&1;
   if (!($64)) {
    $65 = $5;
    __THREW__ = 0;
    $66 = (invoke_ii(138,($65|0))|0);
    $67 = __THREW__; __THREW__ = 0;
    $68 = $67&1;
    if (!($68)) {
     __THREW__ = 0;
     invoke_viiiii(139,($12|0),($58|0),($62|0),($66|0),0);
     $69 = __THREW__; __THREW__ = 0;
     $70 = $69&1;
     if (!($70)) {
      __ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EED2Ev($11);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $71 = ___cxa_find_matching_catch_2()|0;
 $72 = tempRet0;
 $13 = $71;
 $14 = $72;
 __THREW__ = 0;
 invoke_vi(140,($11|0));
 $73 = __THREW__; __THREW__ = 0;
 $74 = $73&1;
 if ($74) {
  $77 = ___cxa_find_matching_catch_3(0|0)|0;
  $78 = tempRet0;
  ___clang_call_terminate($77);
  // unreachable;
 } else {
  $75 = $13;
  $76 = $14;
  ___resumeException($75|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li1EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li1EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS5_RKS7_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE11lazyProductIS2_EEKNS_7ProductIS2_T_Li1EEERKNS0_IS6_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($5)|0);
 $7 = $4;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($7)|0);
 __ZN5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li1EEC2ERKS2_S5_($0,$6,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li1EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS5_RKS7_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li1EEEEEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li1EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li1EEEEEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li1EEELb0EE3runERKS3_RKS5_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li1EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $6 = sp + 32|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEEEC2ERKS5_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(141,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(127,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(128,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(142,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(143,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(118,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(118,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(144,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li1EEELb0EE3runERKS3_RKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEELi8ENS_10DenseShapeES6_ddEC2ERKS5_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li1EEEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li1EE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li1EE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($23)|0);
 $25 = $6;
 $26 = ($24|0)==($25|0);
 if (!($26)) {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
 $27 = $3;
 $28 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($27)|0);
 $29 = $7;
 $30 = ($28|0)==($29|0);
 if ($30) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_7ProductIS4_S4_Li1EEEEENS0_9assign_opIddEELi0EEC2ERS5_RKS8_RKSA_RS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_INS_7ProductIS5_S5_Li1EEEEENS0_9assign_opIddEELi0EEELi0ELi0EE3runERSC_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = 0;
 while(1) {
  $4 = $2;
  $5 = $1;
  $6 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_7ProductIS4_S4_Li1EEEEENS0_9assign_opIddEELi0EE9outerSizeEv($5)|0);
  $7 = ($4|0)<($6|0);
  if (!($7)) {
   break;
  }
  $3 = 0;
  while(1) {
   $8 = $3;
   $9 = $1;
   $10 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_7ProductIS4_S4_Li1EEEEENS0_9assign_opIddEELi0EE9innerSizeEv($9)|0);
   $11 = ($8|0)<($10|0);
   if (!($11)) {
    break;
   }
   $12 = $1;
   $13 = $2;
   $14 = $3;
   __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_7ProductIS4_S4_Li1EEEEENS0_9assign_opIddEELi0EE23assignCoeffByOuterInnerEii($12,$13,$14);
   $15 = $3;
   $16 = (($15) + 1)|0;
   $3 = $16;
  }
  $17 = $2;
  $18 = (($17) + 1)|0;
  $2 = $18;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEELi8ENS_10DenseShapeES6_ddED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEELi8ENS_10DenseShapeES6_ddEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(145,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  label = 8;
 } else {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(146,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   label = 8;
  } else {
   HEAP32[$11>>2] = $13;
   $16 = ((($6)) + 8|0);
   $17 = HEAP32[$6>>2]|0;
   __THREW__ = 0;
   invoke_vii(127,($16|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = ((($6)) + 16|0);
    $21 = ((($6)) + 4|0);
    $22 = HEAP32[$21>>2]|0;
    __THREW__ = 0;
    invoke_vii(127,($20|0),($22|0));
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if ($24) {
     $35 = ___cxa_find_matching_catch_2()|0;
     $36 = tempRet0;
     $4 = $35;
     $5 = $36;
    } else {
     $25 = ((($6)) + 24|0);
     $26 = $3;
     __THREW__ = 0;
     $27 = (invoke_ii(145,($26|0))|0);
     $28 = __THREW__; __THREW__ = 0;
     $29 = $28&1;
     if (!($29)) {
      __THREW__ = 0;
      $30 = (invoke_ii(138,($27|0))|0);
      $31 = __THREW__; __THREW__ = 0;
      $32 = $31&1;
      if (!($32)) {
       HEAP32[$25>>2] = $30;
       STACKTOP = sp;return;
      }
     }
     $37 = ___cxa_find_matching_catch_2()|0;
     $38 = tempRet0;
     $4 = $37;
     $5 = $38;
     __THREW__ = 0;
     invoke_vi(118,($20|0));
     $39 = __THREW__; __THREW__ = 0;
     $40 = $39&1;
     if ($40) {
      $47 = ___cxa_find_matching_catch_3(0|0)|0;
      $48 = tempRet0;
      ___clang_call_terminate($47);
      // unreachable;
     }
    }
    __THREW__ = 0;
    invoke_vi(118,($16|0));
    $41 = __THREW__; __THREW__ = 0;
    $42 = $41&1;
    if ($42) {
     $47 = ___cxa_find_matching_catch_3(0|0)|0;
     $48 = tempRet0;
     ___clang_call_terminate($47);
     // unreachable;
    }
   }
  }
 }
 if ((label|0) == 8) {
  $33 = ___cxa_find_matching_catch_2()|0;
  $34 = tempRet0;
  $4 = $33;
  $5 = $34;
 }
 __THREW__ = 0;
 invoke_vi(147,($6|0));
 $43 = __THREW__; __THREW__ = 0;
 $44 = $43&1;
 if ($44) {
  $47 = ___cxa_find_matching_catch_3(0|0)|0;
  $48 = tempRet0;
  ___clang_call_terminate($47);
  // unreachable;
 } else {
  $45 = $4;
  $46 = $5;
  ___resumeException($45|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li1EE3lhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li1EE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li1EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li1EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_7ProductIS4_S4_Li1EEEEENS0_9assign_opIddEELi0EE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE9outerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_7ProductIS4_S4_Li1EEEEENS0_9assign_opIddEELi0EE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE9innerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_7ProductIS4_S4_Li1EEEEENS0_9assign_opIddEELi0EE23assignCoeffByOuterInnerEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = (__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_7ProductIS4_S4_Li1EEEEENS0_9assign_opIddEELi0EE20rowIndexByOuterInnerEii($9,$10)|0);
 $6 = $11;
 $12 = $4;
 $13 = $5;
 $14 = (__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_7ProductIS4_S4_Li1EEEEENS0_9assign_opIddEELi0EE20colIndexByOuterInnerEii($12,$13)|0);
 $7 = $14;
 $15 = $6;
 $16 = $7;
 __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_7ProductIS4_S4_Li1EEEEENS0_9assign_opIddEELi0EE11assignCoeffEii($8,$15,$16);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_7ProductIS4_S4_Li1EEEEENS0_9assign_opIddEELi0EE20rowIndexByOuterInnerEii($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_7ProductIS4_S4_Li1EEEEENS0_9assign_opIddEELi0EE20colIndexByOuterInnerEii($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_7ProductIS4_S4_Li1EEEEENS0_9assign_opIddEELi0EE11assignCoeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $8 = ((($7)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$7>>2]|0;
 $11 = $4;
 $12 = $5;
 $13 = (__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE8coeffRefEii($10,$11,$12)|0);
 $14 = ((($7)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $4;
 $17 = $5;
 $18 = (+__ZNK5Eigen8internal17product_evaluatorINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEELi8ENS_10DenseShapeES6_ddE5coeffEii($15,$16,$17));
 HEAPF64[$6>>3] = $18;
 __ZNK5Eigen8internal9assign_opIddE11assignCoeffERdRKd($9,$13,$6);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal17product_evaluatorINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEELi8ENS_10DenseShapeES6_ddE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $6 = sp + 116|0;
 $7 = sp + 88|0;
 $8 = sp + 60|0;
 $9 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $10 = $3;
 $11 = HEAP32[$10>>2]|0;
 $12 = $4;
 __ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE3rowEi($6,$11,$12);
 __ZNK5Eigen9DenseBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE9transposeEv($7,$6);
 $13 = ((($10)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $5;
 __ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE3colEi($8,$14,$15);
 __ZNK5Eigen10MatrixBaseINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEE12cwiseProductINS2_IS5_Lin1ELi1ELb1EEEEEKNS_13CwiseBinaryOpINS_8internal17scalar_product_opIdNSD_6traitsIT_E6ScalarEEEKS8_KSG_EERKNS0_ISG_EE($9,$7,$8);
 $16 = (+__ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE3sumEv($9));
 STACKTOP = sp;return (+$16);
}
function __ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE3rowEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($5)|0);
 $7 = $4;
 __ZN5Eigen5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEC2ERS3_i($0,$6,$7);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE9transposeEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $1;
 $3 = $2;
 $4 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE7derivedEv($3)|0);
 __ZN5Eigen9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2ERS6_($0,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen10MatrixBaseINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEE12cwiseProductINS2_IS5_Lin1ELi1ELb1EEEEEKNS_13CwiseBinaryOpINS_8internal17scalar_product_opIdNSD_6traitsIT_E6ScalarEEEKS8_KSG_EERKNS0_ISG_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp + 8|0;
 $3 = $1;
 $4 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEE7derivedEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEE7derivedEv($8)|0);
 __ZN5Eigen8internal17scalar_product_opIddEC2Ev($5);
 __ZN5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEEEC2ERSC_RSE_RKS3_($0,$7,$9,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE3colEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($5)|0);
 $7 = $4;
 __ZN5Eigen5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEC2ERS3_i($0,$6,$7);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE3sumEv($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 12|0;
 $2 = $0;
 $4 = $2;
 $5 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE4sizeEv($4)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  $1 = 0.0;
  $9 = $1;
  STACKTOP = sp;return (+$9);
 } else {
  $7 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE7derivedEv($4)|0);
  __ZN5Eigen8internal13scalar_sum_opIddEC2Ev($3);
  $8 = (+__ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE5reduxINS2_13scalar_sum_opIddEEEEdRKT_($7,$3));
  $1 = $8;
  $9 = $1;
  STACKTOP = sp;return (+$9);
 }
 return +(0.0);
}
function __ZN5Eigen5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEC2ERS3_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen9BlockImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ENS_5DenseEEC2ERS3_i($6,$7,$8);
 $9 = $5;
 $10 = ($9|0)>=(0);
 if (!($10)) {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
 $11 = $5;
 $12 = $4;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $14 = ($11|0)<($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen9BlockImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ENS_5DenseEEC2ERS3_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EEC2ERS4_i($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EEC2ERS4_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4dataEv($7)|0);
 $9 = $5;
 $10 = $4;
 $11 = (__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11innerStrideEv($10)|0);
 $12 = Math_imul($9, $11)|0;
 $13 = (($8) + ($12<<3)|0);
 $14 = $4;
 $15 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($14)|0);
 __ZN5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EEC2EPKdii($6,$13,1,$15);
 $16 = ((($6)) + 12|0);
 $17 = $4;
 HEAP32[$16>>2] = $17;
 $18 = ((($6)) + 16|0);
 $19 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($18,$19);
 $20 = ((($6)) + 20|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($20,0);
 __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EE4initEv($6);
 STACKTOP = sp;return;
}
function __ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1;
}
function __ZN5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EEC2EPKdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $6;
  $19 = (1)==($18|0);
  $or$cond = $17 & $19;
  $20 = $7;
  $21 = ($20|0)>=(0);
  $or$cond3 = $or$cond & $21;
  if (!($or$cond3)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE11checkSanityIS5_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11innerStrideEv($4)|0);
 $6 = ((($2)) + 24|0);
 HEAP32[$6>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 $5 = ($4|0)==(1);
 if ($5) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2746|0),(2760|0),110,(2800|0));
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE11checkSanityIS5_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2ERS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen13TransposeImplIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS_5DenseEEC2Ev($4);
 $5 = $3;
 __ZN5Eigen5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEC2ERKS4_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen13TransposeImplIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEC2ERKS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen9BlockImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ENS_5DenseEEC2ERKS5_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ENS_5DenseEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EEC2ERKS5_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EEC2ERKS6_($4,$5);
 $6 = ((($4)) + 12|0);
 $7 = $3;
 $8 = ((($7)) + 12|0);
 ;HEAP32[$6>>2]=HEAP32[$8>>2]|0;HEAP32[$6+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$8+8>>2]|0;HEAP32[$6+12>>2]=HEAP32[$8+12>>2]|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EEC2ERKS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$4>>2] = $6;
 $7 = ((($4)) + 4|0);
 $8 = $3;
 $9 = ((($8)) + 4|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2ERKS2_($7,$9);
 $10 = ((($4)) + 8|0);
 $11 = $3;
 $12 = ((($11)) + 8|0);
 ;HEAP32[$10>>2]=HEAP32[$12>>2]|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal17scalar_product_opIddEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEEEC2ERSC_RSE_RKS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen17CwiseBinaryOpImplINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEENS_5DenseEEC2Ev($8);
 $9 = $5;
 __ZN5Eigen9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2ERKS7_($8,$9);
 $10 = ((($8)) + 28|0);
 $11 = $6;
 __ZN5Eigen5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEC2ERKS4_($10,$11);
 $12 = ((($8)) + 56|0);
 $13 = $7;
 __ZN5Eigen8internal17scalar_product_opIddEC2ERKS2_($12,$13);
 $14 = $5;
 $15 = (__ZNK5Eigen9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4rowsEv($14)|0);
 $16 = $6;
 $17 = (__ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEELi0EE4rowsEv($16)|0);
 $18 = ($15|0)==($17|0);
 if (!($18)) {
  ___assert_fail((2820|0),(2877|0),110,(2916|0));
  // unreachable;
 }
 $19 = $5;
 $20 = (__ZNK5Eigen9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4colsEv($19)|0);
 $21 = $6;
 $22 = (__ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEELi0EE4colsEv($21)|0);
 $23 = ($20|0)==($22|0);
 if ($23) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2820|0),(2877|0),110,(2916|0));
  // unreachable;
 }
}
function __ZN5Eigen17CwiseBinaryOpImplINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2ERKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEC2ERKS4_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEC2ERKS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen9BlockImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ENS_5DenseEEC2ERKS5_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17scalar_product_opIddEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4colsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen10MatrixBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ENS_5DenseEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ELb1EEC2ERKS5_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ELb1EEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEELi0EEC2ERKS6_($4,$5);
 $6 = ((($4)) + 12|0);
 $7 = $3;
 $8 = ((($7)) + 12|0);
 ;HEAP32[$6>>2]=HEAP32[$8>>2]|0;HEAP32[$6+4>>2]=HEAP32[$8+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[$8+8>>2]|0;HEAP32[$6+12>>2]=HEAP32[$8+12>>2]|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEELi0EEC2ERKS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 ;HEAP32[$4>>2]=HEAP32[$5>>2]|0;HEAP32[$4+4>>2]=HEAP32[$5+4>>2]|0;
 $6 = ((($4)) + 8|0);
 $7 = $3;
 $8 = ((($7)) + 8|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2ERKS2_($6,$8);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZN5Eigen5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEC2ERS3_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen9BlockImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ENS_5DenseEEC2ERS3_i($6,$7,$8);
 $9 = $5;
 $10 = ($9|0)>=(0);
 if (!($10)) {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
 $11 = $5;
 $12 = $4;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($12)|0);
 $14 = ($11|0)<($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen9BlockImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ENS_5DenseEEC2ERS3_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ELb1EEC2ERS4_i($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ELb1EEC2ERS4_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4dataEv($7)|0);
 $9 = $5;
 $10 = $4;
 $11 = (__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11outerStrideEv($10)|0);
 $12 = Math_imul($9, $11)|0;
 $13 = (($8) + ($12<<3)|0);
 $14 = $4;
 $15 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($14)|0);
 __ZN5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEELi0EEC2EPKdii($6,$13,$15,1);
 $16 = ((($6)) + 12|0);
 $17 = $4;
 HEAP32[$16>>2] = $17;
 $18 = ((($6)) + 16|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($18,0);
 $19 = ((($6)) + 20|0);
 $20 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($19,$20);
 __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ELb1EE4initEv($6);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEELi0EEC2EPKdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $7;
  $19 = ($18|0)>=(0);
  $or$cond = $17 & $19;
  $20 = $7;
  $21 = (1)==($20|0);
  $or$cond3 = $or$cond & $21;
  if (!($or$cond3)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEELi0EE11checkSanityIS5_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11outerStrideEv($4)|0);
 $6 = ((($2)) + 24|0);
 HEAP32[$6>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEELi0EE11checkSanityIS5_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE5reduxINS2_13scalar_sum_opIddEEEEdRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE4rowsEv($7)|0);
 $9 = ($8|0)>(0);
 if (!($9)) {
  ___assert_fail((2930|0),(2998|0),413,(3029|0));
  // unreachable;
 }
 $10 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE4colsEv($7)|0);
 $11 = ($10|0)>(0);
 if (!($11)) {
  ___assert_fail((2930|0),(2998|0),413,(3029|0));
  // unreachable;
 }
 $12 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE7derivedEv($7)|0);
 __ZN5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEEC2ERKSG_($4,$12);
 $13 = $3;
 __THREW__ = 0;
 $14 = (+invoke_dii(148,($4|0),($13|0)));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if (!($16)) {
  __ZN5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEED2Ev($4);
  STACKTOP = sp;return (+$14);
 }
 $17 = ___cxa_find_matching_catch_2()|0;
 $18 = tempRet0;
 $5 = $17;
 $6 = $18;
 __THREW__ = 0;
 invoke_vi(149,($4|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $23 = ___cxa_find_matching_catch_3(0|0)|0;
  $24 = tempRet0;
  ___clang_call_terminate($23);
  // unreachable;
 } else {
  $21 = $5;
  $22 = $6;
  ___resumeException($21|0);
  // unreachable;
 }
 return +(0.0);
}
function __ZN5Eigen8internal13scalar_sum_opIddEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 28|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4colsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEEC2ERKSG_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEEC2ERKSG_($4,$5);
 $6 = ((($4)) + 32|0);
 $7 = $3;
 HEAP32[$6>>2] = $7;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10redux_implINS0_13scalar_sum_opIddEENS0_15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS9_ISC_Lin1ELi1ELb1EEEEEEELi0ELi0EE3runERKSK_RKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = sp + 16|0;
 $6 = sp + 8|0;
 $9 = sp;
 $2 = $0;
 $3 = $1;
 $10 = $2;
 $11 = (__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE4rowsEv($10)|0);
 $12 = ($11|0)>(0);
 if (!($12)) {
  ___assert_fail((3254|0),(2998|0),192,(2040|0));
  // unreachable;
 }
 $13 = $2;
 $14 = (__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE4colsEv($13)|0);
 $15 = ($14|0)>(0);
 if (!($15)) {
  ___assert_fail((3254|0),(2998|0),192,(2040|0));
  // unreachable;
 }
 $16 = $2;
 $17 = (+__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE17coeffByOuterInnerEii($16,0,0));
 HEAPF64[$4>>3] = $17;
 $5 = 1;
 while(1) {
  $18 = $5;
  $19 = $2;
  $20 = (__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE9innerSizeEv($19)|0);
  $21 = ($18|0)<($20|0);
  if (!($21)) {
   break;
  }
  $22 = $3;
  $23 = $2;
  $24 = $5;
  $25 = (+__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE17coeffByOuterInnerEii($23,0,$24));
  HEAPF64[$6>>3] = $25;
  $26 = (+__ZNK5Eigen8internal13scalar_sum_opIddEclERKdS4_($22,$4,$6));
  HEAPF64[$4>>3] = $26;
  $27 = $5;
  $28 = (($27) + 1)|0;
  $5 = $28;
 }
 $7 = 1;
 while(1) {
  $29 = $7;
  $30 = $2;
  $31 = (__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE9outerSizeEv($30)|0);
  $32 = ($29|0)<($31|0);
  if (!($32)) {
   break;
  }
  $8 = 0;
  while(1) {
   $33 = $8;
   $34 = $2;
   $35 = (__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE9innerSizeEv($34)|0);
   $36 = ($33|0)<($35|0);
   if (!($36)) {
    break;
   }
   $37 = $3;
   $38 = $2;
   $39 = $7;
   $40 = $8;
   $41 = (+__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE17coeffByOuterInnerEii($38,$39,$40));
   HEAPF64[$9>>3] = $41;
   $42 = (+__ZNK5Eigen8internal13scalar_sum_opIddEclERKdS4_($37,$4,$9));
   HEAPF64[$4>>3] = $42;
   $43 = $8;
   $44 = (($43) + 1)|0;
   $8 = $44;
  }
  $45 = $7;
  $46 = (($45) + 1)|0;
  $7 = $46;
 }
 $47 = +HEAPF64[$4>>3];
 STACKTOP = sp;return (+$47);
}
function __ZN5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEEC2ERKSG_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEENS0_10IndexBasedESH_ddEC2ERKSG_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEENS0_10IndexBasedESH_ddEC2ERKSG_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(150,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  label = 8;
 } else {
  __THREW__ = 0;
  invoke_vii(151,($6|0),($8|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if ($12) {
   label = 8;
  } else {
   $13 = ((($6)) + 4|0);
   $14 = $3;
   __THREW__ = 0;
   $15 = (invoke_ii(152,($14|0))|0);
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if ($17) {
    label = 8;
   } else {
    __THREW__ = 0;
    invoke_vii(153,($13|0),($15|0));
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if ($19) {
     label = 8;
    } else {
     $20 = ((($6)) + 20|0);
     $21 = $3;
     __THREW__ = 0;
     $22 = (invoke_ii(154,($21|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      __THREW__ = 0;
      invoke_vii(155,($20|0),($22|0));
      $25 = __THREW__; __THREW__ = 0;
      $26 = $25&1;
      if (!($26)) {
       STACKTOP = sp;return;
      }
     }
     $29 = ___cxa_find_matching_catch_2()|0;
     $30 = tempRet0;
     $4 = $29;
     $5 = $30;
     __THREW__ = 0;
     invoke_vi(156,($13|0));
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      $37 = ___cxa_find_matching_catch_3(0|0)|0;
      $38 = tempRet0;
      ___clang_call_terminate($37);
      // unreachable;
     }
    }
   }
  }
 }
 if ((label|0) == 8) {
  $27 = ___cxa_find_matching_catch_2()|0;
  $28 = tempRet0;
  $4 = $27;
  $5 = $28;
 }
 __THREW__ = 0;
 invoke_vi(157,($6|0));
 $33 = __THREW__; __THREW__ = 0;
 $34 = $33&1;
 if ($34) {
  $37 = ___cxa_find_matching_catch_3(0|0)|0;
  $38 = tempRet0;
  ___clang_call_terminate($37);
  // unreachable;
 } else {
  $35 = $4;
  $36 = $5;
  ___resumeException($35|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEEE7functorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 56|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEEE3lhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEEC2ERSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEEC2ERKS9_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEEE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 28|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEEC2ERS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEEC2ERKS6_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEEC2ERKS9_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS0_10IndexBasedEdEC2ERKS9_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS0_10IndexBasedEdEC2ERKS9_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEEC2Ev($6);
 $7 = ((($6)) + 4|0);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(158,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  __THREW__ = 0;
  invoke_vii(159,($7|0),($9|0));
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if (!($13)) {
   STACKTOP = sp;return;
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $4 = $14;
 $5 = $15;
 __THREW__ = 0;
 invoke_vi(160,($6|0));
 $16 = __THREW__; __THREW__ = 0;
 $17 = $16&1;
 if ($17) {
  $20 = ___cxa_find_matching_catch_3(0|0)|0;
  $21 = tempRet0;
  ___clang_call_terminate($20);
  // unreachable;
 } else {
  $18 = $4;
  $19 = $5;
  ___resumeException($18|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2ERS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2ERKS6_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2ERKS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EEC2ERKNS_5BlockIS4_Li1ELin1ELb0EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EEC2ERKNS_5BlockIS4_Li1ELin1ELb0EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEEC2ERKS6_($6,$7);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(161,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 do {
  if (!($11)) {
   $12 = $9;
   $13 = (($12>>>0) % 1)&-1;
   $14 = ($13|0)==(0);
   if ($14) {
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiii(162,(3035|0),(3198|0),1107,(3238|0));
    $15 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $4 = $16;
 $5 = $17;
 __THREW__ = 0;
 invoke_vi(163,($6|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $4;
  $21 = $5;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEEC2ERKS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(161,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(164,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(121,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(165,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(166,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(167,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11outerStrideEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEEC2ERKS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ELb1EEC2ERKNS_5BlockIS4_Lin1ELi1ELb1EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ELb1EEC2ERKNS_5BlockIS4_Lin1ELi1ELb1EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEENS3_IdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS6_($6,$7);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(168,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 do {
  if (!($11)) {
   $12 = $9;
   $13 = (($12>>>0) % 1)&-1;
   $14 = ($13|0)==(0);
   if ($14) {
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiii(162,(3035|0),(3198|0),1107,(3238|0));
    $15 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $4 = $16;
 $5 = $17;
 __THREW__ = 0;
 invoke_vi(169,($6|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $4;
  $21 = $5;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEENS3_IdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(168,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(170,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(166,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(171,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(121,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(172,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEELi0EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEENS3_IdLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11innerStrideEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS0_10IndexBasedEdED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS0_10IndexBasedEdED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 4|0);
 __THREW__ = 0;
 invoke_vi(173,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch_2()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 __THREW__ = 0;
 invoke_vi(160,($4|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $2;
  $13 = $3;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEEE4rowsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEEE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE17coeffByOuterInnerEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $5;
 $8 = $4;
 $9 = (+__ZNK5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEENS0_10IndexBasedESH_ddE5coeffEii($6,$7,$8));
 STACKTOP = sp;return (+$9);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE9innerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal13scalar_sum_opIddEclERKdS4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4;
 $7 = +HEAPF64[$6>>3];
 $8 = $5;
 $9 = +HEAPF64[$8>>3];
 $10 = $7 + $9;
 STACKTOP = sp;return (+$10);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE9outerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEENS0_10IndexBasedESH_ddE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 8|0;
 $7 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = ((($8)) + 4|0);
 $10 = $4;
 $11 = $5;
 $12 = (+__ZNK5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS0_10IndexBasedEdE5coeffEii($9,$10,$11));
 HEAPF64[$6>>3] = $12;
 $13 = ((($8)) + 20|0);
 $14 = $4;
 $15 = $5;
 $16 = (+__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEENS3_IdLin1ELi1ELi0ELin1ELi1EEEE5coeffEii($13,$14,$15));
 HEAPF64[$7>>3] = $16;
 $17 = (+__ZNK5Eigen8internal17scalar_product_opIddEclERKdS4_($8,$6,$7));
 STACKTOP = sp;return (+$17);
}
function __ZNK5Eigen8internal17scalar_product_opIddEclERKdS4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4;
 $7 = +HEAPF64[$6>>3];
 $8 = $5;
 $9 = +HEAPF64[$8>>3];
 $10 = $7 * $9;
 STACKTOP = sp;return (+$10);
}
function __ZNK5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS0_10IndexBasedEdE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 4|0);
 $8 = $5;
 $9 = $4;
 $10 = (+__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEE5coeffEii($7,$8,$9));
 STACKTOP = sp;return (+$10);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEENS3_IdLin1ELi1ELi0ELin1ELi1EEEE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEENS3_IdLin1ELi1ELi0ELin1ELi1EEEE9colStrideEv($6)|0);
 $10 = Math_imul($8, $9)|0;
 $11 = $4;
 $12 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEENS3_IdLin1ELi1ELi0ELin1ELi1EEEE9rowStrideEv($6)|0);
 $13 = Math_imul($11, $12)|0;
 $14 = (($10) + ($13))|0;
 $15 = (($7) + ($14<<3)|0);
 $16 = +HEAPF64[$15>>3];
 STACKTOP = sp;return (+$16);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEE9colStrideEv($6)|0);
 $10 = Math_imul($8, $9)|0;
 $11 = $4;
 $12 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEE9rowStrideEv($6)|0);
 $13 = Math_imul($11, $12)|0;
 $14 = (($10) + ($13))|0;
 $15 = (($7) + ($14<<3)|0);
 $16 = +HEAPF64[$15>>3];
 STACKTOP = sp;return (+$16);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEE9colStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEE9rowStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEENS3_IdLin1ELi1ELi0ELin1ELi1EEEE9colStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEENS3_IdLin1ELi1ELi0ELin1ELi1EEEE9rowStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1;
}
function __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEENS0_10IndexBasedESH_ddED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEENS0_10IndexBasedESH_ddED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 20|0);
 __THREW__ = 0;
 invoke_vi(174,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 do {
  if ($7) {
   $11 = ___cxa_find_matching_catch_2()|0;
   $12 = tempRet0;
   $2 = $11;
   $3 = $12;
   $13 = ((($4)) + 4|0);
   __THREW__ = 0;
   invoke_vi(156,($13|0));
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $22 = ___cxa_find_matching_catch_3(0|0)|0;
    $23 = tempRet0;
    ___clang_call_terminate($22);
    // unreachable;
   }
  } else {
   $8 = ((($4)) + 4|0);
   __THREW__ = 0;
   invoke_vi(156,($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $16 = ___cxa_find_matching_catch_2()|0;
    $17 = tempRet0;
    $2 = $16;
    $3 = $17;
    break;
   } else {
    __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEED2Ev($4);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(157,($4|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $2;
  $21 = $3;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ELb1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ELb1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEENS3_IdLin1ELi1ELi0ELin1ELi1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEELi8ENS_10DenseShapeES6_ddED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 16|0);
 __THREW__ = 0;
 invoke_vi(118,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 do {
  if ($7) {
   $11 = ___cxa_find_matching_catch_2()|0;
   $12 = tempRet0;
   $2 = $11;
   $3 = $12;
   $13 = ((($4)) + 8|0);
   __THREW__ = 0;
   invoke_vi(118,($13|0));
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $22 = ___cxa_find_matching_catch_3(0|0)|0;
    $23 = tempRet0;
    ___clang_call_terminate($22);
    // unreachable;
   }
  } else {
   $8 = ((($4)) + 8|0);
   __THREW__ = 0;
   invoke_vi(118,($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $16 = ___cxa_find_matching_catch_2()|0;
    $17 = tempRet0;
    $2 = $16;
    $3 = $17;
    break;
   } else {
    __ZN5Eigen8internal14evaluator_baseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEEED2Ev($4);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(147,($4|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $2;
  $21 = $3;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li1EEC2ERKS2_S5_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen11ProductImplINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li1ENS_5DenseEEC2Ev($6);
 $7 = $4;
 HEAP32[$6>>2] = $7;
 $8 = ((($6)) + 4|0);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($10)|0);
 $12 = $5;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $14 = ($11|0)==($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2150|0),(2290|0),97,(2323|0));
  // unreachable;
 }
}
function __ZN5Eigen11ProductImplINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li1ENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal18dense_product_baseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li1ELi8EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18dense_product_baseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li1ELi8EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE11setConstantERKd($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($5)|0);
 $7 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($5)|0);
 $8 = $3;
 __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE8ConstantEiiRKd($4,$6,$7,$8);
 $9 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($5)|0);
 $10 = (__ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEaSINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEES1_EEEERS1_RKNS_9DenseBaseIT_EE($9,$4)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE8ConstantEiiRKd($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal18scalar_constant_opIdEC2ERKd($7,$10);
 __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE11NullaryExprINS_8internal18scalar_constant_opIdEEEEKNS_14CwiseNullaryOpIT_S2_EEiiRKS9_($0,$8,$9,$7);
 STACKTOP = sp;return;
}
function __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEaSINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEES1_EEEERS1_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4_setINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEES2_EEEERS2_RKNS_9DenseBaseIT_EE($4,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE11NullaryExprINS_8internal18scalar_constant_opIdEEEEKNS_14CwiseNullaryOpIT_S2_EEiiRKS9_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 $9 = $6;
 __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2EiiRKS3_($0,$7,$8,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18scalar_constant_opIdEC2ERKd($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = +HEAPF64[$5>>3];
 HEAPF64[$4>>3] = $6;
 STACKTOP = sp;return;
}
function __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2EiiRKS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($8);
 $9 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($8,$9);
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal18scalar_constant_opIdEC2ERKS2_($12,$13);
 $14 = $5;
 $15 = ($14|0)>=(0);
 $16 = $6;
 $17 = ($16|0)>=(0);
 $or$cond = $15 & $17;
 if ($or$cond) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((3318|0),(3467|0),74,(3507|0));
  // unreachable;
 }
}
function __ZN5Eigen10MatrixBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18scalar_constant_opIdEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = +HEAPF64[$5>>3];
 HEAPF64[$4>>3] = $6;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4_setINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEES2_EEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EEEEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS7_RKS9_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS7_RKS9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EEEEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EEEEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EELb0EE3runERKS3_RKS7_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp;
 $9 = sp + 32|0;
 $10 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERKS7_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(175,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(127,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(128,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(176,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(177,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(118,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(118,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(178,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EELb0EE3runERKS3_RKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(179,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  __THREW__ = 0;
  invoke_vii(180,($6|0),($8|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $4 = $13;
 $5 = $14;
 __THREW__ = 0;
 invoke_vi(181,($6|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $4;
  $18 = $5;
  ___resumeException($17|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17resize_if_allowedINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($23)|0);
 $25 = $6;
 $26 = ($24|0)==($25|0);
 if (!($26)) {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
 $27 = $3;
 $28 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($27)|0);
 $29 = $7;
 $30 = ($28|0)==($29|0);
 if ($30) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES4_EEEENS0_9assign_opIddEELi0EEC2ERS5_RKSA_RKSC_RS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES5_EEEENS0_9assign_opIddEELi0EEELi1ELi0EE3runERSE_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES4_EEEENS0_9assign_opIddEELi0EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES4_EEEENS0_9assign_opIddEELi0EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7functorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES4_EEEENS0_9assign_opIddEELi0EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES4_EEEENS0_9assign_opIddEELi0EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$5>>2]|0;
 $9 = $3;
 $10 = (__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE8coeffRefEi($8,$9)|0);
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $3;
 $14 = (+__ZNK5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE5coeffIiEEdT_($12,$13));
 HEAPF64[$4>>3] = $14;
 __ZNK5Eigen8internal9assign_opIddE11assignCoeffERdRKd($7,$10,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (($5) + ($6<<3)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZNK5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE5coeffIiEEdT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 8|0);
 $6 = $3;
 $7 = (+__ZNK5Eigen8internal15nullary_wrapperIdNS0_18scalar_constant_opIdEELb1ELb0ELb0EEclIiEEdRKS3_T_S8_($5,$4,$6,0));
 STACKTOP = sp;return (+$7);
}
function __ZNK5Eigen8internal15nullary_wrapperIdNS0_18scalar_constant_opIdEELb1ELb0ELb0EEclIiEEdRKS3_T_S8_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $5;
 $9 = (+__ZNK5Eigen8internal18scalar_constant_opIdEclEv($8));
 STACKTOP = sp;return (+$9);
}
function __ZNK5Eigen8internal18scalar_constant_opIdEclEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = +HEAPF64[$2>>3];
 STACKTOP = sp;return (+$3);
}
function __ZN5Eigen8internal11blas_traitsINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE19extractScalarFactorERKS3_($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return +1;
}
function __ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEC2Eiiiib($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $12 = sp;
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $13 = $5&1;
 $11 = $13;
 $14 = $6;
 __ZN5Eigen8internal15level3_blockingIddEC2Ev($14);
 $15 = $7;
 $16 = ((($14)) + 8|0);
 HEAP32[$16>>2] = $15;
 $17 = $8;
 $18 = ((($14)) + 12|0);
 HEAP32[$18>>2] = $17;
 $19 = $9;
 $20 = ((($14)) + 16|0);
 HEAP32[$20>>2] = $19;
 $21 = $11;
 $22 = $21&1;
 if ($22) {
  $23 = ((($14)) + 16|0);
  $24 = ((($14)) + 8|0);
  $25 = ((($14)) + 12|0);
  $26 = $10;
  __ZN5Eigen8internal27computeProductBlockingSizesIddLi1EiEEvRT2_S3_S3_S2_($23,$24,$25,$26);
 } else {
  $27 = ((($14)) + 12|0);
  $28 = HEAP32[$27>>2]|0;
  HEAP32[$12>>2] = $28;
  $29 = ((($14)) + 16|0);
  $30 = ((($14)) + 8|0);
  $31 = $10;
  __ZN5Eigen8internal27computeProductBlockingSizesIddLi1EiEEvRT2_S3_S3_S2_($29,$30,$12,$31);
 }
 $32 = ((($14)) + 8|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = ((($14)) + 16|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = Math_imul($33, $35)|0;
 $37 = ((($14)) + 20|0);
 HEAP32[$37>>2] = $36;
 $38 = ((($14)) + 16|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($14)) + 12|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = Math_imul($39, $41)|0;
 $43 = ((($14)) + 24|0);
 HEAP32[$43>>2] = $42;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal16parallelize_gemmILb1ENS0_12gemm_functorIdiNS0_29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES6_S6_NS0_19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEEEEiEEvRKT0_T1_SD_SD_b($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp;
 $9 = sp + 16|0;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 HEAP32[$8>>2] = $3;
 $10 = $4&1;
 HEAP8[$9>>0] = $10;
 __ZN5Eigen8internal22ignore_unused_variableIiEEvRKT_($8);
 __ZN5Eigen8internal22ignore_unused_variableIbEEvRKT_($9);
 $11 = $5;
 $12 = $6;
 $13 = $7;
 __ZNK5Eigen8internal12gemm_functorIdiNS0_29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES5_S5_NS0_19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEEEclEiiiiPNS0_16GemmParallelInfoIiEE($11,0,$12,0,$13,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal12gemm_functorIdiNS0_29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES5_S5_NS0_19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEEEC2ERKS5_SA_RS5_RKdRS7_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0.0, $21 = 0, $22 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($12)) + 4|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($12)) + 8|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 $18 = ((($12)) + 16|0);
 $19 = $10;
 $20 = +HEAPF64[$19>>3];
 HEAPF64[$18>>3] = $20;
 $21 = ((($12)) + 24|0);
 $22 = $11;
 HEAP32[$21>>2] = $22;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 __ZN5Eigen8internal14aligned_deleteIdEEvPT_j($3,$5);
 $6 = ((($2)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($2)) + 24|0);
 $9 = HEAP32[$8>>2]|0;
 __ZN5Eigen8internal14aligned_deleteIdEEvPT_j($7,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15level3_blockingIddEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($2)) + 12|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($2)) + 16|0);
 HEAP32[$6>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal27computeProductBlockingSizesIddLi1EiEEvRT2_S3_S3_S2_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = (__ZN5Eigen8internal24useSpecificBlockingSizesIiEEbRT_S3_S3_($8,$9,$10)|0);
 if ($11) {
  STACKTOP = sp;return;
 }
 $12 = $4;
 $13 = $5;
 $14 = $6;
 $15 = $7;
 __ZN5Eigen8internal37evaluateProductBlockingSizesHeuristicIddLi1EiEEvRT2_S3_S3_S2_($12,$13,$14,$15);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24useSpecificBlockingSizesIiEEbRT_S3_S3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal22ignore_unused_variableIiEEvRKT_($6);
 $7 = $4;
 __ZN5Eigen8internal22ignore_unused_variableIiEEvRKT_($7);
 $8 = $5;
 __ZN5Eigen8internal22ignore_unused_variableIiEEvRKT_($8);
 STACKTOP = sp;return 0;
}
function __ZN5Eigen8internal37evaluateProductBlockingSizesHeuristicIddLi1EiEEvRT2_S3_S3_S2_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 544|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(544|0);
 $9 = sp + 64|0;
 $12 = sp + 532|0;
 $20 = sp + 56|0;
 $23 = sp + 531|0;
 $31 = sp + 48|0;
 $34 = sp + 530|0;
 $42 = sp + 40|0;
 $45 = sp + 529|0;
 $53 = sp + 32|0;
 $56 = sp + 528|0;
 $64 = sp + 24|0;
 $67 = sp + 527|0;
 $75 = sp + 16|0;
 $78 = sp + 526|0;
 $86 = sp + 8|0;
 $89 = sp + 525|0;
 $97 = sp;
 $100 = sp + 524|0;
 $106 = sp + 184|0;
 $107 = sp + 180|0;
 $108 = sp + 176|0;
 $109 = sp + 172|0;
 $111 = sp + 164|0;
 $112 = sp + 160|0;
 $115 = sp + 148|0;
 $118 = sp + 136|0;
 $119 = sp + 132|0;
 $121 = sp + 124|0;
 $122 = sp + 120|0;
 $125 = sp + 108|0;
 $129 = sp + 92|0;
 $132 = sp + 80|0;
 $133 = sp + 76|0;
 $135 = sp + 68|0;
 $103 = $0;
 $104 = $1;
 $105 = $2;
 HEAP32[$106>>2] = $3;
 __ZN5Eigen8internal20manage_caching_sizesENS_6ActionEPiS2_S2_(0,$107,$108,$109);
 $136 = HEAP32[$106>>2]|0;
 $137 = ($136|0)>(1);
 if ($137) {
  $138 = HEAP32[$107>>2]|0;
  $139 = (($138) - 32)|0;
  $140 = (($139|0) / 40)&-1;
  HEAP32[$111>>2] = $140;
  HEAP32[$112>>2] = 320;
  $101 = $111;
  $102 = $112;
  $141 = $101;
  $142 = $102;
  $98 = $141;
  $99 = $142;
  $143 = $98;
  $144 = $99;
  ;HEAP8[$97>>0]=HEAP8[$100>>0]|0;
  $95 = $143;
  $96 = $144;
  $145 = $96;
  $146 = $95;
  $92 = $97;
  $93 = $145;
  $94 = $146;
  $147 = $93;
  $148 = HEAP32[$147>>2]|0;
  $149 = $94;
  $150 = HEAP32[$149>>2]|0;
  $151 = ($148|0)<($150|0);
  $152 = $96;
  $153 = $95;
  $154 = $151 ? $152 : $153;
  $155 = HEAP32[$154>>2]|0;
  $110 = $155;
  $156 = $110;
  $157 = $103;
  $158 = HEAP32[$157>>2]|0;
  $159 = ($156|0)<($158|0);
  if ($159) {
   $160 = $110;
   $161 = $110;
   $162 = (($161|0) % 8)&-1;
   $163 = (($160) - ($162))|0;
   $164 = $103;
   HEAP32[$164>>2] = $163;
  }
  $165 = HEAP32[$108>>2]|0;
  $166 = HEAP32[$107>>2]|0;
  $167 = (($165) - ($166))|0;
  $168 = $103;
  $169 = HEAP32[$168>>2]|0;
  $170 = $169<<5;
  $171 = (($167>>>0) / ($170>>>0))&-1;
  $113 = $171;
  $172 = $105;
  $173 = (__ZN5Eigen6numext8div_ceilIiEET_RKS2_S4_($172,$106)|0);
  $114 = $173;
  $174 = $113;
  $175 = $114;
  $176 = ($174|0)<=($175|0);
  if ($176) {
   $177 = $113;
   $178 = $113;
   $179 = (($178|0) % 4)&-1;
   $180 = (($177) - ($179))|0;
   $181 = $105;
   HEAP32[$181>>2] = $180;
  } else {
   $182 = $105;
   $183 = $114;
   $184 = (($183) + 4)|0;
   $185 = (($184) - 1)|0;
   $186 = $114;
   $187 = (($186) + 4)|0;
   $188 = (($187) - 1)|0;
   $189 = (($188|0) % 4)&-1;
   $190 = (($185) - ($189))|0;
   HEAP32[$115>>2] = $190;
   $13 = $182;
   $14 = $115;
   $191 = $13;
   $192 = $14;
   $10 = $191;
   $11 = $192;
   $193 = $10;
   $194 = $11;
   ;HEAP8[$9>>0]=HEAP8[$12>>0]|0;
   $7 = $193;
   $8 = $194;
   $195 = $8;
   $196 = $7;
   $4 = $9;
   $5 = $195;
   $6 = $196;
   $197 = $5;
   $198 = HEAP32[$197>>2]|0;
   $199 = $6;
   $200 = HEAP32[$199>>2]|0;
   $201 = ($198|0)<($200|0);
   $202 = $8;
   $203 = $7;
   $204 = $201 ? $202 : $203;
   $205 = HEAP32[$204>>2]|0;
   $206 = $105;
   HEAP32[$206>>2] = $205;
  }
  $207 = HEAP32[$109>>2]|0;
  $208 = HEAP32[$108>>2]|0;
  $209 = ($207|0)>($208|0);
  if (!($209)) {
   STACKTOP = sp;return;
  }
  $210 = HEAP32[$109>>2]|0;
  $211 = HEAP32[$108>>2]|0;
  $212 = (($210) - ($211))|0;
  $213 = $103;
  $214 = HEAP32[$213>>2]|0;
  $215 = $214<<3;
  $216 = HEAP32[$106>>2]|0;
  $217 = Math_imul($215, $216)|0;
  $218 = (($212>>>0) / ($217>>>0))&-1;
  $116 = $218;
  $219 = $104;
  $220 = (__ZN5Eigen6numext8div_ceilIiEET_RKS2_S4_($219,$106)|0);
  $117 = $220;
  $221 = $116;
  $222 = $117;
  $223 = ($221|0)<($222|0);
  $224 = $116;
  $225 = ($224|0)>=(1);
  $or$cond = $223 & $225;
  if ($or$cond) {
   $226 = $116;
   $227 = $116;
   $228 = (($227|0) % 1)&-1;
   $229 = (($226) - ($228))|0;
   $230 = $104;
   HEAP32[$230>>2] = $229;
   STACKTOP = sp;return;
  } else {
   $231 = $104;
   $232 = $117;
   $233 = (($232) + 1)|0;
   $234 = (($233) - 1)|0;
   $235 = $117;
   $236 = (($235) + 1)|0;
   $237 = (($236) - 1)|0;
   $238 = (($237|0) % 1)&-1;
   $239 = (($234) - ($238))|0;
   HEAP32[$118>>2] = $239;
   $24 = $231;
   $25 = $118;
   $240 = $24;
   $241 = $25;
   $21 = $240;
   $22 = $241;
   $242 = $21;
   $243 = $22;
   ;HEAP8[$20>>0]=HEAP8[$23>>0]|0;
   $18 = $242;
   $19 = $243;
   $244 = $19;
   $245 = $18;
   $15 = $20;
   $16 = $244;
   $17 = $245;
   $246 = $16;
   $247 = HEAP32[$246>>2]|0;
   $248 = $17;
   $249 = HEAP32[$248>>2]|0;
   $250 = ($247|0)<($249|0);
   $251 = $19;
   $252 = $18;
   $253 = $250 ? $251 : $252;
   $254 = HEAP32[$253>>2]|0;
   $255 = $104;
   HEAP32[$255>>2] = $254;
   STACKTOP = sp;return;
  }
 }
 $256 = $103;
 $257 = $104;
 $258 = $105;
 $35 = $257;
 $36 = $258;
 $259 = $35;
 $260 = $36;
 $32 = $259;
 $33 = $260;
 $261 = $32;
 $262 = $33;
 ;HEAP8[$31>>0]=HEAP8[$34>>0]|0;
 $29 = $261;
 $30 = $262;
 $263 = $29;
 $264 = $30;
 $26 = $31;
 $27 = $263;
 $28 = $264;
 $265 = $27;
 $266 = HEAP32[$265>>2]|0;
 $267 = $28;
 $268 = HEAP32[$267>>2]|0;
 $269 = ($266|0)<($268|0);
 $270 = $30;
 $271 = $29;
 $272 = $269 ? $270 : $271;
 $273 = HEAP32[$272>>2]|0;
 HEAP32[$119>>2] = $273;
 $46 = $256;
 $47 = $119;
 $274 = $46;
 $275 = $47;
 $43 = $274;
 $44 = $275;
 $276 = $43;
 $277 = $44;
 ;HEAP8[$42>>0]=HEAP8[$45>>0]|0;
 $40 = $276;
 $41 = $277;
 $278 = $40;
 $279 = $41;
 $37 = $42;
 $38 = $278;
 $39 = $279;
 $280 = $38;
 $281 = HEAP32[$280>>2]|0;
 $282 = $39;
 $283 = HEAP32[$282>>2]|0;
 $284 = ($281|0)<($283|0);
 $285 = $41;
 $286 = $40;
 $287 = $284 ? $285 : $286;
 $288 = HEAP32[$287>>2]|0;
 $289 = ($288|0)<(48);
 if ($289) {
  STACKTOP = sp;return;
 }
 $290 = HEAP32[$107>>2]|0;
 $291 = (($290) - 32)|0;
 $292 = (($291|0) / 40)&-1;
 $293 = $292 & -8;
 HEAP32[$121>>2] = $293;
 HEAP32[$122>>2] = 1;
 $57 = $121;
 $58 = $122;
 $294 = $57;
 $295 = $58;
 $54 = $294;
 $55 = $295;
 $296 = $54;
 $297 = $55;
 ;HEAP8[$53>>0]=HEAP8[$56>>0]|0;
 $51 = $296;
 $52 = $297;
 $298 = $51;
 $299 = $52;
 $48 = $53;
 $49 = $298;
 $50 = $299;
 $300 = $49;
 $301 = HEAP32[$300>>2]|0;
 $302 = $50;
 $303 = HEAP32[$302>>2]|0;
 $304 = ($301|0)<($303|0);
 $305 = $52;
 $306 = $51;
 $307 = $304 ? $305 : $306;
 $308 = HEAP32[$307>>2]|0;
 $120 = $308;
 $309 = $103;
 $310 = HEAP32[$309>>2]|0;
 $123 = $310;
 $311 = $103;
 $312 = HEAP32[$311>>2]|0;
 $313 = $120;
 $314 = ($312|0)>($313|0);
 if ($314) {
  $315 = $103;
  $316 = HEAP32[$315>>2]|0;
  $317 = $120;
  $318 = (($316|0) % ($317|0))&-1;
  $319 = ($318|0)==(0);
  $320 = $120;
  if ($319) {
   $338 = $320;
  } else {
   $321 = $120;
   $322 = (($321) - 1)|0;
   $323 = $103;
   $324 = HEAP32[$323>>2]|0;
   $325 = $120;
   $326 = (($324|0) % ($325|0))&-1;
   $327 = (($322) - ($326))|0;
   $328 = $103;
   $329 = HEAP32[$328>>2]|0;
   $330 = $120;
   $331 = (($329|0) / ($330|0))&-1;
   $332 = (($331) + 1)|0;
   $333 = $332<<3;
   $334 = (($327|0) / ($333|0))&-1;
   $335 = $334<<3;
   $336 = (($320) - ($335))|0;
   $338 = $336;
  }
  $337 = $103;
  HEAP32[$337>>2] = $338;
 }
 $124 = 1572864;
 $339 = $104;
 $340 = HEAP32[$339>>2]|0;
 $341 = $103;
 $342 = HEAP32[$341>>2]|0;
 $343 = Math_imul($340, $342)|0;
 $344 = $343<<3;
 $126 = $344;
 $345 = HEAP32[$107>>2]|0;
 $346 = (($345) - 32)|0;
 $347 = $126;
 $348 = (($346) - ($347))|0;
 $127 = $348;
 $349 = $127;
 $350 = $103;
 $351 = HEAP32[$350>>2]|0;
 $352 = $351<<5;
 $353 = ($349|0)>=($352|0);
 if ($353) {
  $354 = $127;
  $355 = $103;
  $356 = HEAP32[$355>>2]|0;
  $357 = $356<<3;
  $358 = (($354>>>0) / ($357>>>0))&-1;
  HEAP32[$125>>2] = $358;
 } else {
  $359 = $120;
  $360 = $359<<2;
  $361 = $360<<3;
  $362 = (4718592 / ($361>>>0))&-1;
  HEAP32[$125>>2] = $362;
 }
 $363 = $103;
 $364 = HEAP32[$363>>2]|0;
 $365 = $364<<1;
 $366 = $365<<3;
 $367 = (1572864 / ($366>>>0))&-1;
 HEAP32[$129>>2] = $367;
 $68 = $129;
 $69 = $125;
 $368 = $68;
 $369 = $69;
 $65 = $368;
 $66 = $369;
 $370 = $65;
 $371 = $66;
 ;HEAP8[$64>>0]=HEAP8[$67>>0]|0;
 $62 = $370;
 $63 = $371;
 $372 = $63;
 $373 = $62;
 $59 = $64;
 $60 = $372;
 $61 = $373;
 $374 = $60;
 $375 = HEAP32[$374>>2]|0;
 $376 = $61;
 $377 = HEAP32[$376>>2]|0;
 $378 = ($375|0)<($377|0);
 $379 = $63;
 $380 = $62;
 $381 = $378 ? $379 : $380;
 $382 = HEAP32[$381>>2]|0;
 $383 = $382 & -4;
 $128 = $383;
 $384 = $105;
 $385 = HEAP32[$384>>2]|0;
 $386 = $128;
 $387 = ($385|0)>($386|0);
 if ($387) {
  $388 = $105;
  $389 = HEAP32[$388>>2]|0;
  $390 = $128;
  $391 = (($389|0) % ($390|0))&-1;
  $392 = ($391|0)==(0);
  $393 = $128;
  if ($392) {
   $410 = $393;
  } else {
   $394 = $128;
   $395 = $105;
   $396 = HEAP32[$395>>2]|0;
   $397 = $128;
   $398 = (($396|0) % ($397|0))&-1;
   $399 = (($394) - ($398))|0;
   $400 = $105;
   $401 = HEAP32[$400>>2]|0;
   $402 = $128;
   $403 = (($401|0) / ($402|0))&-1;
   $404 = (($403) + 1)|0;
   $405 = $404<<2;
   $406 = (($399|0) / ($405|0))&-1;
   $407 = $406<<2;
   $408 = (($393) - ($407))|0;
   $410 = $408;
  }
  $409 = $105;
  HEAP32[$409>>2] = $410;
  STACKTOP = sp;return;
 }
 $411 = $123;
 $412 = $103;
 $413 = HEAP32[$412>>2]|0;
 $414 = ($411|0)==($413|0);
 if (!($414)) {
  STACKTOP = sp;return;
 }
 $415 = $103;
 $416 = HEAP32[$415>>2]|0;
 $417 = $105;
 $418 = HEAP32[$417>>2]|0;
 $419 = Math_imul($416, $418)|0;
 $420 = $419<<3;
 $130 = $420;
 $131 = 1572864;
 $421 = $104;
 $422 = HEAP32[$421>>2]|0;
 HEAP32[$132>>2] = $422;
 $423 = $130;
 $424 = ($423|0)<=(1024);
 if ($424) {
  $425 = HEAP32[$107>>2]|0;
  $131 = $425;
 } else {
  $426 = HEAP32[$109>>2]|0;
  $427 = ($426|0)!=(0);
  $428 = $130;
  $429 = ($428|0)<=(32768);
  $or$cond3 = $427 & $429;
  if ($or$cond3) {
   $430 = HEAP32[$108>>2]|0;
   $131 = $430;
   HEAP32[$133>>2] = 576;
   $79 = $133;
   $80 = $132;
   $431 = $79;
   $432 = $80;
   $76 = $431;
   $77 = $432;
   $433 = $76;
   $434 = $77;
   ;HEAP8[$75>>0]=HEAP8[$78>>0]|0;
   $73 = $433;
   $74 = $434;
   $435 = $74;
   $436 = $73;
   $70 = $75;
   $71 = $435;
   $72 = $436;
   $437 = $71;
   $438 = HEAP32[$437>>2]|0;
   $439 = $72;
   $440 = HEAP32[$439>>2]|0;
   $441 = ($438|0)<($440|0);
   $442 = $74;
   $443 = $73;
   $444 = $441 ? $442 : $443;
   $445 = HEAP32[$444>>2]|0;
   HEAP32[$132>>2] = $445;
  }
 }
 $446 = $131;
 $447 = $103;
 $448 = HEAP32[$447>>2]|0;
 $449 = ($448*3)|0;
 $450 = $449<<3;
 $451 = (($446>>>0) / ($450>>>0))&-1;
 HEAP32[$135>>2] = $451;
 $90 = $135;
 $91 = $132;
 $452 = $90;
 $453 = $91;
 $87 = $452;
 $88 = $453;
 $454 = $87;
 $455 = $88;
 ;HEAP8[$86>>0]=HEAP8[$89>>0]|0;
 $84 = $454;
 $85 = $455;
 $456 = $85;
 $457 = $84;
 $81 = $86;
 $82 = $456;
 $83 = $457;
 $458 = $82;
 $459 = HEAP32[$458>>2]|0;
 $460 = $83;
 $461 = HEAP32[$460>>2]|0;
 $462 = ($459|0)<($461|0);
 $463 = $85;
 $464 = $84;
 $465 = $462 ? $463 : $464;
 $466 = HEAP32[$465>>2]|0;
 $134 = $466;
 $467 = $134;
 $468 = ($467|0)>(1);
 $469 = $134;
 if ($468) {
  $470 = (($469|0) % 1)&-1;
  $471 = $134;
  $472 = (($471) - ($470))|0;
  $134 = $472;
 } else {
  $473 = ($469|0)==(0);
  if ($473) {
   STACKTOP = sp;return;
  }
 }
 $474 = $104;
 $475 = HEAP32[$474>>2]|0;
 $476 = $134;
 $477 = (($475|0) % ($476|0))&-1;
 $478 = ($477|0)==(0);
 $479 = $134;
 if ($478) {
  $496 = $479;
 } else {
  $480 = $134;
  $481 = $104;
  $482 = HEAP32[$481>>2]|0;
  $483 = $134;
  $484 = (($482|0) % ($483|0))&-1;
  $485 = (($480) - ($484))|0;
  $486 = $104;
  $487 = HEAP32[$486>>2]|0;
  $488 = $134;
  $489 = (($487|0) / ($488|0))&-1;
  $490 = (($489) + 1)|0;
  $491 = $490;
  $492 = (($485|0) / ($491|0))&-1;
  $493 = $492;
  $494 = (($479) - ($493))|0;
  $496 = $494;
 }
 $495 = $104;
 HEAP32[$495>>2] = $496;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal22ignore_unused_variableIiEEvRKT_($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal20manage_caching_sizesENS_6ActionEPiS2_S2_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $10 = HEAP8[10472]|0;
 $11 = ($10<<24>>24)==(0);
 do {
  if ($11) {
   $12 = (___cxa_guard_acquire(10472)|0);
   $13 = ($12|0)!=(0);
   if ($13) {
    __THREW__ = 0;
    invoke_vi(182,(10676|0));
    $14 = __THREW__; __THREW__ = 0;
    $15 = $14&1;
    if ($15) {
     $24 = ___cxa_find_matching_catch_2()|0;
     $25 = tempRet0;
     $8 = $24;
     $9 = $25;
     $26 = $8;
     $27 = $9;
     ___resumeException($26|0);
     // unreachable;
    } else {
     break;
    }
   }
  }
 } while(0);
 $16 = $4;
 $17 = ($16|0)==(1);
 if ($17) {
  $18 = $5;
  $19 = HEAP32[$18>>2]|0;
  HEAP32[2669] = $19;
  $20 = $6;
  $21 = HEAP32[$20>>2]|0;
  HEAP32[(10680)>>2] = $21;
  $22 = $7;
  $23 = HEAP32[$22>>2]|0;
  HEAP32[(10684)>>2] = $23;
  STACKTOP = sp;return;
 }
 $28 = $4;
 $29 = ($28|0)==(0);
 if (!($29)) {
  STACKTOP = sp;return;
 }
 $30 = HEAP32[2669]|0;
 $31 = $5;
 HEAP32[$31>>2] = $30;
 $32 = HEAP32[(10680)>>2]|0;
 $33 = $6;
 HEAP32[$33>>2] = $32;
 $34 = HEAP32[(10684)>>2]|0;
 $35 = $7;
 HEAP32[$35>>2] = $34;
 STACKTOP = sp;return;
}
function __ZN5Eigen6numext8div_ceilIiEET_RKS2_S4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = (($5) + ($7))|0;
 $9 = (($8) - 1)|0;
 $10 = $3;
 $11 = HEAP32[$10>>2]|0;
 $12 = (($9|0) / ($11|0))&-1;
 STACKTOP = sp;return ($12|0);
}
function __ZN5Eigen8internal10CacheSizesC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = sp;
 $1 = $0;
 $5 = $1;
 HEAP32[$5>>2] = -1;
 $6 = ((($5)) + 4|0);
 HEAP32[$6>>2] = -1;
 $7 = ((($5)) + 8|0);
 HEAP32[$7>>2] = -1;
 __ZN5Eigen8internal15queryCacheSizesERiS1_S1_($2,$3,$4);
 $8 = HEAP32[$2>>2]|0;
 $9 = (__ZN5Eigen8internal27manage_caching_sizes_helperEii($8,16384)|0);
 HEAP32[$5>>2] = $9;
 $10 = HEAP32[$3>>2]|0;
 $11 = (__ZN5Eigen8internal27manage_caching_sizes_helperEii($10,524288)|0);
 $12 = ((($5)) + 4|0);
 HEAP32[$12>>2] = $11;
 $13 = HEAP32[$4>>2]|0;
 $14 = (__ZN5Eigen8internal27manage_caching_sizes_helperEii($13,524288)|0);
 $15 = ((($5)) + 8|0);
 HEAP32[$15>>2] = $14;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15queryCacheSizesERiS1_S1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5;
 HEAP32[$6>>2] = -1;
 $7 = $4;
 HEAP32[$7>>2] = -1;
 $8 = $3;
 HEAP32[$8>>2] = -1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal27manage_caching_sizes_helperEii($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ($4|0)<=(0);
 $6 = $3;
 $7 = $2;
 $8 = $5 ? $6 : $7;
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal22ignore_unused_variableIbEEvRKT_($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal12gemm_functorIdiNS0_29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES5_S5_NS0_19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEEEclEiiiiPNS0_16GemmParallelInfoIiEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0, $45 = 0, $46 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $10;
 $14 = ($13|0)==(-1);
 if ($14) {
  $15 = ((($12)) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($16)|0);
  $10 = $17;
 }
 $18 = $8;
 $19 = $10;
 $20 = HEAP32[$12>>2]|0;
 $21 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($20)|0);
 $22 = HEAP32[$12>>2]|0;
 $23 = $7;
 $24 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE8coeffRefEii($22,$23,0)|0);
 $25 = HEAP32[$12>>2]|0;
 $26 = (__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11outerStrideEv($25)|0);
 $27 = ((($12)) + 4|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = $9;
 $30 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE8coeffRefEii($28,0,$29)|0);
 $31 = ((($12)) + 4|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = (__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11outerStrideEv($32)|0);
 $34 = ((($12)) + 8|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = $7;
 $37 = $9;
 $38 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE8coeffRefEii($35,$36,$37)|0);
 $39 = ((($12)) + 8|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = (__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11outerStrideEv($40)|0);
 $42 = ((($12)) + 16|0);
 $43 = +HEAPF64[$42>>3];
 $44 = ((($12)) + 24|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = $11;
 __ZN5Eigen8internal29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EE3runEiiiPKdiS4_iPdidRNS0_15level3_blockingIddEEPNS0_16GemmParallelInfoIiEE($18,$19,$21,$24,$26,$30,$33,$38,$41,$43,$45,$46);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EE3runEiiiPKdiS4_iPdidRNS0_15level3_blockingIddEEPNS0_16GemmParallelInfoIiEE($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = +$9;
 $10 = $10|0;
 $11 = $11|0;
 var $$alloca_mul = 0, $$alloca_mul141 = 0, $$not = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0.0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;
 var $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0;
 var $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0;
 var $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0;
 var $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0;
 var $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0.0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 608|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(608|0);
 $17 = sp + 40|0;
 $20 = sp + 600|0;
 $50 = sp + 32|0;
 $53 = sp + 599|0;
 $68 = sp + 24|0;
 $71 = sp + 598|0;
 $79 = sp + 16|0;
 $82 = sp + 597|0;
 $88 = sp + 8|0;
 $91 = sp + 596|0;
 $107 = sp + 248|0;
 $108 = sp + 244|0;
 $109 = sp + 240|0;
 $118 = sp + 208|0;
 $119 = sp + 200|0;
 $120 = sp + 192|0;
 $121 = sp + 184|0;
 $124 = sp + 168|0;
 $126 = sp + 160|0;
 $127 = sp + 595|0;
 $128 = sp + 594|0;
 $129 = sp + 593|0;
 $133 = sp + 136|0;
 $137 = sp + 112|0;
 $141 = sp + 100|0;
 $144 = sp + 88|0;
 $145 = sp + 80|0;
 $148 = sp + 64|0;
 $149 = sp + 56|0;
 $150 = sp + 48|0;
 HEAP32[$107>>2] = $0;
 HEAP32[$108>>2] = $1;
 HEAP32[$109>>2] = $2;
 $110 = $3;
 $111 = $4;
 $112 = $5;
 $113 = $6;
 $114 = $7;
 $115 = $8;
 $116 = $9;
 $117 = $10;
 HEAP32[$118>>2] = $11;
 $151 = $110;
 $152 = $111;
 $104 = $119;
 $105 = $151;
 $106 = $152;
 $153 = $104;
 $154 = $105;
 $155 = $106;
 $101 = $153;
 $102 = $154;
 $103 = $155;
 $156 = $101;
 $157 = $102;
 HEAP32[$156>>2] = $157;
 $158 = ((($156)) + 4|0);
 $159 = $103;
 HEAP32[$158>>2] = $159;
 $160 = $112;
 $161 = $113;
 $98 = $120;
 $99 = $160;
 $100 = $161;
 $162 = $98;
 $163 = $99;
 $164 = $100;
 $95 = $162;
 $96 = $163;
 $97 = $164;
 $165 = $95;
 $166 = $96;
 HEAP32[$165>>2] = $166;
 $167 = ((($165)) + 4|0);
 $168 = $97;
 HEAP32[$167>>2] = $168;
 $169 = $114;
 $170 = $115;
 $92 = $121;
 $93 = $169;
 $94 = $170;
 $171 = $92;
 $172 = $93;
 HEAP32[$171>>2] = $172;
 $173 = ((($171)) + 4|0);
 $174 = $94;
 HEAP32[$173>>2] = $174;
 $175 = $117;
 $176 = (__ZNK5Eigen8internal15level3_blockingIddE2kcEv($175)|0);
 $122 = $176;
 $177 = $117;
 $178 = (__ZNK5Eigen8internal15level3_blockingIddE2mcEv($177)|0);
 HEAP32[$124>>2] = $178;
 $89 = $107;
 $90 = $124;
 $179 = $89;
 $180 = $90;
 ;HEAP8[$88>>0]=HEAP8[$91>>0]|0;
 $86 = $179;
 $87 = $180;
 $181 = $87;
 $182 = $86;
 $83 = $88;
 $84 = $181;
 $85 = $182;
 $183 = $84;
 $184 = HEAP32[$183>>2]|0;
 $185 = $85;
 $186 = HEAP32[$185>>2]|0;
 $187 = ($184|0)<($186|0);
 $188 = $87;
 $189 = $86;
 $190 = $187 ? $188 : $189;
 $191 = HEAP32[$190>>2]|0;
 $123 = $191;
 $192 = $117;
 $193 = (__ZNK5Eigen8internal15level3_blockingIddE2ncEv($192)|0);
 HEAP32[$126>>2] = $193;
 $80 = $108;
 $81 = $126;
 $194 = $80;
 $195 = $81;
 ;HEAP8[$79>>0]=HEAP8[$82>>0]|0;
 $77 = $194;
 $78 = $195;
 $196 = $78;
 $197 = $77;
 $74 = $79;
 $75 = $196;
 $76 = $197;
 $198 = $75;
 $199 = HEAP32[$198>>2]|0;
 $200 = $76;
 $201 = HEAP32[$200>>2]|0;
 $202 = ($199|0)<($201|0);
 $203 = $78;
 $204 = $77;
 $205 = $202 ? $203 : $204;
 $206 = HEAP32[$205>>2]|0;
 $125 = $206;
 __ZN5Eigen8internal22ignore_unused_variableIPNS0_16GemmParallelInfoIiEEEEvRKT_($118);
 $207 = $122;
 $208 = $123;
 $209 = Math_imul($207, $208)|0;
 $130 = $209;
 $210 = $122;
 $211 = $125;
 $212 = Math_imul($210, $211)|0;
 $131 = $212;
 $213 = $130;
 $73 = $213;
 $214 = $73;
 $215 = ($214>>>0)>(536870911);
 if ($215) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $216 = $117;
 $217 = (__ZN5Eigen8internal15level3_blockingIddE6blockAEv($216)|0);
 $218 = ($217|0)!=(0|0);
 if ($218) {
  $219 = $117;
  $220 = (__ZN5Eigen8internal15level3_blockingIddE6blockAEv($219)|0);
  $235 = $220;
 } else {
  $221 = $130;
  $222 = $221<<3;
  $223 = ($222>>>0)<=(131072);
  $224 = $130;
  $225 = $224<<3;
  if ($223) {
   $226 = (($225) + 16)|0;
   $227 = (($226) - 1)|0;
   $$alloca_mul = $227;
   $228 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
   $229 = $228;
   $230 = (($229) + 16)|0;
   $231 = (($230) - 1)|0;
   $232 = $231 & -16;
   $233 = $232;
   $474 = $233;
  } else {
   $234 = (__ZN5Eigen8internal14aligned_mallocEj($225)|0);
   $474 = $234;
  }
  $235 = $474;
 }
 $132 = $235;
 $236 = $117;
 $237 = (__ZN5Eigen8internal15level3_blockingIddE6blockAEv($236)|0);
 $238 = ($237|0)==(0|0);
 $239 = $132;
 $240 = $238 ? $239 : 0;
 $241 = $130;
 $242 = $130;
 $243 = $242<<3;
 $244 = ($243>>>0)>(131072);
 __ZN5Eigen8internal28aligned_stack_memory_handlerIdEC2EPdjb($133,$240,$241,$244);
 $245 = $131;
 $72 = $245;
 $246 = $72;
 $247 = ($246>>>0)>(536870911);
 if ($247) {
  __THREW__ = 0;
  invoke_v(183);
  $248 = __THREW__; __THREW__ = 0;
  $249 = $248&1;
  if ($249) {
   label = 32;
  } else {
   label = 11;
  }
 } else {
  label = 11;
 }
 do {
  if ((label|0) == 11) {
   $250 = $117;
   __THREW__ = 0;
   $251 = (invoke_ii(184,($250|0))|0);
   $252 = __THREW__; __THREW__ = 0;
   $253 = $252&1;
   if ($253) {
    label = 32;
   } else {
    $254 = ($251|0)!=(0|0);
    if ($254) {
     $255 = $117;
     __THREW__ = 0;
     $256 = (invoke_ii(184,($255|0))|0);
     $257 = __THREW__; __THREW__ = 0;
     $258 = $257&1;
     if ($258) {
      label = 32;
      break;
     } else {
      $275 = $256;
     }
    } else {
     $259 = $131;
     $260 = $259<<3;
     $261 = ($260>>>0)<=(131072);
     $262 = $131;
     $263 = $262<<3;
     if ($261) {
      $264 = (($263) + 16)|0;
      $265 = (($264) - 1)|0;
      $$alloca_mul141 = $265;
      $266 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul141)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul141)|0)+15)&-16)|0);;
      $267 = $266;
      $268 = (($267) + 16)|0;
      $269 = (($268) - 1)|0;
      $270 = $269 & -16;
      $271 = $270;
      $475 = $271;
     } else {
      __THREW__ = 0;
      $272 = (invoke_ii(185,($263|0))|0);
      $273 = __THREW__; __THREW__ = 0;
      $274 = $273&1;
      if ($274) {
       label = 32;
       break;
      } else {
       $475 = $272;
      }
     }
     $275 = $475;
    }
    $136 = $275;
    $276 = $117;
    __THREW__ = 0;
    $277 = (invoke_ii(184,($276|0))|0);
    $278 = __THREW__; __THREW__ = 0;
    $279 = $278&1;
    if ($279) {
     label = 32;
    } else {
     $280 = ($277|0)==(0|0);
     $281 = $136;
     $282 = $280 ? $281 : 0;
     $283 = $131;
     $284 = $131;
     $285 = $284<<3;
     $286 = ($285>>>0)>(131072);
     __THREW__ = 0;
     invoke_viiii(186,($137|0),($282|0),($283|0),($286|0));
     $287 = __THREW__; __THREW__ = 0;
     $288 = $287&1;
     if ($288) {
      label = 32;
     } else {
      $289 = $123;
      $290 = HEAP32[$107>>2]|0;
      $291 = ($289|0)!=($290|0);
      if ($291) {
       $292 = $122;
       $293 = HEAP32[$109>>2]|0;
       $294 = ($292|0)==($293|0);
       if ($294) {
        $295 = $125;
        $296 = HEAP32[$108>>2]|0;
        $297 = ($295|0)==($296|0);
        $299 = $297;
       } else {
        $299 = 0;
       }
      } else {
       $299 = 0;
      }
      $298 = $299&1;
      $138 = $298;
      $139 = 0;
      L31: while(1) {
       $300 = $139;
       $301 = HEAP32[$107>>2]|0;
       $302 = ($300|0)<($301|0);
       if (!($302)) {
        label = 38;
        break;
       }
       $303 = $139;
       $304 = $123;
       $305 = (($303) + ($304))|0;
       HEAP32[$141>>2] = $305;
       $69 = $141;
       $70 = $107;
       $306 = $69;
       $307 = $70;
       ;HEAP8[$68>>0]=HEAP8[$71>>0]|0;
       $66 = $306;
       $67 = $307;
       $308 = $67;
       $309 = $66;
       $63 = $68;
       $64 = $308;
       $65 = $309;
       $310 = $64;
       $311 = HEAP32[$310>>2]|0;
       $312 = $65;
       $313 = HEAP32[$312>>2]|0;
       $314 = ($311|0)<($313|0);
       $315 = $67;
       $316 = $66;
       $317 = $314 ? $315 : $316;
       $318 = HEAP32[$317>>2]|0;
       $319 = $139;
       $320 = (($318) - ($319))|0;
       $140 = $320;
       $142 = 0;
       while(1) {
        $321 = $142;
        $322 = HEAP32[$109>>2]|0;
        $323 = ($321|0)<($322|0);
        if (!($323)) {
         break;
        }
        $324 = $142;
        $325 = $122;
        $326 = (($324) + ($325))|0;
        HEAP32[$144>>2] = $326;
        $51 = $144;
        $52 = $109;
        $327 = $51;
        $328 = $52;
        ;HEAP8[$50>>0]=HEAP8[$53>>0]|0;
        $48 = $327;
        $49 = $328;
        $329 = $49;
        $330 = $48;
        $45 = $50;
        $46 = $329;
        $47 = $330;
        $331 = $46;
        $332 = HEAP32[$331>>2]|0;
        $333 = $47;
        $334 = HEAP32[$333>>2]|0;
        $335 = ($332|0)<($334|0);
        $336 = $49;
        $337 = $48;
        $338 = $335 ? $336 : $337;
        $339 = HEAP32[$338>>2]|0;
        $340 = $142;
        $341 = (($339) - ($340))|0;
        $143 = $341;
        $342 = $132;
        $343 = $139;
        $344 = $142;
        $42 = $119;
        $43 = $343;
        $44 = $344;
        $345 = $42;
        $346 = $43;
        $347 = $44;
        $39 = $345;
        $40 = $346;
        $41 = $347;
        $348 = $39;
        $349 = HEAP32[$348>>2]|0;
        $350 = $40;
        $351 = $41;
        $352 = ((($348)) + 4|0);
        $353 = HEAP32[$352>>2]|0;
        $354 = Math_imul($351, $353)|0;
        $355 = (($350) + ($354))|0;
        $356 = (($349) + ($355<<3)|0);
        $357 = ((($345)) + 4|0);
        $358 = HEAP32[$357>>2]|0;
        $36 = $145;
        $37 = $356;
        $38 = $358;
        $359 = $36;
        $360 = $37;
        $361 = $38;
        $33 = $359;
        $34 = $360;
        $35 = $361;
        $362 = $33;
        $363 = $34;
        HEAP32[$362>>2] = $363;
        $364 = ((($362)) + 4|0);
        $365 = $35;
        HEAP32[$364>>2] = $365;
        $366 = $143;
        $367 = $140;
        __THREW__ = 0;
        invoke_viiiiiii(187,($127|0),($342|0),($145|0),($366|0),($367|0),0,0);
        $368 = __THREW__; __THREW__ = 0;
        $369 = $368&1;
        if ($369) {
         label = 33;
         break L31;
        }
        $146 = 0;
        while(1) {
         $370 = $146;
         $371 = HEAP32[$108>>2]|0;
         $372 = ($370|0)<($371|0);
         if (!($372)) {
          break;
         }
         $373 = $146;
         $374 = $125;
         $375 = (($373) + ($374))|0;
         HEAP32[$148>>2] = $375;
         $18 = $148;
         $19 = $108;
         $376 = $18;
         $377 = $19;
         ;HEAP8[$17>>0]=HEAP8[$20>>0]|0;
         $15 = $376;
         $16 = $377;
         $378 = $16;
         $379 = $15;
         $12 = $17;
         $13 = $378;
         $14 = $379;
         $380 = $13;
         $381 = HEAP32[$380>>2]|0;
         $382 = $14;
         $383 = HEAP32[$382>>2]|0;
         $384 = ($381|0)<($383|0);
         $385 = $16;
         $386 = $15;
         $387 = $384 ? $385 : $386;
         $388 = HEAP32[$387>>2]|0;
         $389 = $146;
         $390 = (($388) - ($389))|0;
         $147 = $390;
         $391 = $138;
         $392 = $391&1;
         $$not = $392 ^ 1;
         $393 = $139;
         $394 = ($393|0)==(0);
         $or$cond = $$not | $394;
         if ($or$cond) {
          $395 = $136;
          $396 = $142;
          $397 = $146;
          $30 = $120;
          $31 = $396;
          $32 = $397;
          $398 = $30;
          $399 = $31;
          $400 = $32;
          $27 = $398;
          $28 = $399;
          $29 = $400;
          $401 = $27;
          $402 = HEAP32[$401>>2]|0;
          $403 = $28;
          $404 = $29;
          $405 = ((($401)) + 4|0);
          $406 = HEAP32[$405>>2]|0;
          $407 = Math_imul($404, $406)|0;
          $408 = (($403) + ($407))|0;
          $409 = (($402) + ($408<<3)|0);
          $410 = ((($398)) + 4|0);
          $411 = HEAP32[$410>>2]|0;
          $24 = $149;
          $25 = $409;
          $26 = $411;
          $412 = $24;
          $413 = $25;
          $414 = $26;
          $21 = $412;
          $22 = $413;
          $23 = $414;
          $415 = $21;
          $416 = $22;
          HEAP32[$415>>2] = $416;
          $417 = ((($415)) + 4|0);
          $418 = $23;
          HEAP32[$417>>2] = $418;
          $419 = $143;
          $420 = $147;
          __THREW__ = 0;
          invoke_viiiiiii(188,($128|0),($395|0),($149|0),($419|0),($420|0),0,0);
          $421 = __THREW__; __THREW__ = 0;
          $422 = $421&1;
          if ($422) {
           label = 33;
           break L31;
          }
         }
         $429 = $139;
         $430 = $146;
         $60 = $121;
         $61 = $429;
         $62 = $430;
         $431 = $60;
         $432 = $61;
         $433 = $62;
         $57 = $431;
         $58 = $432;
         $59 = $433;
         $434 = $57;
         $435 = HEAP32[$434>>2]|0;
         $436 = $58;
         $437 = $59;
         $438 = ((($434)) + 4|0);
         $439 = HEAP32[$438>>2]|0;
         $440 = Math_imul($437, $439)|0;
         $441 = (($436) + ($440))|0;
         $442 = (($435) + ($441<<3)|0);
         $443 = ((($431)) + 4|0);
         $444 = HEAP32[$443>>2]|0;
         $54 = $150;
         $55 = $442;
         $56 = $444;
         $445 = $54;
         $446 = $55;
         HEAP32[$445>>2] = $446;
         $447 = ((($445)) + 4|0);
         $448 = $56;
         HEAP32[$447>>2] = $448;
         $449 = $132;
         $450 = $136;
         $451 = $140;
         $452 = $143;
         $453 = $147;
         $454 = $116;
         __THREW__ = 0;
         invoke_viiiiiiidiiii(190,($129|0),($150|0),($449|0),($450|0),($451|0),($452|0),($453|0),(+$454),-1,-1,0,0);
         $455 = __THREW__; __THREW__ = 0;
         $456 = $455&1;
         if ($456) {
          label = 33;
          break L31;
         }
         $457 = $125;
         $458 = $146;
         $459 = (($458) + ($457))|0;
         $146 = $459;
        }
        $460 = $122;
        $461 = $142;
        $462 = (($461) + ($460))|0;
        $142 = $462;
       }
       $463 = $123;
       $464 = $139;
       $465 = (($464) + ($463))|0;
       $139 = $465;
      }
      if ((label|0) == 33) {
       $425 = ___cxa_find_matching_catch_2()|0;
       $426 = tempRet0;
       $134 = $425;
       $135 = $426;
       __THREW__ = 0;
       invoke_vi(189,($137|0));
       $427 = __THREW__; __THREW__ = 0;
       $428 = $427&1;
       if (!($428)) {
        break;
       }
       $472 = ___cxa_find_matching_catch_3(0|0)|0;
       $473 = tempRet0;
       ___clang_call_terminate($472);
       // unreachable;
      }
      else if ((label|0) == 38) {
       __THREW__ = 0;
       invoke_vi(189,($137|0));
       $466 = __THREW__; __THREW__ = 0;
       $467 = $466&1;
       if ($467) {
        label = 32;
        break;
       }
       __ZN5Eigen8internal28aligned_stack_memory_handlerIdED2Ev($133);
       STACKTOP = sp;return;
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $423 = ___cxa_find_matching_catch_2()|0;
  $424 = tempRet0;
  $134 = $423;
  $135 = $424;
 }
 __THREW__ = 0;
 invoke_vi(189,($133|0));
 $468 = __THREW__; __THREW__ = 0;
 $469 = $468&1;
 if ($469) {
  $472 = ___cxa_find_matching_catch_3(0|0)|0;
  $473 = tempRet0;
  ___clang_call_terminate($472);
  // unreachable;
 } else {
  $470 = $134;
  $471 = $135;
  ___resumeException($470|0);
  // unreachable;
 }
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE8coeffRefEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EE4dataEv($6)|0);
 $8 = $4;
 $9 = $5;
 $10 = (__ZNK5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EE4rowsEv($6)|0);
 $11 = Math_imul($9, $10)|0;
 $12 = (($8) + ($11))|0;
 $13 = (($7) + ($12<<3)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE8coeffRefEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EE4dataEv($6)|0);
 $8 = $4;
 $9 = $5;
 $10 = (__ZNK5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EE4rowsEv($6)|0);
 $11 = Math_imul($9, $10)|0;
 $12 = (($8) + ($11))|0;
 $13 = (($7) + ($12<<3)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNK5Eigen8internal15level3_blockingIddE2kcEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15level3_blockingIddE2mcEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15level3_blockingIddE2ncEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal22ignore_unused_variableIPNS0_16GemmParallelInfoIiEEEEvRKT_($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15level3_blockingIddE6blockAEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal28aligned_stack_memory_handlerIdEC2EPdjb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $8 = $3&1;
 $7 = $8;
 $9 = $4;
 __ZN5Eigen8internal11noncopyableC2Ev($9);
 $10 = $5;
 HEAP32[$9>>2] = $10;
 $11 = ((($9)) + 4|0);
 $12 = $6;
 HEAP32[$11>>2] = $12;
 $13 = ((($9)) + 8|0);
 $14 = $7;
 $15 = $14&1;
 $16 = $15&1;
 HEAP8[$13>>0] = $16;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15level3_blockingIddE6blockBEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal13gemm_pack_lhsIdiNS0_22const_blas_data_mapperIdiLi0EEELi1ELi1ELi0ELb0ELb0EEclEPdRKS3_iiii($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0.0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0.0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $22 = sp + 44|0;
 $23 = sp + 40|0;
 $24 = sp + 108|0;
 $32 = sp;
 $17 = $0;
 $18 = $1;
 $19 = $2;
 $20 = $3;
 $21 = $4;
 HEAP32[$22>>2] = $5;
 HEAP32[$23>>2] = $6;
 __ZN5Eigen8internal22ignore_unused_variableIiEEvRKT_($22);
 __ZN5Eigen8internal22ignore_unused_variableIiEEvRKT_($23);
 $34 = HEAP32[$22>>2]|0;
 $35 = ($34|0)==(0);
 $36 = HEAP32[$23>>2]|0;
 $37 = ($36|0)==(0);
 $or$cond = $35 & $37;
 if (!($or$cond)) {
  ___assert_fail((3643|0),(3734|0),1705,(1719|0));
  // unreachable;
 }
 $25 = 0;
 $26 = 0;
 $27 = 0;
 $38 = $21;
 $39 = (($38|0) / 1)&-1;
 $40 = $39;
 $28 = $40;
 $41 = $28;
 $29 = $41;
 $30 = 0;
 while(1) {
  $42 = $30;
  $43 = $28;
  $44 = ($42|0)<($43|0);
  if (!($44)) {
   break;
  }
  $31 = 0;
  while(1) {
   $45 = $31;
   $46 = $20;
   $47 = ($45|0)<($46|0);
   if (!($47)) {
    break;
   }
   $48 = $19;
   $49 = $30;
   $50 = (($49) + 0)|0;
   $51 = $31;
   $14 = $48;
   $15 = $50;
   $16 = $51;
   $52 = $14;
   $53 = $15;
   $54 = $16;
   $11 = $52;
   $12 = $53;
   $13 = $54;
   $55 = $11;
   $56 = HEAP32[$55>>2]|0;
   $57 = $12;
   $58 = $13;
   $59 = ((($55)) + 4|0);
   $60 = HEAP32[$59>>2]|0;
   $61 = Math_imul($58, $60)|0;
   $62 = (($57) + ($61))|0;
   $63 = (($56) + ($62<<3)|0);
   $10 = $63;
   $64 = $10;
   $65 = (+__ZN5Eigen8internal6ploaduIdEET_PKNS0_15unpacket_traitsIS2_E4typeE($64));
   HEAPF64[$32>>3] = $65;
   $66 = $18;
   $67 = $25;
   $68 = (($66) + ($67<<3)|0);
   $69 = (__ZNK5Eigen8internal7conj_ifILb0EE5pconjIdEERKT_S6_($24,$32)|0);
   __ZN5Eigen8internal6pstoreIddEEvPT_RKT0_($68,$69);
   $70 = $25;
   $71 = (($70) + 1)|0;
   $25 = $71;
   $72 = $31;
   $73 = (($72) + 1)|0;
   $31 = $73;
  }
  $74 = $30;
  $75 = (($74) + 1)|0;
  $30 = $75;
 }
 while(1) {
  $76 = $30;
  $77 = $21;
  $78 = ($76|0)<($77|0);
  if (!($78)) {
   break;
  }
  $33 = 0;
  while(1) {
   $79 = $33;
   $80 = $20;
   $81 = ($79|0)<($80|0);
   if (!($81)) {
    break;
   }
   $82 = $19;
   $83 = $30;
   $84 = $33;
   $7 = $82;
   $8 = $83;
   $9 = $84;
   $85 = $7;
   $86 = HEAP32[$85>>2]|0;
   $87 = $8;
   $88 = $9;
   $89 = ((($85)) + 4|0);
   $90 = HEAP32[$89>>2]|0;
   $91 = Math_imul($88, $90)|0;
   $92 = (($87) + ($91))|0;
   $93 = (($86) + ($92<<3)|0);
   $94 = (__ZNK5Eigen8internal7conj_ifILb0EEclIdEERKT_S6_($24,$93)|0);
   $95 = +HEAPF64[$94>>3];
   $96 = $18;
   $97 = $25;
   $98 = (($97) + 1)|0;
   $25 = $98;
   $99 = (($96) + ($97<<3)|0);
   HEAPF64[$99>>3] = $95;
   $100 = $33;
   $101 = (($100) + 1)|0;
   $33 = $101;
  }
  $102 = $30;
  $103 = (($102) + 1)|0;
  $30 = $103;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal13gemm_pack_rhsIdiNS0_22const_blas_data_mapperIdiLi0EEELi4ELi0ELb0ELb0EEclEPdRKS3_iiii($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0.0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0.0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0.0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0.0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $18 = sp + 252|0;
 $29 = sp + 208|0;
 $38 = sp + 172|0;
 $49 = sp + 128|0;
 $58 = sp + 92|0;
 $67 = sp + 56|0;
 $68 = sp + 52|0;
 $69 = sp + 300|0;
 $75 = sp + 28|0;
 $76 = sp + 24|0;
 $77 = sp + 20|0;
 $78 = sp + 16|0;
 $81 = sp + 4|0;
 $62 = $0;
 $63 = $1;
 $64 = $2;
 $65 = $3;
 $66 = $4;
 HEAP32[$67>>2] = $5;
 HEAP32[$68>>2] = $6;
 __ZN5Eigen8internal22ignore_unused_variableIiEEvRKT_($67);
 __ZN5Eigen8internal22ignore_unused_variableIiEEvRKT_($68);
 $83 = HEAP32[$67>>2]|0;
 $84 = ($83|0)==(0);
 $85 = HEAP32[$68>>2]|0;
 $86 = ($85|0)==(0);
 $or$cond = $84 & $86;
 if (!($or$cond)) {
  ___assert_fail((3643|0),(3734|0),1906,(1719|0));
  // unreachable;
 }
 $70 = 0;
 $87 = $66;
 $88 = (($87|0) / 4)&-1;
 $89 = $88<<2;
 $71 = $89;
 $72 = 0;
 $90 = $65;
 $91 = (($90|0) / 1)&-1;
 $92 = $91;
 $73 = $92;
 $93 = $70;
 $74 = $93;
 while(1) {
  $94 = $74;
  $95 = $71;
  $96 = ($94|0)<($95|0);
  if (!($96)) {
   break;
  }
  $97 = $64;
  $98 = $74;
  $99 = (($98) + 0)|0;
  $59 = $97;
  $60 = 0;
  $61 = $99;
  $100 = $59;
  $101 = $60;
  $102 = $61;
  $55 = $100;
  $56 = $101;
  $57 = $102;
  $103 = $55;
  $104 = HEAP32[$103>>2]|0;
  $105 = $56;
  $106 = $57;
  $107 = ((($103)) + 4|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = Math_imul($106, $108)|0;
  $110 = (($105) + ($109))|0;
  $111 = (($104) + ($110<<3)|0);
  $53 = $58;
  $54 = $111;
  $112 = $53;
  $113 = $54;
  HEAP32[$112>>2] = $113;
  $114 = HEAP32[$58>>2]|0;
  HEAP32[$75>>2] = $114;
  $115 = $64;
  $116 = $74;
  $117 = (($116) + 1)|0;
  $50 = $115;
  $51 = 0;
  $52 = $117;
  $118 = $50;
  $119 = $51;
  $120 = $52;
  $46 = $118;
  $47 = $119;
  $48 = $120;
  $121 = $46;
  $122 = HEAP32[$121>>2]|0;
  $123 = $47;
  $124 = $48;
  $125 = ((($121)) + 4|0);
  $126 = HEAP32[$125>>2]|0;
  $127 = Math_imul($124, $126)|0;
  $128 = (($123) + ($127))|0;
  $129 = (($122) + ($128<<3)|0);
  $44 = $49;
  $45 = $129;
  $130 = $44;
  $131 = $45;
  HEAP32[$130>>2] = $131;
  $132 = HEAP32[$49>>2]|0;
  HEAP32[$76>>2] = $132;
  $133 = $64;
  $134 = $74;
  $135 = (($134) + 2)|0;
  $30 = $133;
  $31 = 0;
  $32 = $135;
  $136 = $30;
  $137 = $31;
  $138 = $32;
  $26 = $136;
  $27 = $137;
  $28 = $138;
  $139 = $26;
  $140 = HEAP32[$139>>2]|0;
  $141 = $27;
  $142 = $28;
  $143 = ((($139)) + 4|0);
  $144 = HEAP32[$143>>2]|0;
  $145 = Math_imul($142, $144)|0;
  $146 = (($141) + ($145))|0;
  $147 = (($140) + ($146<<3)|0);
  $24 = $29;
  $25 = $147;
  $148 = $24;
  $149 = $25;
  HEAP32[$148>>2] = $149;
  $150 = HEAP32[$29>>2]|0;
  HEAP32[$77>>2] = $150;
  $151 = $64;
  $152 = $74;
  $153 = (($152) + 3)|0;
  $19 = $151;
  $20 = 0;
  $21 = $153;
  $154 = $19;
  $155 = $20;
  $156 = $21;
  $15 = $154;
  $16 = $155;
  $17 = $156;
  $157 = $15;
  $158 = HEAP32[$157>>2]|0;
  $159 = $16;
  $160 = $17;
  $161 = ((($157)) + 4|0);
  $162 = HEAP32[$161>>2]|0;
  $163 = Math_imul($160, $162)|0;
  $164 = (($159) + ($163))|0;
  $165 = (($158) + ($164<<3)|0);
  $13 = $18;
  $14 = $165;
  $166 = $13;
  $167 = $14;
  HEAP32[$166>>2] = $167;
  $168 = HEAP32[$18>>2]|0;
  HEAP32[$78>>2] = $168;
  $79 = 0;
  while(1) {
   $169 = $79;
   $170 = $65;
   $171 = ($169|0)<($170|0);
   if (!($171)) {
    break;
   }
   $172 = $79;
   $9 = $75;
   $10 = $172;
   $173 = $9;
   $174 = HEAP32[$173>>2]|0;
   $175 = $10;
   $176 = (($174) + ($175<<3)|0);
   $177 = (__ZNK5Eigen8internal7conj_ifILb0EEclIdEERKT_S6_($69,$176)|0);
   $178 = +HEAPF64[$177>>3];
   $179 = $63;
   $180 = $72;
   $181 = (($180) + 0)|0;
   $182 = (($179) + ($181<<3)|0);
   HEAPF64[$182>>3] = $178;
   $183 = $79;
   $7 = $76;
   $8 = $183;
   $184 = $7;
   $185 = HEAP32[$184>>2]|0;
   $186 = $8;
   $187 = (($185) + ($186<<3)|0);
   $188 = (__ZNK5Eigen8internal7conj_ifILb0EEclIdEERKT_S6_($69,$187)|0);
   $189 = +HEAPF64[$188>>3];
   $190 = $63;
   $191 = $72;
   $192 = (($191) + 1)|0;
   $193 = (($190) + ($192<<3)|0);
   HEAPF64[$193>>3] = $189;
   $194 = $79;
   $11 = $77;
   $12 = $194;
   $195 = $11;
   $196 = HEAP32[$195>>2]|0;
   $197 = $12;
   $198 = (($196) + ($197<<3)|0);
   $199 = (__ZNK5Eigen8internal7conj_ifILb0EEclIdEERKT_S6_($69,$198)|0);
   $200 = +HEAPF64[$199>>3];
   $201 = $63;
   $202 = $72;
   $203 = (($202) + 2)|0;
   $204 = (($201) + ($203<<3)|0);
   HEAPF64[$204>>3] = $200;
   $205 = $79;
   $22 = $78;
   $23 = $205;
   $206 = $22;
   $207 = HEAP32[$206>>2]|0;
   $208 = $23;
   $209 = (($207) + ($208<<3)|0);
   $210 = (__ZNK5Eigen8internal7conj_ifILb0EEclIdEERKT_S6_($69,$209)|0);
   $211 = +HEAPF64[$210>>3];
   $212 = $63;
   $213 = $72;
   $214 = (($213) + 3)|0;
   $215 = (($212) + ($214<<3)|0);
   HEAPF64[$215>>3] = $211;
   $216 = $72;
   $217 = (($216) + 4)|0;
   $72 = $217;
   $218 = $79;
   $219 = (($218) + 1)|0;
   $79 = $219;
  }
  $220 = $74;
  $221 = (($220) + 4)|0;
  $74 = $221;
 }
 $222 = $71;
 $80 = $222;
 while(1) {
  $223 = $80;
  $224 = $66;
  $225 = ($223|0)<($224|0);
  if (!($225)) {
   break;
  }
  $226 = $64;
  $227 = $80;
  $39 = $226;
  $40 = 0;
  $41 = $227;
  $228 = $39;
  $229 = $40;
  $230 = $41;
  $35 = $228;
  $36 = $229;
  $37 = $230;
  $231 = $35;
  $232 = HEAP32[$231>>2]|0;
  $233 = $36;
  $234 = $37;
  $235 = ((($231)) + 4|0);
  $236 = HEAP32[$235>>2]|0;
  $237 = Math_imul($234, $236)|0;
  $238 = (($233) + ($237))|0;
  $239 = (($232) + ($238<<3)|0);
  $33 = $38;
  $34 = $239;
  $240 = $33;
  $241 = $34;
  HEAP32[$240>>2] = $241;
  $242 = HEAP32[$38>>2]|0;
  HEAP32[$81>>2] = $242;
  $82 = 0;
  while(1) {
   $243 = $82;
   $244 = $65;
   $245 = ($243|0)<($244|0);
   if (!($245)) {
    break;
   }
   $246 = $82;
   $42 = $81;
   $43 = $246;
   $247 = $42;
   $248 = HEAP32[$247>>2]|0;
   $249 = $43;
   $250 = (($248) + ($249<<3)|0);
   $251 = (__ZNK5Eigen8internal7conj_ifILb0EEclIdEERKT_S6_($69,$250)|0);
   $252 = +HEAPF64[$251>>3];
   $253 = $63;
   $254 = $72;
   $255 = (($253) + ($254<<3)|0);
   HEAPF64[$255>>3] = $252;
   $256 = $72;
   $257 = (($256) + 1)|0;
   $72 = $257;
   $258 = $82;
   $259 = (($258) + 1)|0;
   $82 = $259;
  }
  $260 = $80;
  $261 = (($260) + 1)|0;
  $80 = $261;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal11gebp_kernelIddiNS0_16blas_data_mapperIdiLi0ELi0EEELi1ELi4ELb0ELb0EEclERKS3_PKdS8_iiidiiii($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = +$7;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0.0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0.0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0;
 var $410 = 0, $411 = 0.0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0;
 var $429 = 0, $43 = 0, $430 = 0, $431 = 0.0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0.0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0;
 var $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0;
 var $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0;
 var $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0.0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0.0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0.0, $594 = 0, $595 = 0.0, $596 = 0, $597 = 0, $598 = 0.0, $599 = 0, $60 = 0, $600 = 0, $601 = 0.0, $602 = 0, $603 = 0, $604 = 0.0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0.0, $61 = 0;
 var $610 = 0.0, $611 = 0.0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0.0, $626 = 0.0, $627 = 0.0, $628 = 0.0;
 var $629 = 0.0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0.0, $644 = 0.0, $645 = 0.0, $646 = 0.0;
 var $647 = 0.0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0.0, $662 = 0.0, $663 = 0.0, $664 = 0.0;
 var $665 = 0.0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0.0, $68 = 0, $680 = 0.0, $681 = 0, $682 = 0;
 var $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $70 = 0, $700 = 0;
 var $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0.0, $715 = 0, $716 = 0, $717 = 0, $718 = 0.0, $719 = 0;
 var $72 = 0, $720 = 0, $721 = 0.0, $722 = 0.0, $723 = 0.0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0.0, $737 = 0.0;
 var $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(912|0);
 $25 = sp + 844|0;
 $82 = sp + 616|0;
 $103 = sp + 532|0;
 $112 = sp + 496|0;
 $124 = sp + 448|0;
 $135 = sp + 256|0;
 $140 = sp + 901|0;
 $141 = sp + 900|0;
 $151 = sp + 248|0;
 $152 = sp + 240|0;
 $153 = sp + 232|0;
 $154 = sp + 224|0;
 $155 = sp + 352|0;
 $156 = sp + 348|0;
 $157 = sp + 344|0;
 $158 = sp + 340|0;
 $160 = sp + 216|0;
 $162 = sp + 208|0;
 $163 = sp + 200|0;
 $164 = sp + 192|0;
 $165 = sp + 184|0;
 $167 = sp + 176|0;
 $168 = sp + 168|0;
 $169 = sp + 160|0;
 $170 = sp + 152|0;
 $171 = sp + 144|0;
 $172 = sp + 136|0;
 $173 = sp + 128|0;
 $176 = sp + 120|0;
 $177 = sp + 316|0;
 $179 = sp + 112|0;
 $181 = sp + 104|0;
 $183 = sp + 96|0;
 $184 = sp + 88|0;
 $185 = sp + 80|0;
 $190 = sp + 72|0;
 $191 = sp + 64|0;
 $192 = sp + 56|0;
 $193 = sp + 48|0;
 $195 = sp + 40|0;
 $196 = sp + 32|0;
 $197 = sp + 24|0;
 $201 = sp + 16|0;
 $204 = sp + 8|0;
 $205 = sp;
 $128 = $0;
 $129 = $1;
 $130 = $2;
 $131 = $3;
 $132 = $4;
 $133 = $5;
 $134 = $6;
 HEAPF64[$135>>3] = $7;
 $136 = $8;
 $137 = $9;
 $138 = $10;
 $139 = $11;
 $206 = $136;
 $207 = ($206|0)==(-1);
 if ($207) {
  $208 = $133;
  $136 = $208;
 }
 $209 = $137;
 $210 = ($209|0)==(-1);
 if ($210) {
  $211 = $133;
  $137 = $211;
 }
 $212 = $134;
 $213 = (($212|0) / 4)&-1;
 $214 = $213<<2;
 $142 = $214;
 $143 = 0;
 $144 = 0;
 $215 = $132;
 $216 = (($215|0) / 1)&-1;
 $217 = $216;
 $145 = $217;
 $218 = $133;
 $219 = $218 & -8;
 $146 = $219;
 $147 = 4;
 $148 = 0;
 while(1) {
  $220 = $148;
  $221 = $145;
  $222 = ($220|0)<($221|0);
  if (!($222)) {
   break;
  }
  $149 = 0;
  while(1) {
   $223 = $149;
   $224 = $142;
   $225 = ($223|0)<($224|0);
   if (!($225)) {
    break;
   }
   $226 = $130;
   $227 = $148;
   $228 = $136;
   $229 = Math_imul($227, $228)|0;
   $230 = $138;
   $231 = $230;
   $232 = (($229) + ($231))|0;
   $233 = (($226) + ($232<<3)|0);
   $150 = $233;
   $234 = $150;
   __ZN5Eigen8internal8prefetchIdEEvPKT_($234);
   __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE7initAccERd($140,$151);
   __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE7initAccERd($140,$152);
   __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE7initAccERd($140,$153);
   __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE7initAccERd($140,$154);
   $235 = $129;
   $236 = $148;
   $237 = $149;
   $238 = (($237) + 0)|0;
   $125 = $235;
   $126 = $236;
   $127 = $238;
   $239 = $125;
   $240 = $126;
   $241 = $127;
   $121 = $239;
   $122 = $240;
   $123 = $241;
   $242 = $121;
   $243 = HEAP32[$242>>2]|0;
   $244 = $122;
   $245 = $123;
   $246 = ((($242)) + 4|0);
   $247 = HEAP32[$246>>2]|0;
   $248 = Math_imul($245, $247)|0;
   $249 = (($244) + ($248))|0;
   $250 = (($243) + ($249<<3)|0);
   $119 = $124;
   $120 = $250;
   $251 = $119;
   $252 = $120;
   HEAP32[$251>>2] = $252;
   $253 = HEAP32[$124>>2]|0;
   HEAP32[$155>>2] = $253;
   $254 = $129;
   $255 = $148;
   $256 = $149;
   $257 = (($256) + 1)|0;
   $113 = $254;
   $114 = $255;
   $115 = $257;
   $258 = $113;
   $259 = $114;
   $260 = $115;
   $109 = $258;
   $110 = $259;
   $111 = $260;
   $261 = $109;
   $262 = HEAP32[$261>>2]|0;
   $263 = $110;
   $264 = $111;
   $265 = ((($261)) + 4|0);
   $266 = HEAP32[$265>>2]|0;
   $267 = Math_imul($264, $266)|0;
   $268 = (($263) + ($267))|0;
   $269 = (($262) + ($268<<3)|0);
   $107 = $112;
   $108 = $269;
   $270 = $107;
   $271 = $108;
   HEAP32[$270>>2] = $271;
   $272 = HEAP32[$112>>2]|0;
   HEAP32[$156>>2] = $272;
   $273 = $129;
   $274 = $148;
   $275 = $149;
   $276 = (($275) + 2)|0;
   $104 = $273;
   $105 = $274;
   $106 = $276;
   $277 = $104;
   $278 = $105;
   $279 = $106;
   $100 = $277;
   $101 = $278;
   $102 = $279;
   $280 = $100;
   $281 = HEAP32[$280>>2]|0;
   $282 = $101;
   $283 = $102;
   $284 = ((($280)) + 4|0);
   $285 = HEAP32[$284>>2]|0;
   $286 = Math_imul($283, $285)|0;
   $287 = (($282) + ($286))|0;
   $288 = (($281) + ($287<<3)|0);
   $98 = $103;
   $99 = $288;
   $289 = $98;
   $290 = $99;
   HEAP32[$289>>2] = $290;
   $291 = HEAP32[$103>>2]|0;
   HEAP32[$157>>2] = $291;
   $292 = $129;
   $293 = $148;
   $294 = $149;
   $295 = (($294) + 3)|0;
   $83 = $292;
   $84 = $293;
   $85 = $295;
   $296 = $83;
   $297 = $84;
   $298 = $85;
   $79 = $296;
   $80 = $297;
   $81 = $298;
   $299 = $79;
   $300 = HEAP32[$299>>2]|0;
   $301 = $80;
   $302 = $81;
   $303 = ((($299)) + 4|0);
   $304 = HEAP32[$303>>2]|0;
   $305 = Math_imul($302, $304)|0;
   $306 = (($301) + ($305))|0;
   $307 = (($300) + ($306<<3)|0);
   $77 = $82;
   $78 = $307;
   $308 = $77;
   $309 = $78;
   HEAP32[$308>>2] = $309;
   $310 = HEAP32[$82>>2]|0;
   HEAP32[$158>>2] = $310;
   $75 = $155;
   $76 = 4;
   $311 = $75;
   $312 = $76;
   $73 = $311;
   $74 = $312;
   $313 = $73;
   $314 = HEAP32[$313>>2]|0;
   $315 = $74;
   $316 = (($314) + ($315<<3)|0);
   __ZN5Eigen8internal8prefetchIdEEvPKT_($316);
   $71 = $156;
   $72 = 4;
   $317 = $71;
   $318 = $72;
   $69 = $317;
   $70 = $318;
   $319 = $69;
   $320 = HEAP32[$319>>2]|0;
   $321 = $70;
   $322 = (($320) + ($321<<3)|0);
   __ZN5Eigen8internal8prefetchIdEEvPKT_($322);
   $67 = $157;
   $68 = 4;
   $323 = $67;
   $324 = $68;
   $65 = $323;
   $66 = $324;
   $325 = $65;
   $326 = HEAP32[$325>>2]|0;
   $327 = $66;
   $328 = (($326) + ($327<<3)|0);
   __ZN5Eigen8internal8prefetchIdEEvPKT_($328);
   $63 = $158;
   $64 = 4;
   $329 = $63;
   $330 = $64;
   $61 = $329;
   $62 = $330;
   $331 = $61;
   $332 = HEAP32[$331>>2]|0;
   $333 = $62;
   $334 = (($332) + ($333<<3)|0);
   __ZN5Eigen8internal8prefetchIdEEvPKT_($334);
   $335 = $131;
   $336 = $149;
   $337 = $137;
   $338 = Math_imul($336, $337)|0;
   $339 = $139;
   $340 = $339<<2;
   $341 = (($338) + ($340))|0;
   $342 = (($335) + ($341<<3)|0);
   $159 = $342;
   $343 = $159;
   __ZN5Eigen8internal8prefetchIdEEvPKT_($343);
   $161 = 0;
   while(1) {
    $344 = $161;
    $345 = $146;
    $346 = ($344|0)<($345|0);
    if (!($346)) {
     break;
    }
    $347 = $159;
    $348 = ((($347)) + 384|0);
    __ZN5Eigen8internal8prefetchIdEEvPKT_($348);
    $349 = $150;
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$349,$160);
    $350 = $159;
    __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE12broadcastRhsEPKdRdS5_S5_S5_($140,$350,$162,$163,$164,$165);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$162,$151,$162);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$163,$152,$163);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$164,$153,$164);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$165,$154,$165);
    $351 = $150;
    $352 = ((($351)) + 8|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$352,$160);
    $353 = $159;
    $354 = ((($353)) + 32|0);
    __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE12broadcastRhsEPKdRdS5_S5_S5_($140,$354,$162,$163,$164,$165);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$162,$151,$162);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$163,$152,$163);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$164,$153,$164);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$165,$154,$165);
    $355 = $150;
    $356 = ((($355)) + 16|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$356,$160);
    $357 = $159;
    $358 = ((($357)) + 64|0);
    __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE12broadcastRhsEPKdRdS5_S5_S5_($140,$358,$162,$163,$164,$165);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$162,$151,$162);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$163,$152,$163);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$164,$153,$164);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$165,$154,$165);
    $359 = $150;
    $360 = ((($359)) + 24|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$360,$160);
    $361 = $159;
    $362 = ((($361)) + 96|0);
    __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE12broadcastRhsEPKdRdS5_S5_S5_($140,$362,$162,$163,$164,$165);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$162,$151,$162);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$163,$152,$163);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$164,$153,$164);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$165,$154,$165);
    $363 = $159;
    $364 = ((($363)) + 512|0);
    __ZN5Eigen8internal8prefetchIdEEvPKT_($364);
    $365 = $150;
    $366 = ((($365)) + 32|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$366,$160);
    $367 = $159;
    $368 = ((($367)) + 128|0);
    __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE12broadcastRhsEPKdRdS5_S5_S5_($140,$368,$162,$163,$164,$165);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$162,$151,$162);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$163,$152,$163);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$164,$153,$164);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$165,$154,$165);
    $369 = $150;
    $370 = ((($369)) + 40|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$370,$160);
    $371 = $159;
    $372 = ((($371)) + 160|0);
    __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE12broadcastRhsEPKdRdS5_S5_S5_($140,$372,$162,$163,$164,$165);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$162,$151,$162);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$163,$152,$163);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$164,$153,$164);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$165,$154,$165);
    $373 = $150;
    $374 = ((($373)) + 48|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$374,$160);
    $375 = $159;
    $376 = ((($375)) + 192|0);
    __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE12broadcastRhsEPKdRdS5_S5_S5_($140,$376,$162,$163,$164,$165);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$162,$151,$162);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$163,$152,$163);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$164,$153,$164);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$165,$154,$165);
    $377 = $150;
    $378 = ((($377)) + 56|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$378,$160);
    $379 = $159;
    $380 = ((($379)) + 224|0);
    __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE12broadcastRhsEPKdRdS5_S5_S5_($140,$380,$162,$163,$164,$165);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$162,$151,$162);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$163,$152,$163);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$164,$153,$164);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$165,$154,$165);
    $381 = $159;
    $382 = ((($381)) + 256|0);
    $159 = $382;
    $383 = $150;
    $384 = ((($383)) + 64|0);
    $150 = $384;
    $385 = $161;
    $386 = (($385) + 8)|0;
    $161 = $386;
   }
   $387 = $146;
   $166 = $387;
   while(1) {
    $388 = $166;
    $389 = $133;
    $390 = ($388|0)<($389|0);
    if (!($390)) {
     break;
    }
    $391 = $150;
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$391,$160);
    $392 = $159;
    __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE12broadcastRhsEPKdRdS5_S5_S5_($140,$392,$167,$168,$169,$170);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$167,$151,$167);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$168,$152,$168);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$169,$153,$169);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$160,$170,$154,$170);
    $393 = $159;
    $394 = ((($393)) + 32|0);
    $159 = $394;
    $395 = $150;
    $396 = ((($395)) + 8|0);
    $150 = $396;
    $397 = $166;
    $398 = (($397) + 1)|0;
    $166 = $398;
   }
   $399 = (+__ZN5Eigen8internal5pset1IdEET_RKNS0_15unpacket_traitsIS2_E4typeE($135));
   HEAPF64[$173>>3] = $399;
   $59 = $155;
   $60 = 0;
   $400 = $59;
   $401 = HEAP32[$400>>2]|0;
   $402 = $60;
   $403 = (($401) + ($402<<3)|0);
   $58 = $403;
   $404 = $58;
   $405 = (+__ZN5Eigen8internal6ploaduIdEET_PKNS0_15unpacket_traitsIS2_E4typeE($404));
   HEAPF64[$171>>3] = $405;
   $56 = $156;
   $57 = 0;
   $406 = $56;
   $407 = HEAP32[$406>>2]|0;
   $408 = $57;
   $409 = (($407) + ($408<<3)|0);
   $55 = $409;
   $410 = $55;
   $411 = (+__ZN5Eigen8internal6ploaduIdEET_PKNS0_15unpacket_traitsIS2_E4typeE($410));
   HEAPF64[$172>>3] = $411;
   __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE3accERKdS4_Rd($140,$151,$173,$171);
   __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE3accERKdS4_Rd($140,$152,$173,$172);
   $52 = $155;
   $53 = 0;
   $54 = $171;
   $412 = $52;
   $413 = HEAP32[$412>>2]|0;
   $414 = $53;
   $415 = (($413) + ($414<<3)|0);
   $416 = $54;
   $50 = $415;
   $51 = $416;
   $417 = $50;
   $418 = $51;
   __ZN5Eigen8internal7pstoreuIddEEvPT_RKT0_($417,$418);
   $47 = $156;
   $48 = 0;
   $49 = $172;
   $419 = $47;
   $420 = HEAP32[$419>>2]|0;
   $421 = $48;
   $422 = (($420) + ($421<<3)|0);
   $423 = $49;
   $45 = $422;
   $46 = $423;
   $424 = $45;
   $425 = $46;
   __ZN5Eigen8internal7pstoreuIddEEvPT_RKT0_($424,$425);
   $43 = $157;
   $44 = 0;
   $426 = $43;
   $427 = HEAP32[$426>>2]|0;
   $428 = $44;
   $429 = (($427) + ($428<<3)|0);
   $42 = $429;
   $430 = $42;
   $431 = (+__ZN5Eigen8internal6ploaduIdEET_PKNS0_15unpacket_traitsIS2_E4typeE($430));
   HEAPF64[$171>>3] = $431;
   $40 = $158;
   $41 = 0;
   $432 = $40;
   $433 = HEAP32[$432>>2]|0;
   $434 = $41;
   $435 = (($433) + ($434<<3)|0);
   $39 = $435;
   $436 = $39;
   $437 = (+__ZN5Eigen8internal6ploaduIdEET_PKNS0_15unpacket_traitsIS2_E4typeE($436));
   HEAPF64[$172>>3] = $437;
   __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE3accERKdS4_Rd($140,$153,$173,$171);
   __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE3accERKdS4_Rd($140,$154,$173,$172);
   $36 = $157;
   $37 = 0;
   $38 = $171;
   $438 = $36;
   $439 = HEAP32[$438>>2]|0;
   $440 = $37;
   $441 = (($439) + ($440<<3)|0);
   $442 = $38;
   $34 = $441;
   $35 = $442;
   $443 = $34;
   $444 = $35;
   __ZN5Eigen8internal7pstoreuIddEEvPT_RKT0_($443,$444);
   $31 = $158;
   $32 = 0;
   $33 = $172;
   $445 = $31;
   $446 = HEAP32[$445>>2]|0;
   $447 = $32;
   $448 = (($446) + ($447<<3)|0);
   $449 = $33;
   $29 = $448;
   $30 = $449;
   $450 = $29;
   $451 = $30;
   __ZN5Eigen8internal7pstoreuIddEEvPT_RKT0_($450,$451);
   $452 = $149;
   $453 = (($452) + 4)|0;
   $149 = $453;
  }
  $454 = $142;
  $174 = $454;
  while(1) {
   $455 = $174;
   $456 = $134;
   $457 = ($455|0)<($456|0);
   if (!($457)) {
    break;
   }
   $458 = $130;
   $459 = $148;
   $460 = $136;
   $461 = Math_imul($459, $460)|0;
   $462 = $138;
   $463 = $462;
   $464 = (($461) + ($463))|0;
   $465 = (($458) + ($464<<3)|0);
   $175 = $465;
   $466 = $175;
   __ZN5Eigen8internal8prefetchIdEEvPKT_($466);
   __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE7initAccERd($140,$176);
   $467 = $129;
   $468 = $148;
   $469 = $174;
   $26 = $467;
   $27 = $468;
   $28 = $469;
   $470 = $26;
   $471 = $27;
   $472 = $28;
   $22 = $470;
   $23 = $471;
   $24 = $472;
   $473 = $22;
   $474 = HEAP32[$473>>2]|0;
   $475 = $23;
   $476 = $24;
   $477 = ((($473)) + 4|0);
   $478 = HEAP32[$477>>2]|0;
   $479 = Math_imul($476, $478)|0;
   $480 = (($475) + ($479))|0;
   $481 = (($474) + ($480<<3)|0);
   $20 = $25;
   $21 = $481;
   $482 = $20;
   $483 = $21;
   HEAP32[$482>>2] = $483;
   $484 = HEAP32[$25>>2]|0;
   HEAP32[$177>>2] = $484;
   $485 = $131;
   $486 = $174;
   $487 = $137;
   $488 = Math_imul($486, $487)|0;
   $489 = $139;
   $490 = (($488) + ($489))|0;
   $491 = (($485) + ($490<<3)|0);
   $178 = $491;
   $180 = 0;
   while(1) {
    $492 = $180;
    $493 = $146;
    $494 = ($492|0)<($493|0);
    if (!($494)) {
     break;
    }
    $495 = $175;
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$495,$179);
    $496 = $178;
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadRhsIdEEvPKdRT_($140,$496,$181);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$179,$181,$176,$181);
    $497 = $175;
    $498 = ((($497)) + 8|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$498,$179);
    $499 = $178;
    $500 = ((($499)) + 8|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadRhsIdEEvPKdRT_($140,$500,$181);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$179,$181,$176,$181);
    $501 = $175;
    $502 = ((($501)) + 16|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$502,$179);
    $503 = $178;
    $504 = ((($503)) + 16|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadRhsIdEEvPKdRT_($140,$504,$181);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$179,$181,$176,$181);
    $505 = $175;
    $506 = ((($505)) + 24|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$506,$179);
    $507 = $178;
    $508 = ((($507)) + 24|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadRhsIdEEvPKdRT_($140,$508,$181);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$179,$181,$176,$181);
    $509 = $175;
    $510 = ((($509)) + 32|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$510,$179);
    $511 = $178;
    $512 = ((($511)) + 32|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadRhsIdEEvPKdRT_($140,$512,$181);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$179,$181,$176,$181);
    $513 = $175;
    $514 = ((($513)) + 40|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$514,$179);
    $515 = $178;
    $516 = ((($515)) + 40|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadRhsIdEEvPKdRT_($140,$516,$181);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$179,$181,$176,$181);
    $517 = $175;
    $518 = ((($517)) + 48|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$518,$179);
    $519 = $178;
    $520 = ((($519)) + 48|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadRhsIdEEvPKdRT_($140,$520,$181);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$179,$181,$176,$181);
    $521 = $175;
    $522 = ((($521)) + 56|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$522,$179);
    $523 = $178;
    $524 = ((($523)) + 56|0);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadRhsIdEEvPKdRT_($140,$524,$181);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$179,$181,$176,$181);
    $525 = $178;
    $526 = ((($525)) + 64|0);
    $178 = $526;
    $527 = $175;
    $528 = ((($527)) + 64|0);
    $175 = $528;
    $529 = $180;
    $530 = (($529) + 8)|0;
    $180 = $530;
   }
   $531 = $146;
   $182 = $531;
   while(1) {
    $532 = $182;
    $533 = $133;
    $534 = ($532|0)<($533|0);
    if (!($534)) {
     break;
    }
    $535 = $175;
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($140,$535,$179);
    $536 = $178;
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadRhsIdEEvPKdRT_($140,$536,$183);
    __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($140,$179,$183,$176,$183);
    $537 = $178;
    $538 = ((($537)) + 8|0);
    $178 = $538;
    $539 = $175;
    $540 = ((($539)) + 8|0);
    $175 = $540;
    $541 = $182;
    $542 = (($541) + 1)|0;
    $182 = $542;
   }
   $543 = (+__ZN5Eigen8internal5pset1IdEET_RKNS0_15unpacket_traitsIS2_E4typeE($135));
   HEAPF64[$185>>3] = $543;
   $18 = $177;
   $19 = 0;
   $544 = $18;
   $545 = HEAP32[$544>>2]|0;
   $546 = $19;
   $547 = (($545) + ($546<<3)|0);
   $17 = $547;
   $548 = $17;
   $549 = (+__ZN5Eigen8internal6ploaduIdEET_PKNS0_15unpacket_traitsIS2_E4typeE($548));
   HEAPF64[$184>>3] = $549;
   __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE3accERKdS4_Rd($140,$176,$185,$184);
   $14 = $177;
   $15 = 0;
   $16 = $184;
   $550 = $14;
   $551 = HEAP32[$550>>2]|0;
   $552 = $15;
   $553 = (($551) + ($552<<3)|0);
   $554 = $16;
   $12 = $553;
   $13 = $554;
   $555 = $12;
   $556 = $13;
   __ZN5Eigen8internal7pstoreuIddEEvPT_RKT0_($555,$556);
   $557 = $174;
   $558 = (($557) + 1)|0;
   $174 = $558;
  }
  $559 = $148;
  $560 = (($559) + 1)|0;
  $148 = $560;
 }
 $561 = $145;
 $562 = $132;
 $563 = ($561|0)<($562|0);
 if (!($563)) {
  STACKTOP = sp;return;
 }
 $186 = 0;
 while(1) {
  $564 = $186;
  $565 = $142;
  $566 = ($564|0)<($565|0);
  if (!($566)) {
   break;
  }
  $567 = $145;
  $187 = $567;
  while(1) {
   $568 = $187;
   $569 = $132;
   $570 = ($568|0)<($569|0);
   if (!($570)) {
    break;
   }
   $571 = $130;
   $572 = $187;
   $573 = $136;
   $574 = Math_imul($572, $573)|0;
   $575 = $138;
   $576 = (($574) + ($575))|0;
   $577 = (($571) + ($576<<3)|0);
   $188 = $577;
   $578 = $188;
   __ZN5Eigen8internal8prefetchIdEEvPKT_($578);
   $579 = $131;
   $580 = $186;
   $581 = $137;
   $582 = Math_imul($580, $581)|0;
   $583 = $139;
   $584 = $583<<2;
   $585 = (($582) + ($584))|0;
   $586 = (($579) + ($585<<3)|0);
   $189 = $586;
   HEAPF64[$190>>3] = 0.0;
   HEAPF64[$191>>3] = 0.0;
   HEAPF64[$192>>3] = 0.0;
   HEAPF64[$193>>3] = 0.0;
   $194 = 0;
   while(1) {
    $587 = $194;
    $588 = $133;
    $589 = ($587|0)<($588|0);
    if (!($589)) {
     break;
    }
    $590 = $188;
    $591 = $194;
    $592 = (($590) + ($591<<3)|0);
    $593 = +HEAPF64[$592>>3];
    HEAPF64[$195>>3] = $593;
    $594 = $189;
    $595 = +HEAPF64[$594>>3];
    HEAPF64[$196>>3] = $595;
    $596 = $189;
    $597 = ((($596)) + 8|0);
    $598 = +HEAPF64[$597>>3];
    HEAPF64[$197>>3] = $598;
    __ZN5Eigen8internal9gebp_maddINS0_11conj_helperIddLb0ELb0EEEddddEEvRKT_RT0_RT1_RT2_RT3_($141,$195,$196,$190,$196);
    __ZN5Eigen8internal9gebp_maddINS0_11conj_helperIddLb0ELb0EEEddddEEvRKT_RT0_RT1_RT2_RT3_($141,$195,$197,$191,$197);
    $599 = $189;
    $600 = ((($599)) + 16|0);
    $601 = +HEAPF64[$600>>3];
    HEAPF64[$196>>3] = $601;
    $602 = $189;
    $603 = ((($602)) + 24|0);
    $604 = +HEAPF64[$603>>3];
    HEAPF64[$197>>3] = $604;
    __ZN5Eigen8internal9gebp_maddINS0_11conj_helperIddLb0ELb0EEEddddEEvRKT_RT0_RT1_RT2_RT3_($141,$195,$196,$192,$196);
    __ZN5Eigen8internal9gebp_maddINS0_11conj_helperIddLb0ELb0EEEddddEEvRKT_RT0_RT1_RT2_RT3_($141,$195,$197,$193,$197);
    $605 = $189;
    $606 = ((($605)) + 32|0);
    $189 = $606;
    $607 = $194;
    $608 = (($607) + 1)|0;
    $194 = $608;
   }
   $609 = +HEAPF64[$135>>3];
   $610 = +HEAPF64[$190>>3];
   $611 = $609 * $610;
   $612 = $129;
   $613 = $187;
   $614 = $186;
   $615 = (($614) + 0)|0;
   $86 = $612;
   $87 = $613;
   $88 = $615;
   $616 = $86;
   $617 = HEAP32[$616>>2]|0;
   $618 = $87;
   $619 = $88;
   $620 = ((($616)) + 4|0);
   $621 = HEAP32[$620>>2]|0;
   $622 = Math_imul($619, $621)|0;
   $623 = (($618) + ($622))|0;
   $624 = (($617) + ($623<<3)|0);
   $625 = +HEAPF64[$624>>3];
   $626 = $625 + $611;
   HEAPF64[$624>>3] = $626;
   $627 = +HEAPF64[$135>>3];
   $628 = +HEAPF64[$191>>3];
   $629 = $627 * $628;
   $630 = $129;
   $631 = $187;
   $632 = $186;
   $633 = (($632) + 1)|0;
   $89 = $630;
   $90 = $631;
   $91 = $633;
   $634 = $89;
   $635 = HEAP32[$634>>2]|0;
   $636 = $90;
   $637 = $91;
   $638 = ((($634)) + 4|0);
   $639 = HEAP32[$638>>2]|0;
   $640 = Math_imul($637, $639)|0;
   $641 = (($636) + ($640))|0;
   $642 = (($635) + ($641<<3)|0);
   $643 = +HEAPF64[$642>>3];
   $644 = $643 + $629;
   HEAPF64[$642>>3] = $644;
   $645 = +HEAPF64[$135>>3];
   $646 = +HEAPF64[$192>>3];
   $647 = $645 * $646;
   $648 = $129;
   $649 = $187;
   $650 = $186;
   $651 = (($650) + 2)|0;
   $92 = $648;
   $93 = $649;
   $94 = $651;
   $652 = $92;
   $653 = HEAP32[$652>>2]|0;
   $654 = $93;
   $655 = $94;
   $656 = ((($652)) + 4|0);
   $657 = HEAP32[$656>>2]|0;
   $658 = Math_imul($655, $657)|0;
   $659 = (($654) + ($658))|0;
   $660 = (($653) + ($659<<3)|0);
   $661 = +HEAPF64[$660>>3];
   $662 = $661 + $647;
   HEAPF64[$660>>3] = $662;
   $663 = +HEAPF64[$135>>3];
   $664 = +HEAPF64[$193>>3];
   $665 = $663 * $664;
   $666 = $129;
   $667 = $187;
   $668 = $186;
   $669 = (($668) + 3)|0;
   $95 = $666;
   $96 = $667;
   $97 = $669;
   $670 = $95;
   $671 = HEAP32[$670>>2]|0;
   $672 = $96;
   $673 = $97;
   $674 = ((($670)) + 4|0);
   $675 = HEAP32[$674>>2]|0;
   $676 = Math_imul($673, $675)|0;
   $677 = (($672) + ($676))|0;
   $678 = (($671) + ($677<<3)|0);
   $679 = +HEAPF64[$678>>3];
   $680 = $679 + $665;
   HEAPF64[$678>>3] = $680;
   $681 = $187;
   $682 = (($681) + 1)|0;
   $187 = $682;
  }
  $683 = $186;
  $684 = (($683) + 4)|0;
  $186 = $684;
 }
 $685 = $142;
 $198 = $685;
 while(1) {
  $686 = $198;
  $687 = $134;
  $688 = ($686|0)<($687|0);
  if (!($688)) {
   break;
  }
  $689 = $145;
  $199 = $689;
  while(1) {
   $690 = $199;
   $691 = $132;
   $692 = ($690|0)<($691|0);
   if (!($692)) {
    break;
   }
   $693 = $130;
   $694 = $199;
   $695 = $136;
   $696 = Math_imul($694, $695)|0;
   $697 = $138;
   $698 = (($696) + ($697))|0;
   $699 = (($693) + ($698<<3)|0);
   $200 = $699;
   $700 = $200;
   __ZN5Eigen8internal8prefetchIdEEvPKT_($700);
   HEAPF64[$201>>3] = 0.0;
   $701 = $131;
   $702 = $198;
   $703 = $137;
   $704 = Math_imul($702, $703)|0;
   $705 = $139;
   $706 = (($704) + ($705))|0;
   $707 = (($701) + ($706<<3)|0);
   $202 = $707;
   $203 = 0;
   while(1) {
    $708 = $203;
    $709 = $133;
    $710 = ($708|0)<($709|0);
    if (!($710)) {
     break;
    }
    $711 = $200;
    $712 = $203;
    $713 = (($711) + ($712<<3)|0);
    $714 = +HEAPF64[$713>>3];
    HEAPF64[$204>>3] = $714;
    $715 = $202;
    $716 = $203;
    $717 = (($715) + ($716<<3)|0);
    $718 = +HEAPF64[$717>>3];
    HEAPF64[$205>>3] = $718;
    __ZN5Eigen8internal9gebp_maddINS0_11conj_helperIddLb0ELb0EEEddddEEvRKT_RT0_RT1_RT2_RT3_($141,$204,$205,$201,$205);
    $719 = $203;
    $720 = (($719) + 1)|0;
    $203 = $720;
   }
   $721 = +HEAPF64[$135>>3];
   $722 = +HEAPF64[$201>>3];
   $723 = $721 * $722;
   $724 = $129;
   $725 = $199;
   $726 = $198;
   $116 = $724;
   $117 = $725;
   $118 = $726;
   $727 = $116;
   $728 = HEAP32[$727>>2]|0;
   $729 = $117;
   $730 = $118;
   $731 = ((($727)) + 4|0);
   $732 = HEAP32[$731>>2]|0;
   $733 = Math_imul($730, $732)|0;
   $734 = (($729) + ($733))|0;
   $735 = (($728) + ($734<<3)|0);
   $736 = +HEAPF64[$735>>3];
   $737 = $736 + $723;
   HEAPF64[$735>>3] = $737;
   $738 = $199;
   $739 = (($738) + 1)|0;
   $199 = $739;
  }
  $740 = $198;
  $741 = (($740) + 1)|0;
  $198 = $741;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal28aligned_stack_memory_handlerIdED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 8|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal11noncopyableD2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = HEAP32[$4>>2]|0;
 __THREW__ = 0;
 invoke_vi(191,($8|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  __ZN5Eigen8internal11noncopyableD2Ev($4);
  STACKTOP = sp;return;
 }
 $11 = ___cxa_find_matching_catch_2()|0;
 $12 = tempRet0;
 $2 = $11;
 $3 = $12;
 __THREW__ = 0;
 invoke_vi(192,($4|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  $17 = ___cxa_find_matching_catch_3(0|0)|0;
  $18 = tempRet0;
  ___clang_call_terminate($17);
  // unreachable;
 } else {
  $15 = $2;
  $16 = $3;
  ___resumeException($15|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal6pstoreIddEEvPT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 $5 = +HEAPF64[$4>>3];
 $6 = $2;
 HEAPF64[$6>>3] = $5;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal7conj_ifILb0EE5pconjIdEERKT_S6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal7conj_ifILb0EEclIdEERKT_S6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal6ploaduIdEET_PKNS0_15unpacket_traitsIS2_E4typeE($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = +HEAPF64[$2>>3];
 STACKTOP = sp;return (+$3);
}
function __ZN5Eigen8internal8prefetchIdEEvPKT_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE7initAccERd($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 HEAPF64[$4>>3] = 0.0;
 $5 = (+__ZN5Eigen8internal5pset1IdEET_RKNS0_15unpacket_traitsIS2_E4typeE($4));
 $6 = $3;
 HEAPF64[$6>>3] = $5;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadLhsIdEEvPKdRT_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4;
 $7 = (+__ZN5Eigen8internal5ploadIdEET_PKNS0_15unpacket_traitsIS2_E4typeE($6));
 $8 = $5;
 HEAPF64[$8>>3] = $7;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal11gebp_traitsIddLb0ELb0EE12broadcastRhsEPKdRdS5_S5_S5_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $7;
 $13 = $8;
 $14 = $9;
 $15 = $10;
 $16 = $11;
 __ZN5Eigen8internal11pbroadcast4IdEEvPKNS0_15unpacket_traitsIT_E4typeERS3_S8_S8_S8_($12,$13,$14,$15,$16);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE4maddIdddEEvRKT_RKT0_RT1_SB_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0, $20 = 0.0, $21 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $10 = sp + 20|0;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $11 = $7;
 $12 = +HEAPF64[$11>>3];
 $13 = $9;
 HEAPF64[$13>>3] = $12;
 $14 = $6;
 $15 = $9;
 $16 = (+__ZNK5Eigen8internal11conj_helperIddLb0ELb0EE4pmulERKdS4_($10,$14,$15));
 $17 = $9;
 HEAPF64[$17>>3] = $16;
 $18 = $8;
 $19 = $9;
 $20 = (+__ZN5Eigen8internal4paddIdEET_RKS2_S4_($18,$19));
 $21 = $8;
 HEAPF64[$21>>3] = $20;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal5pset1IdEET_RKNS0_15unpacket_traitsIS2_E4typeE($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = +HEAPF64[$2>>3];
 STACKTOP = sp;return (+$3);
}
function __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE3accERKdS4_Rd($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0.0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $5;
 $9 = $6;
 $10 = $7;
 $11 = (+__ZN5Eigen8internal5pmaddIdEET_RKS2_S4_S4_($8,$9,$10));
 $12 = $7;
 HEAPF64[$12>>3] = $11;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal11gebp_traitsIddLb0ELb0EE7loadRhsIdEEvPKdRT_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4;
 $7 = (+__ZN5Eigen8internal5pset1IdEET_RKNS0_15unpacket_traitsIS2_E4typeE($6));
 $8 = $5;
 HEAPF64[$8>>3] = $7;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9gebp_maddINS0_11conj_helperIddLb0ELb0EEEddddEEvRKT_RT0_RT1_RT2_RT3_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0.0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0.0, $31 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = $0;
 $11 = $1;
 $12 = $2;
 $13 = $3;
 $14 = $4;
 $15 = $10;
 $16 = $11;
 $17 = $12;
 $18 = $13;
 $19 = $14;
 $5 = $15;
 $6 = $16;
 $7 = $17;
 $8 = $18;
 $9 = $19;
 $20 = $7;
 $21 = +HEAPF64[$20>>3];
 $22 = $9;
 HEAPF64[$22>>3] = $21;
 $23 = $5;
 $24 = $6;
 $25 = $9;
 $26 = (+__ZNK5Eigen8internal11conj_helperIddLb0ELb0EE4pmulERKdS4_($23,$24,$25));
 $27 = $9;
 HEAPF64[$27>>3] = $26;
 $28 = $8;
 $29 = $9;
 $30 = (+__ZN5Eigen8internal4paddIdEET_RKS2_S4_($28,$29));
 $31 = $8;
 HEAPF64[$31>>3] = $30;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal5ploadIdEET_PKNS0_15unpacket_traitsIS2_E4typeE($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = +HEAPF64[$2>>3];
 STACKTOP = sp;return (+$3);
}
function __ZN5Eigen8internal11pbroadcast4IdEEvPKNS0_15unpacket_traitsIT_E4typeERS3_S8_S8_S8_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = (+__ZN5Eigen8internal6pload1IdEET_PKNS0_15unpacket_traitsIS2_E4typeE($10));
 $12 = $6;
 HEAPF64[$12>>3] = $11;
 $13 = $5;
 $14 = ((($13)) + 8|0);
 $15 = (+__ZN5Eigen8internal6pload1IdEET_PKNS0_15unpacket_traitsIS2_E4typeE($14));
 $16 = $7;
 HEAPF64[$16>>3] = $15;
 $17 = $5;
 $18 = ((($17)) + 16|0);
 $19 = (+__ZN5Eigen8internal6pload1IdEET_PKNS0_15unpacket_traitsIS2_E4typeE($18));
 $20 = $8;
 HEAPF64[$20>>3] = $19;
 $21 = $5;
 $22 = ((($21)) + 24|0);
 $23 = (+__ZN5Eigen8internal6pload1IdEET_PKNS0_15unpacket_traitsIS2_E4typeE($22));
 $24 = $9;
 HEAPF64[$24>>3] = $23;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal6pload1IdEET_PKNS0_15unpacket_traitsIS2_E4typeE($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (+__ZN5Eigen8internal5pset1IdEET_RKNS0_15unpacket_traitsIS2_E4typeE($2));
 STACKTOP = sp;return (+$3);
}
function __ZNK5Eigen8internal11conj_helperIddLb0ELb0EE4pmulERKdS4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4;
 $7 = $5;
 $8 = (+__ZN5Eigen8internal4pmulIdEET_RKS2_S4_($6,$7));
 STACKTOP = sp;return (+$8);
}
function __ZN5Eigen8internal4paddIdEET_RKS2_S4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0, $7 = 0.0, $8 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = +HEAPF64[$4>>3];
 $6 = $3;
 $7 = +HEAPF64[$6>>3];
 $8 = $5 + $7;
 STACKTOP = sp;return (+$8);
}
function __ZN5Eigen8internal4pmulIdEET_RKS2_S4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0, $7 = 0.0, $8 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = +HEAPF64[$4>>3];
 $6 = $3;
 $7 = +HEAPF64[$6>>3];
 $8 = $5 * $7;
 STACKTOP = sp;return (+$8);
}
function __ZN5Eigen8internal5pmaddIdEET_RKS2_S4_S4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $8 = $4;
 $9 = (+__ZN5Eigen8internal4pmulIdEET_RKS2_S4_($7,$8));
 HEAPF64[$6>>3] = $9;
 $10 = $5;
 $11 = (+__ZN5Eigen8internal4paddIdEET_RKS2_S4_($6,$10));
 STACKTOP = sp;return (+$11);
}
function __ZN5Eigen8internal7pstoreuIddEEvPT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 $5 = +HEAPF64[$4>>3];
 $6 = $2;
 HEAPF64[$6>>3] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14aligned_deleteIdEEvPT_j($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal26destruct_elements_of_arrayIdEEvPT_j($4,$5);
 $6 = $2;
 __ZN5Eigen8internal12aligned_freeEPv($6);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26destruct_elements_of_arrayIdEEvPT_j($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$old = 0, $$old1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ($4|0)!=(0|0);
 $6 = $3;
 $7 = ($6|0)!=(0);
 $or$cond = $5 & $7;
 if (!($or$cond)) {
  STACKTOP = sp;return;
 }
 while(1) {
  $8 = $3;
  $9 = (($8) + -1)|0;
  $3 = $9;
  $$old = $3;
  $$old1 = ($$old|0)!=(0);
  if (!($$old1)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen11InverseImplINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5DenseEEC2Ev($4);
 $5 = $3;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen11InverseImplINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2INS_7InverseIS2_EEEERKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2Ev($6);
 __ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EEC2Ev($6);
 __THREW__ = 0;
 invoke_v(50);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  $9 = $3;
  __THREW__ = 0;
  invoke_vii(193,($6|0),($9|0));
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if (!($11)) {
   $12 = $3;
   __THREW__ = 0;
   (invoke_iii(194,($6|0),($12|0))|0);
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   if (!($14)) {
    STACKTOP = sp;return;
   }
  }
 }
 $15 = ___cxa_find_matching_catch_2()|0;
 $16 = tempRet0;
 $4 = $15;
 $5 = $16;
 __THREW__ = 0;
 invoke_vi(125,($6|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $21 = ___cxa_find_matching_catch_3(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 } else {
  $19 = $4;
  $20 = $5;
  ___resumeException($19|0);
  // unreachable;
 }
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE10resizeLikeINS_7InverseIS2_EEEEvRKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $10 = $6;
 $11 = $7;
 $12 = (__ZNK5Eigen9EigenBaseINS_7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($11)|0);
 $8 = $12;
 $13 = $8;
 $14 = (__ZNK5Eigen7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($13)|0);
 $15 = $8;
 $16 = (__ZNK5Eigen7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($15)|0);
 $2 = $14;
 $3 = $16;
 $4 = 2147483647;
 $17 = $2;
 $18 = ($17|0)==(0);
 $19 = $3;
 $20 = ($19|0)==(0);
 $or$cond = $18 | $20;
 if ($or$cond) {
  $27 = 0;
 } else {
  $21 = $2;
  $22 = $4;
  $23 = $3;
  $24 = (($22|0) / ($23|0))&-1;
  $25 = ($21|0)>($24|0);
  $27 = $25;
 }
 $26 = $27&1;
 $5 = $26;
 $28 = $5;
 $29 = $28&1;
 if ($29) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $30 = $8;
 $31 = (__ZNK5Eigen7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($30)|0);
 $32 = $8;
 $33 = (__ZNK5Eigen7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($32)|0);
 $34 = Math_imul($31, $33)|0;
 $9 = $34;
 $35 = $8;
 $36 = (__ZNK5Eigen7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($35)|0);
 $37 = $8;
 $38 = (__ZNK5Eigen7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($37)|0);
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6resizeEii($10,$36,$38);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE12_set_noaliasINS_7InverseIS2_EEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($7)|0);
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7InverseIS3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($6,$8,$4);
 $9 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($5)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNK5Eigen7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7InverseIS3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7InverseIS3_EENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS5_RKS7_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7InverseIS3_EENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS5_RKS7_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $10 = $4;
 $11 = (__ZNK5Eigen7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($10)|0);
 $6 = $11;
 $12 = $4;
 $13 = (__ZNK5Eigen7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($12)|0);
 $7 = $13;
 $14 = $3;
 $15 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($14)|0);
 $16 = $6;
 $17 = ($15|0)!=($16|0);
 if ($17) {
  label = 3;
 } else {
  $18 = $3;
  $19 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($18)|0);
  $20 = $7;
  $21 = ($19|0)!=($20|0);
  if ($21) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $22 = $3;
  $23 = $6;
  $24 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6resizeEii($22,$23,$24);
 }
 $8 = -1;
 $25 = $4;
 $26 = (__ZNK5Eigen7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE16nestedExpressionEv($25)|0);
 $9 = $26;
 $27 = $9;
 $28 = $3;
 __ZN5Eigen8internal15compute_inverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Lin1EE3runERKS3_RS3_($27,$28);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7InverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal15compute_inverseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Lin1EE3runERKS3_RS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $4 = sp + 48|0;
 $5 = sp;
 $2 = $0;
 $3 = $1;
 $8 = $2;
 __ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE12partialPivLuEv($5,$8);
 __THREW__ = 0;
 invoke_vii(195,($4|0),($5|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 do {
  if ($10) {
   label = 5;
  } else {
   $11 = $3;
   __THREW__ = 0;
   (invoke_iii(196,($11|0),($4|0))|0);
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    $18 = ___cxa_find_matching_catch_2()|0;
    $19 = tempRet0;
    $6 = $18;
    $7 = $19;
    __THREW__ = 0;
    invoke_vi(197,($4|0));
    $20 = __THREW__; __THREW__ = 0;
    $21 = $20&1;
    if (!($21)) {
     break;
    }
    $26 = ___cxa_find_matching_catch_3(0|0)|0;
    $27 = tempRet0;
    ___clang_call_terminate($26);
    // unreachable;
   } else {
    __THREW__ = 0;
    invoke_vi(197,($4|0));
    $14 = __THREW__; __THREW__ = 0;
    $15 = $14&1;
    if ($15) {
     label = 5;
     break;
    }
    __ZN5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev($5);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 5) {
  $16 = ___cxa_find_matching_catch_2()|0;
  $17 = tempRet0;
  $6 = $16;
  $7 = $17;
 }
 __THREW__ = 0;
 invoke_vi(198,($5|0));
 $22 = __THREW__; __THREW__ = 0;
 $23 = $22&1;
 if ($23) {
  $26 = ___cxa_find_matching_catch_3(0|0)|0;
  $27 = tempRet0;
  ___clang_call_terminate($26);
  // unreachable;
 } else {
  $24 = $6;
  $25 = $7;
  ___resumeException($24|0);
  // unreachable;
 }
}
function __ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE12partialPivLuEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $1;
 $3 = $2;
 $4 = (__ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4evalEv($3)|0);
 __ZN5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2IS2_EERKNS_9EigenBaseIT_EE($0,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7inverseEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $1;
 $3 = $2;
 $4 = ((($3)) + 41|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = $5&1;
 if ($6) {
  __ZN5Eigen7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERKS4_($0,$3);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5066|0),(4028|0),199,(3844|0));
  // unreachable;
 }
}
function __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEaSINS_7InverseINS_12PartialPivLUIS1_EEEEEERS1_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4_setINS_7InverseINS_12PartialPivLUIS2_EEEEEERS2_RKNS_9DenseBaseIT_EE($4,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZN5Eigen7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 20|0);
 __THREW__ = 0;
 invoke_vi(199,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 do {
  if ($7) {
   $13 = ___cxa_find_matching_catch_2()|0;
   $14 = tempRet0;
   $2 = $13;
   $3 = $14;
   $15 = ((($4)) + 12|0);
   __THREW__ = 0;
   invoke_vi(200,($15|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if ($17) {
    $28 = ___cxa_find_matching_catch_3(0|0)|0;
    $29 = tempRet0;
    ___clang_call_terminate($28);
    // unreachable;
   } else {
    label = 8;
   }
  } else {
   $8 = ((($4)) + 12|0);
   __THREW__ = 0;
   invoke_vi(200,($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $18 = ___cxa_find_matching_catch_2()|0;
    $19 = tempRet0;
    $2 = $18;
    $3 = $19;
    label = 8;
    break;
   }
   __THREW__ = 0;
   invoke_vi(36,($4|0));
   $11 = __THREW__; __THREW__ = 0;
   $12 = $11&1;
   if ($12) {
    $20 = ___cxa_find_matching_catch_2()|0;
    $21 = tempRet0;
    $2 = $20;
    $3 = $21;
    break;
   } else {
    __ZN5Eigen10SolverBaseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($4);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  __THREW__ = 0;
  invoke_vi(36,($4|0));
  $22 = __THREW__; __THREW__ = 0;
  $23 = $22&1;
  if ($23) {
   $28 = ___cxa_find_matching_catch_3(0|0)|0;
   $29 = tempRet0;
   ___clang_call_terminate($28);
   // unreachable;
  }
 }
 __THREW__ = 0;
 invoke_vi(201,($4|0));
 $24 = __THREW__; __THREW__ = 0;
 $25 = $24&1;
 if ($25) {
  $28 = ___cxa_find_matching_catch_3(0|0)|0;
  $29 = tempRet0;
  ___clang_call_terminate($28);
  // unreachable;
 } else {
  $26 = $2;
  $27 = $3;
  ___resumeException($26|0);
  // unreachable;
 }
}
function __ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4evalEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2IS2_EERKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 12|0;
 $7 = sp;
 $2 = $0;
 $3 = $1;
 $8 = $2;
 __ZN5Eigen10SolverBaseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($8);
 $9 = $3;
 __THREW__ = 0;
 $10 = (invoke_ii(202,($9|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  label = 11;
 } else {
  HEAP32[$4>>2] = $10;
  $13 = $3;
  __THREW__ = 0;
  $14 = (invoke_ii(203,($13|0))|0);
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   label = 11;
  } else {
   HEAP32[$7>>2] = $14;
   __THREW__ = 0;
   invoke_viii(204,($8|0),($4|0),($7|0));
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 11;
   } else {
    $19 = ((($8)) + 12|0);
    $20 = $3;
    __THREW__ = 0;
    $21 = (invoke_ii(202,($20|0))|0);
    $22 = __THREW__; __THREW__ = 0;
    $23 = $22&1;
    if ($23) {
     label = 12;
    } else {
     __THREW__ = 0;
     invoke_vii(205,($19|0),($21|0));
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if ($25) {
      label = 12;
     } else {
      $26 = ((($8)) + 20|0);
      $27 = $3;
      __THREW__ = 0;
      $28 = (invoke_ii(202,($27|0))|0);
      $29 = __THREW__; __THREW__ = 0;
      $30 = $29&1;
      if ($30) {
       label = 13;
      } else {
       __THREW__ = 0;
       invoke_vii(206,($26|0),($28|0));
       $31 = __THREW__; __THREW__ = 0;
       $32 = $31&1;
       if ($32) {
        label = 13;
       } else {
        $33 = ((($8)) + 32|0);
        HEAPF64[$33>>3] = 0.0;
        $34 = ((($8)) + 40|0);
        HEAP8[$34>>0] = 0;
        $35 = ((($8)) + 41|0);
        HEAP8[$35>>0] = 0;
        $36 = $3;
        __THREW__ = 0;
        $37 = (invoke_ii(207,($36|0))|0);
        $38 = __THREW__; __THREW__ = 0;
        $39 = $38&1;
        if (!($39)) {
         __THREW__ = 0;
         (invoke_iii(208,($8|0),($37|0))|0);
         $40 = __THREW__; __THREW__ = 0;
         $41 = $40&1;
         if (!($41)) {
          STACKTOP = sp;return;
         }
        }
        $48 = ___cxa_find_matching_catch_2()|0;
        $49 = tempRet0;
        $5 = $48;
        $6 = $49;
        __THREW__ = 0;
        invoke_vi(199,($26|0));
        $50 = __THREW__; __THREW__ = 0;
        $51 = $50&1;
        if ($51) {
         $60 = ___cxa_find_matching_catch_3(0|0)|0;
         $61 = tempRet0;
         ___clang_call_terminate($60);
         // unreachable;
        }
       }
      }
      if ((label|0) == 13) {
       $46 = ___cxa_find_matching_catch_2()|0;
       $47 = tempRet0;
       $5 = $46;
       $6 = $47;
      }
      __THREW__ = 0;
      invoke_vi(200,($19|0));
      $52 = __THREW__; __THREW__ = 0;
      $53 = $52&1;
      if ($53) {
       $60 = ___cxa_find_matching_catch_3(0|0)|0;
       $61 = tempRet0;
       ___clang_call_terminate($60);
       // unreachable;
      }
     }
    }
    if ((label|0) == 12) {
     $44 = ___cxa_find_matching_catch_2()|0;
     $45 = tempRet0;
     $5 = $44;
     $6 = $45;
    }
    __THREW__ = 0;
    invoke_vi(36,($8|0));
    $54 = __THREW__; __THREW__ = 0;
    $55 = $54&1;
    if ($55) {
     $60 = ___cxa_find_matching_catch_3(0|0)|0;
     $61 = tempRet0;
     ___clang_call_terminate($60);
     // unreachable;
    }
   }
  }
 }
 if ((label|0) == 11) {
  $42 = ___cxa_find_matching_catch_2()|0;
  $43 = tempRet0;
  $5 = $42;
  $6 = $43;
 }
 __THREW__ = 0;
 invoke_vi(201,($8|0));
 $56 = __THREW__; __THREW__ = 0;
 $57 = $56&1;
 if ($57) {
  $60 = ___cxa_find_matching_catch_3(0|0)|0;
  $61 = tempRet0;
  ___clang_call_terminate($60);
  // unreachable;
 } else {
  $58 = $5;
  $59 = $6;
  ___resumeException($58|0);
  // unreachable;
 }
}
function __ZN5Eigen10SolverBaseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2IiiEERKT_RKT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2Ev($8);
 __THREW__ = 0;
 invoke_v(50);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  $11 = $4;
  $12 = HEAP32[$11>>2]|0;
  $13 = $5;
  $14 = HEAP32[$13>>2]|0;
  __THREW__ = 0;
  invoke_viiii(209,($8|0),($12|0),($14|0),(0|0));
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if (!($16)) {
   STACKTOP = sp;return;
  }
 }
 $17 = ___cxa_find_matching_catch_2()|0;
 $18 = tempRet0;
 $6 = $17;
 $7 = $18;
 __THREW__ = 0;
 invoke_vi(52,($8|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $23 = ___cxa_find_matching_catch_3(0|0)|0;
  $24 = tempRet0;
  ___clang_call_terminate($23);
  // unreachable;
 } else {
  $21 = $6;
  $22 = $7;
  ___resumeException($21|0);
  // unreachable;
 }
}
function __ZN5Eigen17PermutationMatrixILin1ELin1EiEC2Ei($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $2 = $0;
 HEAP32[$3>>2] = $1;
 $4 = $2;
 __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEC2IiEERKT_($4,$3);
 STACKTOP = sp;return;
}
function __ZN5Eigen14TranspositionsILin1ELin1EiEC2Ei($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $2 = $0;
 HEAP32[$3>>2] = $1;
 $4 = $2;
 __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEC2IiEERKT_($4,$3);
 STACKTOP = sp;return;
}
function __ZN5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7computeIS2_EERS3_RKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($5)|0);
 (__ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEaSERKS1_($4,$6)|0);
 __ZN5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7computeEv($4);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen14TranspositionsILin1ELin1EiED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen17PermutationMatrixILin1ELin1EiED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10SolverBaseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6_init2IiiEEviiPNS_8internal9enable_ifILb1ET_E4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6resizeEii($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEC2IiEERKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2Ev($6);
 __THREW__ = 0;
 invoke_v(210);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  $9 = $3;
  $10 = HEAP32[$9>>2]|0;
  __THREW__ = 0;
  invoke_viii(211,($6|0),($10|0),(0|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $4 = $13;
 $5 = $14;
 __THREW__ = 0;
 invoke_vi(212,($6|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $4;
  $18 = $5;
  ___resumeException($17|0);
  // unreachable;
 }
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2Ev($2);
 __ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE22_check_template_paramsEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE6_init1IiEEviPNS_8internal9enable_ifIXaaooneLNS_9DenseBaseIS2_EUt_En1ELi1Entsr8internal14is_convertibleIT_iEE5valueoontLNS5_7is_sameINS_9MatrixXprENS_8ArrayXprEEUt_E0EeqLS9_n1EL_ZNS_L7DynamicEEESA_E4typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp + 12|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 HEAP8[$6>>0] = 1;
 __ZN5Eigen8internal22ignore_unused_variableIbEEvRKT_($6);
 $8 = $4;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE6resizeEi($7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE6resizeEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ($5|0)>=(0);
 if ($6) {
  $7 = $3;
  $8 = $3;
  __ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE6resizeEiii($4,$7,$8,1);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((3852|0),(1577|0),312,(1618|0));
  // unreachable;
 }
}
function __ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE6resizeEiii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = ((($8)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11;
 $13 = ($9|0)!=($12|0);
 if (!($13)) {
  $22 = $6;
  $23 = ((($8)) + 4|0);
  HEAP32[$23>>2] = $22;
  STACKTOP = sp;return;
 }
 $14 = HEAP32[$8>>2]|0;
 $15 = ((($8)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $16;
 __ZN5Eigen8internal31conditional_aligned_delete_autoIiLb1EEEvPT_j($14,$17);
 $18 = $5;
 $19 = ($18|0)!=(0);
 if ($19) {
  $20 = $5;
  $21 = (__ZN5Eigen8internal28conditional_aligned_new_autoIiLb1EEEPT_j($20)|0);
  $$sink = $21;
 } else {
  $$sink = 0;
 }
 HEAP32[$8>>2] = $$sink;
 $22 = $6;
 $23 = ((($8)) + 4|0);
 HEAP32[$23>>2] = $22;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal31conditional_aligned_delete_autoIiLb1EEEvPT_j($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen8internal24conditional_aligned_freeILb1EEEvPv($4);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal28conditional_aligned_new_autoIiLb1EEEPT_j($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $5 = $3;
 $6 = ($5|0)==(0);
 if ($6) {
  $2 = 0;
  $14 = $2;
  STACKTOP = sp;return ($14|0);
 }
 $7 = $3;
 $1 = $7;
 $8 = $1;
 $9 = ($8>>>0)>(1073741823);
 if ($9) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $10 = $3;
 $11 = $10<<2;
 $12 = (__ZN5Eigen8internal26conditional_aligned_mallocILb1EEEPvj($11)|0);
 $4 = $12;
 $13 = $4;
 $2 = $13;
 $14 = $2;
 STACKTOP = sp;return ($14|0);
}
function __ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5;
 __ZN5Eigen8internal31conditional_aligned_delete_autoIiLb1EEEvPT_j($3,$6);
 STACKTOP = sp;return;
}
function __ZN5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7computeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = sp + 32|0;
 $3 = sp + 24|0;
 $4 = sp + 8|0;
 $6 = sp;
 $1 = $0;
 $7 = $1;
 __ZN5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE25check_template_parametersEv();
 $8 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($7)|0);
 $9 = (__ZN5Eigen16GenericNumTraitsIiE7highestEv()|0);
 $10 = ($8|0)<($9|0);
 if (!($10)) {
  ___assert_fail((3990|0),(4028|0),520,(4064|0));
  // unreachable;
 }
 __ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE8cwiseAbsEv($2,$7);
 __ZNK5Eigen9DenseBaseINS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7colwiseEv($3,$2);
 __ZNK5Eigen12VectorwiseOpIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi0EE3sumEv($4,$3);
 $11 = (+__ZNK5Eigen9DenseBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE8maxCoeffEv($4));
 $12 = ((($7)) + 32|0);
 HEAPF64[$12>>3] = $11;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($7)|0);
 $14 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($7)|0);
 $15 = ($13|0)==($14|0);
 if ($15) {
  $16 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($7)|0);
  $5 = $16;
  $17 = ((($7)) + 20|0);
  $18 = $5;
  __ZN5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE6resizeEi($17,$18);
  $19 = ((($7)) + 20|0);
  __ZN5Eigen8internal18partial_lu_inplaceINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14TranspositionsILin1ELin1EiEEEEvRT_RT0_RNS8_12StorageIndexE($7,$19,$6);
  $20 = HEAP32[$6>>2]|0;
  $21 = (($20|0) % 2)&-1;
  $22 = ($21|0)!=(0);
  $23 = $22 ? -1 : 1;
  $24 = $23&255;
  $25 = ((($7)) + 40|0);
  HEAP8[$25>>0] = $24;
  $26 = ((($7)) + 20|0);
  $27 = ((($7)) + 12|0);
  (__ZN5Eigen17PermutationMatrixILin1ELin1EiEaSINS_14TranspositionsILin1ELin1EiEEEERS1_RKNS_18TranspositionsBaseIT_EE($27,$26)|0);
  $28 = ((($7)) + 41|0);
  HEAP8[$28>>0] = 1;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4072|0),(4028|0),524,(4064|0));
  // unreachable;
 }
}
function __ZN5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE25check_template_parametersEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN5Eigen16GenericNumTraitsIiE7highestEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 2147483647;
}
function __ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE8cwiseAbsEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 4|0;
 $2 = $1;
 $4 = $2;
 $5 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($4)|0);
 __ZN5Eigen8internal13scalar_abs_opIdEC2Ev($3);
 __ZN5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERS6_RKS3_($0,$5,$3);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7colwiseEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $1;
 $3 = $2;
 $4 = (__ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($3)|0);
 __ZN5Eigen12VectorwiseOpIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi0EEC2ERS9_($0,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12VectorwiseOpIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi0EE3sumEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 4|0;
 $2 = $1;
 $4 = $2;
 $5 = (__ZNK5Eigen12VectorwiseOpIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi0EE11_expressionEv($4)|0);
 __ZN5Eigen8internal10member_sumIdEC2Ev($3);
 __ZN5Eigen16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_10member_sumIdEELi0EEC2ERS9_RKSB_($0,$5,$3);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE8maxCoeffEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $1 = $0;
 $3 = $1;
 $4 = (__ZNK5Eigen9EigenBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE7derivedEv($3)|0);
 __ZN5Eigen8internal13scalar_max_opIddEC2Ev($2);
 $5 = (+__ZNK5Eigen9DenseBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE5reduxINS3_13scalar_max_opIddEEEEdRKT_($4,$2));
 STACKTOP = sp;return (+$5);
}
function __ZN5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE6resizeEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE7indicesEv($4)|0);
 $6 = $3;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE6resizeEi($5,$6);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18partial_lu_inplaceINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14TranspositionsILin1ELin1EiEEEEvRT_RT0_RNS8_12StorageIndexE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE4sizeEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  ___assert_fail((4171|0),(4028|0),504,(4210|0));
  // unreachable;
 }
 $11 = $4;
 $12 = (__ZN5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE8coeffRefEi($11,1)|0);
 $13 = $4;
 $14 = (__ZN5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE8coeffRefEi($13,0)|0);
 $15 = $12;
 $16 = $14;
 $17 = (($15) - ($16))|0;
 $18 = (($17|0) / 4)&-1;
 $19 = ($18|0)==(1);
 if ($19) {
  $20 = $3;
  $21 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($20)|0);
  $22 = $3;
  $23 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($22)|0);
  $24 = $3;
  $25 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE8coeffRefEii($24,0,0)|0);
  $26 = $3;
  $27 = (__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11outerStrideEv($26)|0);
  $28 = $4;
  $29 = (__ZN5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE8coeffRefEi($28,0)|0);
  $30 = $5;
  (__ZN5Eigen8internal15partial_lu_implIdLi0EiE10blocked_luEiiPdiPiRii($21,$23,$25,$27,$29,$30,256)|0);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4229|0),(4028|0),505,(4210|0));
  // unreachable;
 }
}
function __ZN5Eigen17PermutationMatrixILin1ELin1EiEaSINS_14TranspositionsILin1ELin1EiEEEERS1_RKNS_18TranspositionsBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE7derivedEv($5)|0);
 $7 = (__ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEEaSINS_14TranspositionsILin1ELin1EiEEEERS2_RKNS_18TranspositionsBaseIT_EE($4,$6)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZN5Eigen8internal13scalar_abs_opIdEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERS6_RKS3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen16CwiseUnaryOpImplINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5DenseEEC2Ev($6);
 $7 = $4;
 HEAP32[$6>>2] = $7;
 $8 = ((($6)) + 4|0);
 $9 = $5;
 __ZN5Eigen8internal13scalar_abs_opIdEC2ERKS2_($8,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen16CwiseUnaryOpImplINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal13scalar_abs_opIdEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen12VectorwiseOpIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi0EEC2ERS9_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS7_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$4>>2] = $6;
 $7 = ((($4)) + 4|0);
 $8 = $3;
 $9 = ((($8)) + 4|0);
 __ZN5Eigen8internal13scalar_abs_opIdEC2ERKS2_($7,$9);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12VectorwiseOpIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi0EE11_expressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal10member_sumIdEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_10member_sumIdEELi0EEC2ERS9_RKSB_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen10MatrixBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEEC2Ev($6);
 $7 = ((($6)) + 4|0);
 $8 = $4;
 __ZN5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS7_($7,$8);
 $9 = ((($6)) + 12|0);
 $10 = $5;
 __ZN5Eigen8internal10member_sumIdEC2ERKS2_($9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10member_sumIdEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9DenseBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE5reduxINS3_13scalar_max_opIddEEEEdRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = (__ZNK5Eigen9EigenBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE4rowsEv($7)|0);
 $9 = ($8|0)>(0);
 if (!($9)) {
  ___assert_fail((2930|0),(2998|0),413,(3029|0));
  // unreachable;
 }
 $10 = (__ZNK5Eigen9EigenBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE4colsEv($7)|0);
 $11 = ($10|0)>(0);
 if (!($11)) {
  ___assert_fail((2930|0),(2998|0),413,(3029|0));
  // unreachable;
 }
 $12 = (__ZNK5Eigen9EigenBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE7derivedEv($7)|0);
 __ZN5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEEC2ERKSD_($4,$12);
 $13 = $3;
 __THREW__ = 0;
 $14 = (+invoke_dii(213,($4|0),($13|0)));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if (!($16)) {
  __ZN5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEED2Ev($4);
  STACKTOP = sp;return (+$14);
 }
 $17 = ___cxa_find_matching_catch_2()|0;
 $18 = tempRet0;
 $5 = $17;
 $6 = $18;
 __THREW__ = 0;
 invoke_vi(214,($4|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $23 = ___cxa_find_matching_catch_3(0|0)|0;
  $24 = tempRet0;
  ___clang_call_terminate($23);
  // unreachable;
 } else {
  $21 = $5;
  $22 = $6;
  ___resumeException($21|0);
  // unreachable;
 }
 return +(0.0);
}
function __ZN5Eigen8internal13scalar_max_opIddEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_10member_sumIdEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_10member_sumIdEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEEC2ERKSD_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_10member_sumIdEELi0EEC2ERKSC_($4,$6);
 __ZN5Eigen8internal9evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEEC2ESD_($5,$4);
 $7 = ((($5)) + 12|0);
 $8 = $3;
 HEAP32[$7>>2] = $8;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10redux_implINS0_13scalar_max_opIddEENS0_15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEEELi0ELi0EE3runERKSH_RKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = sp + 16|0;
 $6 = sp + 8|0;
 $9 = sp;
 $2 = $0;
 $3 = $1;
 $10 = $2;
 $11 = (__ZNK5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE4rowsEv($10)|0);
 $12 = ($11|0)>(0);
 if (!($12)) {
  ___assert_fail((3254|0),(2998|0),192,(2040|0));
  // unreachable;
 }
 $13 = $2;
 $14 = (__ZNK5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE4colsEv($13)|0);
 $15 = ($14|0)>(0);
 if (!($15)) {
  ___assert_fail((3254|0),(2998|0),192,(2040|0));
  // unreachable;
 }
 $16 = $2;
 $17 = (+__ZNK5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE17coeffByOuterInnerEii($16,0,0));
 HEAPF64[$4>>3] = $17;
 $5 = 1;
 while(1) {
  $18 = $5;
  $19 = $2;
  $20 = (__ZNK5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE9innerSizeEv($19)|0);
  $21 = ($18|0)<($20|0);
  if (!($21)) {
   break;
  }
  $22 = $3;
  $23 = $2;
  $24 = $5;
  $25 = (+__ZNK5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE17coeffByOuterInnerEii($23,0,$24));
  HEAPF64[$6>>3] = $25;
  $26 = (+__ZNK5Eigen8internal13scalar_max_opIddEclERKdS4_($22,$4,$6));
  HEAPF64[$4>>3] = $26;
  $27 = $5;
  $28 = (($27) + 1)|0;
  $5 = $28;
 }
 $7 = 1;
 while(1) {
  $29 = $7;
  $30 = $2;
  $31 = (__ZNK5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE9outerSizeEv($30)|0);
  $32 = ($29|0)<($31|0);
  if (!($32)) {
   break;
  }
  $8 = 0;
  while(1) {
   $33 = $8;
   $34 = $2;
   $35 = (__ZNK5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE9innerSizeEv($34)|0);
   $36 = ($33|0)<($35|0);
   if (!($36)) {
    break;
   }
   $37 = $3;
   $38 = $2;
   $39 = $7;
   $40 = $8;
   $41 = (+__ZNK5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE17coeffByOuterInnerEii($38,$39,$40));
   HEAPF64[$9>>3] = $41;
   $42 = (+__ZNK5Eigen8internal13scalar_max_opIddEclERKdS4_($37,$4,$9));
   HEAPF64[$4>>3] = $42;
   $43 = $8;
   $44 = (($43) + 1)|0;
   $8 = $44;
  }
  $45 = $7;
  $46 = (($45) + 1)|0;
  $7 = $46;
 }
 $47 = +HEAPF64[$4>>3];
 STACKTOP = sp;return (+$47);
}
function __ZN5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_10member_sumIdEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1;
}
function __ZNK5Eigen16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_10member_sumIdEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_10member_sumIdEELi0EEC2ERKSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 4|0);
 $6 = $3;
 $7 = ((($6)) + 4|0);
 __ZN5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS7_($5,$7);
 $8 = ((($4)) + 12|0);
 $9 = $3;
 $10 = ((($9)) + 12|0);
 __ZN5Eigen8internal10member_sumIdEC2ERKS2_($8,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEEC2ESD_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $5 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEEC2Ev($5);
 __THREW__ = 0;
 invoke_vii(215,($5|0),($1|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  $8 = ((($5)) + 8|0);
  __THREW__ = 0;
  $9 = (invoke_ii(216,($1|0))|0);
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if (!($11)) {
   __THREW__ = 0;
   invoke_vii(217,($8|0),($9|0));
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if (!($13)) {
    STACKTOP = sp;return;
   }
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $3 = $14;
 $4 = $15;
 __THREW__ = 0;
 invoke_vi(218,($5|0));
 $16 = __THREW__; __THREW__ = 0;
 $17 = $16&1;
 if ($17) {
  $20 = ___cxa_find_matching_catch_3(0|0)|0;
  $21 = tempRet0;
  ___clang_call_terminate($20);
  // unreachable;
 } else {
  $18 = $3;
  $19 = $4;
  ___resumeException($18|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_10member_sumIdEELi0EE16nestedExpressionEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $1;
 $3 = $2;
 $4 = ((($3)) + 4|0);
 __ZN5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS7_($0,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_10member_sumIdEELi0EE7functorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_10member_sumIdEELi0EE4rowsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_10member_sumIdEELi0EE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE17coeffByOuterInnerEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 $9 = (+__ZNK5Eigen8internal9evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE5coeffEii($6,$7,$8));
 STACKTOP = sp;return (+$9);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE9innerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal13scalar_max_opIddEclERKdS4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0.0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $8 = sp;
 $11 = sp + 52|0;
 $14 = $0;
 $15 = $1;
 $16 = $2;
 $17 = $15;
 $18 = $16;
 $12 = $17;
 $13 = $18;
 $19 = $12;
 $20 = $13;
 $9 = $19;
 $10 = $20;
 $21 = $9;
 $22 = $10;
 ;HEAP8[$8>>0]=HEAP8[$11>>0]|0;
 $6 = $21;
 $7 = $22;
 $23 = $6;
 $24 = $7;
 $3 = $8;
 $4 = $23;
 $5 = $24;
 $25 = $4;
 $26 = +HEAPF64[$25>>3];
 $27 = $5;
 $28 = +HEAPF64[$27>>3];
 $29 = $26 < $28;
 $30 = $7;
 $31 = $6;
 $32 = $29 ? $30 : $31;
 $33 = +HEAPF64[$32>>3];
 STACKTOP = sp;return (+$33);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE9outerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal9evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $8 = ((($7)) + 8|0);
 $9 = $5;
 __ZNK5Eigen9DenseBaseINS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE3colEi($6,$7,$9);
 $10 = (+__ZNK5Eigen8internal10member_sumIdEclINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEEEdRKT_($8,$6));
 STACKTOP = sp;return (+$10);
}
function __ZNK5Eigen8internal10member_sumIdEclINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEEEdRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 $5 = (+__ZNK5Eigen9DenseBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE3sumEv($4));
 STACKTOP = sp;return (+$5);
}
function __ZNK5Eigen9DenseBaseINS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE3colEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($5)|0);
 $7 = $4;
 __ZN5Eigen5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEC2ERS9_i($0,$6,$7);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE3sumEv($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 12|0;
 $2 = $0;
 $4 = $2;
 $5 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE4sizeEv($4)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  $1 = 0.0;
  $9 = $1;
  STACKTOP = sp;return (+$9);
 } else {
  $7 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE7derivedEv($4)|0);
  __ZN5Eigen8internal13scalar_sum_opIddEC2Ev($3);
  $8 = (+__ZNK5Eigen9DenseBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE5reduxINS3_13scalar_sum_opIddEEEEdRKT_($7,$3));
  $1 = $8;
  $9 = $1;
  STACKTOP = sp;return (+$9);
 }
 return +(0.0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9DenseBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE5reduxINS3_13scalar_sum_opIddEEEEdRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE4rowsEv($7)|0);
 $9 = ($8|0)>(0);
 if (!($9)) {
  ___assert_fail((2930|0),(2998|0),413,(3029|0));
  // unreachable;
 }
 $10 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE4colsEv($7)|0);
 $11 = ($10|0)>(0);
 if (!($11)) {
  ___assert_fail((2930|0),(2998|0),413,(3029|0));
  // unreachable;
 }
 $12 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE7derivedEv($7)|0);
 __ZN5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEEC2ERKSB_($4,$12);
 $13 = $3;
 __THREW__ = 0;
 $14 = (+invoke_dii(219,($4|0),($13|0)));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if (!($16)) {
  __ZN5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEED2Ev($4);
  STACKTOP = sp;return (+$14);
 }
 $17 = ___cxa_find_matching_catch_2()|0;
 $18 = tempRet0;
 $5 = $17;
 $6 = $18;
 __THREW__ = 0;
 invoke_vi(220,($4|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $23 = ___cxa_find_matching_catch_3(0|0)|0;
  $24 = tempRet0;
  ___clang_call_terminate($23);
  // unreachable;
 } else {
  $21 = $5;
  $22 = $6;
  ___resumeException($21|0);
  // unreachable;
 }
 return +(0.0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEEC2ERKSB_($4,$5);
 $6 = ((($4)) + 24|0);
 $7 = $3;
 HEAP32[$6>>2] = $7;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10redux_implINS0_13scalar_sum_opIddEENS0_15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEEELi0ELi0EE3runERKSF_RKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = sp + 16|0;
 $6 = sp + 8|0;
 $9 = sp;
 $2 = $0;
 $3 = $1;
 $10 = $2;
 $11 = (__ZNK5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE4rowsEv($10)|0);
 $12 = ($11|0)>(0);
 if (!($12)) {
  ___assert_fail((3254|0),(2998|0),192,(2040|0));
  // unreachable;
 }
 $13 = $2;
 $14 = (__ZNK5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE4colsEv($13)|0);
 $15 = ($14|0)>(0);
 if (!($15)) {
  ___assert_fail((3254|0),(2998|0),192,(2040|0));
  // unreachable;
 }
 $16 = $2;
 $17 = (+__ZNK5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE17coeffByOuterInnerEii($16,0,0));
 HEAPF64[$4>>3] = $17;
 $5 = 1;
 while(1) {
  $18 = $5;
  $19 = $2;
  $20 = (__ZNK5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE9innerSizeEv($19)|0);
  $21 = ($18|0)<($20|0);
  if (!($21)) {
   break;
  }
  $22 = $3;
  $23 = $2;
  $24 = $5;
  $25 = (+__ZNK5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE17coeffByOuterInnerEii($23,0,$24));
  HEAPF64[$6>>3] = $25;
  $26 = (+__ZNK5Eigen8internal13scalar_sum_opIddEclERKdS4_($22,$4,$6));
  HEAPF64[$4>>3] = $26;
  $27 = $5;
  $28 = (($27) + 1)|0;
  $5 = $28;
 }
 $7 = 1;
 while(1) {
  $29 = $7;
  $30 = $2;
  $31 = (__ZNK5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE9outerSizeEv($30)|0);
  $32 = ($29|0)<($31|0);
  if (!($32)) {
   break;
  }
  $8 = 0;
  while(1) {
   $33 = $8;
   $34 = $2;
   $35 = (__ZNK5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE9innerSizeEv($34)|0);
   $36 = ($33|0)<($35|0);
   if (!($36)) {
    break;
   }
   $37 = $3;
   $38 = $2;
   $39 = $7;
   $40 = $8;
   $41 = (+__ZNK5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE17coeffByOuterInnerEii($38,$39,$40));
   HEAPF64[$9>>3] = $41;
   $42 = (+__ZNK5Eigen8internal13scalar_sum_opIddEclERKdS4_($37,$4,$9));
   HEAPF64[$4>>3] = $42;
   $43 = $8;
   $44 = (($43) + 1)|0;
   $8 = $44;
  }
  $45 = $7;
  $46 = (($45) + 1)|0;
  $7 = $46;
 }
 $47 = +HEAPF64[$4>>3];
 STACKTOP = sp;return (+$47);
}
function __ZN5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EEC2ERKNS_5BlockIS9_Lin1ELi1ELb1EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EEC2ERKNS_5BlockIS9_Lin1ELi1ELb1EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15unary_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEENS0_10IndexBasedEdEC2ERKSB_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEENS0_10IndexBasedEdEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEEC2Ev($6);
 $7 = ((($6)) + 4|0);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(221,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  label = 8;
 } else {
  __THREW__ = 0;
  invoke_vii(222,($7|0),($9|0));
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if ($13) {
   label = 8;
  } else {
   $14 = ((($6)) + 16|0);
   $15 = $3;
   __THREW__ = 0;
   $16 = (invoke_ii(223,($15|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if (!($18)) {
    __THREW__ = 0;
    invoke_vii(121,($14|0),($16|0));
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if (!($20)) {
     $21 = ((($6)) + 20|0);
     $22 = $3;
     __THREW__ = 0;
     $23 = (invoke_ii(224,($22|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if (!($25)) {
      __THREW__ = 0;
      invoke_vii(121,($21|0),($23|0));
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if (!($27)) {
       STACKTOP = sp;return;
      }
     }
    }
   }
   $30 = ___cxa_find_matching_catch_2()|0;
   $31 = tempRet0;
   $4 = $30;
   $5 = $31;
   __THREW__ = 0;
   invoke_vi(225,($7|0));
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   if ($33) {
    $38 = ___cxa_find_matching_catch_3(0|0)|0;
    $39 = tempRet0;
    ___clang_call_terminate($38);
    // unreachable;
   }
  }
 }
 if ((label|0) == 8) {
  $28 = ___cxa_find_matching_catch_2()|0;
  $29 = tempRet0;
  $4 = $28;
  $5 = $29;
 }
 __THREW__ = 0;
 invoke_vi(226,($6|0));
 $34 = __THREW__; __THREW__ = 0;
 $35 = $34&1;
 if ($35) {
  $38 = ___cxa_find_matching_catch_3(0|0)|0;
  $39 = tempRet0;
  ___clang_call_terminate($38);
  // unreachable;
 } else {
  $36 = $4;
  $37 = $5;
  ___resumeException($36|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERS9_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERKS8_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EE8startRowEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EE8startColEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10IndexBasedEdEC2ERKS8_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10IndexBasedEdEC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(227,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  __THREW__ = 0;
  invoke_vii(228,($6|0),($8|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   $13 = ((($6)) + 4|0);
   $14 = $3;
   __THREW__ = 0;
   $15 = (invoke_ii(229,($14|0))|0);
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    __THREW__ = 0;
    invoke_vii(230,($13|0),($15|0));
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     STACKTOP = sp;return;
    }
   }
  }
 }
 $20 = ___cxa_find_matching_catch_2()|0;
 $21 = tempRet0;
 $4 = $20;
 $5 = $21;
 __THREW__ = 0;
 invoke_vi(231,($6|0));
 $22 = __THREW__; __THREW__ = 0;
 $23 = $22&1;
 if ($23) {
  $26 = ___cxa_find_matching_catch_3(0|0)|0;
  $27 = tempRet0;
  ___clang_call_terminate($26);
  // unreachable;
 } else {
  $24 = $4;
  $25 = $5;
  ___resumeException($24|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7functorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS3_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10IndexBasedEdED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10IndexBasedEdED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 4|0);
 __THREW__ = 0;
 invoke_vi(232,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch_2()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 __THREW__ = 0;
 invoke_vi(231,($4|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $2;
  $13 = $3;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen8internal15BlockImpl_denseIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EE4rowsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen8internal15BlockImpl_denseIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE17coeffByOuterInnerEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $5;
 $8 = $4;
 $9 = (+__ZNK5Eigen8internal15unary_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEENS0_10IndexBasedEdE5coeffEii($6,$7,$8));
 STACKTOP = sp;return (+$9);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE9innerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE9outerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15unary_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEENS0_10IndexBasedEdE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 4|0);
 $8 = ((($6)) + 16|0);
 $9 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($8)|0);
 $10 = $4;
 $11 = (($9) + ($10))|0;
 $12 = ((($6)) + 20|0);
 $13 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($12)|0);
 $14 = $5;
 $15 = (($13) + ($14))|0;
 $16 = (+__ZNK5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10IndexBasedEdE5coeffEii($7,$11,$15));
 STACKTOP = sp;return (+$16);
}
function __ZNK5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10IndexBasedEdE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 4|0);
 $8 = $4;
 $9 = $5;
 $10 = (__ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE5coeffEii($7,$8,$9)|0);
 $11 = (+__ZNK5Eigen8internal13scalar_abs_opIdEclERKd($6,$10));
 STACKTOP = sp;return (+$11);
}
function __ZNK5Eigen8internal13scalar_abs_opIdEclERKd($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0.0, $2 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $5;
 $3 = $6;
 $7 = $3;
 $8 = +HEAPF64[$7>>3];
 $2 = $8;
 $9 = $2;
 $10 = (+Math_abs((+$9)));
 STACKTOP = sp;return (+$10);
}
function __ZNK5Eigen9DenseBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen9DenseBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15unary_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEENS0_10IndexBasedEdED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEENS0_10IndexBasedEdED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 4|0);
 __THREW__ = 0;
 invoke_vi(225,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch_2()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 __THREW__ = 0;
 invoke_vi(226,($4|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $2;
  $13 = $3;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZN5Eigen5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEC2ERS9_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen9BlockImplIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ENS_5DenseEEC2ERS9_i($6,$7,$8);
 $9 = $5;
 $10 = ($9|0)>=(0);
 if (!($10)) {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
 $11 = $5;
 $12 = $4;
 $13 = (__ZNK5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($12)|0);
 $14 = ($11|0)<($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen9BlockImplIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ENS_5DenseEEC2ERS9_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal15BlockImpl_denseIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EEC2ERS9_i($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EEC2ERS9_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen10MatrixBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEEC2Ev($6);
 $7 = $4;
 __ZN5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS7_($6,$7);
 $8 = ((($6)) + 8|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($8,0);
 $9 = ((($6)) + 12|0);
 $10 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($9,$10);
 $11 = ((($6)) + 16|0);
 $12 = $4;
 $13 = (__ZNK5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($11,$13);
 $14 = ((($6)) + 20|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($14,1);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen9DenseBaseINS_5BlockIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen9EigenBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen9DenseBaseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_10member_sumIdEELi0EEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1;
}
function __ZN5Eigen8internal9evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE7indicesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE7derivedEv($2)|0);
 $4 = (__ZN5Eigen14TranspositionsILin1ELin1EiE7indicesEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen14TranspositionsILin1ELin1EiE7indicesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE7indicesEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE7indicesEv($4)|0);
 $6 = $3;
 $7 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE8coeffRefEi($5,$6)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZN5Eigen8internal15partial_lu_implIdLi0EiE10blocked_luEiiPdiPiRii($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1232|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1232|0);
 $12 = sp + 24|0;
 $15 = sp + 1229|0;
 $21 = sp + 16|0;
 $24 = sp + 1228|0;
 $30 = sp + 8|0;
 $33 = sp + 1227|0;
 $39 = sp;
 $42 = sp + 1226|0;
 $44 = sp + 1104|0;
 $45 = sp + 1100|0;
 $50 = sp + 1080|0;
 $51 = sp + 1064|0;
 $52 = sp + 1224|0;
 $53 = sp + 1024|0;
 $55 = sp + 1012|0;
 $56 = sp + 1008|0;
 $58 = sp + 1000|0;
 $60 = sp + 992|0;
 $63 = sp + 920|0;
 $64 = sp + 856|0;
 $65 = sp + 792|0;
 $66 = sp + 728|0;
 $67 = sp + 664|0;
 $68 = sp + 600|0;
 $69 = sp + 596|0;
 $73 = sp + 496|0;
 $74 = sp + 408|0;
 $76 = sp + 312|0;
 $77 = sp + 224|0;
 $78 = sp + 160|0;
 $79 = sp + 32|0;
 $80 = sp + 28|0;
 HEAP32[$44>>2] = $0;
 HEAP32[$45>>2] = $1;
 $46 = $2;
 $47 = $3;
 $48 = $4;
 $49 = $5;
 HEAP32[$50>>2] = $6;
 $81 = $46;
 $82 = $47;
 $83 = HEAP32[$45>>2]|0;
 __ZN5Eigen6StrideILi0ELi0EEC2Ev($52);
 __ZN5Eigen3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEC2EPdiiRKS4_($51,$81,$82,$83,$52);
 $84 = HEAP32[$44>>2]|0;
 $85 = HEAP32[$45>>2]|0;
 __ZN5Eigen5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEC2ERS6_iiii($53,$51,0,0,$84,$85);
 $40 = $44;
 $41 = $45;
 $86 = $40;
 $87 = $41;
 ;HEAP8[$39>>0]=HEAP8[$42>>0]|0;
 $37 = $86;
 $38 = $87;
 $88 = $38;
 $89 = $37;
 $34 = $39;
 $35 = $88;
 $36 = $89;
 $90 = $35;
 $91 = HEAP32[$90>>2]|0;
 $92 = $36;
 $93 = HEAP32[$92>>2]|0;
 $94 = ($91|0)<($93|0);
 $95 = $38;
 $96 = $37;
 $97 = $94 ? $95 : $96;
 $98 = HEAP32[$97>>2]|0;
 $54 = $98;
 $99 = $54;
 $100 = ($99|0)<=(16);
 if ($100) {
  $101 = $48;
  $102 = $49;
  $103 = (__ZN5Eigen8internal15partial_lu_implIdLi0EiE12unblocked_luERNS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEPiRi($53,$101,$102)|0);
  $43 = $103;
  $254 = $43;
  STACKTOP = sp;return ($254|0);
 }
 $104 = $54;
 $105 = (($104|0) / 8)&-1;
 HEAP32[$55>>2] = $105;
 $106 = HEAP32[$55>>2]|0;
 $107 = (($106|0) / 16)&-1;
 $108 = $107<<4;
 HEAP32[$55>>2] = $108;
 HEAP32[$56>>2] = 8;
 $31 = $55;
 $32 = $56;
 $109 = $31;
 $110 = $32;
 ;HEAP8[$30>>0]=HEAP8[$33>>0]|0;
 $28 = $109;
 $29 = $110;
 $111 = $28;
 $112 = $29;
 $25 = $30;
 $26 = $111;
 $27 = $112;
 $113 = $26;
 $114 = HEAP32[$113>>2]|0;
 $115 = $27;
 $116 = HEAP32[$115>>2]|0;
 $117 = ($114|0)<($116|0);
 $118 = $29;
 $119 = $28;
 $120 = $117 ? $118 : $119;
 $22 = $120;
 $23 = $50;
 $121 = $22;
 $122 = $23;
 ;HEAP8[$21>>0]=HEAP8[$24>>0]|0;
 $19 = $121;
 $20 = $122;
 $123 = $20;
 $124 = $19;
 $16 = $21;
 $17 = $123;
 $18 = $124;
 $125 = $17;
 $126 = HEAP32[$125>>2]|0;
 $127 = $18;
 $128 = HEAP32[$127>>2]|0;
 $129 = ($126|0)<($128|0);
 $130 = $20;
 $131 = $19;
 $132 = $129 ? $130 : $131;
 $133 = HEAP32[$132>>2]|0;
 HEAP32[$55>>2] = $133;
 $134 = $49;
 HEAP32[$134>>2] = 0;
 $57 = -1;
 HEAP32[$58>>2] = 0;
 while(1) {
  $135 = HEAP32[$58>>2]|0;
  $136 = $54;
  $137 = ($135|0)<($136|0);
  if (!($137)) {
   break;
  }
  $138 = $54;
  $139 = HEAP32[$58>>2]|0;
  $140 = (($138) - ($139))|0;
  HEAP32[$60>>2] = $140;
  $13 = $60;
  $14 = $55;
  $141 = $13;
  $142 = $14;
  ;HEAP8[$12>>0]=HEAP8[$15>>0]|0;
  $10 = $141;
  $11 = $142;
  $143 = $11;
  $144 = $10;
  $7 = $12;
  $8 = $143;
  $9 = $144;
  $145 = $8;
  $146 = HEAP32[$145>>2]|0;
  $147 = $9;
  $148 = HEAP32[$147>>2]|0;
  $149 = ($146|0)<($148|0);
  $150 = $11;
  $151 = $10;
  $152 = $149 ? $150 : $151;
  $153 = HEAP32[$152>>2]|0;
  $59 = $153;
  $154 = HEAP32[$44>>2]|0;
  $155 = HEAP32[$58>>2]|0;
  $156 = (($154) - ($155))|0;
  $157 = $59;
  $158 = (($156) - ($157))|0;
  $61 = $158;
  $159 = $54;
  $160 = HEAP32[$58>>2]|0;
  $161 = (($159) - ($160))|0;
  $162 = $59;
  $163 = (($161) - ($162))|0;
  $62 = $163;
  $164 = HEAP32[$44>>2]|0;
  $165 = HEAP32[$58>>2]|0;
  __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERS7_iiii($63,$53,0,0,$164,$165);
  $166 = HEAP32[$58>>2]|0;
  $167 = $59;
  $168 = (($166) + ($167))|0;
  $169 = HEAP32[$44>>2]|0;
  $170 = $62;
  __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERS7_iiii($64,$53,0,$168,$169,$170);
  $171 = HEAP32[$58>>2]|0;
  $172 = HEAP32[$58>>2]|0;
  $173 = $59;
  $174 = $59;
  __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERS7_iiii($65,$53,$171,$172,$173,$174);
  $175 = HEAP32[$58>>2]|0;
  $176 = HEAP32[$58>>2]|0;
  $177 = $59;
  $178 = (($176) + ($177))|0;
  $179 = $59;
  $180 = $62;
  __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERS7_iiii($66,$53,$175,$178,$179,$180);
  $181 = HEAP32[$58>>2]|0;
  $182 = $59;
  $183 = (($181) + ($182))|0;
  $184 = HEAP32[$58>>2]|0;
  $185 = $61;
  $186 = $59;
  __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERS7_iiii($67,$53,$183,$184,$185,$186);
  $187 = HEAP32[$58>>2]|0;
  $188 = $59;
  $189 = (($187) + ($188))|0;
  $190 = HEAP32[$58>>2]|0;
  $191 = $59;
  $192 = (($190) + ($191))|0;
  $193 = $61;
  $194 = $62;
  __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERS7_iiii($68,$53,$189,$192,$193,$194);
  $195 = $61;
  $196 = $59;
  $197 = (($195) + ($196))|0;
  $198 = $59;
  $199 = HEAP32[$58>>2]|0;
  $200 = HEAP32[$58>>2]|0;
  $201 = (__ZN5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1EE8coeffRefEii($53,$199,$200)|0);
  $202 = $47;
  $203 = $48;
  $204 = HEAP32[$58>>2]|0;
  $205 = (($203) + ($204<<2)|0);
  $206 = (__ZN5Eigen8internal15partial_lu_implIdLi0EiE10blocked_luEiiPdiPiRii($197,$198,$201,$202,$205,$69,16)|0);
  $70 = $206;
  $207 = $70;
  $208 = ($207|0)>=(0);
  $209 = $57;
  $210 = ($209|0)==(-1);
  $or$cond = $208 & $210;
  if ($or$cond) {
   $211 = HEAP32[$58>>2]|0;
   $212 = $70;
   $213 = (($211) + ($212))|0;
   $57 = $213;
  }
  $214 = HEAP32[$69>>2]|0;
  $215 = $49;
  $216 = HEAP32[$215>>2]|0;
  $217 = (($216) + ($214))|0;
  HEAP32[$215>>2] = $217;
  $218 = HEAP32[$58>>2]|0;
  $71 = $218;
  while(1) {
   $219 = $71;
   $220 = HEAP32[$58>>2]|0;
   $221 = $59;
   $222 = (($220) + ($221))|0;
   $223 = ($219|0)<($222|0);
   if (!($223)) {
    break;
   }
   $224 = (__ZN5Eigen8internal13convert_indexIiiEET_RKT0_($58)|0);
   $225 = $48;
   $226 = $71;
   $227 = (($225) + ($226<<2)|0);
   $228 = HEAP32[$227>>2]|0;
   $229 = (($228) + ($224))|0;
   HEAP32[$227>>2] = $229;
   $72 = $229;
   $230 = $71;
   __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE3rowEi($73,$63,$230);
   $231 = $72;
   __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE3rowEi($74,$63,$231);
   __ZN5Eigen9DenseBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4swapISA_EEvRKNS0_IT_EE($73,$74);
   $232 = $71;
   $233 = (($232) + 1)|0;
   $71 = $233;
  }
  $234 = $61;
  $235 = ($234|0)!=(0);
  if ($235) {
   $236 = HEAP32[$58>>2]|0;
   $75 = $236;
   while(1) {
    $237 = $75;
    $238 = HEAP32[$58>>2]|0;
    $239 = $59;
    $240 = (($238) + ($239))|0;
    $241 = ($237|0)<($240|0);
    if (!($241)) {
     break;
    }
    $242 = $75;
    __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE3rowEi($76,$64,$242);
    $243 = $48;
    $244 = $75;
    $245 = (($243) + ($244<<2)|0);
    $246 = HEAP32[$245>>2]|0;
    __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE3rowEi($77,$64,$246);
    __ZN5Eigen9DenseBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4swapISA_EEvRKNS0_IT_EE($76,$77);
    $247 = $75;
    $248 = (($247) + 1)|0;
    $75 = $248;
   }
   __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE14triangularViewILj5EEENSA_24TriangularViewReturnTypeIXT_EE4TypeEv($78,$65);
   __ZNK5Eigen18TriangularViewImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5ENS_5DenseEE12solveInPlaceIS9_EEvRKNS_10MatrixBaseIT_EE($78,$66);
   __ZNK5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEmlIS9_EEKNS_7ProductIS9_T_Li0EEERKNS0_ISD_EE($79,$67,$66);
   $249 = (__ZN5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7noaliasEv($68)|0);
   HEAP32[$80>>2] = $249;
   (__ZN5Eigen7NoAliasINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_10MatrixBaseEEmIINS_7ProductIS9_S9_Li0EEEEERS9_RKNSA_IT_EE($80,$79)|0);
  }
  $250 = HEAP32[$55>>2]|0;
  $251 = HEAP32[$58>>2]|0;
  $252 = (($251) + ($250))|0;
  HEAP32[$58>>2] = $252;
 }
 $253 = $57;
 $43 = $253;
 $254 = $43;
 STACKTOP = sp;return ($254|0);
}
function __ZNK5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE7indicesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen14TranspositionsILin1ELin1EiE7indicesEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen14TranspositionsILin1ELin1EiE7indicesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE4colsEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE4colsEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE4dataEv($4)|0);
 $6 = $3;
 $7 = (($5) + ($6<<2)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen6StrideILi0ELi0EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal19variable_if_dynamicIiLi0EEC2Ei($2,0);
 $3 = ((($2)) + 1|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi0EEC2Ei($3,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEC2EPdiiRKS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 $12 = (__ZN5Eigen3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEE20cast_to_pointer_typeEPd($10,$11)|0);
 $13 = $7;
 $14 = $8;
 __ZN5Eigen7MapBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELi1EEC2EPdii($10,$12,$13,$14);
 $15 = ((($10)) + 12|0);
 $16 = $9;
 __ZN5Eigen6StrideILi0ELi0EEC2ERKS1_($15,$16);
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE22_check_template_paramsEv();
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEC2ERS6_iiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $7;
 $14 = $8;
 $15 = $9;
 $16 = $10;
 $17 = $11;
 __ZN5Eigen9BlockImplINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ENS_5DenseEEC2ERS6_iiii($12,$13,$14,$15,$16,$17);
 $18 = $8;
 $19 = ($18|0)>=(0);
 $20 = $10;
 $21 = ($20|0)>=(0);
 $or$cond = $19 & $21;
 if (!($or$cond)) {
  ___assert_fail((4300|0),(2498|0),147,(2529|0));
  // unreachable;
 }
 $22 = $8;
 $23 = $7;
 $24 = (__ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4rowsEv($23)|0);
 $25 = $10;
 $26 = (($24) - ($25))|0;
 $27 = ($22|0)<=($26|0);
 $28 = $9;
 $29 = ($28|0)>=(0);
 $or$cond3 = $27 & $29;
 $30 = $11;
 $31 = ($30|0)>=(0);
 $or$cond5 = $or$cond3 & $31;
 if (!($or$cond5)) {
  ___assert_fail((4300|0),(2498|0),147,(2529|0));
  // unreachable;
 }
 $32 = $9;
 $33 = $7;
 $34 = (__ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4colsEv($33)|0);
 $35 = $11;
 $36 = (($34) - ($35))|0;
 $37 = ($32|0)<=($36|0);
 if ($37) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4300|0),(2498|0),147,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal15partial_lu_implIdLi0EiE12unblocked_luERNS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEPiRi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0.0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1168|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1168|0);
 $8 = sp + 8|0;
 $11 = sp + 1161|0;
 $15 = sp + 1116|0;
 $16 = sp + 1112|0;
 $22 = sp + 1088|0;
 $24 = sp + 1024|0;
 $25 = sp + 936|0;
 $26 = sp + 1160|0;
 $27 = sp + 840|0;
 $28 = sp + 776|0;
 $29 = sp + 712|0;
 $30 = sp + 648|0;
 $31 = sp + 560|0;
 $32 = sp + 384|0;
 $33 = sp + 320|0;
 $34 = sp + 232|0;
 $35 = sp + 144|0;
 $36 = sp + 80|0;
 $37 = sp + 16|0;
 $38 = sp + 12|0;
 $12 = $0;
 $13 = $1;
 $14 = $2;
 $39 = $12;
 $40 = (__ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE4rowsEv($39)|0);
 HEAP32[$15>>2] = $40;
 $41 = $12;
 $42 = (__ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE4colsEv($41)|0);
 HEAP32[$16>>2] = $42;
 $9 = $15;
 $10 = $16;
 $43 = $9;
 $44 = $10;
 ;HEAP8[$8>>0]=HEAP8[$11>>0]|0;
 $6 = $43;
 $7 = $44;
 $45 = $7;
 $46 = $6;
 $3 = $8;
 $4 = $45;
 $5 = $46;
 $47 = $4;
 $48 = HEAP32[$47>>2]|0;
 $49 = $5;
 $50 = HEAP32[$49>>2]|0;
 $51 = ($48|0)<($50|0);
 $52 = $7;
 $53 = $6;
 $54 = $51 ? $52 : $53;
 $55 = HEAP32[$54>>2]|0;
 $17 = $55;
 $56 = $14;
 HEAP32[$56>>2] = 0;
 $18 = -1;
 $19 = 0;
 while(1) {
  $57 = $19;
  $58 = $17;
  $59 = ($57|0)<($58|0);
  if (!($59)) {
   break;
  }
  $60 = HEAP32[$15>>2]|0;
  $61 = $19;
  $62 = (($60) - ($61))|0;
  $63 = (($62) - 1)|0;
  $20 = $63;
  $64 = HEAP32[$16>>2]|0;
  $65 = $19;
  $66 = (($64) - ($65))|0;
  $67 = (($66) - 1)|0;
  $21 = $67;
  $68 = $12;
  $69 = $19;
  __ZN5Eigen9DenseBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE3colEi($24,$68,$69);
  $70 = HEAP32[$15>>2]|0;
  $71 = $19;
  $72 = (($70) - ($71))|0;
  __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4tailEi($25,$24,$72);
  __ZN5Eigen8internal21scalar_score_coeff_opIdEC2Ev($26);
  __ZNK5Eigen10MatrixBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE9unaryExprINS_8internal21scalar_score_coeff_opIdEEEEKNS_12CwiseUnaryOpIT_KSA_EERKSH_($27,$25,$26);
  $73 = (+__ZNK5Eigen9DenseBaseINS_12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE8maxCoeffIiEEdPT_($27,$22));
  $23 = $73;
  $74 = $19;
  $75 = HEAP32[$22>>2]|0;
  $76 = (($75) + ($74))|0;
  HEAP32[$22>>2] = $76;
  $77 = HEAP32[$22>>2]|0;
  $78 = $13;
  $79 = $19;
  $80 = (($78) + ($79<<2)|0);
  HEAP32[$80>>2] = $77;
  $81 = $23;
  $82 = $81 != 0.0;
  if ($82) {
   $83 = $19;
   $84 = HEAP32[$22>>2]|0;
   $85 = ($83|0)!=($84|0);
   if ($85) {
    $86 = $12;
    $87 = $19;
    __ZN5Eigen9DenseBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE3rowEi($28,$86,$87);
    $88 = $12;
    $89 = HEAP32[$22>>2]|0;
    __ZN5Eigen9DenseBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE3rowEi($29,$88,$89);
    __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4swapIS9_EEvRKNS0_IT_EE($28,$29);
    $90 = $14;
    $91 = HEAP32[$90>>2]|0;
    $92 = (($91) + 1)|0;
    HEAP32[$90>>2] = $92;
   }
   $93 = $12;
   $94 = $19;
   $95 = $19;
   $96 = (__ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE5coeffEii($93,$94,$95)|0);
   $97 = $12;
   $98 = $19;
   __ZN5Eigen9DenseBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE3colEi($30,$97,$98);
   $99 = $20;
   __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4tailEi($31,$30,$99);
   (__ZN5Eigen9DenseBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEdVERKd($31,$96)|0);
  } else {
   $100 = $18;
   $101 = ($100|0)==(-1);
   if ($101) {
    $102 = $19;
    $18 = $102;
   }
  }
  $103 = $19;
  $104 = HEAP32[$15>>2]|0;
  $105 = (($104) - 1)|0;
  $106 = ($103|0)<($105|0);
  if ($106) {
   $107 = $12;
   $108 = $19;
   __ZN5Eigen9DenseBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE3colEi($33,$107,$108);
   $109 = $20;
   __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4tailEi($34,$33,$109);
   $110 = $12;
   $111 = $19;
   __ZN5Eigen9DenseBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE3rowEi($36,$110,$111);
   $112 = $21;
   __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4tailEi($35,$36,$112);
   __ZNK5Eigen10MatrixBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEmlINS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS_7ProductISA_T_Li0EEERKNS0_ISG_EE($32,$34,$35);
   $113 = $12;
   $114 = $20;
   $115 = $21;
   __ZN5Eigen9DenseBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE17bottomRightCornerEii($37,$113,$114,$115);
   $116 = (__ZN5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7noaliasEv($37)|0);
   HEAP32[$38>>2] = $116;
   (__ZN5Eigen7NoAliasINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_10MatrixBaseEEmIINS_7ProductINS1_INS1_IS8_Lin1ELi1ELb1EEELin1ELi1ELb0EEENS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EEEEERS9_RKNSA_IT_EE($38,$32)|0);
  }
  $117 = $19;
  $118 = (($117) + 1)|0;
  $19 = $118;
 }
 $119 = $18;
 STACKTOP = sp;return ($119|0);
}
function __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERS7_iiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $7;
 $14 = $8;
 $15 = $9;
 $16 = $10;
 $17 = $11;
 __ZN5Eigen9BlockImplINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ENS_5DenseEEC2ERS8_iiii($12,$13,$14,$15,$16,$17);
 $18 = $8;
 $19 = ($18|0)>=(0);
 $20 = $10;
 $21 = ($20|0)>=(0);
 $or$cond = $19 & $21;
 if (!($or$cond)) {
  ___assert_fail((4300|0),(2498|0),147,(2529|0));
  // unreachable;
 }
 $22 = $8;
 $23 = $7;
 $24 = (__ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE4rowsEv($23)|0);
 $25 = $10;
 $26 = (($24) - ($25))|0;
 $27 = ($22|0)<=($26|0);
 $28 = $9;
 $29 = ($28|0)>=(0);
 $or$cond3 = $27 & $29;
 $30 = $11;
 $31 = ($30|0)>=(0);
 $or$cond5 = $or$cond3 & $31;
 if (!($or$cond5)) {
  ___assert_fail((4300|0),(2498|0),147,(2529|0));
  // unreachable;
 }
 $32 = $9;
 $33 = $7;
 $34 = (__ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE4colsEv($33)|0);
 $35 = $11;
 $36 = (($34) - ($35))|0;
 $37 = ($32|0)<=($36|0);
 if ($37) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4300|0),(2498|0),147,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1EE8coeffRefEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = (__ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi3EE9colStrideEv($6)|0);
 $10 = Math_imul($8, $9)|0;
 $11 = $4;
 $12 = (__ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi3EE9rowStrideEv($6)|0);
 $13 = Math_imul($11, $12)|0;
 $14 = (($10) + ($13))|0;
 $15 = (($7) + ($14<<3)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZN5Eigen8internal13convert_indexIiiEET_RKT0_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE3rowEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($5)|0);
 $7 = $4;
 __ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEC2ERS8_i($0,$6,$7);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4swapISA_EEvRKNS0_IT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4rowsEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4rowsEv($7)|0);
 $9 = ($6|0)==($8|0);
 if (!($9)) {
  ___assert_fail((4568|0),(4613|0),417,(4648|0));
  // unreachable;
 }
 $10 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4colsEv($5)|0);
 $11 = $3;
 $12 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4colsEv($11)|0);
 $13 = ($10|0)==($12|0);
 if ($13) {
  $14 = (__ZN5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($5)|0);
  $15 = $3;
  $16 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE18const_cast_derivedEv($15)|0);
  __ZN5Eigen8internal14swap_assign_opIdEC2Ev($4);
  __ZN5Eigen8internal15call_assignmentINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEESB_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISG_EE5valueEPvE4typeE($14,$16,$4,0);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4568|0),(4613|0),417,(4648|0));
  // unreachable;
 }
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE14triangularViewILj5EEENSA_24TriangularViewReturnTypeIXT_EE4TypeEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $1;
 $3 = $2;
 $4 = (__ZN5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($3)|0);
 __ZN5Eigen14TriangularViewINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EEC2ERS9_($0,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen18TriangularViewImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5ENS_5DenseEE12solveInPlaceIS9_EEvRKNS_10MatrixBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZNK5Eigen18TriangularViewImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5ENS_5DenseEE12solveInPlaceILi1ES9_EEvRKNS_10MatrixBaseIT0_EE($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEmlIS9_EEKNS_7ProductIS9_T_Li0EEERKNS0_ISD_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($5)|0);
 $7 = $4;
 $8 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($7)|0);
 __ZN5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li0EEC2ERKS9_SC_($0,$6,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7noaliasEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = $0;
 $3 = $2;
 $4 = (__ZN5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($3)|0);
 __ZN5Eigen7NoAliasINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_10MatrixBaseEEC2ERS9_($1,$4);
 $5 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen7NoAliasINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_10MatrixBaseEEmIINS_7ProductIS9_S9_Li0EEEEERS9_RKNSA_IT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_7ProductINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li0EEEE7derivedEv($7)|0);
 __ZN5Eigen8internal13sub_assign_opIddEC2Ev($4);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li0EEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_($6,$8,$4);
 $9 = HEAP32[$5>>2]|0;
 STACKTOP = sp;return ($9|0);
}
function __ZN5Eigen8internal19variable_if_dynamicIiLi0EEC2Ei($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 $5 = ($4|0)==(0);
 if ($5) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2746|0),(2760|0),110,(2800|0));
  // unreachable;
 }
}
function __ZN5Eigen3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEE20cast_to_pointer_typeEPd($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen7MapBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELi1EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen7MapBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELi0EEC2EPdii($8,$9,$10,$11);
 STACKTOP = sp;return;
}
function __ZN5Eigen6StrideILi0ELi0EEC2ERKS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen6StrideILi0ELi0EE5outerEv($5)|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi0EEC2Ei($4,$6);
 $7 = ((($4)) + 1|0);
 $8 = $3;
 $9 = (__ZNK5Eigen6StrideILi0ELi0EE5innerEv($8)|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi0EEC2Ei($7,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELi0EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $7;
  $19 = ($18|0)>=(0);
  $or$cond = $17 & $19;
  if (!($or$cond)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE11checkSanityIS6_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE11checkSanityIS6_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen6StrideILi0ELi0EE5outerEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi0EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen6StrideILi0ELi0EE5innerEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi0EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal19variable_if_dynamicIiLi0EE5valueEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function __ZN5Eigen9BlockImplINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ENS_5DenseEEC2ERS6_iiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $7;
 $14 = $8;
 $15 = $9;
 $16 = $10;
 $17 = $11;
 __ZN5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EEC2ERS7_iiii($12,$13,$14,$15,$16,$17);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EEC2ERS7_iiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $7;
 $14 = (__ZN5Eigen7MapBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELi1EE4dataEv($13)|0);
 $15 = $7;
 $16 = (__ZNK5Eigen3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEE11innerStrideEv($15)|0);
 $17 = $8;
 $18 = Math_imul($16, $17)|0;
 $19 = (($14) + ($18<<3)|0);
 $20 = $7;
 $21 = (__ZNK5Eigen3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEE11outerStrideEv($20)|0);
 $22 = $9;
 $23 = Math_imul($21, $22)|0;
 $24 = (($19) + ($23<<3)|0);
 $25 = $10;
 $26 = $11;
 __ZN5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1EEC2EPdii($12,$24,$25,$26);
 $27 = ((($12)) + 12|0);
 $28 = $7;
 __ZN5Eigen3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEC2ERKS5_($27,$28);
 $29 = ((($12)) + 28|0);
 $30 = $8;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($29,$30);
 $31 = ((($12)) + 32|0);
 $32 = $9;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($31,$32);
 __ZN5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE4initEv($12);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELi1EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1;
}
function __ZNK5Eigen3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EEC2EPdii($8,$9,$10,$11);
 STACKTOP = sp;return;
}
function __ZN5Eigen3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 ;HEAP32[$4>>2]=HEAP32[$5>>2]|0;HEAP32[$4+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$5+8>>2]|0;
 $6 = ((($4)) + 12|0);
 $7 = $3;
 $8 = ((($7)) + 12|0);
 __ZN5Eigen6StrideILi0ELi0EEC2ERKS1_($6,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEE11outerStrideEv($3)|0);
 $5 = ((($2)) + 36|0);
 HEAP32[$5>>2] = $4;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $7;
  $19 = ($18|0)>=(0);
  $or$cond = $17 & $19;
  if (!($or$cond)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE11checkSanityIS8_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE11checkSanityIS8_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen9DenseBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE3colEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen9EigenBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE7derivedEv($5)|0);
 $7 = $4;
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEC2ERS7_i($0,$6,$7);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4tailEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE7derivedEv($5)|0);
 $7 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4sizeEv($5)|0);
 $8 = $4;
 $9 = (($7) - ($8))|0;
 $10 = $4;
 __ZN5Eigen11VectorBlockINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1EEC2ERS9_ii($0,$6,$9,$10);
 STACKTOP = sp;return;
}
function __ZNK5Eigen10MatrixBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE9unaryExprINS_8internal21scalar_score_coeff_opIdEEEEKNS_12CwiseUnaryOpIT_KSA_EERKSH_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7derivedEv($5)|0);
 $7 = $4;
 __ZN5Eigen12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2ERSE_RKS3_($0,$6,$7);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21scalar_score_coeff_opIdEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal13scalar_abs_opIdEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE8maxCoeffIiEEdPT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 __ZNK5Eigen9DenseBaseINS_12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE5visitINS2_17max_coeff_visitorISG_EEEEvRT_($5,$4);
 $6 = HEAP32[$4>>2]|0;
 $7 = $3;
 HEAP32[$7>>2] = $6;
 $8 = ((($4)) + 8|0);
 $9 = +HEAPF64[$8>>3];
 STACKTOP = sp;return (+$9);
}
function __ZN5Eigen9DenseBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE3rowEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen9EigenBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE7derivedEv($5)|0);
 $7 = $4;
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEC2ERS7_i($0,$6,$7);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4swapIS9_EEvRKNS0_IT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4rowsEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4rowsEv($7)|0);
 $9 = ($6|0)==($8|0);
 if (!($9)) {
  ___assert_fail((4568|0),(4613|0),417,(4648|0));
  // unreachable;
 }
 $10 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4colsEv($5)|0);
 $11 = $3;
 $12 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4colsEv($11)|0);
 $13 = ($10|0)==($12|0);
 if ($13) {
  $14 = (__ZN5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($5)|0);
  $15 = $3;
  $16 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE18const_cast_derivedEv($15)|0);
  __ZN5Eigen8internal14swap_assign_opIdEC2Ev($4);
  __ZN5Eigen8internal15call_assignmentINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEESA_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISF_EE5valueEPvE4typeE($14,$16,$4,0);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4568|0),(4613|0),417,(4648|0));
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = (__ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi3EE9colStrideEv($6)|0);
 $10 = Math_imul($8, $9)|0;
 $11 = $4;
 $12 = (__ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi3EE9rowStrideEv($6)|0);
 $13 = Math_imul($11, $12)|0;
 $14 = (($10) + ($13))|0;
 $15 = (($7) + ($14<<3)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZN5Eigen9DenseBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEdVERKd($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $5 = sp + 24|0;
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = (__ZN5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7derivedEv($6)|0);
 $8 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4rowsEv($6)|0);
 $9 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4colsEv($6)|0);
 $10 = $3;
 __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE8ConstantEiiRKd($4,$8,$9,$10);
 __ZN5Eigen8internal13div_assign_opIddEC2Ev($5);
 __ZN5Eigen8internal15call_assignmentINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEENS0_13div_assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISL_EE5valueEPvE4typeE($7,$4,$5,0);
 $11 = (__ZN5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7derivedEv($6)|0);
 STACKTOP = sp;return ($11|0);
}
function __ZNK5Eigen10MatrixBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEmlINS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS_7ProductISA_T_Li0EEERKNS0_ISG_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7derivedEv($5)|0);
 $7 = $4;
 $8 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($7)|0);
 __ZN5Eigen7ProductINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2ERKSA_RKSC_($0,$6,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4tailEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($5)|0);
 $7 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4sizeEv($5)|0);
 $8 = $4;
 $9 = (($7) - ($8))|0;
 $10 = $4;
 __ZN5Eigen11VectorBlockINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELin1EEC2ERS9_ii($0,$6,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE17bottomRightCornerEii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZN5Eigen9EigenBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE7derivedEv($7)|0);
 $9 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE4rowsEv($7)|0);
 $10 = $5;
 $11 = (($9) - ($10))|0;
 $12 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE4colsEv($7)|0);
 $13 = $6;
 $14 = (($12) - ($13))|0;
 $15 = $5;
 $16 = $6;
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERS7_iiii($0,$8,$11,$14,$15,$16);
 STACKTOP = sp;return;
}
function __ZN5Eigen7NoAliasINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_10MatrixBaseEEmIINS_7ProductINS1_INS1_IS8_Lin1ELi1ELb1EEELin1ELi1ELb0EEENS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EEEEERS9_RKNSA_IT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = HEAP32[$5>>2]|0;
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_7ProductINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EEEE7derivedEv($7)|0);
 __ZN5Eigen8internal13sub_assign_opIddEC2Ev($4);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductINS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_($6,$8,$4);
 $9 = HEAP32[$5>>2]|0;
 STACKTOP = sp;return ($9|0);
}
function __ZN5Eigen9EigenBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEC2ERS7_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen9BlockImplINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ENS_5DenseEEC2ERS8_i($6,$7,$8);
 $9 = $5;
 $10 = ($9|0)>=(0);
 if (!($10)) {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
 $11 = $5;
 $12 = $4;
 $13 = (__ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE4colsEv($12)|0);
 $14 = ($11|0)<($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen9BlockImplINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ENS_5DenseEEC2ERS8_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EEC2ERS9_i($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EEC2ERS9_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZN5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1EE4dataEv($7)|0);
 $9 = $5;
 $10 = $4;
 $11 = (__ZNK5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE11outerStrideEv($10)|0);
 $12 = Math_imul($9, $11)|0;
 $13 = (($8) + ($12<<3)|0);
 $14 = $4;
 $15 = (__ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE4rowsEv($14)|0);
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi1EEC2EPdii($6,$13,$15,1);
 $16 = ((($6)) + 12|0);
 $17 = $4;
 __ZN5Eigen5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEC2ERKS7_($16,$17);
 $18 = ((($6)) + 52|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($18,0);
 $19 = ((($6)) + 56|0);
 $20 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($19,$20);
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE4initEv($6);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 36|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi1EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EEC2EPdii($8,$9,$10,$11);
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEC2ERKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen9BlockImplINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ENS_5DenseEEC2ERKS8_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE11outerStrideEv($3)|0);
 $5 = ((($2)) + 60|0);
 HEAP32[$5>>2] = $4;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $7;
  $19 = ($18|0)>=(0);
  $or$cond = $17 & $19;
  $20 = $7;
  $21 = (1)==($20|0);
  $or$cond3 = $or$cond & $21;
  if (!($or$cond3)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE11checkSanityIS9_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE11checkSanityIS9_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ENS_5DenseEEC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EEC2ERKS8_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EEC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 ;HEAP32[$4>>2]=HEAP32[$5>>2]|0;HEAP32[$4+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$5+8>>2]|0;
 $6 = ((($4)) + 12|0);
 $7 = $3;
 $8 = ((($7)) + 12|0);
 __ZN5Eigen3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEC2ERKS5_($6,$8);
 $9 = ((($4)) + 28|0);
 $10 = $3;
 $11 = ((($10)) + 28|0);
 ;HEAP32[$9>>2]=HEAP32[$11>>2]|0;HEAP32[$9+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$9+8>>2]=HEAP32[$11+8>>2]|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen11VectorBlockINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1EEC2ERS9_ii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEC2ERS8_iiii($8,$9,$10,0,$11,1);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEC2ERS8_iiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $7;
 $14 = $8;
 $15 = $9;
 $16 = $10;
 $17 = $11;
 __ZN5Eigen9BlockImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ENS_5DenseEEC2ERS9_iiii($12,$13,$14,$15,$16,$17);
 $18 = $11;
 $19 = (1)==($18|0);
 if (!($19)) {
  ___assert_fail((4443|0),(2498|0),145,(2529|0));
  // unreachable;
 }
 $20 = $8;
 $21 = ($20|0)>=(0);
 $22 = $10;
 $23 = ($22|0)>=(0);
 $or$cond = $21 & $23;
 if (!($or$cond)) {
  ___assert_fail((4300|0),(2498|0),147,(2529|0));
  // unreachable;
 }
 $24 = $8;
 $25 = $7;
 $26 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4rowsEv($25)|0);
 $27 = $10;
 $28 = (($26) - ($27))|0;
 $29 = ($24|0)<=($28|0);
 $30 = $9;
 $31 = ($30|0)>=(0);
 $or$cond3 = $29 & $31;
 $32 = $11;
 $33 = ($32|0)>=(0);
 $or$cond5 = $or$cond3 & $33;
 if (!($or$cond5)) {
  ___assert_fail((4300|0),(2498|0),147,(2529|0));
  // unreachable;
 }
 $34 = $9;
 $35 = $7;
 $36 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4colsEv($35)|0);
 $37 = $11;
 $38 = (($36) - ($37))|0;
 $39 = ($34|0)<=($38|0);
 if ($39) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4300|0),(2498|0),147,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen9BlockImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ENS_5DenseEEC2ERS9_iiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $7;
 $14 = $8;
 $15 = $9;
 $16 = $10;
 $17 = $11;
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ELb1EEC2ERSA_iiii($12,$13,$14,$15,$16,$17);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ELb1EEC2ERSA_iiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $7;
 $14 = (__ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi1EE4dataEv($13)|0);
 $15 = $7;
 $16 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE11innerStrideEv($15)|0);
 $17 = $8;
 $18 = Math_imul($16, $17)|0;
 $19 = (($14) + ($18<<3)|0);
 $20 = $7;
 $21 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE11outerStrideEv($20)|0);
 $22 = $9;
 $23 = Math_imul($21, $22)|0;
 $24 = (($19) + ($23<<3)|0);
 $25 = $10;
 $26 = $11;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi1EEC2EPdii($12,$24,$25,$26);
 $27 = ((($12)) + 12|0);
 $28 = $7;
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEC2ERKS8_($27,$28);
 $29 = ((($12)) + 76|0);
 $30 = $8;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($29,$30);
 $31 = ((($12)) + 80|0);
 $32 = $9;
 __ZN5Eigen8internal19variable_if_dynamicIiLi0EEC2Ei($31,$32);
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ELb1EE4initEv($12);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi1EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE11innerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 60|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi1EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EEC2EPdii($8,$9,$10,$11);
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen9BlockImplINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ENS_5DenseEEC2ERKSA_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE11outerStrideEv($3)|0);
 $5 = ((($2)) + 84|0);
 HEAP32[$5>>2] = $4;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEE11innerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $7;
  $19 = ($18|0)>=(0);
  $or$cond = $17 & $19;
  $20 = $7;
  $21 = (1)==($20|0);
  $or$cond3 = $or$cond & $21;
  if (!($or$cond3)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE11checkSanityISA_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE11checkSanityISA_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ENS_5DenseEEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EEC2ERKSA_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi1EEC2ERKSA_($4,$5);
 $6 = ((($4)) + 12|0);
 $7 = $3;
 $8 = ((($7)) + 12|0);
 __ZN5Eigen5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEC2ERKS7_($6,$8);
 $9 = ((($4)) + 52|0);
 $10 = $3;
 $11 = ((($10)) + 52|0);
 ;HEAP32[$9>>2]=HEAP32[$11>>2]|0;HEAP32[$9+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$9+8>>2]=HEAP32[$11+8>>2]|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi1EEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EEC2ERKSA_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 ;HEAP32[$4>>2]=HEAP32[$5>>2]|0;HEAP32[$4+4>>2]=HEAP32[$5+4>>2]|0;
 $6 = ((($4)) + 8|0);
 $7 = $3;
 $8 = ((($7)) + 8|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2ERKS2_($6,$8);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2ERSE_RKS3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen16CwiseUnaryOpImplINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_5DenseEEC2Ev($6);
 $7 = $4;
 __ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEC2ERKS9_($6,$7);
 $8 = ((($6)) + 88|0);
 $9 = $5;
 __ZN5Eigen8internal21scalar_score_coeff_opIdEC2ERKS2_($8,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen16CwiseUnaryOpImplINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEC2ERKS9_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen9BlockImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ENS_5DenseEEC2ERKSB_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21scalar_score_coeff_opIdEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal13scalar_abs_opIdEC2ERKS2_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ENS_5DenseEEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ELb1EEC2ERKSB_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ELb1EEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi1EEC2ERKSB_($4,$5);
 $6 = ((($4)) + 12|0);
 $7 = $3;
 $8 = ((($7)) + 12|0);
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEC2ERKS8_($6,$8);
 $9 = ((($4)) + 76|0);
 $10 = $3;
 $11 = ((($10)) + 76|0);
 ;HEAP32[$9>>2]=HEAP32[$11>>2]|0;
 $12 = ((($4)) + 80|0);
 $13 = $3;
 $14 = ((($13)) + 80|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi0EEC2ERKS2_($12,$14);
 $15 = ((($4)) + 84|0);
 $16 = $3;
 $17 = ((($16)) + 84|0);
 $18 = HEAP32[$17>>2]|0;
 HEAP32[$15>>2] = $18;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi1EEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EEC2ERKSB_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal19variable_if_dynamicIiLi0EEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 ;HEAP32[$4>>2]=HEAP32[$5>>2]|0;HEAP32[$4+4>>2]=HEAP32[$5+4>>2]|0;
 $6 = ((($4)) + 8|0);
 $7 = $3;
 $8 = ((($7)) + 8|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2ERKS2_($6,$8);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE5visitINS2_17max_coeff_visitorISG_EEEEvRT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = (__ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE7derivedEv($7)|0);
 __ZN5Eigen8internal17visitor_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2ERKSG_($4,$8);
 $9 = $3;
 __THREW__ = 0;
 invoke_vii(233,($4|0),($9|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  __ZN5Eigen8internal17visitor_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $12 = ___cxa_find_matching_catch_2()|0;
 $13 = tempRet0;
 $5 = $12;
 $6 = $13;
 __THREW__ = 0;
 invoke_vi(234,($4|0));
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 if ($15) {
  $18 = ___cxa_find_matching_catch_3(0|0)|0;
  $19 = tempRet0;
  ___clang_call_terminate($18);
  // unreachable;
 } else {
  $16 = $5;
  $17 = $6;
  ___resumeException($16|0);
  // unreachable;
 }
}
function __ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal17visitor_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2ERKSG_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2ERKSG_($4,$5);
 $6 = ((($4)) + 16|0);
 $7 = $3;
 HEAP32[$6>>2] = $7;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal12visitor_implINS0_17max_coeff_visitorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEENS0_17visitor_evaluatorISH_EELin1EE3runERKSK_RSI_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = sp + 16|0;
 $6 = sp + 8|0;
 $9 = sp;
 $2 = $0;
 $3 = $1;
 $10 = $3;
 $11 = $2;
 $12 = (+__ZNK5Eigen8internal17visitor_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE5coeffEii($11,0,0));
 HEAPF64[$4>>3] = $12;
 __ZN5Eigen8internal13coeff_visitorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE4initERKdii($10,$4,0,0);
 $5 = 1;
 while(1) {
  $13 = $5;
  $14 = $2;
  $15 = (__ZNK5Eigen8internal17visitor_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE4rowsEv($14)|0);
  $16 = ($13|0)<($15|0);
  if (!($16)) {
   break;
  }
  $17 = $3;
  $18 = $2;
  $19 = $5;
  $20 = (+__ZNK5Eigen8internal17visitor_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE5coeffEii($18,$19,0));
  HEAPF64[$6>>3] = $20;
  $21 = $5;
  __ZN5Eigen8internal17max_coeff_visitorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEclERKdii($17,$6,$21,0);
  $22 = $5;
  $23 = (($22) + 1)|0;
  $5 = $23;
 }
 $7 = 1;
 while(1) {
  $24 = $7;
  $25 = $2;
  $26 = (__ZNK5Eigen8internal17visitor_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE4colsEv($25)|0);
  $27 = ($24|0)<($26|0);
  if (!($27)) {
   break;
  }
  $8 = 0;
  while(1) {
   $28 = $8;
   $29 = $2;
   $30 = (__ZNK5Eigen8internal17visitor_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE4rowsEv($29)|0);
   $31 = ($28|0)<($30|0);
   if (!($31)) {
    break;
   }
   $32 = $3;
   $33 = $2;
   $34 = $8;
   $35 = $7;
   $36 = (+__ZNK5Eigen8internal17visitor_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE5coeffEii($33,$34,$35));
   HEAPF64[$9>>3] = $36;
   $37 = $8;
   $38 = $7;
   __ZN5Eigen8internal17max_coeff_visitorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEclERKdii($32,$9,$37,$38);
   $39 = $8;
   $40 = (($39) + 1)|0;
   $8 = $40;
  }
  $41 = $7;
  $42 = (($41) + 1)|0;
  $7 = $42;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17visitor_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2ERKSG_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_10IndexBasedEdEC2ERKSG_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_10IndexBasedEdEC2ERKSG_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(235,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  __THREW__ = 0;
  invoke_vii(236,($6|0),($8|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   $13 = ((($6)) + 4|0);
   $14 = $3;
   __THREW__ = 0;
   $15 = (invoke_ii(237,($14|0))|0);
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    __THREW__ = 0;
    invoke_vii(238,($13|0),($15|0));
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     STACKTOP = sp;return;
    }
   }
  }
 }
 $20 = ___cxa_find_matching_catch_2()|0;
 $21 = tempRet0;
 $4 = $20;
 $5 = $21;
 __THREW__ = 0;
 invoke_vi(239,($6|0));
 $22 = __THREW__; __THREW__ = 0;
 $23 = $22&1;
 if ($23) {
  $26 = ___cxa_find_matching_catch_3(0|0)|0;
  $27 = tempRet0;
  ___clang_call_terminate($26);
  // unreachable;
 } else {
  $24 = $4;
  $25 = $5;
  ___resumeException($24|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7functorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 88|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2ERSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2ERKSB_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ELb1EEC2ERKNS2_ISA_Lin1ELi1ELb0EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEC2ERKSB_($6,$7);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(240,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 do {
  if (!($11)) {
   $12 = $9;
   $13 = (($12>>>0) % 1)&-1;
   $14 = ($13|0)==(0);
   if ($14) {
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiii(162,(3035|0),(3198|0),1107,(3238|0));
    $15 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $4 = $16;
 $5 = $17;
 __THREW__ = 0;
 invoke_vi(241,($6|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $4;
  $21 = $5;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(240,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(242,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(166,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(243,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(121,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(244,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi1EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE11innerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 84|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal13coeff_visitorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE4initERKdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = +HEAPF64[$9>>3];
 $11 = ((($8)) + 8|0);
 HEAPF64[$11>>3] = $10;
 $12 = $6;
 HEAP32[$8>>2] = $12;
 $13 = $7;
 $14 = ((($8)) + 4|0);
 HEAP32[$14>>2] = $13;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal17visitor_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 $9 = (+__ZNK5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_10IndexBasedEdE5coeffEii($6,$7,$8));
 STACKTOP = sp;return (+$9);
}
function __ZNK5Eigen8internal17visitor_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4rowsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal17max_coeff_visitorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEclERKdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = +HEAPF64[$9>>3];
 $11 = ((($8)) + 8|0);
 $12 = +HEAPF64[$11>>3];
 $13 = $10 > $12;
 if (!($13)) {
  STACKTOP = sp;return;
 }
 $14 = $5;
 $15 = +HEAPF64[$14>>3];
 $16 = ((($8)) + 8|0);
 HEAPF64[$16>>3] = $15;
 $17 = $6;
 HEAP32[$8>>2] = $17;
 $18 = $7;
 $19 = ((($8)) + 4|0);
 HEAP32[$19>>2] = $18;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal17visitor_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_10IndexBasedEdE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 4|0);
 $8 = $4;
 $9 = $5;
 $10 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE5coeffEii($7,$8,$9)|0);
 $11 = (+__ZNK5Eigen8internal13scalar_abs_opIdEclERKd($6,$10));
 STACKTOP = sp;return (+$11);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE9colStrideEv($6)|0);
 $10 = Math_imul($8, $9)|0;
 $11 = $4;
 $12 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE9rowStrideEv($6)|0);
 $13 = Math_imul($11, $12)|0;
 $14 = (($10) + ($13))|0;
 $15 = (($7) + ($14<<3)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE9colStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE9rowStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4colsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal9evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_10IndexBasedEdED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_10IndexBasedEdED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 4|0);
 __THREW__ = 0;
 invoke_vi(245,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch_2()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 __THREW__ = 0;
 invoke_vi(239,($4|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $2;
  $13 = $3;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorIKNS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ELb1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEC2ERS7_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen9BlockImplINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ENS_5DenseEEC2ERS8_i($6,$7,$8);
 $9 = $5;
 $10 = ($9|0)>=(0);
 if (!($10)) {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
 $11 = $5;
 $12 = $4;
 $13 = (__ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE4rowsEv($12)|0);
 $14 = ($11|0)<($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen9BlockImplINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ENS_5DenseEEC2ERS8_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERS9_i($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERS9_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZN5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1EE4dataEv($7)|0);
 $9 = $5;
 $10 = $4;
 $11 = (__ZNK5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE11innerStrideEv($10)|0);
 $12 = Math_imul($9, $11)|0;
 $13 = (($8) + ($12<<3)|0);
 $14 = $4;
 $15 = (__ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE4colsEv($14)|0);
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1EEC2EPdii($6,$13,1,$15);
 $16 = ((($6)) + 12|0);
 $17 = $4;
 __ZN5Eigen5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEC2ERKS7_($16,$17);
 $18 = ((($6)) + 52|0);
 $19 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($18,$19);
 $20 = ((($6)) + 56|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($20,0);
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE4initEv($6);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2EPdii($8,$9,$10,$11);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE11innerStrideEv($3)|0);
 $5 = ((($2)) + 60|0);
 HEAP32[$5>>2] = $4;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $6;
  $19 = (1)==($18|0);
  $or$cond = $17 & $19;
  $20 = $7;
  $21 = ($20|0)>=(0);
  $or$cond3 = $or$cond & $21;
  if (!($or$cond3)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE11checkSanityIS9_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE11checkSanityIS9_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal15call_assignmentINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEESA_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISF_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEESA_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal14swap_assign_opIdEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEESA_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEESA_NS0_14swap_assign_opIdEENS0_11Dense2DenseEvE3runERSA_RKSA_RKSC_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEESA_NS0_14swap_assign_opIdEENS0_11Dense2DenseEvE3runERSA_RKSA_RKSC_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEESA_EEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEESA_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEESA_EEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEESA_Lb0EE3runERKSA_SD_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEESA_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 36|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERKSA_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(246,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(247,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(248,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(249,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(250,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(251,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(251,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(251,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEESA_Lb0EE3runERKSA_SD_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERKNS2_IS9_Li1ELin1ELb0EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEESA_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  ___assert_fail((4653|0),(2091|0),710,(2132|0));
  // unreachable;
 }
 $11 = $3;
 $12 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($11)|0);
 $13 = $4;
 $14 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($13)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4653|0),(2091|0),710,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESC_NS0_14swap_assign_opIdEELi0EEC2ERSC_RKSC_RKSE_RSB_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 $12 = $7;
 $13 = $8;
 $14 = $9;
 __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESC_NS0_14swap_assign_opIdEELi1EEC2ERSC_RKSC_RKSE_RSB_($10,$11,$12,$13,$14);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESD_NS0_14swap_assign_opIdEELi0EEELi1ELi0EE3runERSG_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESC_NS0_14swap_assign_opIdEELi1EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESC_NS0_14swap_assign_opIdEELi1EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERKNS2_IS9_Li1ELin1ELb0EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEEC2ERKSA_($6,$7);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(252,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 do {
  if (!($11)) {
   $12 = $9;
   $13 = (($12>>>0) % 1)&-1;
   $14 = ($13|0)==(0);
   if ($14) {
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiii(162,(3035|0),(3198|0),1107,(3238|0));
    $15 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $4 = $16;
 $5 = $17;
 __THREW__ = 0;
 invoke_vi(253,($6|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $4;
  $21 = $5;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(252,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(254,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(121,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(255,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(166,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(256,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE11outerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 60|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESC_NS0_14swap_assign_opIdEELi1EEC2ERSC_RKSC_RKSE_RSB_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESC_NS0_14swap_assign_opIdEELi1EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESC_NS0_14swap_assign_opIdEELi1EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$4>>2]|0;
 $8 = $3;
 $9 = (__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE8coeffRefEi($7,$8)|0);
 $10 = ((($4)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE5coeffEi($11,$12)|0);
 __ZNK5Eigen8internal14swap_assign_opIdE11assignCoeffERdRKd($6,$9,$13);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal14swap_assign_opIdE11assignCoeffERdRKd($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0.0, $20 = 0, $21 = 0, $22 = 0.0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $8 = sp;
 $9 = $0;
 $10 = $1;
 $11 = $2;
 $12 = $10;
 $13 = $11;
 $6 = $12;
 $7 = $13;
 $14 = $6;
 $5 = $14;
 $15 = $5;
 $16 = +HEAPF64[$15>>3];
 HEAPF64[$8>>3] = $16;
 $17 = $7;
 $3 = $17;
 $18 = $3;
 $19 = +HEAPF64[$18>>3];
 $20 = $6;
 HEAPF64[$20>>3] = $19;
 $4 = $8;
 $21 = $4;
 $22 = +HEAPF64[$21>>3];
 $23 = $7;
 HEAPF64[$23>>3] = $22;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = ((($4)) + 4|0);
 $8 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($7)|0);
 $9 = Math_imul($6, $8)|0;
 $10 = (($5) + ($9<<3)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = ((($4)) + 4|0);
 $8 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($7)|0);
 $9 = Math_imul($6, $8)|0;
 $10 = (($5) + ($9<<3)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZN5Eigen8internal15block_evaluatorINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi3EE9colStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi3EE11outerStrideEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi3EE9rowStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi3EE11innerStrideEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi3EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE11outerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi3EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE11innerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal15call_assignmentINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEENS0_13div_assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISL_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEENS0_13div_assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE8ConstantEiiRKd($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal18scalar_constant_opIdEC2ERKd($7,$10);
 __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE11NullaryExprINS_8internal18scalar_constant_opIdEEEEKNS_14CwiseNullaryOpIT_S2_EEiiRKS9_($0,$8,$9,$7);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal13div_assign_opIddEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEENS0_13div_assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEENS0_13div_assign_opIddEENS0_11Dense2DenseEvE3runERSB_RKSG_RKSI_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEENS0_13div_assign_opIddEENS0_11Dense2DenseEvE3runERSB_RKSG_RKSI_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEEEEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEENS0_13div_assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEEEEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEELb0EE3runERKSB_RKSG_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEENS0_13div_assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp;
 $9 = sp + 32|0;
 $10 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS7_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(257,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(258,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(259,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(260,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(261,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(262,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(262,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(263,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEELb0EE3runERKSB_RKSG_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(264,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  __THREW__ = 0;
  invoke_vii(180,($6|0),($8|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $4 = $13;
 $5 = $14;
 __THREW__ = 0;
 invoke_vi(265,($6|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $4;
  $18 = $5;
  ___resumeException($17|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17resize_if_allowedINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEENS0_13div_assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4rowsEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  ___assert_fail((4653|0),(2091|0),710,(2132|0));
  // unreachable;
 }
 $11 = $3;
 $12 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4colsEv($11)|0);
 $13 = $4;
 $14 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($13)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4653|0),(2091|0),710,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ELb1EEC2ERKNS2_ISA_Lin1ELi1ELb0EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS5_IdLin1ELi1ELi0ELin1ELi1EEEEEEENS0_13div_assign_opIddEELi0EEC2ERSD_RKSJ_RKSL_RSC_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS3_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS6_IdLin1ELi1ELi0ELin1ELi1EEEEEEENS0_13div_assign_opIddEELi0EEELi1ELi0EE3runERSN_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS5_IdLin1ELi1ELi0ELin1ELi1EEEEEEENS0_13div_assign_opIddEELi0EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS5_IdLin1ELi1ELi0ELin1ELi1EEEEEEENS0_13div_assign_opIddEELi0EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ELb1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7functorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS5_IdLin1ELi1ELi0ELin1ELi1EEEEEEENS0_13div_assign_opIddEELi0EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS5_IdLin1ELi1ELi0ELin1ELi1EEEEEEENS0_13div_assign_opIddEELi0EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$5>>2]|0;
 $9 = $3;
 $10 = (__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE8coeffRefEi($8,$9)|0);
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $3;
 $14 = (+__ZNK5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE5coeffIiEEdT_($12,$13));
 HEAPF64[$4>>3] = $14;
 __ZNK5Eigen8internal13div_assign_opIddE11assignCoeffERdRKd($7,$10,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal13div_assign_opIddE11assignCoeffERdRKd($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5;
 $7 = +HEAPF64[$6>>3];
 $8 = $4;
 $9 = +HEAPF64[$8>>3];
 $10 = $9 / $7;
 HEAPF64[$8>>3] = $10;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 $8 = Math_imul($6, $7)|0;
 $9 = (($5) + ($8<<3)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNK5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE5coeffIiEEdT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 8|0);
 $6 = $3;
 $7 = (+__ZNK5Eigen8internal15nullary_wrapperIdNS0_18scalar_constant_opIdEELb1ELb0ELb0EEclIiEEdRKS3_T_S8_($5,$4,$6,0));
 STACKTOP = sp;return (+$7);
}
function __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE11NullaryExprINS_8internal18scalar_constant_opIdEEEEKNS_14CwiseNullaryOpIT_S2_EEiiRKS9_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 $9 = $6;
 __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2EiiRKS3_($0,$7,$8,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2EiiRKS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($8);
 $9 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($8,$9);
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal18scalar_constant_opIdEC2ERKS2_($12,$13);
 $14 = $5;
 $15 = ($14|0)>=(0);
 $16 = $6;
 $17 = ($16|0)>=(0);
 $or$cond = $15 & $17;
 $18 = $6;
 $19 = (1)==($18|0);
 $or$cond3 = $or$cond & $19;
 if ($or$cond3) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((3318|0),(3467|0),74,(3507|0));
  // unreachable;
 }
}
function __ZN5Eigen10MatrixBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen7ProductINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2ERKSA_RKSC_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen11ProductImplINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0ENS_5DenseEEC2Ev($6);
 $7 = $4;
 __ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEC2ERKS9_($6,$7);
 $8 = ((($6)) + 88|0);
 $9 = $5;
 __ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEC2ERKS9_($8,$9);
 $10 = $4;
 $11 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4colsEv($10)|0);
 $12 = $5;
 $13 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($12)|0);
 $14 = ($11|0)==($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2150|0),(2290|0),97,(2323|0));
  // unreachable;
 }
}
function __ZN5Eigen11ProductImplINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0ENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal18dense_product_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0ELi5EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEC2ERKS9_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen9BlockImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ENS_5DenseEEC2ERKSB_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal18dense_product_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0ELi5EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_7ProductINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_7ProductINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_7ProductINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_7ProductINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ENS_5DenseEEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERKSB_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi1EEC2ERKSB_($4,$5);
 $6 = ((($4)) + 12|0);
 $7 = $3;
 $8 = ((($7)) + 12|0);
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEC2ERKS8_($6,$8);
 $9 = ((($4)) + 76|0);
 $10 = $3;
 $11 = ((($10)) + 76|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi0EEC2ERKS2_($9,$11);
 $12 = ((($4)) + 80|0);
 $13 = $3;
 $14 = ((($13)) + 80|0);
 ;HEAP32[$12>>2]=HEAP32[$14>>2]|0;HEAP32[$12+4>>2]=HEAP32[$14+4>>2]|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi1EEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2ERKSB_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen9BlockImplINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ENS_5DenseEEC2ERKSA_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$4>>2] = $6;
 $7 = ((($4)) + 4|0);
 $8 = $3;
 $9 = ((($8)) + 4|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2ERKS2_($7,$9);
 $10 = ((($4)) + 8|0);
 $11 = $3;
 $12 = ((($11)) + 8|0);
 ;HEAP32[$10>>2]=HEAP32[$12>>2]|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ENS_5DenseEEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERKSA_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1EEC2ERKSA_($4,$5);
 $6 = ((($4)) + 12|0);
 $7 = $3;
 $8 = ((($7)) + 12|0);
 __ZN5Eigen5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEC2ERKS7_($6,$8);
 $9 = ((($4)) + 52|0);
 $10 = $3;
 $11 = ((($10)) + 52|0);
 ;HEAP32[$9>>2]=HEAP32[$11>>2]|0;HEAP32[$9+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$9+8>>2]=HEAP32[$11+8>>2]|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1EEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2ERKSA_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$4>>2] = $6;
 $7 = ((($4)) + 4|0);
 $8 = $3;
 $9 = ((($8)) + 4|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2ERKS2_($7,$9);
 $10 = ((($4)) + 8|0);
 $11 = $3;
 $12 = ((($11)) + 8|0);
 ;HEAP32[$10>>2]=HEAP32[$12>>2]|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen11VectorBlockINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELin1EEC2ERS9_ii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEC2ERS8_iiii($8,$9,0,$10,1,$11);
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEC2ERS8_iiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $7;
 $14 = $8;
 $15 = $9;
 $16 = $10;
 $17 = $11;
 __ZN5Eigen9BlockImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ENS_5DenseEEC2ERS9_iiii($12,$13,$14,$15,$16,$17);
 $18 = $10;
 $19 = (1)==($18|0);
 if (!($19)) {
  ___assert_fail((4443|0),(2498|0),145,(2529|0));
  // unreachable;
 }
 $20 = $8;
 $21 = ($20|0)>=(0);
 $22 = $10;
 $23 = ($22|0)>=(0);
 $or$cond = $21 & $23;
 if (!($or$cond)) {
  ___assert_fail((4300|0),(2498|0),147,(2529|0));
  // unreachable;
 }
 $24 = $8;
 $25 = $7;
 $26 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($25)|0);
 $27 = $10;
 $28 = (($26) - ($27))|0;
 $29 = ($24|0)<=($28|0);
 $30 = $9;
 $31 = ($30|0)>=(0);
 $or$cond3 = $29 & $31;
 $32 = $11;
 $33 = ($32|0)>=(0);
 $or$cond5 = $or$cond3 & $33;
 if (!($or$cond5)) {
  ___assert_fail((4300|0),(2498|0),147,(2529|0));
  // unreachable;
 }
 $34 = $9;
 $35 = $7;
 $36 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($35)|0);
 $37 = $11;
 $38 = (($36) - ($37))|0;
 $39 = ($34|0)<=($38|0);
 if ($39) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4300|0),(2498|0),147,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen9BlockImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ENS_5DenseEEC2ERS9_iiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $7;
 $14 = $8;
 $15 = $9;
 $16 = $10;
 $17 = $11;
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERSA_iiii($12,$13,$14,$15,$16,$17);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERSA_iiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $7;
 $14 = (__ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1EE4dataEv($13)|0);
 $15 = $7;
 $16 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11innerStrideEv($15)|0);
 $17 = $9;
 $18 = Math_imul($16, $17)|0;
 $19 = (($14) + ($18<<3)|0);
 $20 = $7;
 $21 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11outerStrideEv($20)|0);
 $22 = $8;
 $23 = Math_imul($21, $22)|0;
 $24 = (($19) + ($23<<3)|0);
 $25 = $10;
 $26 = $11;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi1EEC2EPdii($12,$24,$25,$26);
 $27 = ((($12)) + 12|0);
 $28 = $7;
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEC2ERKS8_($27,$28);
 $29 = ((($12)) + 76|0);
 $30 = $8;
 __ZN5Eigen8internal19variable_if_dynamicIiLi0EEC2Ei($29,$30);
 $31 = ((($12)) + 80|0);
 $32 = $9;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($31,$32);
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ELb1EE4initEv($12);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi1EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2EPdii($8,$9,$10,$11);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11outerStrideEv($3)|0);
 $5 = ((($2)) + 84|0);
 HEAP32[$5>>2] = $4;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $6;
  $19 = (1)==($18|0);
  $or$cond = $17 & $19;
  $20 = $7;
  $21 = ($20|0)>=(0);
  $or$cond3 = $or$cond & $21;
  if (!($or$cond3)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi0EE11checkSanityISA_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi0EE11checkSanityISA_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductINS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductINS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EEENS0_13sub_assign_opIddEENS0_11Dense2DenseEvE3runERSA_RKSG_RKSI_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_7ProductINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal13sub_assign_opIddEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductINS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EEENS0_13sub_assign_opIddEENS0_11Dense2DenseEvE3runERSA_RKSG_RKSI_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen7ProductINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  ___assert_fail((4653|0),(4706|0),176,(2040|0));
  // unreachable;
 }
 $11 = $3;
 $12 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($11)|0);
 $13 = $4;
 $14 = (__ZNK5Eigen7ProductINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($13)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  $16 = $3;
  $17 = $4;
  $18 = (__ZNK5Eigen7ProductINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EE3lhsEv($17)|0);
  $19 = $4;
  $20 = (__ZNK5Eigen7ProductINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EE3rhsEv($19)|0);
  __ZN5Eigen8internal20generic_product_implINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEENS_10DenseShapeESE_Li5EE5subToINS2_IS9_Lin1ELin1ELb0EEEEEvRT_RKSB_RKSD_($16,$18,$20);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4653|0),(4706|0),176,(2040|0));
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7ProductINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7ProductINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 88|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal20generic_product_implINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEENS_10DenseShapeESE_Li5EE5subToINS2_IS9_Lin1ELin1ELb0EEEEEvRT_RKSB_RKSD_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp + 13|0;
 $7 = sp + 12|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26outer_product_selector_runINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEENS0_20generic_product_implISC_SE_NS_10DenseShapeESG_Li5EE3subEEEvRT_RKT0_RKT1_RKT2_RKNS0_10false_typeE($8,$9,$10,$6,$7);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EE3lhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7ProductINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS1_INS1_IS8_Li1ELin1ELb0EEELi1ELin1ELb0EEELi0EE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 88|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal26outer_product_selector_runINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEENS0_20generic_product_implISC_SE_NS_10DenseShapeESG_Li5EE3subEEEvRT_RKT0_RKT1_RKT2_RKNS0_10false_typeE($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(352|0);
 $10 = sp + 312|0;
 $11 = sp + 224|0;
 $16 = sp + 120|0;
 $17 = sp;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $18 = $7;
 __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERKSB_($10,$18);
 $19 = $6;
 __THREW__ = 0;
 invoke_vii(266,($11|0),($19|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 L1: do {
  if (!($21)) {
   $22 = $5;
   __THREW__ = 0;
   $23 = (invoke_ii(267,($22|0))|0);
   $24 = __THREW__; __THREW__ = 0;
   $25 = $24&1;
   if (!($25)) {
    $14 = $23;
    $15 = 0;
    while(1) {
     $26 = $15;
     $27 = $14;
     $28 = ($26|0)<($27|0);
     if (!($28)) {
      break;
     }
     $29 = $8;
     $30 = $5;
     $31 = $15;
     __THREW__ = 0;
     invoke_viii(268,($16|0),($30|0),($31|0));
     $32 = __THREW__; __THREW__ = 0;
     $33 = $32&1;
     if ($33) {
      break L1;
     }
     $34 = $15;
     __THREW__ = 0;
     $35 = (invoke_iiii(269,($10|0),0,($34|0))|0);
     $36 = __THREW__; __THREW__ = 0;
     $37 = $36&1;
     if ($37) {
      break L1;
     }
     __THREW__ = 0;
     invoke_viii(270,($17|0),($35|0),($11|0));
     $38 = __THREW__; __THREW__ = 0;
     $39 = $38&1;
     if ($39) {
      break L1;
     }
     __THREW__ = 0;
     invoke_viii(271,($29|0),($16|0),($17|0));
     $40 = __THREW__; __THREW__ = 0;
     $41 = $40&1;
     if ($41) {
      break L1;
     }
     $42 = $15;
     $43 = (($42) + 1)|0;
     $15 = $43;
    }
    __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($10);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 $44 = ___cxa_find_matching_catch_2()|0;
 $45 = tempRet0;
 $12 = $44;
 $13 = $45;
 __THREW__ = 0;
 invoke_vi(272,($10|0));
 $46 = __THREW__; __THREW__ = 0;
 $47 = $46&1;
 if ($47) {
  $50 = ___cxa_find_matching_catch_3(0|0)|0;
  $51 = tempRet0;
  ___clang_call_terminate($50);
  // unreachable;
 } else {
  $48 = $12;
  $49 = $13;
  ___resumeException($48|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERKNS2_ISA_Li1ELin1ELb0EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal20generic_product_implINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEENS_10DenseShapeESE_Li5EE3subclINS2_INS2_IS9_Lin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKSB_EEEEvRKT_RKT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5;
 $7 = $4;
 $8 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE18const_cast_derivedEv($7)|0);
 (__ZN5Eigen10MatrixBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEmIINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINSE_18scalar_constant_opIdEEKNS3_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS1_INS1_IS8_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEEEERSA_RKNS0_IT_EE($8,$6)|0);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE3colEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($5)|0);
 $7 = $4;
 __ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEC2ERS8_i($0,$6,$7);
 STACKTOP = sp;return;
}
function __ZN5EigenmlIdEENS_8internal9enable_ifILb1EKNS_13CwiseBinaryOpINS1_17scalar_product_opINS1_18promote_scalar_argIdT_Xsr5Eigen8internal14has_ReturnTypeINS_20ScalarBinaryOpTraitsIS6_dNS4_IS6_dEEEEEE5valueEE4typeEdEEKNS1_19plain_constant_typeINS_5BlockINSE_INSE_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEESB_E4typeEKSN_EEE4typeERKS6_RKNS_10MatrixBaseISN_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $5 = sp + 8|0;
 $6 = sp;
 $7 = sp + 32|0;
 $3 = $1;
 $4 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7derivedEv($8)|0);
 $10 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4rowsEv($9)|0);
 $11 = $4;
 $12 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7derivedEv($11)|0);
 $13 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4colsEv($12)|0);
 $14 = $3;
 __ZN5Eigen8internal18scalar_constant_opIdEC2ERKd($6,$14);
 __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2EiiRKS3_($5,$10,$13,$6);
 $15 = $4;
 $16 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7derivedEv($15)|0);
 __ZN5Eigen8internal17scalar_product_opIddEC2Ev($7);
 __ZN5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS1_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSC_INSC_INS_3MapINS7_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2ERSB_RSL_RKS3_($0,$5,$16,$7);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE9colStrideEv($6)|0);
 $10 = Math_imul($8, $9)|0;
 $11 = $4;
 $12 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE9rowStrideEv($6)|0);
 $13 = Math_imul($11, $12)|0;
 $14 = (($10) + ($13))|0;
 $15 = (($7) + ($14<<3)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ELb1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERKNS2_ISA_Li1ELin1ELb0EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEEC2ERKSB_($6,$7);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(273,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 do {
  if (!($11)) {
   $12 = $9;
   $13 = (($12>>>0) % 1)&-1;
   $14 = ($13|0)==(0);
   if ($14) {
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiii(162,(3035|0),(3198|0),1107,(3238|0));
    $15 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $4 = $16;
 $5 = $17;
 __THREW__ = 0;
 invoke_vi(274,($6|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $4;
  $21 = $5;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(273,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(275,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(121,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(276,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(166,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(277,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi1EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11innerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 84|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEmIINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINSE_18scalar_constant_opIdEEKNS3_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS1_INS1_IS8_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEEEERSA_RKNS0_IT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZN5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE7derivedEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS2_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE7derivedEv($7)|0);
 __ZN5Eigen8internal13sub_assign_opIddEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISU_EE5valueEPvE4typeE($6,$8,$4,0);
 $9 = (__ZN5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE7derivedEv($5)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZN5Eigen8internal15call_assignmentINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISU_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS2_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_13sub_assign_opIddEENS0_11Dense2DenseEvE3runERSB_RKSP_RKSR_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_13sub_assign_opIddEENS0_11Dense2DenseEvE3runERSB_RKSP_RKSR_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEEEEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEEEEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEELb0EE3runERKSB_RKSP_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $6 = sp;
 $9 = sp + 56|0;
 $10 = sp + 40|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2ERKSN_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(278,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(279,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(280,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(281,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(282,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(283,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(283,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(284,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEELb0EE3runERKSB_RKSP_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2ERKSN_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_10IndexBasedESO_ddEC2ERKSN_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4rowsEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS1_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSC_INSC_INS_3MapINS7_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4rowsEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  ___assert_fail((4653|0),(2091|0),710,(2132|0));
  // unreachable;
 }
 $11 = $3;
 $12 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4colsEv($11)|0);
 $13 = $4;
 $14 = (__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS1_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSC_INSC_INS_3MapINS7_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4colsEv($13)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4653|0),(2091|0),710,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EEC2ERKNS2_ISA_Lin1ELi1ELb1EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEENS2_INS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS5_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS3_INS3_ISA_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEEEENS0_13sub_assign_opIddEELi0EEC2ERSD_RKSS_RKSU_RSC_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEENS3_INS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS6_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS4_INS4_ISB_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEEEENS0_13sub_assign_opIddEELi0EEELi1ELi0EE3runERSW_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEENS2_INS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS5_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS3_INS3_ISA_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEEEENS0_13sub_assign_opIddEELi0EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEENS2_INS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS5_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS3_INS3_ISA_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEEEENS0_13sub_assign_opIddEELi0EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_10IndexBasedESO_ddED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_10IndexBasedESO_ddEC2ERKSN_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(285,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  label = 8;
 } else {
  __THREW__ = 0;
  invoke_vii(151,($6|0),($8|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if ($12) {
   label = 8;
  } else {
   $13 = ((($6)) + 8|0);
   $14 = $3;
   __THREW__ = 0;
   $15 = (invoke_ii(286,($14|0))|0);
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if ($17) {
    label = 8;
   } else {
    __THREW__ = 0;
    invoke_vii(287,($13|0),($15|0));
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if ($19) {
     label = 8;
    } else {
     $20 = ((($6)) + 24|0);
     $21 = $3;
     __THREW__ = 0;
     $22 = (invoke_ii(288,($21|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      __THREW__ = 0;
      invoke_vii(238,($20|0),($22|0));
      $25 = __THREW__; __THREW__ = 0;
      $26 = $25&1;
      if (!($26)) {
       STACKTOP = sp;return;
      }
     }
     $29 = ___cxa_find_matching_catch_2()|0;
     $30 = tempRet0;
     $4 = $29;
     $5 = $30;
     __THREW__ = 0;
     invoke_vi(289,($13|0));
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      $37 = ___cxa_find_matching_catch_3(0|0)|0;
      $38 = tempRet0;
      ___clang_call_terminate($37);
      // unreachable;
     }
    }
   }
  }
 }
 if ((label|0) == 8) {
  $27 = ___cxa_find_matching_catch_2()|0;
  $28 = tempRet0;
  $4 = $27;
  $5 = $28;
 }
 __THREW__ = 0;
 invoke_vi(290,($6|0));
 $33 = __THREW__; __THREW__ = 0;
 $34 = $33&1;
 if ($34) {
  $37 = ___cxa_find_matching_catch_3(0|0)|0;
  $38 = tempRet0;
  ___clang_call_terminate($37);
  // unreachable;
 } else {
  $35 = $4;
  $36 = $5;
  ___resumeException($35|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS1_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSC_INSC_INS_3MapINS7_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7functorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 112|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS1_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSC_INSC_INS_3MapINS7_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE3lhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERS9_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS8_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS1_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSC_INSC_INS_3MapINS7_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(291,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  __THREW__ = 0;
  invoke_vii(180,($6|0),($8|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $4 = $13;
 $5 = $14;
 __THREW__ = 0;
 invoke_vi(292,($6|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $4;
  $18 = $5;
  ___resumeException($17|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7functorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS1_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSC_INSC_INS_3MapINS7_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS1_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSC_INSC_INS_3MapINS7_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EEC2ERKNS2_ISA_Lin1ELi1ELb1EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEC2ERKSB_($6,$7);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(293,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 do {
  if (!($11)) {
   $12 = $9;
   $13 = (($12>>>0) % 1)&-1;
   $14 = ($13|0)==(0);
   if ($14) {
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiii(162,(3035|0),(3198|0),1107,(3238|0));
    $15 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $4 = $16;
 $5 = $17;
 __THREW__ = 0;
 invoke_vi(294,($6|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $4;
  $21 = $5;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(293,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(295,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(166,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(296,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(121,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(297,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi1EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11innerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 84|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE11innerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEENS2_INS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS5_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS3_INS3_ISA_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEEEENS0_13sub_assign_opIddEELi0EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEENS2_INS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS5_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS3_INS3_ISA_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEEEENS0_13sub_assign_opIddEELi0EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$5>>2]|0;
 $9 = $3;
 $10 = (__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE8coeffRefEi($8,$9)|0);
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $3;
 $14 = (+__ZNK5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_10IndexBasedESO_ddE5coeffEi($12,$13));
 HEAPF64[$4>>3] = $14;
 __ZNK5Eigen8internal13sub_assign_opIddE11assignCoeffERdRKd($7,$10,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen8internal13sub_assign_opIddE11assignCoeffERdRKd($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5;
 $7 = +HEAPF64[$6>>3];
 $8 = $4;
 $9 = +HEAPF64[$8>>3];
 $10 = $9 - $7;
 HEAPF64[$8>>3] = $10;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 $8 = Math_imul($6, $7)|0;
 $9 = (($5) + ($8<<3)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNK5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_10IndexBasedESO_ddE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 8|0);
 $7 = $3;
 $8 = (+__ZNK5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE5coeffIiEEdT_($6,$7));
 HEAPF64[$4>>3] = $8;
 $9 = ((($5)) + 24|0);
 $10 = $3;
 $11 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE5coeffEi($9,$10)|0);
 $12 = (+__ZNK5Eigen8internal17scalar_product_opIddEclERKdS4_($5,$4,$11));
 STACKTOP = sp;return (+$12);
}
function __ZNK5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE5coeffIiEEdT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 8|0);
 $6 = $3;
 $7 = (+__ZNK5Eigen8internal15nullary_wrapperIdNS0_18scalar_constant_opIdEELb1ELb0ELb0EEclIiEEdRKS3_T_S8_($5,$4,$6,0));
 STACKTOP = sp;return (+$7);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 $8 = Math_imul($6, $7)|0;
 $9 = (($5) + ($8<<3)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_10IndexBasedESO_ddED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 24|0);
 __THREW__ = 0;
 invoke_vi(245,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 do {
  if ($7) {
   $11 = ___cxa_find_matching_catch_2()|0;
   $12 = tempRet0;
   $2 = $11;
   $3 = $12;
   $13 = ((($4)) + 8|0);
   __THREW__ = 0;
   invoke_vi(289,($13|0));
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $22 = ___cxa_find_matching_catch_3(0|0)|0;
    $23 = tempRet0;
    ___clang_call_terminate($22);
    // unreachable;
   }
  } else {
   $8 = ((($4)) + 8|0);
   __THREW__ = 0;
   invoke_vi(289,($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $16 = ___cxa_find_matching_catch_2()|0;
    $17 = tempRet0;
    $2 = $16;
    $3 = $17;
    break;
   } else {
    __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEED2Ev($4);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(290,($4|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $2;
  $21 = $3;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEC2ERS8_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen9BlockImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ENS_5DenseEEC2ERS9_i($6,$7,$8);
 $9 = $5;
 $10 = ($9|0)>=(0);
 if (!($10)) {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
 $11 = $5;
 $12 = $4;
 $13 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($12)|0);
 $14 = ($11|0)<($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen9BlockImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ENS_5DenseEEC2ERS9_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EEC2ERSA_i($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EEC2ERSA_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1EE4dataEv($7)|0);
 $9 = $5;
 $10 = $4;
 $11 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11outerStrideEv($10)|0);
 $12 = Math_imul($9, $11)|0;
 $13 = (($8) + ($12<<3)|0);
 $14 = $4;
 $15 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($14)|0);
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi1EEC2EPdii($6,$13,$15,1);
 $16 = ((($6)) + 12|0);
 $17 = $4;
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERKS8_($16,$17);
 $18 = ((($6)) + 76|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($18,0);
 $19 = ((($6)) + 80|0);
 $20 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($19,$20);
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE4initEv($6);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 60|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi1EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EEC2EPdii($8,$9,$10,$11);
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen9BlockImplINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ENS_5DenseEEC2ERKSA_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11outerStrideEv($3)|0);
 $5 = ((($2)) + 84|0);
 HEAP32[$5>>2] = $4;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $7;
  $19 = ($18|0)>=(0);
  $or$cond = $17 & $19;
  $20 = $7;
  $21 = (1)==($20|0);
  $or$cond3 = $or$cond & $21;
  if (!($or$cond3)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE11checkSanityISA_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE11checkSanityISA_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ENS_5DenseEEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EEC2ERKSA_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 ;HEAP32[$4>>2]=HEAP32[$5>>2]|0;HEAP32[$4+4>>2]=HEAP32[$5+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[$5+8>>2]|0;
 $6 = ((($4)) + 12|0);
 $7 = $3;
 $8 = ((($7)) + 12|0);
 __ZN5Eigen5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEC2ERKS7_($6,$8);
 $9 = ((($4)) + 52|0);
 $10 = $3;
 $11 = ((($10)) + 52|0);
 ;HEAP32[$9>>2]=HEAP32[$11>>2]|0;HEAP32[$9+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$9+8>>2]=HEAP32[$11+8>>2]|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2EiiRKS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($8);
 $9 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($8,$9);
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal18scalar_constant_opIdEC2ERKS2_($12,$13);
 $14 = $5;
 $15 = ($14|0)>=(0);
 $16 = $6;
 $17 = ($16|0)>=(0);
 $or$cond = $15 & $17;
 $18 = $6;
 $19 = (1)==($18|0);
 $or$cond3 = $or$cond & $19;
 if ($or$cond3) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((3318|0),(3467|0),74,(3507|0));
  // unreachable;
 }
}
function __ZN5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS1_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSC_INSC_INS_3MapINS7_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2ERSB_RSL_RKS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen17CwiseBinaryOpImplINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS1_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSC_INSC_INS_3MapINS7_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_5DenseEEC2Ev($8);
 $9 = ((($8)) + 8|0);
 $10 = $5;
 __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS7_($9,$10);
 $11 = ((($8)) + 24|0);
 $12 = $6;
 __ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEC2ERKS9_($11,$12);
 $13 = ((($8)) + 112|0);
 $14 = $7;
 __ZN5Eigen8internal17scalar_product_opIddEC2ERKS2_($13,$14);
 $15 = $5;
 $16 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($15)|0);
 $17 = $6;
 $18 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4rowsEv($17)|0);
 $19 = ($16|0)==($18|0);
 if (!($19)) {
  ___assert_fail((2820|0),(2877|0),110,(2916|0));
  // unreachable;
 }
 $20 = $5;
 $21 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($20)|0);
 $22 = $6;
 $23 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi0EE4colsEv($22)|0);
 $24 = ($21|0)==($23|0);
 if ($24) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2820|0),(2877|0),110,(2916|0));
  // unreachable;
 }
}
function __ZN5Eigen10MatrixBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen17CwiseBinaryOpImplINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS1_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSC_INSC_INS_3MapINS7_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS2_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 ;HEAP32[$4>>2]=HEAP32[$5>>2]|0;
 $6 = ((($4)) + 4|0);
 $7 = $3;
 $8 = ((($7)) + 4|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2ERKS2_($6,$8);
 $9 = ((($4)) + 8|0);
 $10 = $3;
 $11 = ((($10)) + 8|0);
 __ZN5Eigen8internal18scalar_constant_opIdEC2ERKS2_($9,$11);
 STACKTOP = sp;return;
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen10MatrixBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS2_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS2_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS2_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE9colStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE9rowStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ELb1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ENS_5DenseEEC2ERS8_iiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $7;
 $14 = $8;
 $15 = $9;
 $16 = $10;
 $17 = $11;
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EEC2ERS9_iiii($12,$13,$14,$15,$16,$17);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EEC2ERS9_iiii($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $7;
 $14 = (__ZN5Eigen7MapBaseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1EE4dataEv($13)|0);
 $15 = $7;
 $16 = (__ZNK5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE11innerStrideEv($15)|0);
 $17 = $8;
 $18 = Math_imul($16, $17)|0;
 $19 = (($14) + ($18<<3)|0);
 $20 = $7;
 $21 = (__ZNK5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE11outerStrideEv($20)|0);
 $22 = $9;
 $23 = Math_imul($21, $22)|0;
 $24 = (($19) + ($23<<3)|0);
 $25 = $10;
 $26 = $11;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1EEC2EPdii($12,$24,$25,$26);
 $27 = ((($12)) + 12|0);
 $28 = $7;
 __ZN5Eigen5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEC2ERKS7_($27,$28);
 $29 = ((($12)) + 52|0);
 $30 = $8;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($29,$30);
 $31 = ((($12)) + 56|0);
 $32 = $9;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($31,$32);
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE4initEv($12);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EEC2EPdii($8,$9,$10,$11);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0ELb1EE11outerStrideEv($3)|0);
 $5 = ((($2)) + 60|0);
 HEAP32[$5>>2] = $4;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $7;
  $19 = ($18|0)>=(0);
  $or$cond = $17 & $19;
  if (!($or$cond)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE11checkSanityIS9_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE11checkSanityIS9_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEC2ERS8_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen9BlockImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ENS_5DenseEEC2ERS9_i($6,$7,$8);
 $9 = $5;
 $10 = ($9|0)>=(0);
 if (!($10)) {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
 $11 = $5;
 $12 = $4;
 $13 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($12)|0);
 $14 = ($11|0)<($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen9BlockImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ENS_5DenseEEC2ERS9_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERSA_i($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERSA_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1EE4dataEv($7)|0);
 $9 = $5;
 $10 = $4;
 $11 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11innerStrideEv($10)|0);
 $12 = Math_imul($9, $11)|0;
 $13 = (($8) + ($12<<3)|0);
 $14 = $4;
 $15 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($14)|0);
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1EEC2EPdii($6,$13,1,$15);
 $16 = ((($6)) + 12|0);
 $17 = $4;
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERKS8_($16,$17);
 $18 = ((($6)) + 76|0);
 $19 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($18,$19);
 $20 = ((($6)) + 80|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($20,0);
 __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE4initEv($6);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2EPdii($8,$9,$10,$11);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11innerStrideEv($3)|0);
 $5 = ((($2)) + 84|0);
 HEAP32[$5>>2] = $4;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $6;
  $19 = (1)==($18|0);
  $or$cond = $17 & $19;
  $20 = $7;
  $21 = ($20|0)>=(0);
  $or$cond3 = $or$cond & $21;
  if (!($or$cond3)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE11checkSanityISA_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE11checkSanityISA_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal15call_assignmentINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEESB_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISG_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEESB_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEESB_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEESB_NS0_14swap_assign_opIdEENS0_11Dense2DenseEvE3runERSB_RKSB_RKSD_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEESB_NS0_14swap_assign_opIdEENS0_11Dense2DenseEvE3runERSB_RKSB_RKSD_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEESB_EEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEESB_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEESB_EEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEESB_Lb0EE3runERKSB_SE_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEESB_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 36|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERKSB_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(298,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(299,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(300,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(301,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(302,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(303,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(303,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(303,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEESB_Lb0EE3runERKSB_SE_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERKNS2_ISA_Li1ELin1ELb0EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEESB_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  ___assert_fail((4653|0),(2091|0),710,(2132|0));
  // unreachable;
 }
 $11 = $3;
 $12 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($11)|0);
 $13 = $4;
 $14 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($13)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4653|0),(2091|0),710,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESD_NS0_14swap_assign_opIdEELi0EEC2ERSD_RKSD_RKSF_RSC_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 $12 = $7;
 $13 = $8;
 $14 = $9;
 __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESD_NS0_14swap_assign_opIdEELi1EEC2ERSD_RKSD_RKSF_RSC_($10,$11,$12,$13,$14);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESE_NS0_14swap_assign_opIdEELi0EEELi1ELi0EE3runERSH_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESD_NS0_14swap_assign_opIdEELi1EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESD_NS0_14swap_assign_opIdEELi1EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERKNS2_ISA_Li1ELin1ELb0EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEEC2ERKSB_($6,$7);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(304,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 do {
  if (!($11)) {
   $12 = $9;
   $13 = (($12>>>0) % 1)&-1;
   $14 = ($13|0)==(0);
   if ($14) {
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiii(162,(3035|0),(3198|0),1107,(3238|0));
    $15 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $4 = $16;
 $5 = $17;
 __THREW__ = 0;
 invoke_vi(305,($6|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $4;
  $21 = $5;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEEC2ERKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(304,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(306,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(121,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(307,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(166,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(308,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11outerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 84|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESD_NS0_14swap_assign_opIdEELi1EEC2ERSD_RKSD_RKSF_RSC_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESD_NS0_14swap_assign_opIdEELi1EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESD_NS0_14swap_assign_opIdEELi1EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$4>>2]|0;
 $8 = $3;
 $9 = (__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE8coeffRefEi($7,$8)|0);
 $10 = ((($4)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE5coeffEi($11,$12)|0);
 __ZNK5Eigen8internal14swap_assign_opIdE11assignCoeffERdRKd($6,$9,$13);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = ((($4)) + 4|0);
 $8 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($7)|0);
 $9 = Math_imul($6, $8)|0;
 $10 = (($5) + ($9<<3)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = ((($4)) + 4|0);
 $8 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($7)|0);
 $9 = Math_imul($6, $8)|0;
 $10 = (($5) + ($9<<3)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZN5Eigen8internal15block_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen14TriangularViewINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EEC2ERS9_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen18TriangularViewImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5ENS_5DenseEEC2Ev($4);
 $5 = $3;
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERKS8_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen18TriangularViewImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5ENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen14TriangularBaseINS_14TriangularViewINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen14TriangularBaseINS_14TriangularViewINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen18TriangularViewImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5ENS_5DenseEE12solveInPlaceILi1ES9_EEvRKNS_10MatrixBaseIT0_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE18const_cast_derivedEv($7)|0);
 $4 = $8;
 $9 = (__ZNK5Eigen14TriangularBaseINS_14TriangularViewINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EEEE7derivedEv($6)|0);
 $10 = (__ZNK5Eigen14TriangularViewINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EE4colsEv($9)|0);
 $11 = (__ZNK5Eigen14TriangularBaseINS_14TriangularViewINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EEEE7derivedEv($6)|0);
 $12 = (__ZNK5Eigen14TriangularViewINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EE4rowsEv($11)|0);
 $13 = ($10|0)==($12|0);
 if (!($13)) {
  ___assert_fail((4749|0),(4903|0),170,(4944|0));
  // unreachable;
 }
 $14 = (__ZNK5Eigen14TriangularBaseINS_14TriangularViewINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EEEE7derivedEv($6)|0);
 $15 = (__ZNK5Eigen14TriangularViewINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EE4colsEv($14)|0);
 $16 = $4;
 $17 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($16)|0);
 $18 = ($15|0)==($17|0);
 if ($18) {
  $19 = $4;
  $5 = $19;
  $20 = (__ZNK5Eigen14TriangularBaseINS_14TriangularViewINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EEEE7derivedEv($6)|0);
  $21 = (__ZNK5Eigen14TriangularViewINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EE16nestedExpressionEv($20)|0);
  $22 = $5;
  __ZN5Eigen8internal26triangular_solver_selectorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li1ELi5ELi0ELin1EE3runERKSA_RSA_($21,$22);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4749|0),(4903|0),170,(4944|0));
  // unreachable;
 }
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen14TriangularBaseINS_14TriangularViewINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen14TriangularViewINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen14TriangularViewINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal26triangular_solver_selectorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li1ELi5ELi0ELin1EE3runERKSA_RSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $7 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $10 = $2;
 $11 = (__ZN5Eigen8internal11blas_traitsINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7extractERKSA_($10)|0);
 $4 = $11;
 $12 = $2;
 $13 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($12)|0);
 $5 = $13;
 $14 = $3;
 $15 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($14)|0);
 $6 = $15;
 $16 = $3;
 $17 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($16)|0);
 $18 = $3;
 $19 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($18)|0);
 $20 = $5;
 __ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi4ELb0EEC2Eiiiib($7,$17,$19,$20,1,0);
 $21 = $5;
 $22 = $6;
 $23 = $4;
 __THREW__ = 0;
 $24 = (invoke_iiii(309,($23|0),0,0)|0);
 $25 = __THREW__; __THREW__ = 0;
 $26 = $25&1;
 if (!($26)) {
  $27 = $4;
  __THREW__ = 0;
  $28 = (invoke_ii(310,($27|0))|0);
  $29 = __THREW__; __THREW__ = 0;
  $30 = $29&1;
  if (!($30)) {
   $31 = $3;
   __THREW__ = 0;
   $32 = (invoke_iiii(311,($31|0),0,0)|0);
   $33 = __THREW__; __THREW__ = 0;
   $34 = $33&1;
   if (!($34)) {
    $35 = $3;
    __THREW__ = 0;
    $36 = (invoke_ii(310,($35|0))|0);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if (!($38)) {
     __THREW__ = 0;
     invoke_viiiiiii(312,($21|0),($22|0),($24|0),($28|0),($32|0),($36|0),($7|0));
     $39 = __THREW__; __THREW__ = 0;
     $40 = $39&1;
     if (!($40)) {
      __ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi4ELb0EED2Ev($7);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $41 = ___cxa_find_matching_catch_2()|0;
 $42 = tempRet0;
 $8 = $41;
 $9 = $42;
 __THREW__ = 0;
 invoke_vi(313,($7|0));
 $43 = __THREW__; __THREW__ = 0;
 $44 = $43&1;
 if ($44) {
  $47 = ___cxa_find_matching_catch_3(0|0)|0;
  $48 = tempRet0;
  ___clang_call_terminate($47);
  // unreachable;
 } else {
  $45 = $8;
  $46 = $9;
  ___resumeException($45|0);
  // unreachable;
 }
}
function __ZNK5Eigen14TriangularViewINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELj5EE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal11blas_traitsINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7extractERKSA_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi4ELb0EEC2Eiiiib($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $12 = sp;
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $13 = $5&1;
 $11 = $13;
 $14 = $6;
 __ZN5Eigen8internal15level3_blockingIddEC2Ev($14);
 $15 = $7;
 $16 = ((($14)) + 8|0);
 HEAP32[$16>>2] = $15;
 $17 = $8;
 $18 = ((($14)) + 12|0);
 HEAP32[$18>>2] = $17;
 $19 = $9;
 $20 = ((($14)) + 16|0);
 HEAP32[$20>>2] = $19;
 $21 = $11;
 $22 = $21&1;
 if ($22) {
  $23 = ((($14)) + 16|0);
  $24 = ((($14)) + 8|0);
  $25 = ((($14)) + 12|0);
  $26 = $10;
  __ZN5Eigen8internal27computeProductBlockingSizesIddLi4EiEEvRT2_S3_S3_S2_($23,$24,$25,$26);
 } else {
  $27 = ((($14)) + 12|0);
  $28 = HEAP32[$27>>2]|0;
  HEAP32[$12>>2] = $28;
  $29 = ((($14)) + 16|0);
  $30 = ((($14)) + 8|0);
  $31 = $10;
  __ZN5Eigen8internal27computeProductBlockingSizesIddLi4EiEEvRT2_S3_S3_S2_($29,$30,$12,$31);
 }
 $32 = ((($14)) + 8|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = ((($14)) + 16|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = Math_imul($33, $35)|0;
 $37 = ((($14)) + 20|0);
 HEAP32[$37>>2] = $36;
 $38 = ((($14)) + 16|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($14)) + 12|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = Math_imul($39, $41)|0;
 $43 = ((($14)) + 24|0);
 HEAP32[$43>>2] = $42;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal23triangular_solve_matrixIdiLi1ELi5ELb0ELi0ELi0EE3runEiiPKdiPdiRNS0_15level3_blockingIddEE($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$alloca_mul = 0, $$alloca_mul200 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0.0, $187 = 0, $188 = 0.0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0;
 var $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0;
 var $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0.0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0;
 var $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0.0, $448 = 0.0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0;
 var $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0.0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0;
 var $48 = 0, $480 = 0, $481 = 0.0, $482 = 0.0, $483 = 0, $484 = 0, $485 = 0, $486 = 0.0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0;
 var $498 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;
 var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;
 var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;
 var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;
 var $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0;
 var $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0;
 var $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0;
 var $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0;
 var $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0;
 var $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0;
 var $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(864|0);
 $51 = sp + 64|0;
 $54 = sp + 850|0;
 $60 = sp + 56|0;
 $63 = sp + 849|0;
 $81 = sp + 48|0;
 $84 = sp + 848|0;
 $99 = sp + 40|0;
 $102 = sp + 847|0;
 $108 = sp + 32|0;
 $111 = sp + 846|0;
 $117 = sp + 24|0;
 $120 = sp + 845|0;
 $128 = sp + 16|0;
 $131 = sp + 844|0;
 $141 = sp + 356|0;
 $146 = sp + 336|0;
 $149 = sp + 320|0;
 $150 = sp + 312|0;
 $151 = sp + 308|0;
 $152 = sp + 304|0;
 $153 = sp + 300|0;
 $157 = sp + 276|0;
 $161 = sp + 252|0;
 $162 = sp + 843|0;
 $163 = sp + 842|0;
 $164 = sp + 841|0;
 $165 = sp + 840|0;
 $166 = sp + 248|0;
 $167 = sp + 244|0;
 $168 = sp + 240|0;
 $169 = sp + 236|0;
 $170 = sp + 232|0;
 $171 = sp + 228|0;
 $174 = sp + 216|0;
 $177 = sp + 204|0;
 $180 = sp + 192|0;
 $181 = sp + 188|0;
 $195 = sp + 136|0;
 $197 = sp + 120|0;
 $198 = sp + 112|0;
 $203 = sp + 88|0;
 $204 = sp + 80|0;
 $205 = sp + 72|0;
 HEAP32[$141>>2] = $0;
 $142 = $1;
 $143 = $2;
 $144 = $3;
 $145 = $4;
 HEAP32[$146>>2] = $5;
 $147 = $6;
 $206 = $142;
 $148 = $206;
 $207 = $143;
 $208 = $144;
 $138 = $149;
 $139 = $207;
 $140 = $208;
 $209 = $138;
 $210 = $139;
 $211 = $140;
 $135 = $209;
 $136 = $210;
 $137 = $211;
 $212 = $135;
 $213 = $136;
 HEAP32[$212>>2] = $213;
 $214 = ((($212)) + 4|0);
 $215 = $137;
 HEAP32[$214>>2] = $215;
 $216 = $145;
 $217 = HEAP32[$146>>2]|0;
 $132 = $150;
 $133 = $216;
 $134 = $217;
 $218 = $132;
 $219 = $133;
 HEAP32[$218>>2] = $219;
 $220 = ((($218)) + 4|0);
 $221 = $134;
 HEAP32[$220>>2] = $221;
 $222 = $147;
 $223 = (__ZNK5Eigen8internal15level3_blockingIddE2kcEv($222)|0);
 HEAP32[$151>>2] = $223;
 $224 = $147;
 $225 = (__ZNK5Eigen8internal15level3_blockingIddE2mcEv($224)|0);
 HEAP32[$153>>2] = $225;
 $129 = $141;
 $130 = $153;
 $226 = $129;
 $227 = $130;
 ;HEAP8[$128>>0]=HEAP8[$131>>0]|0;
 $126 = $226;
 $127 = $227;
 $228 = $127;
 $229 = $126;
 $123 = $128;
 $124 = $228;
 $125 = $229;
 $230 = $124;
 $231 = HEAP32[$230>>2]|0;
 $232 = $125;
 $233 = HEAP32[$232>>2]|0;
 $234 = ($231|0)<($233|0);
 $235 = $127;
 $236 = $126;
 $237 = $234 ? $235 : $236;
 $238 = HEAP32[$237>>2]|0;
 HEAP32[$152>>2] = $238;
 $239 = HEAP32[$151>>2]|0;
 $240 = HEAP32[$152>>2]|0;
 $241 = Math_imul($239, $240)|0;
 $154 = $241;
 $242 = HEAP32[$151>>2]|0;
 $243 = $148;
 $244 = Math_imul($242, $243)|0;
 $155 = $244;
 $245 = $154;
 $122 = $245;
 $246 = $122;
 $247 = ($246>>>0)>(536870911);
 if ($247) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $248 = $147;
 $249 = (__ZN5Eigen8internal15level3_blockingIddE6blockAEv($248)|0);
 $250 = ($249|0)!=(0|0);
 if ($250) {
  $251 = $147;
  $252 = (__ZN5Eigen8internal15level3_blockingIddE6blockAEv($251)|0);
  $267 = $252;
 } else {
  $253 = $154;
  $254 = $253<<3;
  $255 = ($254>>>0)<=(131072);
  $256 = $154;
  $257 = $256<<3;
  if ($255) {
   $258 = (($257) + 16)|0;
   $259 = (($258) - 1)|0;
   $$alloca_mul = $259;
   $260 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
   $261 = $260;
   $262 = (($261) + 16)|0;
   $263 = (($262) - 1)|0;
   $264 = $263 & -16;
   $265 = $264;
   $708 = $265;
  } else {
   $266 = (__ZN5Eigen8internal14aligned_mallocEj($257)|0);
   $708 = $266;
  }
  $267 = $708;
 }
 $156 = $267;
 $268 = $147;
 $269 = (__ZN5Eigen8internal15level3_blockingIddE6blockAEv($268)|0);
 $270 = ($269|0)==(0|0);
 $271 = $156;
 $272 = $270 ? $271 : 0;
 $273 = $154;
 $274 = $154;
 $275 = $274<<3;
 $276 = ($275>>>0)>(131072);
 __ZN5Eigen8internal28aligned_stack_memory_handlerIdEC2EPdjb($157,$272,$273,$276);
 $277 = $155;
 $121 = $277;
 $278 = $121;
 $279 = ($278>>>0)>(536870911);
 if ($279) {
  __THREW__ = 0;
  invoke_v(183);
  $280 = __THREW__; __THREW__ = 0;
  $281 = $280&1;
  if ($281) {
   label = 37;
  } else {
   label = 11;
  }
 } else {
  label = 11;
 }
 L14: do {
  if ((label|0) == 11) {
   $282 = $147;
   __THREW__ = 0;
   $283 = (invoke_ii(184,($282|0))|0);
   $284 = __THREW__; __THREW__ = 0;
   $285 = $284&1;
   if ($285) {
    label = 37;
   } else {
    $286 = ($283|0)!=(0|0);
    if ($286) {
     $287 = $147;
     __THREW__ = 0;
     $288 = (invoke_ii(184,($287|0))|0);
     $289 = __THREW__; __THREW__ = 0;
     $290 = $289&1;
     if ($290) {
      label = 37;
      break;
     } else {
      $307 = $288;
     }
    } else {
     $291 = $155;
     $292 = $291<<3;
     $293 = ($292>>>0)<=(131072);
     $294 = $155;
     $295 = $294<<3;
     if ($293) {
      $296 = (($295) + 16)|0;
      $297 = (($296) - 1)|0;
      $$alloca_mul200 = $297;
      $298 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul200)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul200)|0)+15)&-16)|0);;
      $299 = $298;
      $300 = (($299) + 16)|0;
      $301 = (($300) - 1)|0;
      $302 = $301 & -16;
      $303 = $302;
      $709 = $303;
     } else {
      __THREW__ = 0;
      $304 = (invoke_ii(185,($295|0))|0);
      $305 = __THREW__; __THREW__ = 0;
      $306 = $305&1;
      if ($306) {
       label = 37;
       break;
      } else {
       $709 = $304;
      }
     }
     $307 = $709;
    }
    $160 = $307;
    $308 = $147;
    __THREW__ = 0;
    $309 = (invoke_ii(184,($308|0))|0);
    $310 = __THREW__; __THREW__ = 0;
    $311 = $310&1;
    if ($311) {
     label = 37;
    } else {
     $312 = ($309|0)==(0|0);
     $313 = $160;
     $314 = $312 ? $313 : 0;
     $315 = $155;
     $316 = $155;
     $317 = $316<<3;
     $318 = ($317>>>0)>(131072);
     __THREW__ = 0;
     invoke_viiii(186,($161|0),($314|0),($315|0),($318|0));
     $319 = __THREW__; __THREW__ = 0;
     $320 = $319&1;
     if ($320) {
      label = 37;
     } else {
      __THREW__ = 0;
      invoke_viiii(314,0,($166|0),($167|0),($168|0));
      $321 = __THREW__; __THREW__ = 0;
      $322 = $321&1;
      L27: do {
       if (!($322)) {
        $323 = $148;
        $324 = ($323|0)>(0);
        if ($324) {
         $325 = HEAP32[$167>>2]|0;
         $118 = $146;
         $119 = $141;
         $326 = $118;
         $327 = $119;
         ;HEAP8[$117>>0]=HEAP8[$120>>0]|0;
         $115 = $326;
         $116 = $327;
         $328 = $115;
         $329 = $116;
         $112 = $117;
         $113 = $328;
         $114 = $329;
         $330 = $113;
         $331 = HEAP32[$330>>2]|0;
         $332 = $114;
         $333 = HEAP32[$332>>2]|0;
         $334 = ($331|0)<($333|0);
         $335 = $116;
         $336 = $115;
         $337 = $334 ? $335 : $336;
         $338 = HEAP32[$337>>2]|0;
         $339 = $338<<5;
         $340 = (($325>>>0) / ($339>>>0))&-1;
         $341 = $340;
        } else {
         $341 = 0;
        }
        HEAP32[$169>>2] = $341;
        $342 = HEAP32[$169>>2]|0;
        $343 = (($342|0) / 4)&-1;
        $344 = $343<<2;
        HEAP32[$170>>2] = $344;
        HEAP32[$171>>2] = 4;
        $109 = $170;
        $110 = $171;
        $345 = $109;
        $346 = $110;
        ;HEAP8[$108>>0]=HEAP8[$111>>0]|0;
        $106 = $345;
        $107 = $346;
        $347 = $106;
        $348 = $107;
        $103 = $108;
        $104 = $347;
        $105 = $348;
        $349 = $104;
        $350 = HEAP32[$349>>2]|0;
        $351 = $105;
        $352 = HEAP32[$351>>2]|0;
        $353 = ($350|0)<($352|0);
        $354 = $107;
        $355 = $106;
        $356 = $353 ? $354 : $355;
        $357 = HEAP32[$356>>2]|0;
        HEAP32[$169>>2] = $357;
        $172 = 0;
        while(1) {
         $358 = $172;
         $359 = HEAP32[$141>>2]|0;
         $360 = ($358|0)<($359|0);
         if (!($360)) {
          break;
         }
         $361 = HEAP32[$141>>2]|0;
         $362 = $172;
         $363 = (($361) - ($362))|0;
         HEAP32[$174>>2] = $363;
         $100 = $174;
         $101 = $151;
         $364 = $100;
         $365 = $101;
         ;HEAP8[$99>>0]=HEAP8[$102>>0]|0;
         $97 = $364;
         $98 = $365;
         $366 = $98;
         $367 = $97;
         $94 = $99;
         $95 = $366;
         $96 = $367;
         $368 = $95;
         $369 = HEAP32[$368>>2]|0;
         $370 = $96;
         $371 = HEAP32[$370>>2]|0;
         $372 = ($369|0)<($371|0);
         $373 = $98;
         $374 = $97;
         $375 = $372 ? $373 : $374;
         $376 = HEAP32[$375>>2]|0;
         $173 = $376;
         $175 = 0;
         while(1) {
          $377 = $175;
          $378 = $148;
          $379 = ($377|0)<($378|0);
          if (!($379)) {
           break;
          }
          $380 = $148;
          $381 = $175;
          $382 = (($380) - ($381))|0;
          HEAP32[$177>>2] = $382;
          $82 = $177;
          $83 = $169;
          $383 = $82;
          $384 = $83;
          ;HEAP8[$81>>0]=HEAP8[$84>>0]|0;
          $79 = $383;
          $80 = $384;
          $385 = $80;
          $386 = $79;
          $76 = $81;
          $77 = $385;
          $78 = $386;
          $387 = $77;
          $388 = HEAP32[$387>>2]|0;
          $389 = $78;
          $390 = HEAP32[$389>>2]|0;
          $391 = ($388|0)<($390|0);
          $392 = $80;
          $393 = $79;
          $394 = $391 ? $392 : $393;
          $395 = HEAP32[$394>>2]|0;
          $176 = $395;
          $178 = 0;
          while(1) {
           $396 = $178;
           $397 = $173;
           $398 = ($396|0)<($397|0);
           if (!($398)) {
            break;
           }
           $399 = $173;
           $400 = $178;
           $401 = (($399) - ($400))|0;
           HEAP32[$180>>2] = $401;
           HEAP32[$181>>2] = 4;
           $52 = $180;
           $53 = $181;
           $402 = $52;
           $403 = $53;
           ;HEAP8[$51>>0]=HEAP8[$54>>0]|0;
           $49 = $402;
           $50 = $403;
           $404 = $50;
           $405 = $49;
           $46 = $51;
           $47 = $404;
           $48 = $405;
           $406 = $47;
           $407 = HEAP32[$406>>2]|0;
           $408 = $48;
           $409 = HEAP32[$408>>2]|0;
           $410 = ($407|0)<($409|0);
           $411 = $50;
           $412 = $49;
           $413 = $410 ? $411 : $412;
           $414 = HEAP32[$413>>2]|0;
           $179 = $414;
           $182 = 0;
           while(1) {
            $415 = $182;
            $416 = $179;
            $417 = ($415|0)<($416|0);
            if (!($417)) {
             break;
            }
            $418 = $172;
            $419 = $178;
            $420 = (($418) + ($419))|0;
            $421 = $182;
            $422 = (($420) + ($421))|0;
            $183 = $422;
            $423 = $179;
            $424 = $182;
            $425 = (($423) - ($424))|0;
            $426 = (($425) - 1)|0;
            $184 = $426;
            $427 = $183;
            $428 = (($427) + 1)|0;
            $185 = $428;
            $186 = 1.0;
            $429 = $175;
            $187 = $429;
            while(1) {
             $430 = $187;
             $431 = $175;
             $432 = $176;
             $433 = (($431) + ($432))|0;
             $434 = ($430|0)<($433|0);
             if (!($434)) {
              break;
             }
             $435 = $186;
             $436 = $183;
             $437 = $187;
             $34 = $150;
             $35 = $436;
             $36 = $437;
             $438 = $34;
             $439 = HEAP32[$438>>2]|0;
             $440 = $35;
             $441 = $36;
             $442 = ((($438)) + 4|0);
             $443 = HEAP32[$442>>2]|0;
             $444 = Math_imul($441, $443)|0;
             $445 = (($440) + ($444))|0;
             $446 = (($439) + ($445<<3)|0);
             $447 = +HEAPF64[$446>>3];
             $448 = $447 * $435;
             HEAPF64[$446>>3] = $448;
             $188 = $448;
             $449 = $185;
             $450 = $187;
             $19 = $150;
             $20 = $449;
             $21 = $450;
             $451 = $19;
             $452 = HEAP32[$451>>2]|0;
             $453 = $20;
             $454 = $21;
             $455 = ((($451)) + 4|0);
             $456 = HEAP32[$455>>2]|0;
             $457 = Math_imul($454, $456)|0;
             $458 = (($453) + ($457))|0;
             $459 = (($452) + ($458<<3)|0);
             $189 = $459;
             $460 = $185;
             $461 = $183;
             $7 = $149;
             $8 = $460;
             $9 = $461;
             $462 = $7;
             $463 = HEAP32[$462>>2]|0;
             $464 = $8;
             $465 = $9;
             $466 = ((($462)) + 4|0);
             $467 = HEAP32[$466>>2]|0;
             $468 = Math_imul($465, $467)|0;
             $469 = (($464) + ($468))|0;
             $470 = (($463) + ($469<<3)|0);
             $190 = $470;
             $191 = 0;
             while(1) {
              $471 = $191;
              $472 = $184;
              $473 = ($471|0)<($472|0);
              if (!($473)) {
               break;
              }
              $474 = $188;
              $475 = $190;
              $476 = $191;
              $477 = (($475) + ($476<<3)|0);
              __THREW__ = 0;
              $478 = (invoke_iii(315,($162|0),($477|0))|0);
              $479 = __THREW__; __THREW__ = 0;
              $480 = $479&1;
              if ($480) {
               break L27;
              }
              $481 = +HEAPF64[$478>>3];
              $482 = $474 * $481;
              $483 = $189;
              $484 = $191;
              $485 = (($483) + ($484<<3)|0);
              $486 = +HEAPF64[$485>>3];
              $487 = $486 - $482;
              HEAPF64[$485>>3] = $487;
              $488 = $191;
              $489 = (($488) + 1)|0;
              $191 = $489;
             }
             $496 = $187;
             $497 = (($496) + 1)|0;
             $187 = $497;
            }
            $498 = $182;
            $499 = (($498) + 1)|0;
            $182 = $499;
           }
           $500 = $173;
           $501 = $178;
           $502 = (($500) - ($501))|0;
           $503 = $179;
           $504 = (($502) - ($503))|0;
           $192 = $504;
           $505 = $172;
           $506 = $178;
           $507 = (($505) + ($506))|0;
           $193 = $507;
           $508 = $178;
           $194 = $508;
           $509 = $160;
           $510 = $173;
           $511 = $175;
           $512 = Math_imul($510, $511)|0;
           $513 = (($509) + ($512<<3)|0);
           $514 = $193;
           $515 = $175;
           $16 = $150;
           $17 = $514;
           $18 = $515;
           $516 = $16;
           $517 = $17;
           $518 = $18;
           $13 = $516;
           $14 = $517;
           $15 = $518;
           $519 = $13;
           $520 = HEAP32[$519>>2]|0;
           $521 = $14;
           $522 = $15;
           $523 = ((($519)) + 4|0);
           $524 = HEAP32[$523>>2]|0;
           $525 = Math_imul($522, $524)|0;
           $526 = (($521) + ($525))|0;
           $527 = (($520) + ($526<<3)|0);
           $528 = ((($516)) + 4|0);
           $529 = HEAP32[$528>>2]|0;
           $10 = $195;
           $11 = $527;
           $12 = $529;
           $530 = $10;
           $531 = $11;
           HEAP32[$530>>2] = $531;
           $532 = ((($530)) + 4|0);
           $533 = $12;
           HEAP32[$532>>2] = $533;
           $534 = $179;
           $535 = $176;
           $536 = $173;
           $537 = $194;
           __THREW__ = 0;
           invoke_viiiiiii(316,($165|0),($513|0),($195|0),($534|0),($535|0),($536|0),($537|0));
           $538 = __THREW__; __THREW__ = 0;
           $539 = $538&1;
           if ($539) {
            break L27;
           }
           $540 = $192;
           $541 = ($540|0)>(0);
           if ($541) {
            $542 = $172;
            $543 = $178;
            $544 = (($542) + ($543))|0;
            $545 = $179;
            $546 = (($544) + ($545))|0;
            $196 = $546;
            $547 = $156;
            $548 = $196;
            $549 = $193;
            $31 = $149;
            $32 = $548;
            $33 = $549;
            $550 = $31;
            $551 = $32;
            $552 = $33;
            $28 = $550;
            $29 = $551;
            $30 = $552;
            $553 = $28;
            $554 = HEAP32[$553>>2]|0;
            $555 = $29;
            $556 = $30;
            $557 = ((($553)) + 4|0);
            $558 = HEAP32[$557>>2]|0;
            $559 = Math_imul($556, $558)|0;
            $560 = (($555) + ($559))|0;
            $561 = (($554) + ($560<<3)|0);
            $562 = ((($550)) + 4|0);
            $563 = HEAP32[$562>>2]|0;
            $25 = $197;
            $26 = $561;
            $27 = $563;
            $564 = $25;
            $565 = $26;
            $566 = $27;
            $22 = $564;
            $23 = $565;
            $24 = $566;
            $567 = $22;
            $568 = $23;
            HEAP32[$567>>2] = $568;
            $569 = ((($567)) + 4|0);
            $570 = $24;
            HEAP32[$569>>2] = $570;
            $571 = $179;
            $572 = $192;
            __THREW__ = 0;
            invoke_viiiiiii(187,($164|0),($547|0),($197|0),($571|0),($572|0),0,0);
            $573 = __THREW__; __THREW__ = 0;
            $574 = $573&1;
            if ($574) {
             break L27;
            }
            $575 = $196;
            $576 = $175;
            $43 = $150;
            $44 = $575;
            $45 = $576;
            $577 = $43;
            $578 = $44;
            $579 = $45;
            $40 = $577;
            $41 = $578;
            $42 = $579;
            $580 = $40;
            $581 = HEAP32[$580>>2]|0;
            $582 = $41;
            $583 = $42;
            $584 = ((($580)) + 4|0);
            $585 = HEAP32[$584>>2]|0;
            $586 = Math_imul($583, $585)|0;
            $587 = (($582) + ($586))|0;
            $588 = (($581) + ($587<<3)|0);
            $589 = ((($577)) + 4|0);
            $590 = HEAP32[$589>>2]|0;
            $37 = $198;
            $38 = $588;
            $39 = $590;
            $591 = $37;
            $592 = $38;
            HEAP32[$591>>2] = $592;
            $593 = ((($591)) + 4|0);
            $594 = $39;
            HEAP32[$593>>2] = $594;
            $595 = $156;
            $596 = $160;
            $597 = $173;
            $598 = $175;
            $599 = Math_imul($597, $598)|0;
            $600 = (($596) + ($599<<3)|0);
            $601 = $192;
            $602 = $179;
            $603 = $176;
            $604 = $179;
            $605 = $173;
            $606 = $194;
            __THREW__ = 0;
            invoke_viiiiiiidiiii(190,($163|0),($198|0),($595|0),($600|0),($601|0),($602|0),($603|0),-1.0,($604|0),($605|0),0,($606|0));
            $607 = __THREW__; __THREW__ = 0;
            $608 = $607&1;
            if ($608) {
             break L27;
            }
           }
           $609 = $178;
           $610 = (($609) + 4)|0;
           $178 = $610;
          }
          $611 = HEAP32[$169>>2]|0;
          $612 = $175;
          $613 = (($612) + ($611))|0;
          $175 = $613;
         }
         $614 = $172;
         $615 = HEAP32[$151>>2]|0;
         $616 = (($614) + ($615))|0;
         $199 = $616;
         $617 = HEAP32[$141>>2]|0;
         $200 = $617;
         $618 = $199;
         $201 = $618;
         while(1) {
          $619 = $201;
          $620 = $200;
          $621 = ($619|0)<($620|0);
          if (!($621)) {
           break;
          }
          $622 = $200;
          $623 = $201;
          $624 = (($622) - ($623))|0;
          HEAP32[$203>>2] = $624;
          $61 = $152;
          $62 = $203;
          $625 = $61;
          $626 = $62;
          ;HEAP8[$60>>0]=HEAP8[$63>>0]|0;
          $58 = $625;
          $59 = $626;
          $627 = $59;
          $628 = $58;
          $55 = $60;
          $56 = $627;
          $57 = $628;
          $629 = $56;
          $630 = HEAP32[$629>>2]|0;
          $631 = $57;
          $632 = HEAP32[$631>>2]|0;
          $633 = ($630|0)<($632|0);
          $634 = $59;
          $635 = $58;
          $636 = $633 ? $634 : $635;
          $637 = HEAP32[$636>>2]|0;
          $202 = $637;
          $638 = $202;
          $639 = ($638|0)>(0);
          if ($639) {
           $640 = $156;
           $641 = $201;
           $642 = $172;
           $73 = $149;
           $74 = $641;
           $75 = $642;
           $643 = $73;
           $644 = $74;
           $645 = $75;
           $70 = $643;
           $71 = $644;
           $72 = $645;
           $646 = $70;
           $647 = HEAP32[$646>>2]|0;
           $648 = $71;
           $649 = $72;
           $650 = ((($646)) + 4|0);
           $651 = HEAP32[$650>>2]|0;
           $652 = Math_imul($649, $651)|0;
           $653 = (($648) + ($652))|0;
           $654 = (($647) + ($653<<3)|0);
           $655 = ((($643)) + 4|0);
           $656 = HEAP32[$655>>2]|0;
           $67 = $204;
           $68 = $654;
           $69 = $656;
           $657 = $67;
           $658 = $68;
           $659 = $69;
           $64 = $657;
           $65 = $658;
           $66 = $659;
           $660 = $64;
           $661 = $65;
           HEAP32[$660>>2] = $661;
           $662 = ((($660)) + 4|0);
           $663 = $66;
           HEAP32[$662>>2] = $663;
           $664 = $173;
           $665 = $202;
           __THREW__ = 0;
           invoke_viiiiiii(187,($164|0),($640|0),($204|0),($664|0),($665|0),0,0);
           $666 = __THREW__; __THREW__ = 0;
           $667 = $666&1;
           if ($667) {
            break L27;
           }
           $668 = $201;
           $91 = $150;
           $92 = $668;
           $93 = 0;
           $669 = $91;
           $670 = $92;
           $671 = $93;
           $88 = $669;
           $89 = $670;
           $90 = $671;
           $672 = $88;
           $673 = HEAP32[$672>>2]|0;
           $674 = $89;
           $675 = $90;
           $676 = ((($672)) + 4|0);
           $677 = HEAP32[$676>>2]|0;
           $678 = Math_imul($675, $677)|0;
           $679 = (($674) + ($678))|0;
           $680 = (($673) + ($679<<3)|0);
           $681 = ((($669)) + 4|0);
           $682 = HEAP32[$681>>2]|0;
           $85 = $205;
           $86 = $680;
           $87 = $682;
           $683 = $85;
           $684 = $86;
           HEAP32[$683>>2] = $684;
           $685 = ((($683)) + 4|0);
           $686 = $87;
           HEAP32[$685>>2] = $686;
           $687 = $156;
           $688 = $160;
           $689 = $202;
           $690 = $173;
           $691 = $148;
           __THREW__ = 0;
           invoke_viiiiiiidiiii(190,($163|0),($205|0),($687|0),($688|0),($689|0),($690|0),($691|0),-1.0,-1,-1,0,0);
           $692 = __THREW__; __THREW__ = 0;
           $693 = $692&1;
           if ($693) {
            break L27;
           }
          }
          $694 = HEAP32[$152>>2]|0;
          $695 = $201;
          $696 = (($695) + ($694))|0;
          $201 = $696;
         }
         $697 = HEAP32[$151>>2]|0;
         $698 = $172;
         $699 = (($698) + ($697))|0;
         $172 = $699;
        }
        __THREW__ = 0;
        invoke_vi(189,($161|0));
        $700 = __THREW__; __THREW__ = 0;
        $701 = $700&1;
        if ($701) {
         label = 37;
         break L14;
        }
        __ZN5Eigen8internal28aligned_stack_memory_handlerIdED2Ev($157);
        STACKTOP = sp;return;
       }
      } while(0);
      $492 = ___cxa_find_matching_catch_2()|0;
      $493 = tempRet0;
      $158 = $492;
      $159 = $493;
      __THREW__ = 0;
      invoke_vi(189,($161|0));
      $494 = __THREW__; __THREW__ = 0;
      $495 = $494&1;
      if ($495) {
       $706 = ___cxa_find_matching_catch_3(0|0)|0;
       $707 = tempRet0;
       ___clang_call_terminate($706);
       // unreachable;
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 37) {
  $490 = ___cxa_find_matching_catch_2()|0;
  $491 = tempRet0;
  $158 = $490;
  $159 = $491;
 }
 __THREW__ = 0;
 invoke_vi(189,($157|0));
 $702 = __THREW__; __THREW__ = 0;
 $703 = $702&1;
 if ($703) {
  $706 = ___cxa_find_matching_catch_3(0|0)|0;
  $707 = tempRet0;
  ___clang_call_terminate($706);
  // unreachable;
 } else {
  $704 = $158;
  $705 = $159;
  ___resumeException($704|0);
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE8coeffRefEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = (__ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi3EE9colStrideEv($6)|0);
 $10 = Math_imul($8, $9)|0;
 $11 = $4;
 $12 = (__ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi3EE9rowStrideEv($6)|0);
 $13 = Math_imul($11, $12)|0;
 $14 = (($10) + ($13))|0;
 $15 = (($7) + ($14<<3)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1EE8coeffRefEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = (__ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi3EE9colStrideEv($6)|0);
 $10 = Math_imul($8, $9)|0;
 $11 = $4;
 $12 = (__ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi3EE9rowStrideEv($6)|0);
 $13 = Math_imul($11, $12)|0;
 $14 = (($10) + ($13))|0;
 $15 = (($7) + ($14<<3)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi4ELb0EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 __ZN5Eigen8internal14aligned_deleteIdEEvPT_j($3,$5);
 $6 = ((($2)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($2)) + 24|0);
 $9 = HEAP32[$8>>2]|0;
 __ZN5Eigen8internal14aligned_deleteIdEEvPT_j($7,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal27computeProductBlockingSizesIddLi4EiEEvRT2_S3_S3_S2_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = (__ZN5Eigen8internal24useSpecificBlockingSizesIiEEbRT_S3_S3_($8,$9,$10)|0);
 if ($11) {
  STACKTOP = sp;return;
 }
 $12 = $4;
 $13 = $5;
 $14 = $6;
 $15 = $7;
 __ZN5Eigen8internal37evaluateProductBlockingSizesHeuristicIddLi4EiEEvRT2_S3_S3_S2_($12,$13,$14,$15);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal37evaluateProductBlockingSizesHeuristicIddLi4EiEEvRT2_S3_S3_S2_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 544|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(544|0);
 $9 = sp + 64|0;
 $12 = sp + 532|0;
 $20 = sp + 56|0;
 $23 = sp + 531|0;
 $31 = sp + 48|0;
 $34 = sp + 530|0;
 $42 = sp + 40|0;
 $45 = sp + 529|0;
 $53 = sp + 32|0;
 $56 = sp + 528|0;
 $64 = sp + 24|0;
 $67 = sp + 527|0;
 $75 = sp + 16|0;
 $78 = sp + 526|0;
 $86 = sp + 8|0;
 $89 = sp + 525|0;
 $97 = sp;
 $100 = sp + 524|0;
 $106 = sp + 184|0;
 $107 = sp + 180|0;
 $108 = sp + 176|0;
 $109 = sp + 172|0;
 $111 = sp + 164|0;
 $112 = sp + 160|0;
 $115 = sp + 148|0;
 $118 = sp + 136|0;
 $119 = sp + 132|0;
 $121 = sp + 124|0;
 $122 = sp + 120|0;
 $125 = sp + 108|0;
 $129 = sp + 92|0;
 $132 = sp + 80|0;
 $133 = sp + 76|0;
 $135 = sp + 68|0;
 $103 = $0;
 $104 = $1;
 $105 = $2;
 HEAP32[$106>>2] = $3;
 __ZN5Eigen8internal20manage_caching_sizesENS_6ActionEPiS2_S2_(0,$107,$108,$109);
 $136 = HEAP32[$106>>2]|0;
 $137 = ($136|0)>(1);
 if ($137) {
  $138 = HEAP32[$107>>2]|0;
  $139 = (($138) - 32)|0;
  $140 = (($139|0) / 160)&-1;
  HEAP32[$111>>2] = $140;
  HEAP32[$112>>2] = 320;
  $101 = $111;
  $102 = $112;
  $141 = $101;
  $142 = $102;
  $98 = $141;
  $99 = $142;
  $143 = $98;
  $144 = $99;
  ;HEAP8[$97>>0]=HEAP8[$100>>0]|0;
  $95 = $143;
  $96 = $144;
  $145 = $96;
  $146 = $95;
  $92 = $97;
  $93 = $145;
  $94 = $146;
  $147 = $93;
  $148 = HEAP32[$147>>2]|0;
  $149 = $94;
  $150 = HEAP32[$149>>2]|0;
  $151 = ($148|0)<($150|0);
  $152 = $96;
  $153 = $95;
  $154 = $151 ? $152 : $153;
  $155 = HEAP32[$154>>2]|0;
  $110 = $155;
  $156 = $110;
  $157 = $103;
  $158 = HEAP32[$157>>2]|0;
  $159 = ($156|0)<($158|0);
  if ($159) {
   $160 = $110;
   $161 = $110;
   $162 = (($161|0) % 8)&-1;
   $163 = (($160) - ($162))|0;
   $164 = $103;
   HEAP32[$164>>2] = $163;
  }
  $165 = HEAP32[$108>>2]|0;
  $166 = HEAP32[$107>>2]|0;
  $167 = (($165) - ($166))|0;
  $168 = $103;
  $169 = HEAP32[$168>>2]|0;
  $170 = $169<<5;
  $171 = (($167>>>0) / ($170>>>0))&-1;
  $113 = $171;
  $172 = $105;
  $173 = (__ZN5Eigen6numext8div_ceilIiEET_RKS2_S4_($172,$106)|0);
  $114 = $173;
  $174 = $113;
  $175 = $114;
  $176 = ($174|0)<=($175|0);
  if ($176) {
   $177 = $113;
   $178 = $113;
   $179 = (($178|0) % 4)&-1;
   $180 = (($177) - ($179))|0;
   $181 = $105;
   HEAP32[$181>>2] = $180;
  } else {
   $182 = $105;
   $183 = $114;
   $184 = (($183) + 4)|0;
   $185 = (($184) - 1)|0;
   $186 = $114;
   $187 = (($186) + 4)|0;
   $188 = (($187) - 1)|0;
   $189 = (($188|0) % 4)&-1;
   $190 = (($185) - ($189))|0;
   HEAP32[$115>>2] = $190;
   $13 = $182;
   $14 = $115;
   $191 = $13;
   $192 = $14;
   $10 = $191;
   $11 = $192;
   $193 = $10;
   $194 = $11;
   ;HEAP8[$9>>0]=HEAP8[$12>>0]|0;
   $7 = $193;
   $8 = $194;
   $195 = $8;
   $196 = $7;
   $4 = $9;
   $5 = $195;
   $6 = $196;
   $197 = $5;
   $198 = HEAP32[$197>>2]|0;
   $199 = $6;
   $200 = HEAP32[$199>>2]|0;
   $201 = ($198|0)<($200|0);
   $202 = $8;
   $203 = $7;
   $204 = $201 ? $202 : $203;
   $205 = HEAP32[$204>>2]|0;
   $206 = $105;
   HEAP32[$206>>2] = $205;
  }
  $207 = HEAP32[$109>>2]|0;
  $208 = HEAP32[$108>>2]|0;
  $209 = ($207|0)>($208|0);
  if (!($209)) {
   STACKTOP = sp;return;
  }
  $210 = HEAP32[$109>>2]|0;
  $211 = HEAP32[$108>>2]|0;
  $212 = (($210) - ($211))|0;
  $213 = $103;
  $214 = HEAP32[$213>>2]|0;
  $215 = $214<<3;
  $216 = HEAP32[$106>>2]|0;
  $217 = Math_imul($215, $216)|0;
  $218 = (($212>>>0) / ($217>>>0))&-1;
  $116 = $218;
  $219 = $104;
  $220 = (__ZN5Eigen6numext8div_ceilIiEET_RKS2_S4_($219,$106)|0);
  $117 = $220;
  $221 = $116;
  $222 = $117;
  $223 = ($221|0)<($222|0);
  $224 = $116;
  $225 = ($224|0)>=(1);
  $or$cond = $223 & $225;
  if ($or$cond) {
   $226 = $116;
   $227 = $116;
   $228 = (($227|0) % 1)&-1;
   $229 = (($226) - ($228))|0;
   $230 = $104;
   HEAP32[$230>>2] = $229;
   STACKTOP = sp;return;
  } else {
   $231 = $104;
   $232 = $117;
   $233 = (($232) + 1)|0;
   $234 = (($233) - 1)|0;
   $235 = $117;
   $236 = (($235) + 1)|0;
   $237 = (($236) - 1)|0;
   $238 = (($237|0) % 1)&-1;
   $239 = (($234) - ($238))|0;
   HEAP32[$118>>2] = $239;
   $24 = $231;
   $25 = $118;
   $240 = $24;
   $241 = $25;
   $21 = $240;
   $22 = $241;
   $242 = $21;
   $243 = $22;
   ;HEAP8[$20>>0]=HEAP8[$23>>0]|0;
   $18 = $242;
   $19 = $243;
   $244 = $19;
   $245 = $18;
   $15 = $20;
   $16 = $244;
   $17 = $245;
   $246 = $16;
   $247 = HEAP32[$246>>2]|0;
   $248 = $17;
   $249 = HEAP32[$248>>2]|0;
   $250 = ($247|0)<($249|0);
   $251 = $19;
   $252 = $18;
   $253 = $250 ? $251 : $252;
   $254 = HEAP32[$253>>2]|0;
   $255 = $104;
   HEAP32[$255>>2] = $254;
   STACKTOP = sp;return;
  }
 }
 $256 = $103;
 $257 = $104;
 $258 = $105;
 $35 = $257;
 $36 = $258;
 $259 = $35;
 $260 = $36;
 $32 = $259;
 $33 = $260;
 $261 = $32;
 $262 = $33;
 ;HEAP8[$31>>0]=HEAP8[$34>>0]|0;
 $29 = $261;
 $30 = $262;
 $263 = $29;
 $264 = $30;
 $26 = $31;
 $27 = $263;
 $28 = $264;
 $265 = $27;
 $266 = HEAP32[$265>>2]|0;
 $267 = $28;
 $268 = HEAP32[$267>>2]|0;
 $269 = ($266|0)<($268|0);
 $270 = $30;
 $271 = $29;
 $272 = $269 ? $270 : $271;
 $273 = HEAP32[$272>>2]|0;
 HEAP32[$119>>2] = $273;
 $46 = $256;
 $47 = $119;
 $274 = $46;
 $275 = $47;
 $43 = $274;
 $44 = $275;
 $276 = $43;
 $277 = $44;
 ;HEAP8[$42>>0]=HEAP8[$45>>0]|0;
 $40 = $276;
 $41 = $277;
 $278 = $40;
 $279 = $41;
 $37 = $42;
 $38 = $278;
 $39 = $279;
 $280 = $38;
 $281 = HEAP32[$280>>2]|0;
 $282 = $39;
 $283 = HEAP32[$282>>2]|0;
 $284 = ($281|0)<($283|0);
 $285 = $41;
 $286 = $40;
 $287 = $284 ? $285 : $286;
 $288 = HEAP32[$287>>2]|0;
 $289 = ($288|0)<(48);
 if ($289) {
  STACKTOP = sp;return;
 }
 $290 = HEAP32[$107>>2]|0;
 $291 = (($290) - 32)|0;
 $292 = (($291|0) / 160)&-1;
 $293 = $292 & -8;
 HEAP32[$121>>2] = $293;
 HEAP32[$122>>2] = 1;
 $57 = $121;
 $58 = $122;
 $294 = $57;
 $295 = $58;
 $54 = $294;
 $55 = $295;
 $296 = $54;
 $297 = $55;
 ;HEAP8[$53>>0]=HEAP8[$56>>0]|0;
 $51 = $296;
 $52 = $297;
 $298 = $51;
 $299 = $52;
 $48 = $53;
 $49 = $298;
 $50 = $299;
 $300 = $49;
 $301 = HEAP32[$300>>2]|0;
 $302 = $50;
 $303 = HEAP32[$302>>2]|0;
 $304 = ($301|0)<($303|0);
 $305 = $52;
 $306 = $51;
 $307 = $304 ? $305 : $306;
 $308 = HEAP32[$307>>2]|0;
 $120 = $308;
 $309 = $103;
 $310 = HEAP32[$309>>2]|0;
 $123 = $310;
 $311 = $103;
 $312 = HEAP32[$311>>2]|0;
 $313 = $120;
 $314 = ($312|0)>($313|0);
 if ($314) {
  $315 = $103;
  $316 = HEAP32[$315>>2]|0;
  $317 = $120;
  $318 = (($316|0) % ($317|0))&-1;
  $319 = ($318|0)==(0);
  $320 = $120;
  if ($319) {
   $338 = $320;
  } else {
   $321 = $120;
   $322 = (($321) - 1)|0;
   $323 = $103;
   $324 = HEAP32[$323>>2]|0;
   $325 = $120;
   $326 = (($324|0) % ($325|0))&-1;
   $327 = (($322) - ($326))|0;
   $328 = $103;
   $329 = HEAP32[$328>>2]|0;
   $330 = $120;
   $331 = (($329|0) / ($330|0))&-1;
   $332 = (($331) + 1)|0;
   $333 = $332<<3;
   $334 = (($327|0) / ($333|0))&-1;
   $335 = $334<<3;
   $336 = (($320) - ($335))|0;
   $338 = $336;
  }
  $337 = $103;
  HEAP32[$337>>2] = $338;
 }
 $124 = 1572864;
 $339 = $104;
 $340 = HEAP32[$339>>2]|0;
 $341 = $103;
 $342 = HEAP32[$341>>2]|0;
 $343 = Math_imul($340, $342)|0;
 $344 = $343<<3;
 $126 = $344;
 $345 = HEAP32[$107>>2]|0;
 $346 = (($345) - 32)|0;
 $347 = $126;
 $348 = (($346) - ($347))|0;
 $127 = $348;
 $349 = $127;
 $350 = $103;
 $351 = HEAP32[$350>>2]|0;
 $352 = $351<<5;
 $353 = ($349|0)>=($352|0);
 if ($353) {
  $354 = $127;
  $355 = $103;
  $356 = HEAP32[$355>>2]|0;
  $357 = $356<<3;
  $358 = (($354>>>0) / ($357>>>0))&-1;
  HEAP32[$125>>2] = $358;
 } else {
  $359 = $120;
  $360 = $359<<2;
  $361 = $360<<3;
  $362 = (4718592 / ($361>>>0))&-1;
  HEAP32[$125>>2] = $362;
 }
 $363 = $103;
 $364 = HEAP32[$363>>2]|0;
 $365 = $364<<1;
 $366 = $365<<3;
 $367 = (1572864 / ($366>>>0))&-1;
 HEAP32[$129>>2] = $367;
 $68 = $129;
 $69 = $125;
 $368 = $68;
 $369 = $69;
 $65 = $368;
 $66 = $369;
 $370 = $65;
 $371 = $66;
 ;HEAP8[$64>>0]=HEAP8[$67>>0]|0;
 $62 = $370;
 $63 = $371;
 $372 = $63;
 $373 = $62;
 $59 = $64;
 $60 = $372;
 $61 = $373;
 $374 = $60;
 $375 = HEAP32[$374>>2]|0;
 $376 = $61;
 $377 = HEAP32[$376>>2]|0;
 $378 = ($375|0)<($377|0);
 $379 = $63;
 $380 = $62;
 $381 = $378 ? $379 : $380;
 $382 = HEAP32[$381>>2]|0;
 $383 = $382 & -4;
 $128 = $383;
 $384 = $105;
 $385 = HEAP32[$384>>2]|0;
 $386 = $128;
 $387 = ($385|0)>($386|0);
 if ($387) {
  $388 = $105;
  $389 = HEAP32[$388>>2]|0;
  $390 = $128;
  $391 = (($389|0) % ($390|0))&-1;
  $392 = ($391|0)==(0);
  $393 = $128;
  if ($392) {
   $410 = $393;
  } else {
   $394 = $128;
   $395 = $105;
   $396 = HEAP32[$395>>2]|0;
   $397 = $128;
   $398 = (($396|0) % ($397|0))&-1;
   $399 = (($394) - ($398))|0;
   $400 = $105;
   $401 = HEAP32[$400>>2]|0;
   $402 = $128;
   $403 = (($401|0) / ($402|0))&-1;
   $404 = (($403) + 1)|0;
   $405 = $404<<2;
   $406 = (($399|0) / ($405|0))&-1;
   $407 = $406<<2;
   $408 = (($393) - ($407))|0;
   $410 = $408;
  }
  $409 = $105;
  HEAP32[$409>>2] = $410;
  STACKTOP = sp;return;
 }
 $411 = $123;
 $412 = $103;
 $413 = HEAP32[$412>>2]|0;
 $414 = ($411|0)==($413|0);
 if (!($414)) {
  STACKTOP = sp;return;
 }
 $415 = $103;
 $416 = HEAP32[$415>>2]|0;
 $417 = $105;
 $418 = HEAP32[$417>>2]|0;
 $419 = Math_imul($416, $418)|0;
 $420 = $419<<3;
 $130 = $420;
 $131 = 1572864;
 $421 = $104;
 $422 = HEAP32[$421>>2]|0;
 HEAP32[$132>>2] = $422;
 $423 = $130;
 $424 = ($423|0)<=(1024);
 if ($424) {
  $425 = HEAP32[$107>>2]|0;
  $131 = $425;
 } else {
  $426 = HEAP32[$109>>2]|0;
  $427 = ($426|0)!=(0);
  $428 = $130;
  $429 = ($428|0)<=(32768);
  $or$cond3 = $427 & $429;
  if ($or$cond3) {
   $430 = HEAP32[$108>>2]|0;
   $131 = $430;
   HEAP32[$133>>2] = 576;
   $79 = $133;
   $80 = $132;
   $431 = $79;
   $432 = $80;
   $76 = $431;
   $77 = $432;
   $433 = $76;
   $434 = $77;
   ;HEAP8[$75>>0]=HEAP8[$78>>0]|0;
   $73 = $433;
   $74 = $434;
   $435 = $74;
   $436 = $73;
   $70 = $75;
   $71 = $435;
   $72 = $436;
   $437 = $71;
   $438 = HEAP32[$437>>2]|0;
   $439 = $72;
   $440 = HEAP32[$439>>2]|0;
   $441 = ($438|0)<($440|0);
   $442 = $74;
   $443 = $73;
   $444 = $441 ? $442 : $443;
   $445 = HEAP32[$444>>2]|0;
   HEAP32[$132>>2] = $445;
  }
 }
 $446 = $131;
 $447 = $103;
 $448 = HEAP32[$447>>2]|0;
 $449 = ($448*3)|0;
 $450 = $449<<3;
 $451 = (($446>>>0) / ($450>>>0))&-1;
 HEAP32[$135>>2] = $451;
 $90 = $135;
 $91 = $132;
 $452 = $90;
 $453 = $91;
 $87 = $452;
 $88 = $453;
 $454 = $87;
 $455 = $88;
 ;HEAP8[$86>>0]=HEAP8[$89>>0]|0;
 $84 = $454;
 $85 = $455;
 $456 = $85;
 $457 = $84;
 $81 = $86;
 $82 = $456;
 $83 = $457;
 $458 = $82;
 $459 = HEAP32[$458>>2]|0;
 $460 = $83;
 $461 = HEAP32[$460>>2]|0;
 $462 = ($459|0)<($461|0);
 $463 = $85;
 $464 = $84;
 $465 = $462 ? $463 : $464;
 $466 = HEAP32[$465>>2]|0;
 $134 = $466;
 $467 = $134;
 $468 = ($467|0)>(1);
 $469 = $134;
 if ($468) {
  $470 = (($469|0) % 1)&-1;
  $471 = $134;
  $472 = (($471) - ($470))|0;
  $134 = $472;
 } else {
  $473 = ($469|0)==(0);
  if ($473) {
   STACKTOP = sp;return;
  }
 }
 $474 = $104;
 $475 = HEAP32[$474>>2]|0;
 $476 = $134;
 $477 = (($475|0) % ($476|0))&-1;
 $478 = ($477|0)==(0);
 $479 = $134;
 if ($478) {
  $496 = $479;
 } else {
  $480 = $134;
  $481 = $104;
  $482 = HEAP32[$481>>2]|0;
  $483 = $134;
  $484 = (($482|0) % ($483|0))&-1;
  $485 = (($480) - ($484))|0;
  $486 = $104;
  $487 = HEAP32[$486>>2]|0;
  $488 = $134;
  $489 = (($487|0) / ($488|0))&-1;
  $490 = (($489) + 1)|0;
  $491 = $490;
  $492 = (($485|0) / ($491|0))&-1;
  $493 = $492;
  $494 = (($479) - ($493))|0;
  $496 = $494;
 }
 $495 = $104;
 HEAP32[$495>>2] = $496;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal13gemm_pack_rhsIdiNS0_16blas_data_mapperIdiLi0ELi0EEELi4ELi0ELb0ELb1EEclEPdRKS3_iiii($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0.0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0.0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0.0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0.0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0.0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $18 = sp + 252|0;
 $29 = sp + 208|0;
 $38 = sp + 172|0;
 $49 = sp + 128|0;
 $58 = sp + 92|0;
 $67 = sp + 56|0;
 $68 = sp + 52|0;
 $69 = sp + 300|0;
 $75 = sp + 28|0;
 $76 = sp + 24|0;
 $77 = sp + 20|0;
 $78 = sp + 16|0;
 $81 = sp + 4|0;
 $62 = $0;
 $63 = $1;
 $64 = $2;
 $65 = $3;
 $66 = $4;
 HEAP32[$67>>2] = $5;
 HEAP32[$68>>2] = $6;
 __ZN5Eigen8internal22ignore_unused_variableIiEEvRKT_($67);
 __ZN5Eigen8internal22ignore_unused_variableIiEEvRKT_($68);
 $83 = HEAP32[$67>>2]|0;
 $84 = $65;
 $85 = ($83|0)>=($84|0);
 if (!($85)) {
  ___assert_fail((3643|0),(3734|0),1906,(1719|0));
  // unreachable;
 }
 $86 = HEAP32[$68>>2]|0;
 $87 = HEAP32[$67>>2]|0;
 $88 = ($86|0)<=($87|0);
 if (!($88)) {
  ___assert_fail((3643|0),(3734|0),1906,(1719|0));
  // unreachable;
 }
 $70 = 0;
 $89 = $66;
 $90 = (($89|0) / 4)&-1;
 $91 = $90<<2;
 $71 = $91;
 $72 = 0;
 $92 = $65;
 $93 = (($92|0) / 1)&-1;
 $94 = $93;
 $73 = $94;
 $95 = $70;
 $74 = $95;
 while(1) {
  $96 = $74;
  $97 = $71;
  $98 = ($96|0)<($97|0);
  if (!($98)) {
   break;
  }
  $99 = HEAP32[$68>>2]|0;
  $100 = $99<<2;
  $101 = $72;
  $102 = (($101) + ($100))|0;
  $72 = $102;
  $103 = $64;
  $104 = $74;
  $105 = (($104) + 0)|0;
  $59 = $103;
  $60 = 0;
  $61 = $105;
  $106 = $59;
  $107 = $60;
  $108 = $61;
  $55 = $106;
  $56 = $107;
  $57 = $108;
  $109 = $55;
  $110 = HEAP32[$109>>2]|0;
  $111 = $56;
  $112 = $57;
  $113 = ((($109)) + 4|0);
  $114 = HEAP32[$113>>2]|0;
  $115 = Math_imul($112, $114)|0;
  $116 = (($111) + ($115))|0;
  $117 = (($110) + ($116<<3)|0);
  $53 = $58;
  $54 = $117;
  $118 = $53;
  $119 = $54;
  HEAP32[$118>>2] = $119;
  $120 = HEAP32[$58>>2]|0;
  HEAP32[$75>>2] = $120;
  $121 = $64;
  $122 = $74;
  $123 = (($122) + 1)|0;
  $50 = $121;
  $51 = 0;
  $52 = $123;
  $124 = $50;
  $125 = $51;
  $126 = $52;
  $46 = $124;
  $47 = $125;
  $48 = $126;
  $127 = $46;
  $128 = HEAP32[$127>>2]|0;
  $129 = $47;
  $130 = $48;
  $131 = ((($127)) + 4|0);
  $132 = HEAP32[$131>>2]|0;
  $133 = Math_imul($130, $132)|0;
  $134 = (($129) + ($133))|0;
  $135 = (($128) + ($134<<3)|0);
  $44 = $49;
  $45 = $135;
  $136 = $44;
  $137 = $45;
  HEAP32[$136>>2] = $137;
  $138 = HEAP32[$49>>2]|0;
  HEAP32[$76>>2] = $138;
  $139 = $64;
  $140 = $74;
  $141 = (($140) + 2)|0;
  $30 = $139;
  $31 = 0;
  $32 = $141;
  $142 = $30;
  $143 = $31;
  $144 = $32;
  $26 = $142;
  $27 = $143;
  $28 = $144;
  $145 = $26;
  $146 = HEAP32[$145>>2]|0;
  $147 = $27;
  $148 = $28;
  $149 = ((($145)) + 4|0);
  $150 = HEAP32[$149>>2]|0;
  $151 = Math_imul($148, $150)|0;
  $152 = (($147) + ($151))|0;
  $153 = (($146) + ($152<<3)|0);
  $24 = $29;
  $25 = $153;
  $154 = $24;
  $155 = $25;
  HEAP32[$154>>2] = $155;
  $156 = HEAP32[$29>>2]|0;
  HEAP32[$77>>2] = $156;
  $157 = $64;
  $158 = $74;
  $159 = (($158) + 3)|0;
  $19 = $157;
  $20 = 0;
  $21 = $159;
  $160 = $19;
  $161 = $20;
  $162 = $21;
  $15 = $160;
  $16 = $161;
  $17 = $162;
  $163 = $15;
  $164 = HEAP32[$163>>2]|0;
  $165 = $16;
  $166 = $17;
  $167 = ((($163)) + 4|0);
  $168 = HEAP32[$167>>2]|0;
  $169 = Math_imul($166, $168)|0;
  $170 = (($165) + ($169))|0;
  $171 = (($164) + ($170<<3)|0);
  $13 = $18;
  $14 = $171;
  $172 = $13;
  $173 = $14;
  HEAP32[$172>>2] = $173;
  $174 = HEAP32[$18>>2]|0;
  HEAP32[$78>>2] = $174;
  $79 = 0;
  while(1) {
   $175 = $79;
   $176 = $65;
   $177 = ($175|0)<($176|0);
   if (!($177)) {
    break;
   }
   $178 = $79;
   $9 = $75;
   $10 = $178;
   $179 = $9;
   $180 = HEAP32[$179>>2]|0;
   $181 = $10;
   $182 = (($180) + ($181<<3)|0);
   $183 = (__ZNK5Eigen8internal7conj_ifILb0EEclIdEERKT_S6_($69,$182)|0);
   $184 = +HEAPF64[$183>>3];
   $185 = $63;
   $186 = $72;
   $187 = (($186) + 0)|0;
   $188 = (($185) + ($187<<3)|0);
   HEAPF64[$188>>3] = $184;
   $189 = $79;
   $7 = $76;
   $8 = $189;
   $190 = $7;
   $191 = HEAP32[$190>>2]|0;
   $192 = $8;
   $193 = (($191) + ($192<<3)|0);
   $194 = (__ZNK5Eigen8internal7conj_ifILb0EEclIdEERKT_S6_($69,$193)|0);
   $195 = +HEAPF64[$194>>3];
   $196 = $63;
   $197 = $72;
   $198 = (($197) + 1)|0;
   $199 = (($196) + ($198<<3)|0);
   HEAPF64[$199>>3] = $195;
   $200 = $79;
   $11 = $77;
   $12 = $200;
   $201 = $11;
   $202 = HEAP32[$201>>2]|0;
   $203 = $12;
   $204 = (($202) + ($203<<3)|0);
   $205 = (__ZNK5Eigen8internal7conj_ifILb0EEclIdEERKT_S6_($69,$204)|0);
   $206 = +HEAPF64[$205>>3];
   $207 = $63;
   $208 = $72;
   $209 = (($208) + 2)|0;
   $210 = (($207) + ($209<<3)|0);
   HEAPF64[$210>>3] = $206;
   $211 = $79;
   $22 = $78;
   $23 = $211;
   $212 = $22;
   $213 = HEAP32[$212>>2]|0;
   $214 = $23;
   $215 = (($213) + ($214<<3)|0);
   $216 = (__ZNK5Eigen8internal7conj_ifILb0EEclIdEERKT_S6_($69,$215)|0);
   $217 = +HEAPF64[$216>>3];
   $218 = $63;
   $219 = $72;
   $220 = (($219) + 3)|0;
   $221 = (($218) + ($220<<3)|0);
   HEAPF64[$221>>3] = $217;
   $222 = $72;
   $223 = (($222) + 4)|0;
   $72 = $223;
   $224 = $79;
   $225 = (($224) + 1)|0;
   $79 = $225;
  }
  $226 = HEAP32[$67>>2]|0;
  $227 = HEAP32[$68>>2]|0;
  $228 = (($226) - ($227))|0;
  $229 = $65;
  $230 = (($228) - ($229))|0;
  $231 = $230<<2;
  $232 = $72;
  $233 = (($232) + ($231))|0;
  $72 = $233;
  $234 = $74;
  $235 = (($234) + 4)|0;
  $74 = $235;
 }
 $236 = $71;
 $80 = $236;
 while(1) {
  $237 = $80;
  $238 = $66;
  $239 = ($237|0)<($238|0);
  if (!($239)) {
   break;
  }
  $240 = HEAP32[$68>>2]|0;
  $241 = $72;
  $242 = (($241) + ($240))|0;
  $72 = $242;
  $243 = $64;
  $244 = $80;
  $39 = $243;
  $40 = 0;
  $41 = $244;
  $245 = $39;
  $246 = $40;
  $247 = $41;
  $35 = $245;
  $36 = $246;
  $37 = $247;
  $248 = $35;
  $249 = HEAP32[$248>>2]|0;
  $250 = $36;
  $251 = $37;
  $252 = ((($248)) + 4|0);
  $253 = HEAP32[$252>>2]|0;
  $254 = Math_imul($251, $253)|0;
  $255 = (($250) + ($254))|0;
  $256 = (($249) + ($255<<3)|0);
  $33 = $38;
  $34 = $256;
  $257 = $33;
  $258 = $34;
  HEAP32[$257>>2] = $258;
  $259 = HEAP32[$38>>2]|0;
  HEAP32[$81>>2] = $259;
  $82 = 0;
  while(1) {
   $260 = $82;
   $261 = $65;
   $262 = ($260|0)<($261|0);
   if (!($262)) {
    break;
   }
   $263 = $82;
   $42 = $81;
   $43 = $263;
   $264 = $42;
   $265 = HEAP32[$264>>2]|0;
   $266 = $43;
   $267 = (($265) + ($266<<3)|0);
   $268 = (__ZNK5Eigen8internal7conj_ifILb0EEclIdEERKT_S6_($69,$267)|0);
   $269 = +HEAPF64[$268>>3];
   $270 = $63;
   $271 = $72;
   $272 = (($270) + ($271<<3)|0);
   HEAPF64[$272>>3] = $269;
   $273 = $72;
   $274 = (($273) + 1)|0;
   $72 = $274;
   $275 = $82;
   $276 = (($275) + 1)|0;
   $82 = $276;
  }
  $277 = HEAP32[$67>>2]|0;
  $278 = HEAP32[$68>>2]|0;
  $279 = (($277) - ($278))|0;
  $280 = $65;
  $281 = (($279) - ($280))|0;
  $282 = $72;
  $283 = (($282) + ($281))|0;
  $72 = $283;
  $284 = $80;
  $285 = (($284) + 1)|0;
  $80 = $285;
 }
 STACKTOP = sp;return;
}
function __ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi3EE9colStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi3EE11outerStrideEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi3EE9rowStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi3EE11innerStrideEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi3EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11outerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen15DenseCoeffsBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi3EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11innerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li0EEC2ERKS9_SC_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen11ProductImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li0ENS_5DenseEEC2Ev($6);
 $7 = $4;
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERKS8_($6,$7);
 $8 = ((($6)) + 64|0);
 $9 = $5;
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERKS8_($8,$9);
 $10 = $4;
 $11 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($10)|0);
 $12 = $5;
 $13 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($12)|0);
 $14 = ($11|0)==($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2150|0),(2290|0),97,(2323|0));
  // unreachable;
 }
}
function __ZN5Eigen11ProductImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li0ENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal18dense_product_baseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li0ELi8EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18dense_product_baseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li0ELi8EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_7ProductINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_7ProductINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_7ProductINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_7ProductINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen7NoAliasINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_10MatrixBaseEEC2ERS9_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li0EEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li0EEENS0_13sub_assign_opIddEENS0_11Dense2DenseEvE3runERSA_RKSC_RKSE_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_7ProductINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal10AssignmentINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li0EEENS0_13sub_assign_opIddEENS0_11Dense2DenseEvE3runERSA_RKSC_RKSE_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li0EE4rowsEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  ___assert_fail((4653|0),(4706|0),176,(2040|0));
  // unreachable;
 }
 $11 = $3;
 $12 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($11)|0);
 $13 = $4;
 $14 = (__ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li0EE4colsEv($13)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  $16 = $3;
  $17 = $4;
  $18 = (__ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li0EE3lhsEv($17)|0);
  $19 = $4;
  $20 = (__ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li0EE3rhsEv($19)|0);
  __ZN5Eigen8internal20generic_product_implINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_NS_10DenseShapeESB_Li8EE5subToISA_EEvRT_RKSA_SH_($16,$18,$20);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4653|0),(4706|0),176,(2040|0));
  // unreachable;
 }
}
function __ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 64|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal20generic_product_implINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_NS_10DenseShapeESB_Li8EE5subToISA_EEvRT_RKSA_SH_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $5;
 $8 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($7)|0);
 $9 = $3;
 $10 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($9)|0);
 $11 = (($8) + ($10))|0;
 $12 = $3;
 $13 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($12)|0);
 $14 = (($11) + ($13))|0;
 $15 = ($14|0)<(20);
 if ($15) {
  $16 = $5;
  $17 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($16)|0);
  $18 = ($17|0)>(0);
  if ($18) {
   $19 = $3;
   $20 = $4;
   $21 = $5;
   __ZN5Eigen8internal20generic_product_implINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_NS_10DenseShapeESB_Li3EE5subToISA_EEvRT_RKSA_SH_($19,$20,$21);
   STACKTOP = sp;return;
  }
 }
 $22 = $3;
 $23 = $4;
 $24 = $5;
 HEAPF64[$6>>3] = -1.0;
 __ZN5Eigen8internal20generic_product_implINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_NS_10DenseShapeESB_Li8EE13scaleAndAddToISA_EEvRT_RKSA_SH_RKd($22,$23,$24,$6);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li0EE3lhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li0EE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 64|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal20generic_product_implINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_NS_10DenseShapeESB_Li3EE5subToISA_EEvRT_RKSA_SH_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $6 = sp;
 $7 = sp + 140|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZNK5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE11lazyProductIS9_EEKNS_7ProductIS9_T_Li1EEERKNS0_ISD_EE($6,$9,$10);
 __ZN5Eigen8internal13sub_assign_opIddEC2Ev($7);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li1EEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_($8,$6,$7);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal20generic_product_implINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_NS_10DenseShapeESB_Li8EE13scaleAndAddToISA_EEvRT_RKSA_SH_RKd($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $10 = sp + 32|0;
 $11 = sp + 48|0;
 $12 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $15 = $4;
 $16 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($15)|0);
 $17 = $5;
 $18 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($17)|0);
 $19 = ($16|0)==($18|0);
 if (!($19)) {
  ___assert_fail((3522|0),(3575|0),460,(3629|0));
  // unreachable;
 }
 $20 = $4;
 $21 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($20)|0);
 $22 = $6;
 $23 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($22)|0);
 $24 = ($21|0)==($23|0);
 if (!($24)) {
  ___assert_fail((3522|0),(3575|0),460,(3629|0));
  // unreachable;
 }
 $25 = $5;
 $26 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($25)|0);
 $27 = ($26|0)==(0);
 if ($27) {
  STACKTOP = sp;return;
 }
 $28 = $5;
 $29 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($28)|0);
 $30 = ($29|0)==(0);
 if ($30) {
  STACKTOP = sp;return;
 }
 $31 = $6;
 $32 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($31)|0);
 $33 = ($32|0)==(0);
 if ($33) {
  STACKTOP = sp;return;
 }
 $34 = $5;
 $35 = (__ZN5Eigen8internal11blas_traitsINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7extractERKSA_($34)|0);
 $8 = $35;
 $36 = $6;
 $37 = (__ZN5Eigen8internal11blas_traitsINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7extractERKSA_($36)|0);
 $9 = $37;
 $38 = $7;
 $39 = +HEAPF64[$38>>3];
 $40 = $5;
 $41 = (+__ZN5Eigen8internal11blas_traitsINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE19extractScalarFactorERKSA_($40));
 $42 = $39 * $41;
 $43 = $6;
 $44 = (+__ZN5Eigen8internal11blas_traitsINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE19extractScalarFactorERKSA_($43));
 $45 = $42 * $44;
 HEAPF64[$10>>3] = $45;
 $46 = $4;
 $47 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($46)|0);
 $48 = $4;
 $49 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($48)|0);
 $50 = $8;
 $51 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($50)|0);
 __ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEC2Eiiiib($11,$47,$49,$51,1,1);
 $52 = $8;
 $53 = $9;
 $54 = $4;
 __THREW__ = 0;
 invoke_viiiiii(317,($12|0),($52|0),($53|0),($54|0),($10|0),($11|0));
 $55 = __THREW__; __THREW__ = 0;
 $56 = $55&1;
 if (!($56)) {
  $57 = $5;
  __THREW__ = 0;
  $58 = (invoke_ii(318,($57|0))|0);
  $59 = __THREW__; __THREW__ = 0;
  $60 = $59&1;
  if (!($60)) {
   $61 = $6;
   __THREW__ = 0;
   $62 = (invoke_ii(267,($61|0))|0);
   $63 = __THREW__; __THREW__ = 0;
   $64 = $63&1;
   if (!($64)) {
    $65 = $5;
    __THREW__ = 0;
    $66 = (invoke_ii(267,($65|0))|0);
    $67 = __THREW__; __THREW__ = 0;
    $68 = $67&1;
    if (!($68)) {
     __THREW__ = 0;
     invoke_viiiii(319,($12|0),($58|0),($62|0),($66|0),0);
     $69 = __THREW__; __THREW__ = 0;
     $70 = $69&1;
     if (!($70)) {
      __ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EED2Ev($11);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $71 = ___cxa_find_matching_catch_2()|0;
 $72 = tempRet0;
 $13 = $71;
 $14 = $72;
 __THREW__ = 0;
 invoke_vi(140,($11|0));
 $73 = __THREW__; __THREW__ = 0;
 $74 = $73&1;
 if ($74) {
  $77 = ___cxa_find_matching_catch_3(0|0)|0;
  $78 = tempRet0;
  ___clang_call_terminate($77);
  // unreachable;
 } else {
  $75 = $13;
  $76 = $14;
  ___resumeException($75|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li1EEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li1EEENS0_13sub_assign_opIddEENS0_11Dense2DenseEvE3runERSA_RKSC_RKSE_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZNK5Eigen10MatrixBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE11lazyProductIS9_EEKNS_7ProductIS9_T_Li1EEERKNS0_ISD_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($5)|0);
 $7 = $4;
 $8 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($7)|0);
 __ZN5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li1EEC2ERKS9_SC_($0,$6,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li1EEENS0_13sub_assign_opIddEENS0_11Dense2DenseEvE3runERSA_RKSC_RKSE_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li1EEEEEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li1EEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li1EEEEEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li1EEELb0EE3runERKSA_RKSC_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li1EEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $6 = sp + 36|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEEEC2ERKSC_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(320,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(321,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(322,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(323,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(324,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(325,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(325,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(326,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li1EEELb0EE3runERKSA_RKSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEEEC2ERKSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEELi8ENS_10DenseShapeESD_ddEC2ERKSC_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li1EEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li1EE4rowsEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  ___assert_fail((4653|0),(2091|0),710,(2132|0));
  // unreachable;
 }
 $11 = $3;
 $12 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($11)|0);
 $13 = $4;
 $14 = (__ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li1EE4colsEv($13)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4653|0),(2091|0),710,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EEC2ERKNS2_IS9_Lin1ELin1ELb0EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS2_INS_7ProductISB_SB_Li1EEEEENS0_13sub_assign_opIddEELi0EEC2ERSC_RKSF_RKSH_RSB_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS3_INS_7ProductISC_SC_Li1EEEEENS0_13sub_assign_opIddEELi0EEELi0ELi0EE3runERSJ_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = 0;
 while(1) {
  $4 = $2;
  $5 = $1;
  $6 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS2_INS_7ProductISB_SB_Li1EEEEENS0_13sub_assign_opIddEELi0EE9outerSizeEv($5)|0);
  $7 = ($4|0)<($6|0);
  if (!($7)) {
   break;
  }
  $3 = 0;
  while(1) {
   $8 = $3;
   $9 = $1;
   $10 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS2_INS_7ProductISB_SB_Li1EEEEENS0_13sub_assign_opIddEELi0EE9innerSizeEv($9)|0);
   $11 = ($8|0)<($10|0);
   if (!($11)) {
    break;
   }
   $12 = $1;
   $13 = $2;
   $14 = $3;
   __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS2_INS_7ProductISB_SB_Li1EEEEENS0_13sub_assign_opIddEELi0EE23assignCoeffByOuterInnerEii($12,$13,$14);
   $15 = $3;
   $16 = (($15) + 1)|0;
   $3 = $16;
  }
  $17 = $2;
  $18 = (($17) + 1)|0;
  $2 = $18;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEELi8ENS_10DenseShapeESD_ddED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEELi8ENS_10DenseShapeESD_ddEC2ERKSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(327,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  label = 10;
 } else {
  __THREW__ = 0;
  invoke_vii(328,($6|0),($8|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if ($12) {
   label = 10;
  } else {
   $13 = ((($6)) + 64|0);
   $14 = $3;
   __THREW__ = 0;
   $15 = (invoke_ii(329,($14|0))|0);
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if ($17) {
    label = 10;
   } else {
    __THREW__ = 0;
    invoke_vii(328,($13|0),($15|0));
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if ($19) {
     label = 10;
    } else {
     $20 = ((($6)) + 128|0);
     __THREW__ = 0;
     invoke_vii(321,($20|0),($6|0));
     $21 = __THREW__; __THREW__ = 0;
     $22 = $21&1;
     if ($22) {
      label = 10;
     } else {
      $23 = ((($6)) + 140|0);
      $24 = ((($6)) + 64|0);
      __THREW__ = 0;
      invoke_vii(321,($23|0),($24|0));
      $25 = __THREW__; __THREW__ = 0;
      $26 = $25&1;
      if ($26) {
       $37 = ___cxa_find_matching_catch_2()|0;
       $38 = tempRet0;
       $4 = $37;
       $5 = $38;
      } else {
       $27 = ((($6)) + 152|0);
       $28 = $3;
       __THREW__ = 0;
       $29 = (invoke_ii(327,($28|0))|0);
       $30 = __THREW__; __THREW__ = 0;
       $31 = $30&1;
       if (!($31)) {
        __THREW__ = 0;
        $32 = (invoke_ii(267,($29|0))|0);
        $33 = __THREW__; __THREW__ = 0;
        $34 = $33&1;
        if (!($34)) {
         HEAP32[$27>>2] = $32;
         STACKTOP = sp;return;
        }
       }
       $39 = ___cxa_find_matching_catch_2()|0;
       $40 = tempRet0;
       $4 = $39;
       $5 = $40;
       __THREW__ = 0;
       invoke_vi(325,($23|0));
       $41 = __THREW__; __THREW__ = 0;
       $42 = $41&1;
       if ($42) {
        $49 = ___cxa_find_matching_catch_3(0|0)|0;
        $50 = tempRet0;
        ___clang_call_terminate($49);
        // unreachable;
       }
      }
      __THREW__ = 0;
      invoke_vi(325,($20|0));
      $43 = __THREW__; __THREW__ = 0;
      $44 = $43&1;
      if ($44) {
       $49 = ___cxa_find_matching_catch_3(0|0)|0;
       $50 = tempRet0;
       ___clang_call_terminate($49);
       // unreachable;
      }
     }
    }
   }
  }
 }
 if ((label|0) == 10) {
  $35 = ___cxa_find_matching_catch_2()|0;
  $36 = tempRet0;
  $4 = $35;
  $5 = $36;
 }
 __THREW__ = 0;
 invoke_vi(330,($6|0));
 $45 = __THREW__; __THREW__ = 0;
 $46 = $45&1;
 if ($46) {
  $49 = ___cxa_find_matching_catch_3(0|0)|0;
  $50 = tempRet0;
  ___clang_call_terminate($49);
  // unreachable;
 } else {
  $47 = $4;
  $48 = $5;
  ___resumeException($47|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li1EE3lhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li1EE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 64|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li1EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li1EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 64|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal15block_evaluatorINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EEC2ERKNS2_IS9_Lin1ELin1ELb0EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES5_EC2ERKSA_($6,$7);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(331,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 do {
  if (!($11)) {
   $12 = $9;
   $13 = (($12>>>0) % 1)&-1;
   $14 = ($13|0)==(0);
   if ($14) {
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiii(162,(3035|0),(3198|0),1107,(3238|0));
    $15 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $4 = $16;
 $5 = $17;
 __THREW__ = 0;
 invoke_vi(332,($6|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $4;
  $21 = $5;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES5_EC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(331,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(333,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(166,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(310,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(121,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(334,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES5_ED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS2_INS_7ProductISB_SB_Li1EEEEENS0_13sub_assign_opIddEELi0EE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE9outerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS2_INS_7ProductISB_SB_Li1EEEEENS0_13sub_assign_opIddEELi0EE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE9innerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS2_INS_7ProductISB_SB_Li1EEEEENS0_13sub_assign_opIddEELi0EE23assignCoeffByOuterInnerEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = (__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS2_INS_7ProductISB_SB_Li1EEEEENS0_13sub_assign_opIddEELi0EE20rowIndexByOuterInnerEii($9,$10)|0);
 $6 = $11;
 $12 = $4;
 $13 = $5;
 $14 = (__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS2_INS_7ProductISB_SB_Li1EEEEENS0_13sub_assign_opIddEELi0EE20colIndexByOuterInnerEii($12,$13)|0);
 $7 = $14;
 $15 = $6;
 $16 = $7;
 __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS2_INS_7ProductISB_SB_Li1EEEEENS0_13sub_assign_opIddEELi0EE11assignCoeffEii($8,$15,$16);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE4colsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS2_INS_7ProductISB_SB_Li1EEEEENS0_13sub_assign_opIddEELi0EE20rowIndexByOuterInnerEii($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS2_INS_7ProductISB_SB_Li1EEEEENS0_13sub_assign_opIddEELi0EE20colIndexByOuterInnerEii($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS2_INS_7ProductISB_SB_Li1EEEEENS0_13sub_assign_opIddEELi0EE11assignCoeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $8 = ((($7)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$7>>2]|0;
 $11 = $4;
 $12 = $5;
 $13 = (__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES5_E8coeffRefEii($10,$11,$12)|0);
 $14 = ((($7)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $4;
 $17 = $5;
 $18 = (+__ZNK5Eigen8internal17product_evaluatorINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEELi8ENS_10DenseShapeESD_ddE5coeffEii($15,$16,$17));
 HEAPF64[$6>>3] = $18;
 __ZNK5Eigen8internal13sub_assign_opIddE11assignCoeffERdRKd($9,$13,$6);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES5_E8coeffRefEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES5_E9colStrideEv($6)|0);
 $10 = Math_imul($8, $9)|0;
 $11 = $4;
 $12 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES5_E9rowStrideEv($6)|0);
 $13 = Math_imul($11, $12)|0;
 $14 = (($10) + ($13))|0;
 $15 = (($7) + ($14<<3)|0);
 STACKTOP = sp;return ($15|0);
}
function __ZNK5Eigen8internal17product_evaluatorINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEELi8ENS_10DenseShapeESD_ddE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 464|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(464|0);
 $6 = sp + 360|0;
 $7 = sp + 272|0;
 $8 = sp + 184|0;
 $9 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $10 = $3;
 $11 = $4;
 __ZNK5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE3rowEi($6,$10,$11);
 __ZNK5Eigen9DenseBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE9transposeEv($7,$6);
 $12 = ((($10)) + 64|0);
 $13 = $5;
 __ZNK5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE3colEi($8,$12,$13);
 __ZNK5Eigen10MatrixBaseINS_9TransposeIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEE12cwiseProductINS2_ISB_Lin1ELi1ELb1EEEEEKNS_13CwiseBinaryOpINS_8internal17scalar_product_opIdNSJ_6traitsIT_E6ScalarEEEKSE_KSM_EERKNS0_ISM_EE($9,$7,$8);
 $14 = (+__ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE3sumEv($9));
 STACKTOP = sp;return (+$14);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES5_E9colStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES5_E9rowStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE3rowEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($5)|0);
 $7 = $4;
 __ZN5Eigen5BlockIKNS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEC2ERS9_i($0,$6,$7);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE9transposeEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $1;
 $3 = $2;
 $4 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($3)|0);
 __ZN5Eigen9TransposeIKNS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERSC_($0,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen10MatrixBaseINS_9TransposeIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEE12cwiseProductINS2_ISB_Lin1ELi1ELb1EEEEEKNS_13CwiseBinaryOpINS_8internal17scalar_product_opIdNSJ_6traitsIT_E6ScalarEEEKSE_KSM_EERKNS0_ISM_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp + 8|0;
 $3 = $1;
 $4 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_9TransposeIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEE7derivedEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE7derivedEv($8)|0);
 __ZN5Eigen8internal17scalar_product_opIddEC2Ev($5);
 __ZN5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEEEC2ERSI_RSK_RKS3_($0,$7,$9,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE3colEi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE7derivedEv($5)|0);
 $7 = $4;
 __ZN5Eigen5BlockIKNS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEC2ERS9_i($0,$6,$7);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE3sumEv($0) {
 $0 = $0|0;
 var $1 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 12|0;
 $2 = $0;
 $4 = $2;
 $5 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE4sizeEv($4)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  $1 = 0.0;
  $9 = $1;
  STACKTOP = sp;return (+$9);
 } else {
  $7 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE7derivedEv($4)|0);
  __ZN5Eigen8internal13scalar_sum_opIddEC2Ev($3);
  $8 = (+__ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE5reduxINS2_13scalar_sum_opIddEEEEdRKT_($7,$3));
  $1 = $8;
  $9 = $1;
  STACKTOP = sp;return (+$9);
 }
 return +(0.0);
}
function __ZN5Eigen5BlockIKNS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEC2ERS9_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen9BlockImplIKNS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ENS_5DenseEEC2ERSA_i($6,$7,$8);
 $9 = $5;
 $10 = ($9|0)>=(0);
 if (!($10)) {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
 $11 = $5;
 $12 = $4;
 $13 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($12)|0);
 $14 = ($11|0)<($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen9BlockImplIKNS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ENS_5DenseEEC2ERSA_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERSB_i($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERSB_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1EE4dataEv($7)|0);
 $9 = $5;
 $10 = $4;
 $11 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11innerStrideEv($10)|0);
 $12 = Math_imul($9, $11)|0;
 $13 = (($8) + ($12<<3)|0);
 $14 = $4;
 $15 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($14)|0);
 __ZN5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2EPKdii($6,$13,1,$15);
 $16 = ((($6)) + 12|0);
 $17 = $4;
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERKS8_($16,$17);
 $18 = ((($6)) + 76|0);
 $19 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($18,$19);
 $20 = ((($6)) + 80|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($20,0);
 __ZN5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE4initEv($6);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2EPKdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $6;
  $19 = (1)==($18|0);
  $or$cond = $17 & $19;
  $20 = $7;
  $21 = ($20|0)>=(0);
  $or$cond3 = $or$cond & $21;
  if (!($or$cond3)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE11checkSanityISB_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11innerStrideEv($3)|0);
 $5 = ((($2)) + 84|0);
 HEAP32[$5>>2] = $4;
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE11checkSanityISB_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen9TransposeIKNS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen13TransposeImplIKNS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS_5DenseEEC2Ev($4);
 $5 = $3;
 __ZN5Eigen5BlockIKNS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEC2ERKSA_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen13TransposeImplIKNS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_9TransposeIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockIKNS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen9BlockImplIKNS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ENS_5DenseEEC2ERKSC_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_9TransposeIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_9TransposeIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_9TransposeIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplIKNS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ENS_5DenseEEC2ERKSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERKSC_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERKSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2ERKSC_($4,$5);
 $6 = ((($4)) + 12|0);
 $7 = $3;
 $8 = ((($7)) + 12|0);
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERKS8_($6,$8);
 $9 = ((($4)) + 76|0);
 $10 = $3;
 $11 = ((($10)) + 76|0);
 ;HEAP32[$9>>2]=HEAP32[$11>>2]|0;HEAP32[$9+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$9+8>>2]=HEAP32[$11+8>>2]|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EEC2ERKSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$4>>2] = $6;
 $7 = ((($4)) + 4|0);
 $8 = $3;
 $9 = ((($8)) + 4|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2ERKS2_($7,$9);
 $10 = ((($4)) + 8|0);
 $11 = $3;
 $12 = ((($11)) + 8|0);
 ;HEAP32[$10>>2]=HEAP32[$12>>2]|0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_9TransposeIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEEEC2ERSI_RSK_RKS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen17CwiseBinaryOpImplINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEENS_5DenseEEC2Ev($8);
 $9 = $5;
 __ZN5Eigen9TransposeIKNS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERKSD_($8,$9);
 $10 = ((($8)) + 88|0);
 $11 = $6;
 __ZN5Eigen5BlockIKNS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEC2ERKSA_($10,$11);
 $12 = ((($8)) + 176|0);
 $13 = $7;
 __ZN5Eigen8internal17scalar_product_opIddEC2ERKS2_($12,$13);
 $14 = $5;
 $15 = (__ZNK5Eigen9TransposeIKNS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4rowsEv($14)|0);
 $16 = $6;
 $17 = (__ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4rowsEv($16)|0);
 $18 = ($15|0)==($17|0);
 if (!($18)) {
  ___assert_fail((2820|0),(2877|0),110,(2916|0));
  // unreachable;
 }
 $19 = $5;
 $20 = (__ZNK5Eigen9TransposeIKNS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4colsEv($19)|0);
 $21 = $6;
 $22 = (__ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4colsEv($21)|0);
 $23 = ($20|0)==($22|0);
 if ($23) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2820|0),(2877|0),110,(2916|0));
  // unreachable;
 }
}
function __ZN5Eigen17CwiseBinaryOpImplINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9TransposeIKNS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERKSD_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen5BlockIKNS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEC2ERKSA_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockIKNS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen9BlockImplIKNS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ENS_5DenseEEC2ERKSC_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9TransposeIKNS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9TransposeIKNS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen10MatrixBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplIKNS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ENS_5DenseEEC2ERKSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EEC2ERKSC_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EEC2ERKSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EEC2ERKSC_($4,$5);
 $6 = ((($4)) + 12|0);
 $7 = $3;
 $8 = ((($7)) + 12|0);
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERKS8_($6,$8);
 $9 = ((($4)) + 76|0);
 $10 = $3;
 $11 = ((($10)) + 76|0);
 ;HEAP32[$9>>2]=HEAP32[$11>>2]|0;HEAP32[$9+4>>2]=HEAP32[$11+4>>2]|0;HEAP32[$9+8>>2]=HEAP32[$11+8>>2]|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EEC2ERKSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 ;HEAP32[$4>>2]=HEAP32[$5>>2]|0;HEAP32[$4+4>>2]=HEAP32[$5+4>>2]|0;
 $6 = ((($4)) + 8|0);
 $7 = $3;
 $8 = ((($7)) + 8|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2ERKS2_($6,$8);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen5BlockIKNS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEC2ERS9_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen9BlockImplIKNS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ENS_5DenseEEC2ERSA_i($6,$7,$8);
 $9 = $5;
 $10 = ($9|0)>=(0);
 if (!($10)) {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
 $11 = $5;
 $12 = $4;
 $13 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($12)|0);
 $14 = ($11|0)<($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen9BlockImplIKNS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ENS_5DenseEEC2ERSA_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EEC2ERSB_i($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EEC2ERSB_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1EE4dataEv($7)|0);
 $9 = $5;
 $10 = $4;
 $11 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11outerStrideEv($10)|0);
 $12 = Math_imul($9, $11)|0;
 $13 = (($8) + ($12<<3)|0);
 $14 = $4;
 $15 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($14)|0);
 __ZN5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EEC2EPKdii($6,$13,$15,1);
 $16 = ((($6)) + 12|0);
 $17 = $4;
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERKS8_($16,$17);
 $18 = ((($6)) + 76|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($18,0);
 $19 = ((($6)) + 80|0);
 $20 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($19,$20);
 __ZN5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE4initEv($6);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EEC2EPKdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $7;
  $19 = ($18|0)>=(0);
  $or$cond = $17 & $19;
  $20 = $7;
  $21 = (1)==($20|0);
  $or$cond3 = $or$cond & $21;
  if (!($or$cond3)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE11checkSanityISB_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11outerStrideEv($3)|0);
 $5 = ((($2)) + 84|0);
 HEAP32[$5>>2] = $4;
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE11checkSanityISB_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE5reduxINS2_13scalar_sum_opIddEEEEdRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE4rowsEv($7)|0);
 $9 = ($8|0)>(0);
 if (!($9)) {
  ___assert_fail((2930|0),(2998|0),413,(3029|0));
  // unreachable;
 }
 $10 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE4colsEv($7)|0);
 $11 = ($10|0)>(0);
 if (!($11)) {
  ___assert_fail((2930|0),(2998|0),413,(3029|0));
  // unreachable;
 }
 $12 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE7derivedEv($7)|0);
 __ZN5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEEC2ERKSM_($4,$12);
 $13 = $3;
 __THREW__ = 0;
 $14 = (+invoke_dii(335,($4|0),($13|0)));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if (!($16)) {
  __ZN5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEED2Ev($4);
  STACKTOP = sp;return (+$14);
 }
 $17 = ___cxa_find_matching_catch_2()|0;
 $18 = tempRet0;
 $5 = $17;
 $6 = $18;
 __THREW__ = 0;
 invoke_vi(336,($4|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $23 = ___cxa_find_matching_catch_3(0|0)|0;
  $24 = tempRet0;
  ___clang_call_terminate($23);
  // unreachable;
 } else {
  $21 = $5;
  $22 = $6;
  ___resumeException($21|0);
  // unreachable;
 }
 return +(0.0);
}
function __ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 88|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9TransposeIKNS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE4colsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEEC2ERKSM_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEEC2ERKSM_($4,$5);
 $6 = ((($4)) + 32|0);
 $7 = $3;
 HEAP32[$6>>2] = $7;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10redux_implINS0_13scalar_sum_opIddEENS0_15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS9_INS9_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS9_ISI_Lin1ELi1ELb1EEEEEEELi0ELi0EE3runERKSQ_RKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = sp + 16|0;
 $6 = sp + 8|0;
 $9 = sp;
 $2 = $0;
 $3 = $1;
 $10 = $2;
 $11 = (__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE4rowsEv($10)|0);
 $12 = ($11|0)>(0);
 if (!($12)) {
  ___assert_fail((3254|0),(2998|0),192,(2040|0));
  // unreachable;
 }
 $13 = $2;
 $14 = (__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE4colsEv($13)|0);
 $15 = ($14|0)>(0);
 if (!($15)) {
  ___assert_fail((3254|0),(2998|0),192,(2040|0));
  // unreachable;
 }
 $16 = $2;
 $17 = (+__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE17coeffByOuterInnerEii($16,0,0));
 HEAPF64[$4>>3] = $17;
 $5 = 1;
 while(1) {
  $18 = $5;
  $19 = $2;
  $20 = (__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE9innerSizeEv($19)|0);
  $21 = ($18|0)<($20|0);
  if (!($21)) {
   break;
  }
  $22 = $3;
  $23 = $2;
  $24 = $5;
  $25 = (+__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE17coeffByOuterInnerEii($23,0,$24));
  HEAPF64[$6>>3] = $25;
  $26 = (+__ZNK5Eigen8internal13scalar_sum_opIddEclERKdS4_($22,$4,$6));
  HEAPF64[$4>>3] = $26;
  $27 = $5;
  $28 = (($27) + 1)|0;
  $5 = $28;
 }
 $7 = 1;
 while(1) {
  $29 = $7;
  $30 = $2;
  $31 = (__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE9outerSizeEv($30)|0);
  $32 = ($29|0)<($31|0);
  if (!($32)) {
   break;
  }
  $8 = 0;
  while(1) {
   $33 = $8;
   $34 = $2;
   $35 = (__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE9innerSizeEv($34)|0);
   $36 = ($33|0)<($35|0);
   if (!($36)) {
    break;
   }
   $37 = $3;
   $38 = $2;
   $39 = $7;
   $40 = $8;
   $41 = (+__ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE17coeffByOuterInnerEii($38,$39,$40));
   HEAPF64[$9>>3] = $41;
   $42 = (+__ZNK5Eigen8internal13scalar_sum_opIddEclERKdS4_($37,$4,$9));
   HEAPF64[$4>>3] = $42;
   $43 = $8;
   $44 = (($43) + 1)|0;
   $8 = $44;
  }
  $45 = $7;
  $46 = (($45) + 1)|0;
  $7 = $46;
 }
 $47 = +HEAPF64[$4>>3];
 STACKTOP = sp;return (+$47);
}
function __ZN5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEEC2ERKSM_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEENS0_10IndexBasedESN_ddEC2ERKSM_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEENS0_10IndexBasedESN_ddEC2ERKSM_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(337,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  label = 8;
 } else {
  __THREW__ = 0;
  invoke_vii(151,($6|0),($8|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if ($12) {
   label = 8;
  } else {
   $13 = ((($6)) + 4|0);
   $14 = $3;
   __THREW__ = 0;
   $15 = (invoke_ii(338,($14|0))|0);
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if ($17) {
    label = 8;
   } else {
    __THREW__ = 0;
    invoke_vii(339,($13|0),($15|0));
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if ($19) {
     label = 8;
    } else {
     $20 = ((($6)) + 20|0);
     $21 = $3;
     __THREW__ = 0;
     $22 = (invoke_ii(340,($21|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      __THREW__ = 0;
      invoke_vii(341,($20|0),($22|0));
      $25 = __THREW__; __THREW__ = 0;
      $26 = $25&1;
      if (!($26)) {
       STACKTOP = sp;return;
      }
     }
     $29 = ___cxa_find_matching_catch_2()|0;
     $30 = tempRet0;
     $4 = $29;
     $5 = $30;
     __THREW__ = 0;
     invoke_vi(342,($13|0));
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      $37 = ___cxa_find_matching_catch_3(0|0)|0;
      $38 = tempRet0;
      ___clang_call_terminate($37);
      // unreachable;
     }
    }
   }
  }
 }
 if ((label|0) == 8) {
  $27 = ___cxa_find_matching_catch_2()|0;
  $28 = tempRet0;
  $4 = $27;
  $5 = $28;
 }
 __THREW__ = 0;
 invoke_vi(343,($6|0));
 $33 = __THREW__; __THREW__ = 0;
 $34 = $33&1;
 if ($34) {
  $37 = ___cxa_find_matching_catch_3(0|0)|0;
  $38 = tempRet0;
  ___clang_call_terminate($37);
  // unreachable;
 } else {
  $35 = $4;
  $36 = $5;
  ___resumeException($35|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEEE7functorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 176|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEEE3lhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEEC2ERSG_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEEC2ERKSF_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEEE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 88|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2ERSD_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2ERKSC_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEEC2ERKSF_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEENS0_10IndexBasedEdEC2ERKSF_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEENS0_10IndexBasedEdEC2ERKSF_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEEC2Ev($6);
 $7 = ((($6)) + 4|0);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(344,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  __THREW__ = 0;
  invoke_vii(345,($7|0),($9|0));
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if (!($13)) {
   STACKTOP = sp;return;
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $4 = $14;
 $5 = $15;
 __THREW__ = 0;
 invoke_vi(346,($6|0));
 $16 = __THREW__; __THREW__ = 0;
 $17 = $16&1;
 if ($17) {
  $20 = ___cxa_find_matching_catch_3(0|0)|0;
  $21 = tempRet0;
  ___clang_call_terminate($20);
  // unreachable;
 } else {
  $18 = $4;
  $19 = $5;
  ___resumeException($18|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9TransposeIKNS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERSD_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERKSC_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERKSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERKNS2_ISB_Li1ELin1ELb0EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EEC2ERKNS2_ISB_Li1ELin1ELb0EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEEC2ERKSC_($6,$7);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(347,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 do {
  if (!($11)) {
   $12 = $9;
   $13 = (($12>>>0) % 1)&-1;
   $14 = ($13|0)==(0);
   if ($14) {
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiii(162,(3035|0),(3198|0),1107,(3238|0));
    $15 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $4 = $16;
 $5 = $17;
 __THREW__ = 0;
 invoke_vi(348,($6|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $4;
  $21 = $5;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEEC2ERKSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(347,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(349,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(121,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(350,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(166,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(351,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11outerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 84|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2ERKSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EEC2ERKNS2_ISB_Lin1ELi1ELb1EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EEC2ERKNS2_ISB_Lin1ELi1ELb1EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEC2ERKSC_($6,$7);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(352,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 do {
  if (!($11)) {
   $12 = $9;
   $13 = (($12>>>0) % 1)&-1;
   $14 = ($13|0)==(0);
   if ($14) {
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiii(162,(3035|0),(3198|0),1107,(3238|0));
    $15 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $4 = $16;
 $5 = $17;
 __THREW__ = 0;
 invoke_vi(353,($6|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $4;
  $21 = $5;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEC2ERKSC_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(352,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(354,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(166,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(355,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(121,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(356,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11innerStrideEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 84|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEENS0_10IndexBasedEdED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEENS0_10IndexBasedEdED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 4|0);
 __THREW__ = 0;
 invoke_vi(357,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch_2()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 __THREW__ = 0;
 invoke_vi(346,($4|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $2;
  $13 = $3;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEEE4rowsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEEE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE17coeffByOuterInnerEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $5;
 $8 = $4;
 $9 = (+__ZNK5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEENS0_10IndexBasedESN_ddE5coeffEii($6,$7,$8));
 STACKTOP = sp;return (+$9);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE9innerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE9outerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEENS0_10IndexBasedESN_ddE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 8|0;
 $7 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = ((($8)) + 4|0);
 $10 = $4;
 $11 = $5;
 $12 = (+__ZNK5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEENS0_10IndexBasedEdE5coeffEii($9,$10,$11));
 HEAPF64[$6>>3] = $12;
 $13 = ((($8)) + 20|0);
 $14 = $4;
 $15 = $5;
 $16 = (+__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE5coeffEii($13,$14,$15));
 HEAPF64[$7>>3] = $16;
 $17 = (+__ZNK5Eigen8internal17scalar_product_opIddEclERKdS4_($8,$6,$7));
 STACKTOP = sp;return (+$17);
}
function __ZNK5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEENS0_10IndexBasedEdE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 4|0);
 $8 = $5;
 $9 = $4;
 $10 = (+__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE5coeffEii($7,$8,$9));
 STACKTOP = sp;return (+$10);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE9colStrideEv($6)|0);
 $10 = Math_imul($8, $9)|0;
 $11 = $4;
 $12 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE9rowStrideEv($6)|0);
 $13 = Math_imul($11, $12)|0;
 $14 = (($10) + ($13))|0;
 $15 = (($7) + ($14<<3)|0);
 $16 = +HEAPF64[$15>>3];
 STACKTOP = sp;return (+$16);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE9colStrideEv($6)|0);
 $10 = Math_imul($8, $9)|0;
 $11 = $4;
 $12 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE9rowStrideEv($6)|0);
 $13 = Math_imul($11, $12)|0;
 $14 = (($10) + ($13))|0;
 $15 = (($7) + ($14<<3)|0);
 $16 = +HEAPF64[$15>>3];
 STACKTOP = sp;return (+$16);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE9colStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE9rowStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE9colStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEE9rowStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen9DenseBaseINS_13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1;
}
function __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEENS0_10IndexBasedESN_ddED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEENS0_10IndexBasedESN_ddED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 20|0);
 __THREW__ = 0;
 invoke_vi(358,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 do {
  if ($7) {
   $11 = ___cxa_find_matching_catch_2()|0;
   $12 = tempRet0;
   $2 = $11;
   $3 = $12;
   $13 = ((($4)) + 4|0);
   __THREW__ = 0;
   invoke_vi(342,($13|0));
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $22 = ___cxa_find_matching_catch_3(0|0)|0;
    $23 = tempRet0;
    ___clang_call_terminate($22);
    // unreachable;
   }
  } else {
   $8 = ((($4)) + 4|0);
   __THREW__ = 0;
   invoke_vi(342,($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $16 = ___cxa_find_matching_catch_2()|0;
    $17 = tempRet0;
    $2 = $16;
    $3 = $17;
    break;
   } else {
    __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEED2Ev($4);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(343,($4|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $2;
  $21 = $3;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES5_ED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEELi8ENS_10DenseShapeESD_ddED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 140|0);
 __THREW__ = 0;
 invoke_vi(325,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 do {
  if ($7) {
   $11 = ___cxa_find_matching_catch_2()|0;
   $12 = tempRet0;
   $2 = $11;
   $3 = $12;
   $13 = ((($4)) + 128|0);
   __THREW__ = 0;
   invoke_vi(325,($13|0));
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $22 = ___cxa_find_matching_catch_3(0|0)|0;
    $23 = tempRet0;
    ___clang_call_terminate($22);
    // unreachable;
   }
  } else {
   $8 = ((($4)) + 128|0);
   __THREW__ = 0;
   invoke_vi(325,($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $16 = ___cxa_find_matching_catch_2()|0;
    $17 = tempRet0;
    $2 = $16;
    $3 = $17;
    break;
   } else {
    __ZN5Eigen8internal14evaluator_baseINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEEED2Ev($4);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(330,($4|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $2;
  $21 = $3;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li1EEC2ERKS9_SC_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen11ProductImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li1ENS_5DenseEEC2Ev($6);
 $7 = $4;
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERKS8_($6,$7);
 $8 = ((($6)) + 64|0);
 $9 = $5;
 __ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERKS8_($8,$9);
 $10 = $4;
 $11 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($10)|0);
 $12 = $5;
 $13 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv($12)|0);
 $14 = ($11|0)==($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2150|0),(2290|0),97,(2323|0));
  // unreachable;
 }
}
function __ZN5Eigen11ProductImplINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li1ENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal18dense_product_baseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li1ELi8EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18dense_product_baseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li1ELi8EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_7ProductINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_7ProductINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_7ProductINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_7ProductINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESA_Li1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal11blas_traitsINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE19extractScalarFactorERKSA_($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return +1;
}
function __ZN5Eigen8internal16parallelize_gemmILb1ENS0_12gemm_functorIdiNS0_29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EEENS_5BlockINS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESD_SD_NS0_19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEEEEiEEvRKT0_T1_SK_SK_b($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp;
 $9 = sp + 16|0;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 HEAP32[$8>>2] = $3;
 $10 = $4&1;
 HEAP8[$9>>0] = $10;
 __ZN5Eigen8internal22ignore_unused_variableIiEEvRKT_($8);
 __ZN5Eigen8internal22ignore_unused_variableIbEEvRKT_($9);
 $11 = $5;
 $12 = $6;
 $13 = $7;
 __ZNK5Eigen8internal12gemm_functorIdiNS0_29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EEENS_5BlockINS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESC_SC_NS0_19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEEEclEiiiiPNS0_16GemmParallelInfoIiEE($11,0,$12,0,$13,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal12gemm_functorIdiNS0_29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EEENS_5BlockINS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESC_SC_NS0_19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEEEC2ERKSC_SH_RSC_RKdRSE_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0.0, $21 = 0, $22 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($12)) + 4|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($12)) + 8|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 $18 = ((($12)) + 16|0);
 $19 = $10;
 $20 = +HEAPF64[$19>>3];
 HEAPF64[$18>>3] = $20;
 $21 = ((($12)) + 24|0);
 $22 = $11;
 HEAP32[$21>>2] = $22;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal12gemm_functorIdiNS0_29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EEENS_5BlockINS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESC_SC_NS0_19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEEEclEiiiiPNS0_16GemmParallelInfoIiEE($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0, $45 = 0, $46 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $6;
 $13 = $10;
 $14 = ($13|0)==(-1);
 if ($14) {
  $15 = ((($12)) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($16)|0);
  $10 = $17;
 }
 $18 = $8;
 $19 = $10;
 $20 = HEAP32[$12>>2]|0;
 $21 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv($20)|0);
 $22 = HEAP32[$12>>2]|0;
 $23 = $7;
 $24 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE8coeffRefEii($22,$23,0)|0);
 $25 = HEAP32[$12>>2]|0;
 $26 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11outerStrideEv($25)|0);
 $27 = ((($12)) + 4|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = $9;
 $30 = (__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE8coeffRefEii($28,0,$29)|0);
 $31 = ((($12)) + 4|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11outerStrideEv($32)|0);
 $34 = ((($12)) + 8|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = $7;
 $37 = $9;
 $38 = (__ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1EE8coeffRefEii($35,$36,$37)|0);
 $39 = ((($12)) + 8|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = (__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11outerStrideEv($40)|0);
 $42 = ((($12)) + 16|0);
 $43 = +HEAPF64[$42>>3];
 $44 = ((($12)) + 24|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = $11;
 __ZN5Eigen8internal29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EE3runEiiiPKdiS4_iPdidRNS0_15level3_blockingIddEEPNS0_16GemmParallelInfoIiEE($18,$19,$21,$24,$26,$30,$33,$38,$41,$43,$45,$46);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEEaSINS_14TranspositionsILin1ELin1EiEEEERS2_RKNS_18TranspositionsBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE4sizeEv($6)|0);
 __ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE11setIdentityEi($5,$7);
 $8 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4sizeEv($5)|0);
 $9 = (($8) - 1)|0;
 $4 = $9;
 while(1) {
  $10 = $4;
  $11 = ($10|0)>=(0);
  if (!($11)) {
   break;
  }
  $12 = $4;
  $13 = $3;
  $14 = $4;
  $15 = (__ZNK5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE5coeffEi($13,$14)|0);
  $16 = HEAP32[$15>>2]|0;
  (__ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE28applyTranspositionOnTheRightEii($5,$12,$16)|0);
  $17 = $4;
  $18 = (($17) + -1)|0;
  $4 = $18;
 }
 $19 = (__ZN5Eigen9EigenBaseINS_17PermutationMatrixILin1ELin1EiEEE7derivedEv($5)|0);
 STACKTOP = sp;return ($19|0);
}
function __ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE11setIdentityEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE6resizeEi($4,$5);
 __ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE11setIdentityEv($4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE7indicesEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE28applyTranspositionOnTheRightEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $8 = sp + 12|0;
 $9 = $0;
 $10 = $1;
 $11 = $2;
 $12 = $9;
 $13 = $10;
 $14 = ($13|0)>=(0);
 $15 = $11;
 $16 = ($15|0)>=(0);
 $or$cond = $14 & $16;
 if (!($or$cond)) {
  ___assert_fail((4957|0),(4994|0),187,(5037|0));
  // unreachable;
 }
 $17 = $10;
 $18 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4sizeEv($12)|0);
 $19 = ($17|0)<($18|0);
 if (!($19)) {
  ___assert_fail((4957|0),(4994|0),187,(5037|0));
  // unreachable;
 }
 $20 = $11;
 $21 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4sizeEv($12)|0);
 $22 = ($20|0)<($21|0);
 if ($22) {
  $23 = (__ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE7indicesEv($12)|0);
  $24 = $10;
  $25 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE8coeffRefEi($23,$24)|0);
  $26 = (__ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE7indicesEv($12)|0);
  $27 = $11;
  $28 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE8coeffRefEi($26,$27)|0);
  $6 = $25;
  $7 = $28;
  $29 = $6;
  $5 = $29;
  $30 = $5;
  $31 = HEAP32[$30>>2]|0;
  HEAP32[$8>>2] = $31;
  $32 = $7;
  $3 = $32;
  $33 = $3;
  $34 = HEAP32[$33>>2]|0;
  $35 = $6;
  HEAP32[$35>>2] = $34;
  $4 = $8;
  $36 = $4;
  $37 = HEAP32[$36>>2]|0;
  $38 = $7;
  HEAP32[$38>>2] = $37;
  $39 = (__ZN5Eigen9EigenBaseINS_17PermutationMatrixILin1ELin1EiEEE7derivedEv($12)|0);
  STACKTOP = sp;return ($39|0);
 } else {
  ___assert_fail((4957|0),(4994|0),187,(5037|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZNK5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZNK5Eigen18TranspositionsBaseINS_14TranspositionsILin1ELin1EiEEE7indicesEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE5coeffEi($5,$6)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZN5Eigen9EigenBaseINS_17PermutationMatrixILin1ELin1EiEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE6resizeEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE7indicesEv($4)|0);
 $6 = $3;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE6resizeEi($5,$6);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE11setIdentityEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $3;
  $10 = (__ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE7indicesEv($4)|0);
  $11 = $3;
  $12 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE8coeffRefEi($10,$11)|0);
  HEAP32[$12>>2] = $9;
  $13 = $3;
  $14 = (($13) + 1)|0;
  $3 = $14;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE7indicesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN5Eigen9EigenBaseINS_17PermutationMatrixILin1ELin1EiEEE7derivedEv($2)|0);
 $4 = (__ZN5Eigen17PermutationMatrixILin1ELin1EiE7indicesEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen17PermutationMatrixILin1ELin1EiE7indicesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE7indicesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_17PermutationMatrixILin1ELin1EiEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen17PermutationMatrixILin1ELin1EiE7indicesEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_17PermutationMatrixILin1ELin1EiEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen17PermutationMatrixILin1ELin1EiE7indicesEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZNK5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE4dataEv($4)|0);
 $6 = $3;
 $7 = (($5) + ($6<<2)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZNK5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERKS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen11InverseImplINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_13SolverStorageEEC2Ev($4);
 $5 = $3;
 __ZN5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS3_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen11InverseImplINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_13SolverStorageEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 __THREW__ = 0;
 invoke_vii(39,($6|0),($7|0));
 $8 = __THREW__; __THREW__ = 0;
 $9 = $8&1;
 if ($9) {
  $23 = ___cxa_find_matching_catch_2()|0;
  $24 = tempRet0;
  $4 = $23;
  $5 = $24;
 } else {
  $10 = ((($6)) + 12|0);
  $11 = $3;
  $12 = ((($11)) + 12|0);
  __THREW__ = 0;
  invoke_vii(359,($10|0),($12|0));
  $13 = __THREW__; __THREW__ = 0;
  $14 = $13&1;
  if ($14) {
   $25 = ___cxa_find_matching_catch_2()|0;
   $26 = tempRet0;
   $4 = $25;
   $5 = $26;
  } else {
   $15 = ((($6)) + 20|0);
   $16 = $3;
   $17 = ((($16)) + 20|0);
   __THREW__ = 0;
   invoke_vii(360,($15|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if (!($19)) {
    $20 = ((($6)) + 32|0);
    $21 = $3;
    $22 = ((($21)) + 32|0);
    ;HEAP32[$20>>2]=HEAP32[$22>>2]|0;HEAP32[$20+4>>2]=HEAP32[$22+4>>2]|0;HEAP16[$20+8>>1]=HEAP16[$22+8>>1]|0;
    STACKTOP = sp;return;
   }
   $27 = ___cxa_find_matching_catch_2()|0;
   $28 = tempRet0;
   $4 = $27;
   $5 = $28;
   __THREW__ = 0;
   invoke_vi(200,($10|0));
   $29 = __THREW__; __THREW__ = 0;
   $30 = $29&1;
   if ($30) {
    $37 = ___cxa_find_matching_catch_3(0|0)|0;
    $38 = tempRet0;
    ___clang_call_terminate($37);
    // unreachable;
   }
  }
  __THREW__ = 0;
  invoke_vi(36,($6|0));
  $31 = __THREW__; __THREW__ = 0;
  $32 = $31&1;
  if ($32) {
   $37 = ___cxa_find_matching_catch_3(0|0)|0;
   $38 = tempRet0;
   ___clang_call_terminate($37);
   // unreachable;
  }
 }
 __THREW__ = 0;
 invoke_vi(201,($6|0));
 $33 = __THREW__; __THREW__ = 0;
 $34 = $33&1;
 if ($34) {
  $37 = ___cxa_find_matching_catch_3(0|0)|0;
  $38 = tempRet0;
  ___clang_call_terminate($37);
  // unreachable;
 } else {
  $35 = $4;
  $36 = $5;
  ___resumeException($35|0);
  // unreachable;
 }
}
function __ZN5Eigen10MatrixBaseINS_7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen17PermutationMatrixILin1ELin1EiEC2ERKS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen17PermutationMatrixILin1ELin1EiE7indicesEv($5)|0);
 __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEC2ERKS1_($4,$6);
 STACKTOP = sp;return;
}
function __ZN5Eigen14TranspositionsILin1ELin1EiEC2ERKS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen14TranspositionsILin1ELin1EiE7indicesEv($5)|0);
 __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEC2ERKS1_($4,$6);
 STACKTOP = sp;return;
}
function __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEC2ERKS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen10MatrixBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2Ev($4);
 $5 = $3;
 __ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EEC2ERKS1_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EEC2ERKS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($5)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7;
 $9 = (__ZN5Eigen8internal28conditional_aligned_new_autoIiLb1EEEPT_j($8)|0);
 HEAP32[$4>>2] = $9;
 $10 = ((($4)) + 4|0);
 $11 = $3;
 $12 = ((($11)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 HEAP32[$10>>2] = $13;
 $14 = $3;
 $15 = HEAP32[$14>>2]|0;
 $16 = $3;
 $17 = HEAP32[$16>>2]|0;
 $18 = $3;
 $19 = ((($18)) + 4|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = $20;
 $22 = (($17) + ($21<<2)|0);
 $23 = HEAP32[$4>>2]|0;
 __ZN5Eigen8internal10smart_copyIiEEvPKT_S4_PS2_($15,$22,$23);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10smart_copyIiEEvPKT_S4_PS2_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal17smart_copy_helperIiLb1EE3runEPKiS4_Pi($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17smart_copy_helperIiLb1EE3runEPKiS4_Pi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $4;
 $8 = $7;
 $9 = $3;
 $10 = $9;
 $11 = (($8) - ($10))|0;
 $6 = $11;
 $12 = $6;
 $13 = ($12|0)==(0);
 if ($13) {
  STACKTOP = sp;return;
 }
 $14 = $5;
 $15 = $3;
 $16 = $6;
 _memcpy(($14|0),($15|0),($16|0))|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4_setINS_7InverseINS_12PartialPivLUIS2_EEEEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7InverseINS_12PartialPivLUIS3_EEEEEEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7InverseINS_12PartialPivLUIS3_EEEEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7InverseINS_12PartialPivLUIS3_EEEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7InverseINS_12PartialPivLUIS3_EEEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7InverseINS_12PartialPivLUIS3_EEEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7InverseINS_12PartialPivLUIS3_EEEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7InverseINS_12PartialPivLUIS3_EEEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS7_RKS9_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7InverseINS_12PartialPivLUIS3_EEEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS7_RKS9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $6 = sp + 16|0;
 $7 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE16nestedExpressionEv($8)|0);
 $10 = $4;
 $11 = (__ZNK5Eigen7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE4rowsEv($10)|0);
 $12 = $4;
 $13 = (__ZNK5Eigen7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE4colsEv($12)|0);
 __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE8IdentityEii($7,$11,$13);
 __ZNK5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE5solveINS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES2_EEEEKNS_5SolveIS3_T_EERKNS_10MatrixBaseISB_EE($6,$9,$7);
 $14 = $3;
 (__ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEaSINS_5SolveINS_12PartialPivLUIS1_EENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES1_EEEEEERS1_RKNS_9DenseBaseIT_EE($14,$6)|0);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE5solveINS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES2_EEEEKNS_5SolveIS3_T_EERKNS_10MatrixBaseISB_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ((($5)) + 41|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = $7&1;
 if ($8) {
  $9 = $4;
  $10 = (__ZNK5Eigen9EigenBaseINS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($9)|0);
  __ZN5Eigen5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES3_EEEC2ERKS4_RKS9_($0,$5,$10);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5066|0),(4028|0),177,(5120|0));
  // unreachable;
 }
}
function __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE8IdentityEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp + 8|0;
 $3 = $1;
 $4 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18scalar_identity_opIdEC2Ev($5);
 __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE11NullaryExprINS_8internal18scalar_identity_opIdEEEEKNS_14CwiseNullaryOpIT_S2_EEiiRKS9_($0,$6,$7,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEaSINS_5SolveINS_12PartialPivLUIS1_EENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES1_EEEEEERS1_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4_setINS_5SolveINS_12PartialPivLUIS2_EENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES2_EEEEEERS2_RKNS_9DenseBaseIT_EE($4,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNK5Eigen9EigenBaseINS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES3_EEEC2ERKS4_RKS9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen9SolveImplINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES3_EENS_5DenseEEC2Ev($6);
 $7 = $4;
 HEAP32[$6>>2] = $7;
 $8 = ((($6)) + 4|0);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 STACKTOP = sp;return;
}
function __ZN5Eigen9SolveImplINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES3_EENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES4_EEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES4_EEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES4_EEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES4_EEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE11NullaryExprINS_8internal18scalar_identity_opIdEEEEKNS_14CwiseNullaryOpIT_S2_EEiiRKS9_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 $9 = $6;
 __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2EiiRKS3_($0,$7,$8,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18scalar_identity_opIdEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2EiiRKS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($8);
 $9 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($8,$9);
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal18scalar_identity_opIdEC2ERKS2_($12,$13);
 $14 = $5;
 $15 = ($14|0)>=(0);
 $16 = $6;
 $17 = ($16|0)>=(0);
 $or$cond = $15 & $17;
 if ($or$cond) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((3318|0),(3467|0),74,(3507|0));
  // unreachable;
 }
}
function __ZN5Eigen10MatrixBaseINS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18scalar_identity_opIdEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4_setINS_5SolveINS_12PartialPivLUIS2_EENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES2_EEEEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES4_EEEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5SolveINS_12PartialPivLUIS3_EENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EEEEEEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5SolveINS_12PartialPivLUIS3_EENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EEEEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5SolveINS_12PartialPivLUIS3_EENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EEEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISG_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES4_EEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5SolveINS_12PartialPivLUIS3_EENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EEEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISG_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5SolveINS_12PartialPivLUIS3_EENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EEEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5SolveINS_12PartialPivLUIS3_EENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EEEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5SolveINS_12PartialPivLUIS3_EENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EEEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKSB_RKSD_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_5SolveINS_12PartialPivLUIS3_EENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EEEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKSB_RKSD_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES3_EEE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES3_EEE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $4;
 $24 = (__ZNK5Eigen5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES3_EEE3decEv($23)|0);
 $25 = $4;
 $26 = (__ZNK5Eigen5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES3_EEE3rhsEv($25)|0);
 $27 = $3;
 __ZNK5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE11_solve_implINS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES2_EES2_EEvRKT_RT0_($24,$26,$27);
 STACKTOP = sp;return;
}
function __ZNK5Eigen5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES3_EEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES3_EEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES3_EEE3decEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE11_solve_implINS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES2_EES2_EEvRKT_RT0_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $6 = sp + 8|0;
 $7 = sp + 4|0;
 $8 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = $3;
 $10 = $4;
 $11 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($10)|0);
 $12 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($9)|0);
 $13 = ($11|0)==($12|0);
 if ($13) {
  $14 = (__ZNK5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE12permutationPEv($9)|0);
  $15 = $4;
  __ZN5EigenmlINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEEKNS_7ProductIT_T0_Li2EEERKNS_15PermutationBaseISB_EERKNS_10MatrixBaseISC_EE($6,$14,$15);
  $16 = $5;
  (__ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEaSINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES1_EELi2EEEEERS1_RKNS_9DenseBaseIT_EE($16,$6)|0);
  $17 = (__ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE14triangularViewILj5EEENS3_29ConstTriangularViewReturnTypeIXT_EE4TypeEv($9)|0);
  HEAP32[$7>>2] = $17;
  $18 = $5;
  __ZNK5Eigen18TriangularViewImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5ENS_5DenseEE12solveInPlaceIS2_EEvRKNS_10MatrixBaseIT_EE($7,$18);
  $19 = (__ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE14triangularViewILj2EEENS3_29ConstTriangularViewReturnTypeIXT_EE4TypeEv($9)|0);
  HEAP32[$8>>2] = $19;
  $20 = $5;
  __ZNK5Eigen18TriangularViewImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2ENS_5DenseEE12solveInPlaceIS2_EEvRKNS_10MatrixBaseIT_EE($8,$20);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5126|0),(4028|0),234,(5152|0));
  // unreachable;
 }
}
function __ZNK5Eigen5SolveINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES3_EEE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5EigenmlINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEEKNS_7ProductIT_T0_Li2EEERKNS_15PermutationBaseISB_EERKNS_10MatrixBaseISC_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_17PermutationMatrixILin1ELin1EiEEE7derivedEv($5)|0);
 $7 = $4;
 $8 = (__ZNK5Eigen9EigenBaseINS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE7derivedEv($7)|0);
 __ZN5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EEC2ERKS2_RKS9_($0,$6,$8);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE12permutationPEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 41|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = $4&1;
 if ($5) {
  $6 = ((($2)) + 12|0);
  STACKTOP = sp;return ($6|0);
 } else {
  ___assert_fail((5066|0),(4028|0),151,(5164|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEaSINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES1_EELi2EEEEERS1_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4_setINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES2_EELi2EEEEERS2_RKNS_9DenseBaseIT_EE($4,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE14triangularViewILj5EEENS3_29ConstTriangularViewReturnTypeIXT_EE4TypeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = $0;
 $3 = $2;
 $4 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($3)|0);
 __ZN5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EEC2ERS3_($1,$4);
 $5 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen18TriangularViewImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5ENS_5DenseEE12solveInPlaceIS2_EEvRKNS_10MatrixBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZNK5Eigen18TriangularViewImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5ENS_5DenseEE12solveInPlaceILi1ES2_EEvRKNS_10MatrixBaseIT0_EE($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE14triangularViewILj2EEENS3_29ConstTriangularViewReturnTypeIXT_EE4TypeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = $0;
 $3 = $2;
 $4 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($3)|0);
 __ZN5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EEC2ERS3_($1,$4);
 $5 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen18TriangularViewImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2ENS_5DenseEE12solveInPlaceIS2_EEvRKNS_10MatrixBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZNK5Eigen18TriangularViewImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2ENS_5DenseEE12solveInPlaceILi1ES2_EEvRKNS_10MatrixBaseIT0_EE($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EEC2ERKS2_RKS9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen11ProductImplINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2ENS_5DenseEEC2Ev($6);
 $7 = $4;
 HEAP32[$6>>2] = $7;
 $8 = ((($6)) + 4|0);
 $9 = $5;
 __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS6_($8,$9);
 $10 = $4;
 $11 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4colsEv($10)|0);
 $12 = $5;
 $13 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $14 = ($11|0)==($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2150|0),(2290|0),97,(2323|0));
  // unreachable;
 }
}
function __ZN5Eigen11ProductImplINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2ENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal18dense_product_baseINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2ELi8EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 ;HEAP32[$4>>2]=HEAP32[$5>>2]|0;HEAP32[$4+4>>2]=HEAP32[$5+4>>2]|0;
 $6 = ((($4)) + 8|0);
 $7 = $3;
 $8 = ((($7)) + 8|0);
 __ZN5Eigen8internal18scalar_identity_opIdEC2ERKS2_($6,$8);
 STACKTOP = sp;return;
}
function __ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE7indicesEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal18dense_product_baseINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2ELi8EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4_setINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES2_EELi2EEEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EELi2EEEEEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EELi2EEEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EELi2EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISG_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EELi2EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISG_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EELi2EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EELi2EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EELi2EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKSB_RKSD_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EELi2EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKSB_RKSD_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = $4;
 $25 = (__ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EE3lhsEv($24)|0);
 $26 = $4;
 $27 = (__ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EE3rhsEv($26)|0);
 __ZN5Eigen8internal20generic_product_implINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_16PermutationShapeENS_10DenseShapeELi8EE6evalToIS8_EEvRT_RKS3_RKS9_($23,$25,$27);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal20generic_product_implINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS_16PermutationShapeENS_10DenseShapeELi8EE6evalToIS8_EEvRT_RKS3_RKS9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal26permutation_matrix_productINS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELb0ENS_10DenseShapeEE3runIS6_NS_17PermutationMatrixILin1ELin1EiEEEEvRT_RKT0_RKS7_($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EE3lhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi2EE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE7indicesEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal26permutation_matrix_productINS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELb0ENS_10DenseShapeEE3runIS6_NS_17PermutationMatrixILin1ELin1EiEEEEvRT_RKT0_RKS7_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $6 = sp + 156|0;
 $8 = sp + 144|0;
 $9 = sp + 140|0;
 $10 = sp + 180|0;
 $17 = sp + 88|0;
 $18 = sp + 60|0;
 $20 = sp + 28|0;
 $21 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $22 = $5;
 __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS6_($6,$22);
 $23 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($6)|0);
 $7 = $23;
 $24 = $3;
 $25 = (__ZN5Eigen8internal13is_same_denseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EEEEbRKT_RKT0_PNS0_9enable_ifIXntaasr17has_direct_accessIS8_EE3retsr17has_direct_accessISB_EE3retES8_E4typeE($24,$6,0)|0);
 if (!($25)) {
  $19 = 0;
  while(1) {
   $102 = $19;
   $103 = $7;
   $104 = ($102|0)<($103|0);
   if (!($104)) {
    break;
   }
   $105 = $19;
   __ZN5Eigen5BlockIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEC2ERS8_i($20,$6,$105);
   $106 = $3;
   $107 = $4;
   $108 = (__ZNK5Eigen17PermutationMatrixILin1ELin1EiE7indicesEv($107)|0);
   $109 = $19;
   $110 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE5coeffEi($108,$109)|0);
   $111 = HEAP32[$110>>2]|0;
   __ZN5Eigen5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEC2ERS2_i($21,$106,$111);
   (__ZN5Eigen5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEaSINS0_IKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES2_EELi1ELin1ELb0EEEEERS3_RKNS_9DenseBaseIT_EE($21,$20)|0);
   $112 = $19;
   $113 = (($112) + 1)|0;
   $19 = $113;
  }
  STACKTOP = sp;return;
 }
 $26 = $4;
 $27 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4sizeEv($26)|0);
 HEAP32[$9>>2] = $27;
 __ZN5Eigen6MatrixIbLin1ELi1ELi0ELin1ELi1EEC2IiEERKT_($8,$9);
 HEAP8[$10>>0] = 0;
 __THREW__ = 0;
 invoke_vii(361,($8|0),($10|0));
 $28 = __THREW__; __THREW__ = 0;
 $29 = $28&1;
 L8: do {
  if (!($29)) {
   $13 = 0;
   L10: while(1) {
    $30 = $13;
    $31 = $4;
    __THREW__ = 0;
    $32 = (invoke_ii(362,($31|0))|0);
    $33 = __THREW__; __THREW__ = 0;
    $34 = $33&1;
    if ($34) {
     break L8;
    }
    $35 = ($30|0)<($32|0);
    if (!($35)) {
     break;
    }
    while(1) {
     $36 = $13;
     $37 = $4;
     __THREW__ = 0;
     $38 = (invoke_ii(362,($37|0))|0);
     $39 = __THREW__; __THREW__ = 0;
     $40 = $39&1;
     if ($40) {
      break L8;
     }
     $41 = ($36|0)<($38|0);
     if ($41) {
      $42 = $13;
      __THREW__ = 0;
      $43 = (invoke_iii(363,($8|0),($42|0))|0);
      $44 = __THREW__; __THREW__ = 0;
      $45 = $44&1;
      if ($45) {
       break L8;
      }
      $46 = HEAP8[$43>>0]|0;
      $47 = $46&1;
      $118 = $47;
     } else {
      $118 = 0;
     }
     $48 = $13;
     if (!($118)) {
      break;
     }
     $49 = (($48) + 1)|0;
     $13 = $49;
    }
    $54 = $4;
    __THREW__ = 0;
    $55 = (invoke_ii(362,($54|0))|0);
    $56 = __THREW__; __THREW__ = 0;
    $57 = $56&1;
    if ($57) {
     break L8;
    }
    $58 = ($48|0)>=($55|0);
    if ($58) {
     break;
    }
    $59 = $13;
    $60 = (($59) + 1)|0;
    $13 = $60;
    $14 = $59;
    $61 = $14;
    $15 = $61;
    $62 = $14;
    __THREW__ = 0;
    $63 = (invoke_iii(365,($8|0),($62|0))|0);
    $64 = __THREW__; __THREW__ = 0;
    $65 = $64&1;
    if ($65) {
     break L8;
    }
    HEAP8[$63>>0] = 1;
    $66 = $4;
    __THREW__ = 0;
    $67 = (invoke_ii(366,($66|0))|0);
    $68 = __THREW__; __THREW__ = 0;
    $69 = $68&1;
    if ($69) {
     break L8;
    }
    $70 = $14;
    __THREW__ = 0;
    $71 = (invoke_iii(367,($67|0),($70|0))|0);
    $72 = __THREW__; __THREW__ = 0;
    $73 = $72&1;
    if ($73) {
     break L8;
    }
    $74 = HEAP32[$71>>2]|0;
    $16 = $74;
    while(1) {
     $75 = $16;
     $76 = $14;
     $77 = ($75|0)!=($76|0);
     if (!($77)) {
      continue L10;
     }
     $78 = $3;
     $79 = $16;
     __THREW__ = 0;
     invoke_viii(368,($17|0),($78|0),($79|0));
     $80 = __THREW__; __THREW__ = 0;
     $81 = $80&1;
     if ($81) {
      break L8;
     }
     $82 = $3;
     $83 = $14;
     __THREW__ = 0;
     invoke_viii(368,($18|0),($82|0),($83|0));
     $84 = __THREW__; __THREW__ = 0;
     $85 = $84&1;
     if ($85) {
      break L8;
     }
     __THREW__ = 0;
     invoke_vii(369,($17|0),($18|0));
     $86 = __THREW__; __THREW__ = 0;
     $87 = $86&1;
     if ($87) {
      break L8;
     }
     $88 = $16;
     __THREW__ = 0;
     $89 = (invoke_iii(365,($8|0),($88|0))|0);
     $90 = __THREW__; __THREW__ = 0;
     $91 = $90&1;
     if ($91) {
      break L8;
     }
     HEAP8[$89>>0] = 1;
     $92 = $16;
     $15 = $92;
     $93 = $4;
     __THREW__ = 0;
     $94 = (invoke_ii(366,($93|0))|0);
     $95 = __THREW__; __THREW__ = 0;
     $96 = $95&1;
     if ($96) {
      break L8;
     }
     $97 = $16;
     __THREW__ = 0;
     $98 = (invoke_iii(367,($94|0),($97|0))|0);
     $99 = __THREW__; __THREW__ = 0;
     $100 = $99&1;
     if ($100) {
      break L8;
     }
     $101 = HEAP32[$98>>2]|0;
     $16 = $101;
    }
   }
   __ZN5Eigen6MatrixIbLin1ELi1ELi0ELin1ELi1EED2Ev($8);
   STACKTOP = sp;return;
  }
 } while(0);
 $50 = ___cxa_find_matching_catch_2()|0;
 $51 = tempRet0;
 $11 = $50;
 $12 = $51;
 __THREW__ = 0;
 invoke_vi(364,($8|0));
 $52 = __THREW__; __THREW__ = 0;
 $53 = $52&1;
 if ($53) {
  $116 = ___cxa_find_matching_catch_3(0|0)|0;
  $117 = tempRet0;
  ___clang_call_terminate($116);
  // unreachable;
 } else {
  $114 = $11;
  $115 = $12;
  ___resumeException($114|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal13is_same_denseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EEEEbRKT_RKT0_PNS0_9enable_ifIXntaasr17has_direct_accessIS8_EE3retsr17has_direct_accessISB_EE3retES8_E4typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 STACKTOP = sp;return 0;
}
function __ZN5Eigen6MatrixIbLin1ELi1ELi0ELin1ELi1EEC2IiEERKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEC2Ev($6);
 __THREW__ = 0;
 invoke_v(370);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  $9 = $3;
  $10 = HEAP32[$9>>2]|0;
  __THREW__ = 0;
  invoke_viii(371,($6|0),($10|0),(0|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $4 = $13;
 $5 = $14;
 __THREW__ = 0;
 invoke_vi(372,($6|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $4;
  $18 = $5;
  ___resumeException($17|0);
  // unreachable;
 }
}
function __ZN5Eigen9DenseBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4fillERKb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 (__ZN5Eigen9DenseBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE11setConstantERKb($4,$5)|0);
 STACKTOP = sp;return;
}
function __ZN5Eigen15DenseCoeffsBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEELi1EEixEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ($5|0)>=(0);
 if (!($6)) {
  ___assert_fail((5177|0),(1678|0),408,(1099|0));
  // unreachable;
 }
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($4)|0);
 $9 = ($7|0)<($8|0);
 if ($9) {
  $10 = $3;
  $11 = (__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEELi1EE8coeffRefEi($4,$10)|0);
  STACKTOP = sp;return ($11|0);
 } else {
  ___assert_fail((5177|0),(1678|0),408,(1099|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EE4dataEv($4)|0);
 $6 = $3;
 $7 = (($5) + ($6)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZN5Eigen5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEC2ERS2_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen9BlockImplINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ENS_5DenseEEC2ERS2_i($6,$7,$8);
 $9 = $5;
 $10 = ($9|0)>=(0);
 if (!($10)) {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
 $11 = $5;
 $12 = $4;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $14 = ($11|0)<($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen9DenseBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4swapIS4_EEvRKNS0_IT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4rowsEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4rowsEv($7)|0);
 $9 = ($6|0)==($8|0);
 if (!($9)) {
  ___assert_fail((4568|0),(4613|0),417,(4648|0));
  // unreachable;
 }
 $10 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4colsEv($5)|0);
 $11 = $3;
 $12 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4colsEv($11)|0);
 $13 = ($10|0)==($12|0);
 if ($13) {
  $14 = (__ZN5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE7derivedEv($5)|0);
  $15 = $3;
  $16 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE18const_cast_derivedEv($15)|0);
  __ZN5Eigen8internal14swap_assign_opIdEC2Ev($4);
  __ZN5Eigen8internal15call_assignmentINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISA_EE5valueEPvE4typeE($14,$16,$4,0);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4568|0),(4613|0),417,(4648|0));
  // unreachable;
 }
}
function __ZN5Eigen6MatrixIbLin1ELi1ELi0ELin1ELi1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen5BlockIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEC2ERS8_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen9BlockImplIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ENS_5DenseEEC2ERS8_i($6,$7,$8);
 $9 = $5;
 $10 = ($9|0)>=(0);
 if (!($10)) {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
 $11 = $5;
 $12 = $4;
 $13 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $14 = ($11|0)<($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEaSINS0_IKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES2_EELi1ELin1ELb0EEEEERS3_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEE7derivedEv($5)|0);
 (__ZN5Eigen9BlockImplINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ENS_5DenseEEaSINS_5BlockIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES2_EELi1ELin1ELb0EEEEERS4_RKNS_9DenseBaseIT_EE($4,$6)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEC2Ev($2);
 __ZN5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE22_check_template_paramsEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE6_init1IiEEviPNS_8internal9enable_ifIXaaooneLNS_9DenseBaseIS2_EUt_En1ELi1Entsr8internal14is_convertibleIT_bEE5valueoontLNS5_7is_sameINS_9MatrixXprENS_8ArrayXprEEUt_E0EeqLS9_n1EL_ZNS_L7DynamicEEESA_E4typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp + 12|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 HEAP8[$6>>0] = 1;
 __ZN5Eigen8internal22ignore_unused_variableIbEEvRKT_($6);
 $8 = $4;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE6resizeEi($7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE6resizeEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ($5|0)>=(0);
 if ($6) {
  $7 = $3;
  $8 = $3;
  __ZN5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EE6resizeEiii($4,$7,$8,1);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((3852|0),(1577|0),312,(1618|0));
  // unreachable;
 }
}
function __ZN5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EE6resizeEiii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = ((($8)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11;
 $13 = ($9|0)!=($12|0);
 if (!($13)) {
  $22 = $6;
  $23 = ((($8)) + 4|0);
  HEAP32[$23>>2] = $22;
  STACKTOP = sp;return;
 }
 $14 = HEAP32[$8>>2]|0;
 $15 = ((($8)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $16;
 __ZN5Eigen8internal31conditional_aligned_delete_autoIbLb1EEEvPT_j($14,$17);
 $18 = $5;
 $19 = ($18|0)!=(0);
 if ($19) {
  $20 = $5;
  $21 = (__ZN5Eigen8internal28conditional_aligned_new_autoIbLb1EEEPT_j($20)|0);
  $$sink = $21;
 } else {
  $$sink = 0;
 }
 HEAP32[$8>>2] = $$sink;
 $22 = $6;
 $23 = ((($8)) + 4|0);
 HEAP32[$23>>2] = $22;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal31conditional_aligned_delete_autoIbLb1EEEvPT_j($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen8internal24conditional_aligned_freeILb1EEEvPv($4);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal28conditional_aligned_new_autoIbLb1EEEPT_j($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $5 = $3;
 $6 = ($5|0)==(0);
 if ($6) {
  $2 = 0;
  $12 = $2;
  STACKTOP = sp;return ($12|0);
 } else {
  $7 = $3;
  $1 = $7;
  $8 = $3;
  $9 = $8;
  $10 = (__ZN5Eigen8internal26conditional_aligned_mallocILb1EEEPvj($9)|0);
  $4 = $10;
  $11 = $4;
  $2 = $11;
  $12 = $2;
  STACKTOP = sp;return ($12|0);
 }
 return (0)|0;
}
function __ZN5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5;
 __ZN5Eigen8internal31conditional_aligned_delete_autoIbLb1EEEvPT_j($3,$6);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE11setConstantERKb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZNK5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($5)|0);
 $7 = (__ZNK5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4colsEv($5)|0);
 $8 = $3;
 __ZN5Eigen9DenseBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE8ConstantEiiRKb($4,$6,$7,$8);
 $9 = (__ZN5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($5)|0);
 $10 = (__ZN5Eigen6MatrixIbLin1ELi1ELi0ELin1ELi1EEaSINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIbEES1_EEEERS1_RKNS_9DenseBaseIT_EE($9,$4)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZN5Eigen9DenseBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE8ConstantEiiRKb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $7 = sp + 12|0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal18scalar_constant_opIbEC2ERKb($7,$10);
 __ZN5Eigen9DenseBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE11NullaryExprINS_8internal18scalar_constant_opIbEEEEKNS_14CwiseNullaryOpIT_S2_EEiiRKS9_($0,$8,$9,$7);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen6MatrixIbLin1ELi1ELi0ELin1ELi1EEaSINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIbEES1_EEEERS1_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4_setINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIbEES2_EEEERS2_RKNS_9DenseBaseIT_EE($4,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZN5Eigen9DenseBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE11NullaryExprINS_8internal18scalar_constant_opIbEEEEKNS_14CwiseNullaryOpIT_S2_EEiiRKS9_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 $9 = $6;
 __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEC2EiiRKS3_($0,$7,$8,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18scalar_constant_opIbEC2ERKb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&1;
 $8 = $7&1;
 HEAP8[$4>>0] = $8;
 STACKTOP = sp;return;
}
function __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEC2EiiRKS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($8);
 $9 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($8,$9);
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($10,$11);
 $12 = ((($8)) + 5|0);
 $13 = $7;
 __ZN5Eigen8internal18scalar_constant_opIbEC2ERKS2_($12,$13);
 $14 = $5;
 $15 = ($14|0)>=(0);
 $16 = $6;
 $17 = ($16|0)>=(0);
 $or$cond = $15 & $17;
 $18 = $6;
 $19 = (1)==($18|0);
 $or$cond3 = $or$cond & $19;
 if ($or$cond3) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((3318|0),(3467|0),74,(3507|0));
  // unreachable;
 }
}
function __ZN5Eigen10MatrixBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18scalar_constant_opIbEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&1;
 $8 = $7&1;
 HEAP8[$4>>0] = $8;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EE4colsEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EE4colsEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4_setINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIbEES2_EEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EEEEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIbbEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EENS0_9assign_opIbbEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EENS0_9assign_opIbbEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EENS0_9assign_opIbbEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9assign_opIbbEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EENS0_9assign_opIbbEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EENS0_9assign_opIbbEENS0_11Dense2DenseEvE3runERS3_RKS7_RKS9_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EENS0_9assign_opIbbEENS0_11Dense2DenseEvE3runERS3_RKS7_RKS9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EEEEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EENS0_9assign_opIbbEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EEEEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EELb0EE3runERKS3_RKS7_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EENS0_9assign_opIbbEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $6 = sp + 44|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS7_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(373,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(374,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(375,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(376,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(377,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(378,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(378,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(379,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EELb0EE3runERKS3_RKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(380,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  __THREW__ = 0;
  invoke_vii(381,($6|0),($8|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $4 = $13;
 $5 = $14;
 __THREW__ = 0;
 invoke_vi(382,($6|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $4;
  $18 = $5;
  ___resumeException($17|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17resize_if_allowedINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EEbbEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($23)|0);
 $25 = $6;
 $26 = ($24|0)==($25|0);
 if (!($26)) {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
 $27 = $3;
 $28 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4colsEv($27)|0);
 $29 = $7;
 $30 = ($28|0)==($29|0);
 if ($30) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS5_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES4_EEEENS0_9assign_opIbbEELi0EEC2ERS5_RKSA_RKSC_RS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEENS3_INS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES5_EEEENS0_9assign_opIbbEELi0EEELi1ELi0EE3runERSE_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES4_EEEENS0_9assign_opIbbEELi0EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES4_EEEENS0_9assign_opIbbEELi0EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE7functorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 5|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $7;
 $11 = $9;
 $12 = ($11|0)==(1);
 $13 = $8;
 $14 = ($13|0)>=(0);
 $or$cond = $12 & $14;
 $15 = $9;
 $16 = ($15|0)>=(0);
 $or$cond3 = $or$cond & $16;
 if (!($or$cond3)) {
  ___assert_fail((1178|0),(1577|0),285,(1618|0));
  // unreachable;
 }
 $17 = $8;
 $18 = $9;
 $3 = $17;
 $4 = $18;
 $5 = 2147483647;
 $19 = $3;
 $20 = ($19|0)==(0);
 $21 = $4;
 $22 = ($21|0)==(0);
 $or$cond5 = $20 | $22;
 if ($or$cond5) {
  $29 = 0;
 } else {
  $23 = $3;
  $24 = $5;
  $25 = $4;
  $26 = (($24|0) / ($25|0))&-1;
  $27 = ($23|0)>($26|0);
  $29 = $27;
 }
 $28 = $29&1;
 $6 = $28;
 $30 = $6;
 $31 = $30&1;
 if ($31) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $32 = $8;
 $33 = $9;
 $34 = Math_imul($32, $33)|0;
 $35 = $8;
 $36 = $9;
 __ZN5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EE6resizeEiii($10,$34,$35,$36);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(383,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  __THREW__ = 0;
  invoke_vii(384,($11|0),0);
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if (!($13)) {
   STACKTOP = sp;return;
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $4 = $14;
 $5 = $15;
 __THREW__ = 0;
 invoke_vi(385,($6|0));
 $16 = __THREW__; __THREW__ = 0;
 $17 = $16&1;
 if ($17) {
  $20 = ___cxa_find_matching_catch_3(0|0)|0;
  $21 = tempRet0;
  ___clang_call_terminate($20);
  // unreachable;
 } else {
  $18 = $4;
  $19 = $5;
  ___resumeException($18|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EE4dataEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES4_EEEENS0_9assign_opIbbEELi0EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES4_EEEENS0_9assign_opIbbEELi0EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$5>>2]|0;
 $9 = $3;
 $10 = (__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEE8coeffRefEi($8,$9)|0);
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $3;
 $14 = (__ZNK5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEE5coeffIiEEbT_($12,$13)|0);
 $15 = $14&1;
 HEAP8[$4>>0] = $15;
 __ZNK5Eigen8internal9assign_opIbbE11assignCoeffERbRKb($7,$10,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal9assign_opIbbE11assignCoeffERbRKb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5;
 $7 = HEAP8[$6>>0]|0;
 $8 = $7&1;
 $9 = $4;
 $10 = $8&1;
 HEAP8[$9>>0] = $10;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (($5) + ($6)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZNK5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEE5coeffIiEEbT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 1|0);
 $6 = $3;
 $7 = (__ZNK5Eigen8internal15nullary_wrapperIbNS0_18scalar_constant_opIbEELb1ELb0ELb0EEclIiEEbRKS3_T_S8_($5,$4,$6,0)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZNK5Eigen8internal15nullary_wrapperIbNS0_18scalar_constant_opIbEELb1ELb0ELb0EEclIiEEbRKS3_T_S8_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $5;
 $9 = (__ZNK5Eigen8internal18scalar_constant_opIbEclEv($8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNK5Eigen8internal18scalar_constant_opIbEclEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP8[$2>>0]|0;
 $4 = $3&1;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen15DenseCoeffsBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEELi1EE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($7)|0);
 __ZN5Eigen8internal9evaluatorINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($4,$8);
 $9 = $3;
 __THREW__ = 0;
 $10 = (invoke_iii(386,($4|0),($9|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  __ZN5Eigen8internal9evaluatorINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEED2Ev($4);
  STACKTOP = sp;return ($10|0);
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $5 = $13;
 $6 = $14;
 __THREW__ = 0;
 invoke_vi(378,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $5;
  $18 = $6;
  ___resumeException($17|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen12DenseStorageIbLin1ELin1ELi1ELi0EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen9BlockImplINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ENS_5DenseEEC2ERS2_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EEC2ERS3_i($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EEC2ERS3_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4dataEv($7)|0);
 $9 = $5;
 $10 = $4;
 $11 = (__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11innerStrideEv($10)|0);
 $12 = Math_imul($9, $11)|0;
 $13 = (($8) + ($12<<3)|0);
 $14 = $4;
 $15 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($14)|0);
 __ZN5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi1EEC2EPdii($6,$13,1,$15);
 $16 = ((($6)) + 12|0);
 $17 = $4;
 HEAP32[$16>>2] = $17;
 $18 = ((($6)) + 16|0);
 $19 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($18,$19);
 $20 = ((($6)) + 20|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($20,0);
 __ZN5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EE4initEv($6);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EE4dataEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi1EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EEC2EPdii($8,$9,$10,$11);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11innerStrideEv($4)|0);
 $6 = ((($2)) + 24|0);
 HEAP32[$6>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $6;
  $19 = (1)==($18|0);
  $or$cond = $17 & $19;
  $20 = $7;
  $21 = ($20|0)>=(0);
  $or$cond3 = $or$cond & $21;
  if (!($or$cond3)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE11checkSanityIS4_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE11checkSanityIS4_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal15call_assignmentINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISA_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEES5_NS0_14swap_assign_opIdEENS0_11Dense2DenseEvE3runERS5_RKS5_RKS7_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEES5_NS0_14swap_assign_opIdEENS0_11Dense2DenseEvE3runERS5_RKS5_RKS7_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEES5_EEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEES5_EEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEES5_Lb0EE3runERKS5_S8_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 36|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2ERKS5_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(387,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(388,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(389,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(390,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(391,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(392,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(392,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(392,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEES5_Lb0EE3runERKS5_S8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EEC2ERKNS_5BlockIS3_Li1ELin1ELb0EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4rowsEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4rowsEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  ___assert_fail((4653|0),(2091|0),710,(2132|0));
  // unreachable;
 }
 $11 = $3;
 $12 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4colsEv($11)|0);
 $13 = $4;
 $14 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4colsEv($13)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4653|0),(2091|0),710,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEES7_NS0_14swap_assign_opIdEELi0EEC2ERS7_RKS7_RKS9_RS6_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 $12 = $7;
 $13 = $8;
 $14 = $9;
 __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEES7_NS0_14swap_assign_opIdEELi1EEC2ERS7_RKS7_RKS9_RS6_($10,$11,$12,$13,$14);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEES8_NS0_14swap_assign_opIdEELi0EEELi1ELi0EE3runERSB_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEES7_NS0_14swap_assign_opIdEELi1EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEES7_NS0_14swap_assign_opIdEELi1EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EEC2ERKNS_5BlockIS3_Li1ELin1ELb0EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEEC2ERKS5_($6,$7);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(393,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 do {
  if (!($11)) {
   $12 = $9;
   $13 = (($12>>>0) % 1)&-1;
   $14 = ($13|0)==(0);
   if ($14) {
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiii(162,(3035|0),(3198|0),1107,(3238|0));
    $15 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $4 = $16;
 $5 = $17;
 __THREW__ = 0;
 invoke_vi(394,($6|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $4;
  $21 = $5;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(393,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(395,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(121,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(396,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(166,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(397,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi1EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11outerStrideEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEES7_NS0_14swap_assign_opIdEELi1EEC2ERS7_RKS7_RKS9_RS6_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEES7_NS0_14swap_assign_opIdEELi1EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEES7_NS0_14swap_assign_opIdEELi1EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$4>>2]|0;
 $8 = $3;
 $9 = (__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEE8coeffRefEi($7,$8)|0);
 $10 = ((($4)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEE5coeffEi($11,$12)|0);
 __ZNK5Eigen8internal14swap_assign_opIdE11assignCoeffERdRKd($6,$9,$13);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = ((($4)) + 4|0);
 $8 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($7)|0);
 $9 = Math_imul($6, $8)|0;
 $10 = (($5) + ($9<<3)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = ((($4)) + 4|0);
 $8 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($7)|0);
 $9 = Math_imul($6, $8)|0;
 $10 = (($5) + ($9<<3)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZN5Eigen8internal15block_evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ENS_5DenseEEC2ERS8_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal15BlockImpl_denseIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EEC2ERS8_i($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EEC2ERS8_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen10MatrixBaseINS_5BlockIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEEC2Ev($6);
 $7 = $4;
 __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS6_($6,$7);
 $8 = ((($6)) + 12|0);
 $9 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($8,$9);
 $10 = ((($6)) + 16|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($10,0);
 $11 = ((($6)) + 20|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($11,1);
 $12 = ((($6)) + 24|0);
 $13 = $4;
 $14 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($13)|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($12,$14);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ENS_5DenseEEaSINS_5BlockIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES2_EELi1ELin1ELb0EEEEERS4_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEE7derivedEv($5)|0);
 (__ZN5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EEaSINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EELi1ELin1ELb0EEEEERS4_RKNS_9DenseBaseIT_EE($4,$6)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EEaSINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES3_EELi1ELin1ELb0EEEEERS4_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEE7derivedEv($5)|0);
 (__ZN5Eigen10MatrixBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEaSINS1_IKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES3_EELi1ELin1ELb0EEEEERS4_RKNS_9DenseBaseIT_EE($4,$6)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEaSINS1_IKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEES3_EELi1ELin1ELb0EEEEERS4_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEEEEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal15call_assignmentINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISG_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15call_assignmentINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISG_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS5_RKSB_RKSD_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS5_RKSB_RKSD_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEEEEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEEEEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEELb0EE3runERKS5_RKSB_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 36|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEEC2ERKSA_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(398,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(388,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(389,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(399,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(400,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(392,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(392,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(401,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEELb0EE3runERKS5_RKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EEC2ERKNS_5BlockIS8_Li1ELin1ELb0EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen8internal15BlockImpl_denseIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen8internal15BlockImpl_denseIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen9DenseBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4rowsEv($23)|0);
 $25 = $6;
 $26 = ($24|0)==($25|0);
 if (!($26)) {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
 $27 = $3;
 $28 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4colsEv($27)|0);
 $29 = $7;
 $30 = ($28|0)==($29|0);
 if ($30) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS2_INS3_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES5_EELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EEC2ERS7_RKSE_RKSG_RS6_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS3_INS4_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES6_EELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EEELi1ELi0EE3runERSI_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS2_INS3_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES5_EELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS2_INS3_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES5_EELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EEC2ERKNS_5BlockIS8_Li1ELin1ELb0EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15unary_evaluatorINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEENS0_10IndexBasedEdEC2ERKSA_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEENS0_10IndexBasedEdEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEEC2Ev($6);
 $7 = ((($6)) + 1|0);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(402,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  label = 8;
 } else {
  __THREW__ = 0;
  invoke_vii(403,($7|0),($9|0));
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if ($13) {
   label = 8;
  } else {
   $14 = ((($6)) + 4|0);
   $15 = $3;
   __THREW__ = 0;
   $16 = (invoke_ii(404,($15|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if (!($18)) {
    __THREW__ = 0;
    invoke_vii(121,($14|0),($16|0));
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if (!($20)) {
     $21 = ((($6)) + 8|0);
     $22 = $3;
     __THREW__ = 0;
     $23 = (invoke_ii(405,($22|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if (!($25)) {
      __THREW__ = 0;
      invoke_vii(121,($21|0),($23|0));
      $26 = __THREW__; __THREW__ = 0;
      $27 = $26&1;
      if (!($27)) {
       STACKTOP = sp;return;
      }
     }
    }
   }
   $30 = ___cxa_find_matching_catch_2()|0;
   $31 = tempRet0;
   $4 = $30;
   $5 = $31;
   __THREW__ = 0;
   invoke_vi(406,($7|0));
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   if ($33) {
    $38 = ___cxa_find_matching_catch_3(0|0)|0;
    $39 = tempRet0;
    ___clang_call_terminate($38);
    // unreachable;
   }
  }
 }
 if ((label|0) == 8) {
  $28 = ___cxa_find_matching_catch_2()|0;
  $29 = tempRet0;
  $4 = $28;
  $5 = $29;
 }
 __THREW__ = 0;
 invoke_vi(407,($6|0));
 $34 = __THREW__; __THREW__ = 0;
 $35 = $34&1;
 if ($35) {
  $38 = ___cxa_find_matching_catch_3(0|0)|0;
  $39 = tempRet0;
  ___clang_call_terminate($38);
  // unreachable;
 } else {
  $36 = $4;
  $37 = $5;
  ___resumeException($36|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERKS7_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EE8startRowEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EE8startColEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(408,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  __THREW__ = 0;
  invoke_vii(409,($6|0),($8|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $4 = $13;
 $5 = $14;
 __THREW__ = 0;
 invoke_vi(410,($6|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $4;
  $18 = $5;
  ___resumeException($17|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7functorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 24|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen9DenseBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE6resizeEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4rowsEv($6)|0);
 $9 = ($7|0)==($8|0);
 if (!($9)) {
  ___assert_fail((5206|0),(4613|0),257,(1618|0));
  // unreachable;
 }
 $10 = $5;
 $11 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4colsEv($6)|0);
 $12 = ($10|0)==($11|0);
 if ($12) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5206|0),(4613|0),257,(1618|0));
  // unreachable;
 }
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS2_INS3_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES5_EELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS2_INS3_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES5_EELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$5>>2]|0;
 $9 = $3;
 $10 = (__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEE8coeffRefEi($8,$9)|0);
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $3;
 $14 = (+__ZNK5Eigen8internal15unary_evaluatorINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEENS0_10IndexBasedEdE5coeffEi($12,$13));
 HEAPF64[$4>>3] = $14;
 __ZNK5Eigen8internal9assign_opIddE11assignCoeffERdRKd($7,$10,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15unary_evaluatorINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEENS0_10IndexBasedEdE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (+__ZNK5Eigen8internal15unary_evaluatorINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEENS0_10IndexBasedEdE5coeffEii($4,0,$5));
 STACKTOP = sp;return (+$6);
}
function __ZNK5Eigen8internal15unary_evaluatorINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEENS0_10IndexBasedEdE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 1|0);
 $8 = ((($6)) + 4|0);
 $9 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($8)|0);
 $10 = $4;
 $11 = (($9) + ($10))|0;
 $12 = ((($6)) + 8|0);
 $13 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($12)|0);
 $14 = $5;
 $15 = (($13) + ($14))|0;
 $16 = (+__ZNK5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE5coeffIiEEdT_SA_($7,$11,$15));
 STACKTOP = sp;return (+$16);
}
function __ZNK5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE5coeffIiEEdT_SA_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = ((($6)) + 1|0);
 $8 = $4;
 $9 = $5;
 $10 = (+__ZNK5Eigen8internal15nullary_wrapperIdNS0_18scalar_identity_opIdEELb0ELb0ELb1EEclIiEEdRKS3_T_S8_($7,$6,$8,$9));
 STACKTOP = sp;return (+$10);
}
function __ZNK5Eigen8internal15nullary_wrapperIdNS0_18scalar_identity_opIdEELb0ELb0ELb1EEclIiEEdRKS3_T_S8_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $5;
 $9 = $6;
 $10 = $7;
 $11 = (+__ZNK5Eigen8internal18scalar_identity_opIdEclIiEEKdT_S5_($8,$9,$10));
 STACKTOP = sp;return (+$11);
}
function __ZNK5Eigen8internal18scalar_identity_opIdEclIiEEKdT_S5_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4;
 $7 = $5;
 $8 = ($6|0)==($7|0);
 $9 = $8 ? 1.0 : 0.0;
 STACKTOP = sp;return (+$9);
}
function __ZN5Eigen8internal15block_evaluatorIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15unary_evaluatorINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEENS0_10IndexBasedEdED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEENS0_10IndexBasedEdED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 1|0);
 __THREW__ = 0;
 invoke_vi(406,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch_2()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 __THREW__ = 0;
 invoke_vi(407,($4|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $2;
  $13 = $3;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZN5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EEC2ERS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen18TriangularViewImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5ENS_5DenseEEC2Ev($4);
 $5 = $3;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen18TriangularViewImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5ENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen14TriangularBaseINS_14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen14TriangularBaseINS_14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen18TriangularViewImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5ENS_5DenseEE12solveInPlaceILi1ES2_EEvRKNS_10MatrixBaseIT0_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE18const_cast_derivedEv($7)|0);
 $4 = $8;
 $9 = (__ZNK5Eigen14TriangularBaseINS_14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EEEE7derivedEv($6)|0);
 $10 = (__ZNK5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EE4colsEv($9)|0);
 $11 = (__ZNK5Eigen14TriangularBaseINS_14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EEEE7derivedEv($6)|0);
 $12 = (__ZNK5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EE4rowsEv($11)|0);
 $13 = ($10|0)==($12|0);
 if (!($13)) {
  ___assert_fail((4749|0),(4903|0),170,(4944|0));
  // unreachable;
 }
 $14 = (__ZNK5Eigen14TriangularBaseINS_14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EEEE7derivedEv($6)|0);
 $15 = (__ZNK5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EE4colsEv($14)|0);
 $16 = $4;
 $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($16)|0);
 $18 = ($15|0)==($17|0);
 if ($18) {
  $19 = $4;
  $5 = $19;
  $20 = (__ZNK5Eigen14TriangularBaseINS_14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EEEE7derivedEv($6)|0);
  $21 = (__ZNK5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EE16nestedExpressionEv($20)|0);
  $22 = $5;
  __ZN5Eigen8internal26triangular_solver_selectorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li1ELi5ELi0ELin1EE3runERS4_RS3_($21,$22);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4749|0),(4903|0),170,(4944|0));
  // unreachable;
 }
}
function __ZNK5Eigen14TriangularBaseINS_14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal26triangular_solver_selectorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li1ELi5ELi0ELin1EE3runERS4_RS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $7 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $10 = $2;
 $11 = (__ZN5Eigen8internal11blas_traitsINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7extractERKS3_($10)|0);
 $4 = $11;
 $12 = $2;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $5 = $13;
 $14 = $3;
 $15 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($14)|0);
 $6 = $15;
 $16 = $3;
 $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($16)|0);
 $18 = $3;
 $19 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($18)|0);
 $20 = $5;
 __ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi4ELb0EEC2Eiiiib($7,$17,$19,$20,1,0);
 $21 = $5;
 $22 = $6;
 $23 = $4;
 __THREW__ = 0;
 $24 = (invoke_iiii(411,($23|0),0,0)|0);
 $25 = __THREW__; __THREW__ = 0;
 $26 = $25&1;
 if (!($26)) {
  $27 = $4;
  __THREW__ = 0;
  $28 = (invoke_ii(412,($27|0))|0);
  $29 = __THREW__; __THREW__ = 0;
  $30 = $29&1;
  if (!($30)) {
   $31 = $3;
   __THREW__ = 0;
   $32 = (invoke_iiii(413,($31|0),0,0)|0);
   $33 = __THREW__; __THREW__ = 0;
   $34 = $33&1;
   if (!($34)) {
    $35 = $3;
    __THREW__ = 0;
    $36 = (invoke_ii(412,($35|0))|0);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if (!($38)) {
     __THREW__ = 0;
     invoke_viiiiiii(312,($21|0),($22|0),($24|0),($28|0),($32|0),($36|0),($7|0));
     $39 = __THREW__; __THREW__ = 0;
     $40 = $39&1;
     if (!($40)) {
      __ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi4ELb0EED2Ev($7);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $41 = ___cxa_find_matching_catch_2()|0;
 $42 = tempRet0;
 $8 = $41;
 $9 = $42;
 __THREW__ = 0;
 invoke_vi(313,($7|0));
 $43 = __THREW__; __THREW__ = 0;
 $44 = $43&1;
 if ($44) {
  $47 = ___cxa_find_matching_catch_3(0|0)|0;
  $48 = tempRet0;
  ___clang_call_terminate($47);
  // unreachable;
 } else {
  $45 = $8;
  $46 = $9;
  ___resumeException($45|0);
  // unreachable;
 }
}
function __ZNK5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj5EE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EEC2ERS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen18TriangularViewImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2ENS_5DenseEEC2Ev($4);
 $5 = $3;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen18TriangularViewImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2ENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen14TriangularBaseINS_14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen14TriangularBaseINS_14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen18TriangularViewImplIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2ENS_5DenseEE12solveInPlaceILi1ES2_EEvRKNS_10MatrixBaseIT0_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE18const_cast_derivedEv($7)|0);
 $4 = $8;
 $9 = (__ZNK5Eigen14TriangularBaseINS_14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EEEE7derivedEv($6)|0);
 $10 = (__ZNK5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EE4colsEv($9)|0);
 $11 = (__ZNK5Eigen14TriangularBaseINS_14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EEEE7derivedEv($6)|0);
 $12 = (__ZNK5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EE4rowsEv($11)|0);
 $13 = ($10|0)==($12|0);
 if (!($13)) {
  ___assert_fail((4749|0),(4903|0),170,(4944|0));
  // unreachable;
 }
 $14 = (__ZNK5Eigen14TriangularBaseINS_14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EEEE7derivedEv($6)|0);
 $15 = (__ZNK5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EE4colsEv($14)|0);
 $16 = $4;
 $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($16)|0);
 $18 = ($15|0)==($17|0);
 if ($18) {
  $19 = $4;
  $5 = $19;
  $20 = (__ZNK5Eigen14TriangularBaseINS_14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EEEE7derivedEv($6)|0);
  $21 = (__ZNK5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EE16nestedExpressionEv($20)|0);
  $22 = $5;
  __ZN5Eigen8internal26triangular_solver_selectorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li1ELi2ELi0ELin1EE3runERS4_RS3_($21,$22);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4749|0),(4903|0),170,(4944|0));
  // unreachable;
 }
}
function __ZNK5Eigen14TriangularBaseINS_14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal26triangular_solver_selectorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Li1ELi2ELi0ELin1EE3runERS4_RS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $7 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $10 = $2;
 $11 = (__ZN5Eigen8internal11blas_traitsINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7extractERKS3_($10)|0);
 $4 = $11;
 $12 = $2;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $5 = $13;
 $14 = $3;
 $15 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($14)|0);
 $6 = $15;
 $16 = $3;
 $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($16)|0);
 $18 = $3;
 $19 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($18)|0);
 $20 = $5;
 __ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi4ELb0EEC2Eiiiib($7,$17,$19,$20,1,0);
 $21 = $5;
 $22 = $6;
 $23 = $4;
 __THREW__ = 0;
 $24 = (invoke_iiii(411,($23|0),0,0)|0);
 $25 = __THREW__; __THREW__ = 0;
 $26 = $25&1;
 if (!($26)) {
  $27 = $4;
  __THREW__ = 0;
  $28 = (invoke_ii(412,($27|0))|0);
  $29 = __THREW__; __THREW__ = 0;
  $30 = $29&1;
  if (!($30)) {
   $31 = $3;
   __THREW__ = 0;
   $32 = (invoke_iiii(413,($31|0),0,0)|0);
   $33 = __THREW__; __THREW__ = 0;
   $34 = $33&1;
   if (!($34)) {
    $35 = $3;
    __THREW__ = 0;
    $36 = (invoke_ii(412,($35|0))|0);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if (!($38)) {
     __THREW__ = 0;
     invoke_viiiiiii(414,($21|0),($22|0),($24|0),($28|0),($32|0),($36|0),($7|0));
     $39 = __THREW__; __THREW__ = 0;
     $40 = $39&1;
     if (!($40)) {
      __ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi4ELb0EED2Ev($7);
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $41 = ___cxa_find_matching_catch_2()|0;
 $42 = tempRet0;
 $8 = $41;
 $9 = $42;
 __THREW__ = 0;
 invoke_vi(313,($7|0));
 $43 = __THREW__; __THREW__ = 0;
 $44 = $43&1;
 if ($44) {
  $47 = ___cxa_find_matching_catch_3(0|0)|0;
  $48 = tempRet0;
  ___clang_call_terminate($47);
  // unreachable;
 } else {
  $45 = $8;
  $46 = $9;
  ___resumeException($45|0);
  // unreachable;
 }
}
function __ZNK5Eigen14TriangularViewIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELj2EE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal23triangular_solve_matrixIdiLi1ELi2ELb0ELi0ELi0EE3runEiiPKdiPdiRNS0_15level3_blockingIddEE($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$alloca_mul = 0, $$alloca_mul203 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0.0, $19 = 0, $190 = 0, $191 = 0.0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0;
 var $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0;
 var $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0;
 var $443 = 0, $444 = 0, $445 = 0, $446 = 0.0, $447 = 0.0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0.0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0;
 var $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0.0, $467 = 0.0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0;
 var $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0.0, $494 = 0, $495 = 0, $496 = 0, $497 = 0;
 var $498 = 0, $499 = 0, $50 = 0, $500 = 0.0, $501 = 0.0, $502 = 0, $503 = 0, $504 = 0, $505 = 0.0, $506 = 0.0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;
 var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;
 var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;
 var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;
 var $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0;
 var $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0;
 var $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0;
 var $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0;
 var $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0;
 var $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0;
 var $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0;
 var $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(864|0);
 $54 = sp + 64|0;
 $57 = sp + 862|0;
 $63 = sp + 56|0;
 $66 = sp + 861|0;
 $84 = sp + 48|0;
 $87 = sp + 860|0;
 $102 = sp + 40|0;
 $105 = sp + 859|0;
 $111 = sp + 32|0;
 $114 = sp + 858|0;
 $120 = sp + 24|0;
 $123 = sp + 857|0;
 $131 = sp + 16|0;
 $134 = sp + 856|0;
 $144 = sp + 356|0;
 $149 = sp + 336|0;
 $152 = sp + 320|0;
 $153 = sp + 312|0;
 $154 = sp + 308|0;
 $155 = sp + 304|0;
 $156 = sp + 300|0;
 $160 = sp + 276|0;
 $164 = sp + 252|0;
 $165 = sp + 855|0;
 $166 = sp + 854|0;
 $167 = sp + 853|0;
 $168 = sp + 852|0;
 $169 = sp + 248|0;
 $170 = sp + 244|0;
 $171 = sp + 240|0;
 $172 = sp + 236|0;
 $173 = sp + 232|0;
 $174 = sp + 228|0;
 $177 = sp + 216|0;
 $180 = sp + 204|0;
 $183 = sp + 192|0;
 $184 = sp + 188|0;
 $198 = sp + 136|0;
 $200 = sp + 120|0;
 $201 = sp + 112|0;
 $206 = sp + 88|0;
 $207 = sp + 80|0;
 $208 = sp + 72|0;
 HEAP32[$144>>2] = $0;
 $145 = $1;
 $146 = $2;
 $147 = $3;
 $148 = $4;
 HEAP32[$149>>2] = $5;
 $150 = $6;
 $209 = $145;
 $151 = $209;
 $210 = $146;
 $211 = $147;
 $141 = $152;
 $142 = $210;
 $143 = $211;
 $212 = $141;
 $213 = $142;
 $214 = $143;
 $138 = $212;
 $139 = $213;
 $140 = $214;
 $215 = $138;
 $216 = $139;
 HEAP32[$215>>2] = $216;
 $217 = ((($215)) + 4|0);
 $218 = $140;
 HEAP32[$217>>2] = $218;
 $219 = $148;
 $220 = HEAP32[$149>>2]|0;
 $135 = $153;
 $136 = $219;
 $137 = $220;
 $221 = $135;
 $222 = $136;
 HEAP32[$221>>2] = $222;
 $223 = ((($221)) + 4|0);
 $224 = $137;
 HEAP32[$223>>2] = $224;
 $225 = $150;
 $226 = (__ZNK5Eigen8internal15level3_blockingIddE2kcEv($225)|0);
 HEAP32[$154>>2] = $226;
 $227 = $150;
 $228 = (__ZNK5Eigen8internal15level3_blockingIddE2mcEv($227)|0);
 HEAP32[$156>>2] = $228;
 $132 = $144;
 $133 = $156;
 $229 = $132;
 $230 = $133;
 ;HEAP8[$131>>0]=HEAP8[$134>>0]|0;
 $129 = $229;
 $130 = $230;
 $231 = $130;
 $232 = $129;
 $126 = $131;
 $127 = $231;
 $128 = $232;
 $233 = $127;
 $234 = HEAP32[$233>>2]|0;
 $235 = $128;
 $236 = HEAP32[$235>>2]|0;
 $237 = ($234|0)<($236|0);
 $238 = $130;
 $239 = $129;
 $240 = $237 ? $238 : $239;
 $241 = HEAP32[$240>>2]|0;
 HEAP32[$155>>2] = $241;
 $242 = HEAP32[$154>>2]|0;
 $243 = HEAP32[$155>>2]|0;
 $244 = Math_imul($242, $243)|0;
 $157 = $244;
 $245 = HEAP32[$154>>2]|0;
 $246 = $151;
 $247 = Math_imul($245, $246)|0;
 $158 = $247;
 $248 = $157;
 $125 = $248;
 $249 = $125;
 $250 = ($249>>>0)>(536870911);
 if ($250) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $251 = $150;
 $252 = (__ZN5Eigen8internal15level3_blockingIddE6blockAEv($251)|0);
 $253 = ($252|0)!=(0|0);
 if ($253) {
  $254 = $150;
  $255 = (__ZN5Eigen8internal15level3_blockingIddE6blockAEv($254)|0);
  $270 = $255;
 } else {
  $256 = $157;
  $257 = $256<<3;
  $258 = ($257>>>0)<=(131072);
  $259 = $157;
  $260 = $259<<3;
  if ($258) {
   $261 = (($260) + 16)|0;
   $262 = (($261) - 1)|0;
   $$alloca_mul = $262;
   $263 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
   $264 = $263;
   $265 = (($264) + 16)|0;
   $266 = (($265) - 1)|0;
   $267 = $266 & -16;
   $268 = $267;
   $728 = $268;
  } else {
   $269 = (__ZN5Eigen8internal14aligned_mallocEj($260)|0);
   $728 = $269;
  }
  $270 = $728;
 }
 $159 = $270;
 $271 = $150;
 $272 = (__ZN5Eigen8internal15level3_blockingIddE6blockAEv($271)|0);
 $273 = ($272|0)==(0|0);
 $274 = $159;
 $275 = $273 ? $274 : 0;
 $276 = $157;
 $277 = $157;
 $278 = $277<<3;
 $279 = ($278>>>0)>(131072);
 __ZN5Eigen8internal28aligned_stack_memory_handlerIdEC2EPdjb($160,$275,$276,$279);
 $280 = $158;
 $124 = $280;
 $281 = $124;
 $282 = ($281>>>0)>(536870911);
 if ($282) {
  __THREW__ = 0;
  invoke_v(183);
  $283 = __THREW__; __THREW__ = 0;
  $284 = $283&1;
  if ($284) {
   label = 38;
  } else {
   label = 11;
  }
 } else {
  label = 11;
 }
 L14: do {
  if ((label|0) == 11) {
   $285 = $150;
   __THREW__ = 0;
   $286 = (invoke_ii(184,($285|0))|0);
   $287 = __THREW__; __THREW__ = 0;
   $288 = $287&1;
   if ($288) {
    label = 38;
   } else {
    $289 = ($286|0)!=(0|0);
    if ($289) {
     $290 = $150;
     __THREW__ = 0;
     $291 = (invoke_ii(184,($290|0))|0);
     $292 = __THREW__; __THREW__ = 0;
     $293 = $292&1;
     if ($293) {
      label = 38;
      break;
     } else {
      $310 = $291;
     }
    } else {
     $294 = $158;
     $295 = $294<<3;
     $296 = ($295>>>0)<=(131072);
     $297 = $158;
     $298 = $297<<3;
     if ($296) {
      $299 = (($298) + 16)|0;
      $300 = (($299) - 1)|0;
      $$alloca_mul203 = $300;
      $301 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul203)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul203)|0)+15)&-16)|0);;
      $302 = $301;
      $303 = (($302) + 16)|0;
      $304 = (($303) - 1)|0;
      $305 = $304 & -16;
      $306 = $305;
      $729 = $306;
     } else {
      __THREW__ = 0;
      $307 = (invoke_ii(185,($298|0))|0);
      $308 = __THREW__; __THREW__ = 0;
      $309 = $308&1;
      if ($309) {
       label = 38;
       break;
      } else {
       $729 = $307;
      }
     }
     $310 = $729;
    }
    $163 = $310;
    $311 = $150;
    __THREW__ = 0;
    $312 = (invoke_ii(184,($311|0))|0);
    $313 = __THREW__; __THREW__ = 0;
    $314 = $313&1;
    if ($314) {
     label = 38;
    } else {
     $315 = ($312|0)==(0|0);
     $316 = $163;
     $317 = $315 ? $316 : 0;
     $318 = $158;
     $319 = $158;
     $320 = $319<<3;
     $321 = ($320>>>0)>(131072);
     __THREW__ = 0;
     invoke_viiii(186,($164|0),($317|0),($318|0),($321|0));
     $322 = __THREW__; __THREW__ = 0;
     $323 = $322&1;
     if ($323) {
      label = 38;
     } else {
      __THREW__ = 0;
      invoke_viiii(314,0,($169|0),($170|0),($171|0));
      $324 = __THREW__; __THREW__ = 0;
      $325 = $324&1;
      L27: do {
       if (!($325)) {
        $326 = $151;
        $327 = ($326|0)>(0);
        if ($327) {
         $328 = HEAP32[$170>>2]|0;
         $121 = $149;
         $122 = $144;
         $329 = $121;
         $330 = $122;
         ;HEAP8[$120>>0]=HEAP8[$123>>0]|0;
         $118 = $329;
         $119 = $330;
         $331 = $118;
         $332 = $119;
         $115 = $120;
         $116 = $331;
         $117 = $332;
         $333 = $116;
         $334 = HEAP32[$333>>2]|0;
         $335 = $117;
         $336 = HEAP32[$335>>2]|0;
         $337 = ($334|0)<($336|0);
         $338 = $119;
         $339 = $118;
         $340 = $337 ? $338 : $339;
         $341 = HEAP32[$340>>2]|0;
         $342 = $341<<5;
         $343 = (($328>>>0) / ($342>>>0))&-1;
         $344 = $343;
        } else {
         $344 = 0;
        }
        HEAP32[$172>>2] = $344;
        $345 = HEAP32[$172>>2]|0;
        $346 = (($345|0) / 4)&-1;
        $347 = $346<<2;
        HEAP32[$173>>2] = $347;
        HEAP32[$174>>2] = 4;
        $112 = $173;
        $113 = $174;
        $348 = $112;
        $349 = $113;
        ;HEAP8[$111>>0]=HEAP8[$114>>0]|0;
        $109 = $348;
        $110 = $349;
        $350 = $109;
        $351 = $110;
        $106 = $111;
        $107 = $350;
        $108 = $351;
        $352 = $107;
        $353 = HEAP32[$352>>2]|0;
        $354 = $108;
        $355 = HEAP32[$354>>2]|0;
        $356 = ($353|0)<($355|0);
        $357 = $110;
        $358 = $109;
        $359 = $356 ? $357 : $358;
        $360 = HEAP32[$359>>2]|0;
        HEAP32[$172>>2] = $360;
        $361 = HEAP32[$144>>2]|0;
        $175 = $361;
        while(1) {
         $362 = $175;
         $363 = ($362|0)>(0);
         if (!($363)) {
          break;
         }
         $364 = $175;
         HEAP32[$177>>2] = $364;
         $103 = $177;
         $104 = $154;
         $365 = $103;
         $366 = $104;
         ;HEAP8[$102>>0]=HEAP8[$105>>0]|0;
         $100 = $365;
         $101 = $366;
         $367 = $101;
         $368 = $100;
         $97 = $102;
         $98 = $367;
         $99 = $368;
         $369 = $98;
         $370 = HEAP32[$369>>2]|0;
         $371 = $99;
         $372 = HEAP32[$371>>2]|0;
         $373 = ($370|0)<($372|0);
         $374 = $101;
         $375 = $100;
         $376 = $373 ? $374 : $375;
         $377 = HEAP32[$376>>2]|0;
         $176 = $377;
         $178 = 0;
         while(1) {
          $378 = $178;
          $379 = $151;
          $380 = ($378|0)<($379|0);
          if (!($380)) {
           break;
          }
          $381 = $151;
          $382 = $178;
          $383 = (($381) - ($382))|0;
          HEAP32[$180>>2] = $383;
          $85 = $180;
          $86 = $172;
          $384 = $85;
          $385 = $86;
          ;HEAP8[$84>>0]=HEAP8[$87>>0]|0;
          $82 = $384;
          $83 = $385;
          $386 = $83;
          $387 = $82;
          $79 = $84;
          $80 = $386;
          $81 = $387;
          $388 = $80;
          $389 = HEAP32[$388>>2]|0;
          $390 = $81;
          $391 = HEAP32[$390>>2]|0;
          $392 = ($389|0)<($391|0);
          $393 = $83;
          $394 = $82;
          $395 = $392 ? $393 : $394;
          $396 = HEAP32[$395>>2]|0;
          $179 = $396;
          $181 = 0;
          while(1) {
           $397 = $181;
           $398 = $176;
           $399 = ($397|0)<($398|0);
           if (!($399)) {
            break;
           }
           $400 = $176;
           $401 = $181;
           $402 = (($400) - ($401))|0;
           HEAP32[$183>>2] = $402;
           HEAP32[$184>>2] = 4;
           $55 = $183;
           $56 = $184;
           $403 = $55;
           $404 = $56;
           ;HEAP8[$54>>0]=HEAP8[$57>>0]|0;
           $52 = $403;
           $53 = $404;
           $405 = $53;
           $406 = $52;
           $49 = $54;
           $50 = $405;
           $51 = $406;
           $407 = $50;
           $408 = HEAP32[$407>>2]|0;
           $409 = $51;
           $410 = HEAP32[$409>>2]|0;
           $411 = ($408|0)<($410|0);
           $412 = $53;
           $413 = $52;
           $414 = $411 ? $412 : $413;
           $415 = HEAP32[$414>>2]|0;
           $182 = $415;
           $185 = 0;
           while(1) {
            $416 = $185;
            $417 = $182;
            $418 = ($416|0)<($417|0);
            if (!($418)) {
             break;
            }
            $419 = $175;
            $420 = $181;
            $421 = (($419) - ($420))|0;
            $422 = $185;
            $423 = (($421) - ($422))|0;
            $424 = (($423) - 1)|0;
            $186 = $424;
            $425 = $182;
            $426 = $185;
            $427 = (($425) - ($426))|0;
            $428 = (($427) - 1)|0;
            $187 = $428;
            $429 = $186;
            $430 = $187;
            $431 = (($429) - ($430))|0;
            $188 = $431;
            $432 = $186;
            $433 = $186;
            $37 = $152;
            $38 = $432;
            $39 = $433;
            $434 = $37;
            $435 = HEAP32[$434>>2]|0;
            $436 = $38;
            $437 = $39;
            $438 = ((($434)) + 4|0);
            $439 = HEAP32[$438>>2]|0;
            $440 = Math_imul($437, $439)|0;
            $441 = (($436) + ($440))|0;
            $442 = (($435) + ($441<<3)|0);
            __THREW__ = 0;
            $443 = (invoke_iii(315,($165|0),($442|0))|0);
            $444 = __THREW__; __THREW__ = 0;
            $445 = $444&1;
            if ($445) {
             break L27;
            }
            $446 = +HEAPF64[$443>>3];
            $447 = 1.0 / $446;
            $189 = $447;
            $448 = $178;
            $190 = $448;
            while(1) {
             $449 = $190;
             $450 = $178;
             $451 = $179;
             $452 = (($450) + ($451))|0;
             $453 = ($449|0)<($452|0);
             if (!($453)) {
              break;
             }
             $454 = $189;
             $455 = $186;
             $456 = $190;
             $22 = $153;
             $23 = $455;
             $24 = $456;
             $457 = $22;
             $458 = HEAP32[$457>>2]|0;
             $459 = $23;
             $460 = $24;
             $461 = ((($457)) + 4|0);
             $462 = HEAP32[$461>>2]|0;
             $463 = Math_imul($460, $462)|0;
             $464 = (($459) + ($463))|0;
             $465 = (($458) + ($464<<3)|0);
             $466 = +HEAPF64[$465>>3];
             $467 = $466 * $454;
             HEAPF64[$465>>3] = $467;
             $191 = $467;
             $468 = $188;
             $469 = $190;
             $10 = $153;
             $11 = $468;
             $12 = $469;
             $470 = $10;
             $471 = HEAP32[$470>>2]|0;
             $472 = $11;
             $473 = $12;
             $474 = ((($470)) + 4|0);
             $475 = HEAP32[$474>>2]|0;
             $476 = Math_imul($473, $475)|0;
             $477 = (($472) + ($476))|0;
             $478 = (($471) + ($477<<3)|0);
             $192 = $478;
             $479 = $188;
             $480 = $186;
             $7 = $152;
             $8 = $479;
             $9 = $480;
             $481 = $7;
             $482 = HEAP32[$481>>2]|0;
             $483 = $8;
             $484 = $9;
             $485 = ((($481)) + 4|0);
             $486 = HEAP32[$485>>2]|0;
             $487 = Math_imul($484, $486)|0;
             $488 = (($483) + ($487))|0;
             $489 = (($482) + ($488<<3)|0);
             $193 = $489;
             $194 = 0;
             while(1) {
              $490 = $194;
              $491 = $187;
              $492 = ($490|0)<($491|0);
              if (!($492)) {
               break;
              }
              $493 = $191;
              $494 = $193;
              $495 = $194;
              $496 = (($494) + ($495<<3)|0);
              __THREW__ = 0;
              $497 = (invoke_iii(315,($165|0),($496|0))|0);
              $498 = __THREW__; __THREW__ = 0;
              $499 = $498&1;
              if ($499) {
               break L27;
              }
              $500 = +HEAPF64[$497>>3];
              $501 = $493 * $500;
              $502 = $192;
              $503 = $194;
              $504 = (($502) + ($503<<3)|0);
              $505 = +HEAPF64[$504>>3];
              $506 = $505 - $501;
              HEAPF64[$504>>3] = $506;
              $507 = $194;
              $508 = (($507) + 1)|0;
              $194 = $508;
             }
             $515 = $190;
             $516 = (($515) + 1)|0;
             $190 = $516;
            }
            $517 = $185;
            $518 = (($517) + 1)|0;
            $185 = $518;
           }
           $519 = $176;
           $520 = $181;
           $521 = (($519) - ($520))|0;
           $522 = $182;
           $523 = (($521) - ($522))|0;
           $195 = $523;
           $524 = $175;
           $525 = $181;
           $526 = (($524) - ($525))|0;
           $527 = $182;
           $528 = (($526) - ($527))|0;
           $196 = $528;
           $529 = $195;
           $197 = $529;
           $530 = $163;
           $531 = $176;
           $532 = $178;
           $533 = Math_imul($531, $532)|0;
           $534 = (($530) + ($533<<3)|0);
           $535 = $196;
           $536 = $178;
           $19 = $153;
           $20 = $535;
           $21 = $536;
           $537 = $19;
           $538 = $20;
           $539 = $21;
           $16 = $537;
           $17 = $538;
           $18 = $539;
           $540 = $16;
           $541 = HEAP32[$540>>2]|0;
           $542 = $17;
           $543 = $18;
           $544 = ((($540)) + 4|0);
           $545 = HEAP32[$544>>2]|0;
           $546 = Math_imul($543, $545)|0;
           $547 = (($542) + ($546))|0;
           $548 = (($541) + ($547<<3)|0);
           $549 = ((($537)) + 4|0);
           $550 = HEAP32[$549>>2]|0;
           $13 = $198;
           $14 = $548;
           $15 = $550;
           $551 = $13;
           $552 = $14;
           HEAP32[$551>>2] = $552;
           $553 = ((($551)) + 4|0);
           $554 = $15;
           HEAP32[$553>>2] = $554;
           $555 = $182;
           $556 = $179;
           $557 = $176;
           $558 = $197;
           __THREW__ = 0;
           invoke_viiiiiii(316,($168|0),($534|0),($198|0),($555|0),($556|0),($557|0),($558|0));
           $559 = __THREW__; __THREW__ = 0;
           $560 = $559&1;
           if ($560) {
            break L27;
           }
           $561 = $195;
           $562 = ($561|0)>(0);
           if ($562) {
            $563 = $175;
            $564 = $176;
            $565 = (($563) - ($564))|0;
            $199 = $565;
            $566 = $159;
            $567 = $199;
            $568 = $196;
            $34 = $152;
            $35 = $567;
            $36 = $568;
            $569 = $34;
            $570 = $35;
            $571 = $36;
            $31 = $569;
            $32 = $570;
            $33 = $571;
            $572 = $31;
            $573 = HEAP32[$572>>2]|0;
            $574 = $32;
            $575 = $33;
            $576 = ((($572)) + 4|0);
            $577 = HEAP32[$576>>2]|0;
            $578 = Math_imul($575, $577)|0;
            $579 = (($574) + ($578))|0;
            $580 = (($573) + ($579<<3)|0);
            $581 = ((($569)) + 4|0);
            $582 = HEAP32[$581>>2]|0;
            $28 = $200;
            $29 = $580;
            $30 = $582;
            $583 = $28;
            $584 = $29;
            $585 = $30;
            $25 = $583;
            $26 = $584;
            $27 = $585;
            $586 = $25;
            $587 = $26;
            HEAP32[$586>>2] = $587;
            $588 = ((($586)) + 4|0);
            $589 = $27;
            HEAP32[$588>>2] = $589;
            $590 = $182;
            $591 = $195;
            __THREW__ = 0;
            invoke_viiiiiii(187,($167|0),($566|0),($200|0),($590|0),($591|0),0,0);
            $592 = __THREW__; __THREW__ = 0;
            $593 = $592&1;
            if ($593) {
             break L27;
            }
            $594 = $199;
            $595 = $178;
            $46 = $153;
            $47 = $594;
            $48 = $595;
            $596 = $46;
            $597 = $47;
            $598 = $48;
            $43 = $596;
            $44 = $597;
            $45 = $598;
            $599 = $43;
            $600 = HEAP32[$599>>2]|0;
            $601 = $44;
            $602 = $45;
            $603 = ((($599)) + 4|0);
            $604 = HEAP32[$603>>2]|0;
            $605 = Math_imul($602, $604)|0;
            $606 = (($601) + ($605))|0;
            $607 = (($600) + ($606<<3)|0);
            $608 = ((($596)) + 4|0);
            $609 = HEAP32[$608>>2]|0;
            $40 = $201;
            $41 = $607;
            $42 = $609;
            $610 = $40;
            $611 = $41;
            HEAP32[$610>>2] = $611;
            $612 = ((($610)) + 4|0);
            $613 = $42;
            HEAP32[$612>>2] = $613;
            $614 = $159;
            $615 = $163;
            $616 = $176;
            $617 = $178;
            $618 = Math_imul($616, $617)|0;
            $619 = (($615) + ($618<<3)|0);
            $620 = $195;
            $621 = $182;
            $622 = $179;
            $623 = $182;
            $624 = $176;
            $625 = $197;
            __THREW__ = 0;
            invoke_viiiiiiidiiii(190,($166|0),($201|0),($614|0),($619|0),($620|0),($621|0),($622|0),-1.0,($623|0),($624|0),0,($625|0));
            $626 = __THREW__; __THREW__ = 0;
            $627 = $626&1;
            if ($627) {
             break L27;
            }
           }
           $628 = $181;
           $629 = (($628) + 4)|0;
           $181 = $629;
          }
          $630 = HEAP32[$172>>2]|0;
          $631 = $178;
          $632 = (($631) + ($630))|0;
          $178 = $632;
         }
         $202 = 0;
         $633 = $175;
         $634 = HEAP32[$154>>2]|0;
         $635 = (($633) - ($634))|0;
         $203 = $635;
         $636 = $202;
         $204 = $636;
         while(1) {
          $637 = $204;
          $638 = $203;
          $639 = ($637|0)<($638|0);
          if (!($639)) {
           break;
          }
          $640 = $203;
          $641 = $204;
          $642 = (($640) - ($641))|0;
          HEAP32[$206>>2] = $642;
          $64 = $155;
          $65 = $206;
          $643 = $64;
          $644 = $65;
          ;HEAP8[$63>>0]=HEAP8[$66>>0]|0;
          $61 = $643;
          $62 = $644;
          $645 = $62;
          $646 = $61;
          $58 = $63;
          $59 = $645;
          $60 = $646;
          $647 = $59;
          $648 = HEAP32[$647>>2]|0;
          $649 = $60;
          $650 = HEAP32[$649>>2]|0;
          $651 = ($648|0)<($650|0);
          $652 = $62;
          $653 = $61;
          $654 = $651 ? $652 : $653;
          $655 = HEAP32[$654>>2]|0;
          $205 = $655;
          $656 = $205;
          $657 = ($656|0)>(0);
          if ($657) {
           $658 = $159;
           $659 = $204;
           $660 = $175;
           $661 = HEAP32[$154>>2]|0;
           $662 = (($660) - ($661))|0;
           $76 = $152;
           $77 = $659;
           $78 = $662;
           $663 = $76;
           $664 = $77;
           $665 = $78;
           $73 = $663;
           $74 = $664;
           $75 = $665;
           $666 = $73;
           $667 = HEAP32[$666>>2]|0;
           $668 = $74;
           $669 = $75;
           $670 = ((($666)) + 4|0);
           $671 = HEAP32[$670>>2]|0;
           $672 = Math_imul($669, $671)|0;
           $673 = (($668) + ($672))|0;
           $674 = (($667) + ($673<<3)|0);
           $675 = ((($663)) + 4|0);
           $676 = HEAP32[$675>>2]|0;
           $70 = $207;
           $71 = $674;
           $72 = $676;
           $677 = $70;
           $678 = $71;
           $679 = $72;
           $67 = $677;
           $68 = $678;
           $69 = $679;
           $680 = $67;
           $681 = $68;
           HEAP32[$680>>2] = $681;
           $682 = ((($680)) + 4|0);
           $683 = $69;
           HEAP32[$682>>2] = $683;
           $684 = $176;
           $685 = $205;
           __THREW__ = 0;
           invoke_viiiiiii(187,($167|0),($658|0),($207|0),($684|0),($685|0),0,0);
           $686 = __THREW__; __THREW__ = 0;
           $687 = $686&1;
           if ($687) {
            break L27;
           }
           $688 = $204;
           $94 = $153;
           $95 = $688;
           $96 = 0;
           $689 = $94;
           $690 = $95;
           $691 = $96;
           $91 = $689;
           $92 = $690;
           $93 = $691;
           $692 = $91;
           $693 = HEAP32[$692>>2]|0;
           $694 = $92;
           $695 = $93;
           $696 = ((($692)) + 4|0);
           $697 = HEAP32[$696>>2]|0;
           $698 = Math_imul($695, $697)|0;
           $699 = (($694) + ($698))|0;
           $700 = (($693) + ($699<<3)|0);
           $701 = ((($689)) + 4|0);
           $702 = HEAP32[$701>>2]|0;
           $88 = $208;
           $89 = $700;
           $90 = $702;
           $703 = $88;
           $704 = $89;
           HEAP32[$703>>2] = $704;
           $705 = ((($703)) + 4|0);
           $706 = $90;
           HEAP32[$705>>2] = $706;
           $707 = $159;
           $708 = $163;
           $709 = $205;
           $710 = $176;
           $711 = $151;
           __THREW__ = 0;
           invoke_viiiiiiidiiii(190,($166|0),($208|0),($707|0),($708|0),($709|0),($710|0),($711|0),-1.0,-1,-1,0,0);
           $712 = __THREW__; __THREW__ = 0;
           $713 = $712&1;
           if ($713) {
            break L27;
           }
          }
          $714 = HEAP32[$155>>2]|0;
          $715 = $204;
          $716 = (($715) + ($714))|0;
          $204 = $716;
         }
         $717 = HEAP32[$154>>2]|0;
         $718 = $175;
         $719 = (($718) - ($717))|0;
         $175 = $719;
        }
        __THREW__ = 0;
        invoke_vi(189,($164|0));
        $720 = __THREW__; __THREW__ = 0;
        $721 = $720&1;
        if ($721) {
         label = 38;
         break L14;
        }
        __ZN5Eigen8internal28aligned_stack_memory_handlerIdED2Ev($160);
        STACKTOP = sp;return;
       }
      } while(0);
      $511 = ___cxa_find_matching_catch_2()|0;
      $512 = tempRet0;
      $161 = $511;
      $162 = $512;
      __THREW__ = 0;
      invoke_vi(189,($164|0));
      $513 = __THREW__; __THREW__ = 0;
      $514 = $513&1;
      if ($514) {
       $726 = ___cxa_find_matching_catch_3(0|0)|0;
       $727 = tempRet0;
       ___clang_call_terminate($726);
       // unreachable;
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 38) {
  $509 = ___cxa_find_matching_catch_2()|0;
  $510 = tempRet0;
  $161 = $509;
  $162 = $510;
 }
 __THREW__ = 0;
 invoke_vi(189,($160|0));
 $722 = __THREW__; __THREW__ = 0;
 $723 = $722&1;
 if ($723) {
  $726 = ___cxa_find_matching_catch_3(0|0)|0;
  $727 = tempRet0;
  ___clang_call_terminate($726);
  // unreachable;
 } else {
  $724 = $161;
  $725 = $162;
  ___resumeException($724|0);
  // unreachable;
 }
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4_setIS2_EERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_EEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_EEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingIS8_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingIS8_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_NS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS3_RKS5_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_NS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS3_RKS5_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_EEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_EEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Lb0EE3runERKS3_S6_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 32|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS3_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(415,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(127,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(128,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(416,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(417,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(118,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(118,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(118,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_Lb0EE3runERKS3_S6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_ddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv($23)|0);
 $25 = $6;
 $26 = ($24|0)==($25|0);
 if (!($26)) {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
 $27 = $3;
 $28 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv($27)|0);
 $29 = $7;
 $30 = ($28|0)==($29|0);
 if ($30) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEES5_NS0_9assign_opIddEELi0EEC2ERS5_RKS5_RKS7_RS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEES6_NS0_9assign_opIddEELi0EEELi1ELi0EE3runERS9_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEES5_NS0_9assign_opIddEELi0EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEES5_NS0_9assign_opIddEELi0EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEES5_NS0_9assign_opIddEELi0EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEES5_NS0_9assign_opIddEELi0EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$4>>2]|0;
 $8 = $3;
 $9 = (__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE8coeffRefEi($7,$8)|0);
 $10 = ((($4)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = (__ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE5coeffEi($11,$12)|0);
 __ZNK5Eigen8internal9assign_opIddE11assignCoeffERdRKd($6,$9,$13);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (($5) + ($6<<3)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZNSt3__26vectorIdNS_9allocatorIdEEE8allocateEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $45 = $0;
 $46 = $1;
 $47 = $45;
 $48 = $46;
 $49 = (__ZNKSt3__26vectorIdNS_9allocatorIdEEE8max_sizeEv($47)|0);
 $50 = ($48>>>0)>($49>>>0);
 if ($50) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($47);
  // unreachable;
 }
 $44 = $47;
 $51 = $44;
 $52 = ((($51)) + 8|0);
 $43 = $52;
 $53 = $43;
 $42 = $53;
 $54 = $42;
 $55 = $46;
 $12 = $54;
 $13 = $55;
 $56 = $12;
 $57 = $13;
 $9 = $56;
 $10 = $57;
 $11 = 0;
 $58 = $9;
 $59 = $10;
 $8 = $58;
 $60 = ($59>>>0)>(536870911);
 if (!($60)) {
  $71 = $10;
  $72 = $71<<3;
  $7 = $72;
  $73 = $7;
  $74 = (__Znwj($73)|0);
  $75 = ((($47)) + 4|0);
  HEAP32[$75>>2] = $74;
  HEAP32[$47>>2] = $74;
  $76 = HEAP32[$47>>2]|0;
  $77 = $46;
  $78 = (($76) + ($77<<3)|0);
  $16 = $47;
  $79 = $16;
  $80 = ((($79)) + 8|0);
  $15 = $80;
  $81 = $15;
  $14 = $81;
  $82 = $14;
  HEAP32[$82>>2] = $78;
  $40 = $47;
  $41 = 0;
  $83 = $40;
  $39 = $83;
  $84 = $39;
  $85 = HEAP32[$84>>2]|0;
  $38 = $85;
  $86 = $38;
  $18 = $83;
  $87 = $18;
  $88 = HEAP32[$87>>2]|0;
  $17 = $88;
  $89 = $17;
  $23 = $83;
  $90 = $23;
  $22 = $90;
  $91 = $22;
  $21 = $91;
  $92 = $21;
  $93 = ((($92)) + 8|0);
  $20 = $93;
  $94 = $20;
  $19 = $94;
  $95 = $19;
  $96 = HEAP32[$95>>2]|0;
  $97 = HEAP32[$91>>2]|0;
  $98 = $96;
  $99 = $97;
  $100 = (($98) - ($99))|0;
  $101 = (($100|0) / 8)&-1;
  $102 = (($89) + ($101<<3)|0);
  $25 = $83;
  $103 = $25;
  $104 = HEAP32[$103>>2]|0;
  $24 = $104;
  $105 = $24;
  $30 = $83;
  $106 = $30;
  $29 = $106;
  $107 = $29;
  $28 = $107;
  $108 = $28;
  $109 = ((($108)) + 8|0);
  $27 = $109;
  $110 = $27;
  $26 = $110;
  $111 = $26;
  $112 = HEAP32[$111>>2]|0;
  $113 = HEAP32[$107>>2]|0;
  $114 = $112;
  $115 = $113;
  $116 = (($114) - ($115))|0;
  $117 = (($116|0) / 8)&-1;
  $118 = (($105) + ($117<<3)|0);
  $32 = $83;
  $119 = $32;
  $120 = HEAP32[$119>>2]|0;
  $31 = $120;
  $121 = $31;
  $122 = $41;
  $123 = (($121) + ($122<<3)|0);
  $33 = $83;
  $34 = $86;
  $35 = $102;
  $36 = $118;
  $37 = $123;
  STACKTOP = sp;return;
 }
 $4 = 1110;
 $61 = (___cxa_allocate_exception(8)|0);
 $62 = $4;
 $2 = $61;
 $3 = $62;
 $63 = $2;
 $64 = $3;
 __THREW__ = 0;
 invoke_vii(114,($63|0),($64|0));
 $65 = __THREW__; __THREW__ = 0;
 $66 = $65&1;
 if ($66) {
  $67 = ___cxa_find_matching_catch_2()|0;
  $68 = tempRet0;
  $5 = $67;
  $6 = $68;
  ___cxa_free_exception(($61|0));
  $69 = $5;
  $70 = $6;
  ___resumeException($69|0);
  // unreachable;
 } else {
  HEAP32[$63>>2] = (920);
  ___cxa_throw(($61|0),(104|0),(21|0));
  // unreachable;
 }
}
function __ZNKSt3__26vectorIdNS_9allocatorIdEEE8max_sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $3 = sp + 8|0;
 $5 = sp + 77|0;
 $11 = sp;
 $14 = sp + 76|0;
 $19 = sp + 16|0;
 $20 = sp + 12|0;
 $18 = $0;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $4 = $25;
 $26 = $4;
 ;HEAP8[$3>>0]=HEAP8[$5>>0]|0;
 $2 = $26;
 $27 = $2;
 $1 = $27;
 HEAP32[$19>>2] = 536870911;
 HEAP32[$20>>2] = 2147483647;
 $12 = $19;
 $13 = $20;
 $28 = $12;
 $29 = $13;
 ;HEAP8[$11>>0]=HEAP8[$14>>0]|0;
 $9 = $28;
 $10 = $29;
 $30 = $10;
 $31 = $9;
 $6 = $11;
 $7 = $30;
 $8 = $31;
 $32 = $7;
 $33 = HEAP32[$32>>2]|0;
 $34 = $8;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $10;
 $38 = $9;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZNK5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($7)|0);
 __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($4,$8);
 $9 = $3;
 __THREW__ = 0;
 $10 = (invoke_iii(418,($4|0),($9|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEED2Ev($4);
  STACKTOP = sp;return ($10|0);
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $5 = $13;
 $6 = $14;
 __THREW__ = 0;
 invoke_vi(419,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $5;
  $18 = $6;
  ___resumeException($17|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS5_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (($5) + ($6<<3)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(420,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  __THREW__ = 0;
  invoke_vii(384,($11|0),0);
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if (!($13)) {
   STACKTOP = sp;return;
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $4 = $14;
 $5 = $15;
 __THREW__ = 0;
 invoke_vi(421,($6|0));
 $16 = __THREW__; __THREW__ = 0;
 $17 = $16&1;
 if ($17) {
  $20 = ___cxa_find_matching_catch_3(0|0)|0;
  $21 = tempRet0;
  ___clang_call_terminate($20);
  // unreachable;
 } else {
  $18 = $4;
  $19 = $5;
  ___resumeException($18|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE4dataEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2INS_5BlockINS1_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEERKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2Ev($6);
 __ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EEC2Ev($6);
 __THREW__ = 0;
 invoke_v(99);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  $9 = $3;
  __THREW__ = 0;
  invoke_vii(422,($6|0),($9|0));
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if (!($11)) {
   $12 = $3;
   __THREW__ = 0;
   (invoke_iii(423,($6|0),($12|0))|0);
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   if (!($14)) {
    STACKTOP = sp;return;
   }
  }
 }
 $15 = ___cxa_find_matching_catch_2()|0;
 $16 = tempRet0;
 $4 = $15;
 $5 = $16;
 __THREW__ = 0;
 invoke_vi(424,($6|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $21 = ___cxa_find_matching_catch_3(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 } else {
  $19 = $4;
  $20 = $5;
  ___resumeException($19|0);
  // unreachable;
 }
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE10resizeLikeINS_5BlockINS1_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEvRKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $10 = $6;
 $11 = $7;
 $12 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE7derivedEv($11)|0);
 $8 = $12;
 $13 = $8;
 $14 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4rowsEv($13)|0);
 $15 = $8;
 $16 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4colsEv($15)|0);
 $2 = $14;
 $3 = $16;
 $4 = 2147483647;
 $17 = $2;
 $18 = ($17|0)==(0);
 $19 = $3;
 $20 = ($19|0)==(0);
 $or$cond = $18 | $20;
 if ($or$cond) {
  $27 = 0;
 } else {
  $21 = $2;
  $22 = $4;
  $23 = $3;
  $24 = (($22|0) / ($23|0))&-1;
  $25 = ($21|0)>($24|0);
  $27 = $25;
 }
 $26 = $27&1;
 $5 = $26;
 $28 = $5;
 $29 = $28&1;
 if ($29) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $30 = $8;
 $31 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4rowsEv($30)|0);
 $32 = $8;
 $33 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4colsEv($32)|0);
 $34 = Math_imul($31, $33)|0;
 $9 = $34;
 $35 = $8;
 $36 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4rowsEv($35)|0);
 $37 = ($36|0)==(1);
 if ($37) {
  $41 = $9;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($10,$41,1);
  STACKTOP = sp;return;
 }
 $38 = $8;
 $39 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4colsEv($38)|0);
 $40 = ($39|0)==(1);
 if ($40) {
  $41 = $9;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($10,$41,1);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5311|0),(1577|0),374,(5350|0));
  // unreachable;
 }
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE12_set_noaliasINS_5BlockINS1_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE7derivedEv($7)|0);
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5BlockINS2_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($6,$8,$4);
 $9 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($5)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $7;
 $11 = $9;
 $12 = ($11|0)==(1);
 $13 = $8;
 $14 = ($13|0)>=(0);
 $or$cond = $12 & $14;
 $15 = $9;
 $16 = ($15|0)>=(0);
 $or$cond3 = $or$cond & $16;
 if (!($or$cond3)) {
  ___assert_fail((1178|0),(1577|0),285,(1618|0));
  // unreachable;
 }
 $17 = $8;
 $18 = $9;
 $3 = $17;
 $4 = $18;
 $5 = 2147483647;
 $19 = $3;
 $20 = ($19|0)==(0);
 $21 = $4;
 $22 = ($21|0)==(0);
 $or$cond5 = $20 | $22;
 if ($or$cond5) {
  $29 = 0;
 } else {
  $23 = $3;
  $24 = $5;
  $25 = $4;
  $26 = (($24|0) / ($25|0))&-1;
  $27 = ($23|0)>($26|0);
  $29 = $27;
 }
 $28 = $29&1;
 $6 = $28;
 $30 = $6;
 $31 = $30&1;
 if ($31) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $32 = $8;
 $33 = $9;
 $34 = Math_imul($32, $33)|0;
 $35 = $8;
 $36 = $9;
 __ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE6resizeEiii($10,$34,$35,$36);
 STACKTOP = sp;return;
}
function __ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE6resizeEiii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = ((($8)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11;
 $13 = ($9|0)!=($12|0);
 if (!($13)) {
  $22 = $6;
  $23 = ((($8)) + 4|0);
  HEAP32[$23>>2] = $22;
  STACKTOP = sp;return;
 }
 $14 = HEAP32[$8>>2]|0;
 $15 = ((($8)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $16;
 __ZN5Eigen8internal31conditional_aligned_delete_autoIdLb1EEEvPT_j($14,$17);
 $18 = $5;
 $19 = ($18|0)!=(0);
 if ($19) {
  $20 = $5;
  $21 = (__ZN5Eigen8internal28conditional_aligned_new_autoIdLb1EEEPT_j($20)|0);
  $$sink = $21;
 } else {
  $$sink = 0;
 }
 HEAP32[$8>>2] = $$sink;
 $22 = $6;
 $23 = ((($8)) + 4|0);
 HEAP32[$23>>2] = $22;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5BlockINS2_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 __ZN5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERS2_($6,$7);
 $8 = $4;
 $9 = $5;
 __ZN5Eigen8internal10AssignmentINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS_5BlockINS3_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS5_RKS8_RKSA_($6,$8,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen13TransposeImplINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5DenseEEC2Ev($4);
 $5 = $3;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS_5BlockINS3_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS5_RKS8_RKSA_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS_5BlockINS3_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS_5BlockINS3_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen13TransposeImplINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS_5BlockINS3_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS_5BlockINS3_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELb1EE3runERKS5_RKS8_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS_5BlockINS3_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 36|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2ERKS5_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(425,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(426,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(427,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(428,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(429,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(430,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(430,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(392,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS_5BlockINS3_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELb1EE3runERKS5_RKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen8internal12extract_dataINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEEPKNT_6ScalarERKS6_($4)|0);
 $6 = $3;
 $7 = (__ZN5Eigen8internal42check_transpose_aliasing_run_time_selectorIdLb1ENS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE3runEPKdRKS5_($5,$6)|0);
 if ($7) {
  ___assert_fail((1730|0),(2005|0),378,(2040|0));
  // unreachable;
 } else {
  STACKTOP = sp;return;
 }
}
function __ZN5Eigen8internal42check_transpose_aliasing_run_time_selectorIdLb1ENS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE3runEPKdRKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  $10 = 0;
  STACKTOP = sp;return ($10|0);
 }
 $6 = $2;
 $7 = $3;
 $8 = (__ZN5Eigen8internal12extract_dataINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEPKNT_6ScalarERKS6_($7)|0);
 $9 = ($6|0)==($8|0);
 $10 = $9;
 STACKTOP = sp;return ($10|0);
}
function __ZN5Eigen8internal12extract_dataINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEEPKNT_6ScalarERKS6_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN5Eigen8internal21extract_data_selectorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEELb1EE3runERKS5_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal12extract_dataINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEPKNT_6ScalarERKS6_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN5Eigen8internal21extract_data_selectorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELb1EE3runERKS5_($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal21extract_data_selectorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELb1EE3runERKS5_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN5Eigen8internal11blas_traitsINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE7extractERKS5_($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi1EE4dataEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal11blas_traitsINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE7extractERKS5_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal21extract_data_selectorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEELb1EE3runERKS5_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1;
 $4 = (__ZN5Eigen8internal11blas_traitsINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7extractERKS5_($3)|0);
 HEAP32[$2>>2] = $4;
 $5 = (__ZN5Eigen13TransposeImplIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5DenseEE4dataEv($2)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal11blas_traitsINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7extractERKS5_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = $0;
 $3 = $2;
 $4 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE16nestedExpressionEv($3)|0);
 $5 = (__ZN5Eigen8internal11blas_traitsINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7extractERKS3_($4)|0);
 __ZN5Eigen9TransposeIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERS3_($1,$5);
 $6 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($6|0);
}
function __ZN5Eigen13TransposeImplIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5DenseEE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN5Eigen9EigenBaseINS_9TransposeIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($2)|0);
 $4 = (__ZN5Eigen9TransposeIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE16nestedExpressionEv($3)|0);
 $5 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4dataEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal11blas_traitsINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7extractERKS3_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen9TransposeIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen13TransposeImplIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5DenseEEC2Ev($4);
 $5 = $3;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen13TransposeImplIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_9TransposeIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_9TransposeIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_9TransposeIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_9TransposeIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9EigenBaseINS_9TransposeIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen9TransposeIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17resize_if_allowedINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS_5BlockINS3_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($23)|0);
 $25 = $6;
 $26 = ($24|0)==($25|0);
 if (!($26)) {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
 $27 = $3;
 $28 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($27)|0);
 $29 = $7;
 $30 = ($28|0)==($29|0);
 if ($30) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS0_10IndexBasedEdEC2ERKS5_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEENS2_INS_5BlockINS4_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EEC2ERS7_RKSB_RKSD_RS6_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEENS3_INS_5BlockINS5_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EEELi1ELi0EE3runERSF_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEENS2_INS_5BlockINS4_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEENS2_INS_5BlockINS4_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS0_10IndexBasedEdED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = $4;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($7,$8,$9);
 STACKTOP = sp;return;
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE4colsEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE4colsEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS0_10IndexBasedEdEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($6);
 $7 = ((($6)) + 4|0);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(431,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  __THREW__ = 0;
  invoke_vii(432,($7|0),($9|0));
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if (!($13)) {
   STACKTOP = sp;return;
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $4 = $14;
 $5 = $15;
 __THREW__ = 0;
 invoke_vi(433,($6|0));
 $16 = __THREW__; __THREW__ = 0;
 $17 = $16&1;
 if ($17) {
  $20 = ___cxa_find_matching_catch_3(0|0)|0;
  $21 = tempRet0;
  ___clang_call_terminate($20);
  // unreachable;
 } else {
  $18 = $4;
  $19 = $5;
  ___resumeException($18|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEENS2_INS_5BlockINS4_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEENS2_INS_5BlockINS4_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$4>>2]|0;
 $8 = $3;
 $9 = (__ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS0_10IndexBasedEdE8coeffRefEi($7,$8)|0);
 $10 = ((($4)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEE5coeffEi($11,$12)|0);
 __ZNK5Eigen8internal9assign_opIddE11assignCoeffERdRKd($6,$9,$13);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS0_10IndexBasedEdE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 4|0);
 $6 = $3;
 $7 = (__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE8coeffRefEi($5,$6)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (($5) + ($6<<3)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS0_10IndexBasedEdED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 4|0);
 __THREW__ = 0;
 invoke_vi(419,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch_2()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 __THREW__ = 0;
 invoke_vi(433,($4|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $2;
  $13 = $3;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1EE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($7)|0);
 __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($4,$8);
 $9 = $3;
 __THREW__ = 0;
 $10 = (invoke_iii(434,($4|0),($9|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEED2Ev($4);
  STACKTOP = sp;return ($10|0);
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $5 = $13;
 $6 = $14;
 __THREW__ = 0;
 invoke_vi(419,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $5;
  $18 = $6;
  ___resumeException($17|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $13 = sp;
 $16 = sp + 156|0;
 $24 = sp + 72|0;
 $27 = sp + 60|0;
 $35 = sp + 12|0;
 $32 = $0;
 $33 = $1;
 $38 = $32;
 $31 = $38;
 $39 = $31;
 $40 = ((($39)) + 8|0);
 $30 = $40;
 $41 = $30;
 $29 = $41;
 $42 = $29;
 $34 = $42;
 $28 = $38;
 $43 = $28;
 $44 = ((($43)) + 4|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = HEAP32[$43>>2]|0;
 $47 = $45;
 $48 = $46;
 $49 = (($47) - ($48))|0;
 $50 = (($49|0) / 16)&-1;
 $51 = (($50) + 1)|0;
 $23 = $38;
 HEAP32[$24>>2] = $51;
 $52 = $23;
 $53 = (__ZNKSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE8max_sizeEv($52)|0);
 $25 = $53;
 $54 = HEAP32[$24>>2]|0;
 $55 = $25;
 $56 = ($54>>>0)>($55>>>0);
 if ($56) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($52);
  // unreachable;
 }
 $21 = $52;
 $57 = $21;
 $20 = $57;
 $58 = $20;
 $19 = $58;
 $59 = $19;
 $60 = ((($59)) + 8|0);
 $18 = $60;
 $61 = $18;
 $17 = $61;
 $62 = $17;
 $63 = HEAP32[$62>>2]|0;
 $64 = HEAP32[$58>>2]|0;
 $65 = $63;
 $66 = $64;
 $67 = (($65) - ($66))|0;
 $68 = (($67|0) / 16)&-1;
 $26 = $68;
 $69 = $26;
 $70 = $25;
 $71 = (($70>>>0) / 2)&-1;
 $72 = ($69>>>0)>=($71>>>0);
 if ($72) {
  $73 = $25;
  $22 = $73;
 } else {
  $74 = $26;
  $75 = $74<<1;
  HEAP32[$27>>2] = $75;
  $14 = $27;
  $15 = $24;
  $76 = $14;
  $77 = $15;
  ;HEAP8[$13>>0]=HEAP8[$16>>0]|0;
  $11 = $76;
  $12 = $77;
  $78 = $11;
  $79 = $12;
  $8 = $13;
  $9 = $78;
  $10 = $79;
  $80 = $9;
  $81 = HEAP32[$80>>2]|0;
  $82 = $10;
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81>>>0)<($83>>>0);
  $85 = $12;
  $86 = $11;
  $87 = $84 ? $85 : $86;
  $88 = HEAP32[$87>>2]|0;
  $22 = $88;
 }
 $89 = $22;
 $7 = $38;
 $90 = $7;
 $91 = ((($90)) + 4|0);
 $92 = HEAP32[$91>>2]|0;
 $93 = HEAP32[$90>>2]|0;
 $94 = $92;
 $95 = $93;
 $96 = (($94) - ($95))|0;
 $97 = (($96|0) / 16)&-1;
 $98 = $34;
 __ZNSt3__214__split_bufferIN5Eigen7TripletIdiEERNS_9allocatorIS3_EEEC2EjjS6_($35,$89,$97,$98);
 $99 = $34;
 $100 = ((($35)) + 8|0);
 $101 = HEAP32[$100>>2]|0;
 $6 = $101;
 $102 = $6;
 $103 = $33;
 $5 = $103;
 $104 = $5;
 $2 = $99;
 $3 = $102;
 $4 = $104;
 $105 = $3;
 $106 = $4;
 ;HEAP32[$105>>2]=HEAP32[$106>>2]|0;HEAP32[$105+4>>2]=HEAP32[$106+4>>2]|0;HEAP32[$105+8>>2]=HEAP32[$106+8>>2]|0;HEAP32[$105+12>>2]=HEAP32[$106+12>>2]|0;
 $107 = ((($35)) + 8|0);
 $108 = HEAP32[$107>>2]|0;
 $109 = ((($108)) + 16|0);
 HEAP32[$107>>2] = $109;
 __THREW__ = 0;
 invoke_vii(435,($38|0),($35|0));
 $110 = __THREW__; __THREW__ = 0;
 $111 = $110&1;
 if (!($111)) {
  __ZNSt3__214__split_bufferIN5Eigen7TripletIdiEERNS_9allocatorIS3_EEED2Ev($35);
  STACKTOP = sp;return;
 }
 $112 = ___cxa_find_matching_catch_2()|0;
 $113 = tempRet0;
 $36 = $112;
 $37 = $113;
 __THREW__ = 0;
 invoke_vi(436,($35|0));
 $114 = __THREW__; __THREW__ = 0;
 $115 = $114&1;
 if ($115) {
  $118 = ___cxa_find_matching_catch_3(0|0)|0;
  $119 = tempRet0;
  ___clang_call_terminate($118);
  // unreachable;
 } else {
  $116 = $36;
  $117 = $37;
  ___resumeException($116|0);
  // unreachable;
 }
}
function __ZNSt3__214__split_bufferIN5Eigen7TripletIdiEERNS_9allocatorIS3_EEEC2EjjS6_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $11 = sp + 136|0;
 $15 = sp + 120|0;
 $32 = sp + 52|0;
 $39 = sp + 24|0;
 $44 = sp + 4|0;
 $45 = sp;
 $40 = $0;
 $41 = $1;
 $42 = $2;
 $43 = $3;
 $46 = $40;
 $47 = ((($46)) + 12|0);
 $37 = $39;
 $38 = -1;
 $48 = $37;
 HEAP32[$48>>2] = 0;
 $49 = HEAP32[$39>>2]|0;
 HEAP32[$44>>2] = $49;
 $17 = $44;
 $50 = $43;
 $14 = $47;
 HEAP32[$15>>2] = 0;
 $16 = $50;
 $51 = $14;
 $13 = $15;
 $52 = $13;
 $53 = HEAP32[$52>>2]|0;
 $54 = $16;
 $7 = $54;
 $55 = $7;
 $10 = $51;
 HEAP32[$11>>2] = $53;
 $12 = $55;
 $56 = $10;
 $9 = $11;
 $57 = $9;
 $58 = HEAP32[$57>>2]|0;
 HEAP32[$56>>2] = $58;
 $59 = ((($56)) + 4|0);
 $60 = $12;
 $8 = $60;
 $61 = $8;
 HEAP32[$59>>2] = $61;
 $62 = $41;
 $63 = ($62|0)!=(0);
 if (!($63)) {
  $30 = $32;
  $31 = -1;
  $90 = $30;
  HEAP32[$90>>2] = 0;
  $91 = HEAP32[$32>>2]|0;
  HEAP32[$45>>2] = $91;
  $33 = $45;
  $92 = 0;
  HEAP32[$46>>2] = $92;
  $93 = HEAP32[$46>>2]|0;
  $94 = $42;
  $95 = (($93) + ($94<<4)|0);
  $96 = ((($46)) + 8|0);
  HEAP32[$96>>2] = $95;
  $97 = ((($46)) + 4|0);
  HEAP32[$97>>2] = $95;
  $98 = HEAP32[$46>>2]|0;
  $99 = $41;
  $100 = (($98) + ($99<<4)|0);
  $36 = $46;
  $101 = $36;
  $102 = ((($101)) + 12|0);
  $35 = $102;
  $103 = $35;
  $34 = $103;
  $104 = $34;
  HEAP32[$104>>2] = $100;
  STACKTOP = sp;return;
 }
 $6 = $46;
 $64 = $6;
 $65 = ((($64)) + 12|0);
 $5 = $65;
 $66 = $5;
 $4 = $66;
 $67 = $4;
 $68 = ((($67)) + 4|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = $41;
 $28 = $69;
 $29 = $70;
 $71 = $28;
 $72 = $29;
 $25 = $71;
 $26 = $72;
 $27 = 0;
 $73 = $25;
 $74 = $26;
 $24 = $73;
 $75 = ($74>>>0)>(268435455);
 if (!($75)) {
  $86 = $26;
  $87 = $86<<4;
  $23 = $87;
  $88 = $23;
  $89 = (__Znwj($88)|0);
  $92 = $89;
  HEAP32[$46>>2] = $92;
  $93 = HEAP32[$46>>2]|0;
  $94 = $42;
  $95 = (($93) + ($94<<4)|0);
  $96 = ((($46)) + 8|0);
  HEAP32[$96>>2] = $95;
  $97 = ((($46)) + 4|0);
  HEAP32[$97>>2] = $95;
  $98 = HEAP32[$46>>2]|0;
  $99 = $41;
  $100 = (($98) + ($99<<4)|0);
  $36 = $46;
  $101 = $36;
  $102 = ((($101)) + 12|0);
  $35 = $102;
  $103 = $35;
  $34 = $103;
  $104 = $34;
  HEAP32[$104>>2] = $100;
  STACKTOP = sp;return;
 }
 $20 = 1110;
 $76 = (___cxa_allocate_exception(8)|0);
 $77 = $20;
 $18 = $76;
 $19 = $77;
 $78 = $18;
 $79 = $19;
 __THREW__ = 0;
 invoke_vii(114,($78|0),($79|0));
 $80 = __THREW__; __THREW__ = 0;
 $81 = $80&1;
 if ($81) {
  $82 = ___cxa_find_matching_catch_2()|0;
  $83 = tempRet0;
  $21 = $82;
  $22 = $83;
  ___cxa_free_exception(($76|0));
  $84 = $21;
  $85 = $22;
  ___resumeException($84|0);
  // unreachable;
 } else {
  HEAP32[$78>>2] = (920);
  ___cxa_throw(($76|0),(104|0),(21|0));
  // unreachable;
 }
}
function __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(352|0);
 $15 = sp + 288|0;
 $21 = sp + 264|0;
 $33 = sp + 216|0;
 $86 = $0;
 $87 = $1;
 $88 = $86;
 $85 = $88;
 $89 = $85;
 $84 = $89;
 $90 = $84;
 $91 = HEAP32[$90>>2]|0;
 $83 = $91;
 $92 = $83;
 $62 = $89;
 $93 = $62;
 $94 = HEAP32[$93>>2]|0;
 $61 = $94;
 $95 = $61;
 $67 = $89;
 $96 = $67;
 $66 = $96;
 $97 = $66;
 $65 = $97;
 $98 = $65;
 $99 = ((($98)) + 8|0);
 $64 = $99;
 $100 = $64;
 $63 = $100;
 $101 = $63;
 $102 = HEAP32[$101>>2]|0;
 $103 = HEAP32[$97>>2]|0;
 $104 = $102;
 $105 = $103;
 $106 = (($104) - ($105))|0;
 $107 = (($106|0) / 16)&-1;
 $108 = (($95) + ($107<<4)|0);
 $69 = $89;
 $109 = $69;
 $110 = HEAP32[$109>>2]|0;
 $68 = $110;
 $111 = $68;
 $70 = $89;
 $112 = $70;
 $113 = ((($112)) + 4|0);
 $114 = HEAP32[$113>>2]|0;
 $115 = HEAP32[$112>>2]|0;
 $116 = $114;
 $117 = $115;
 $118 = (($116) - ($117))|0;
 $119 = (($118|0) / 16)&-1;
 $120 = (($111) + ($119<<4)|0);
 $72 = $89;
 $121 = $72;
 $122 = HEAP32[$121>>2]|0;
 $71 = $122;
 $123 = $71;
 $77 = $89;
 $124 = $77;
 $76 = $124;
 $125 = $76;
 $75 = $125;
 $126 = $75;
 $127 = ((($126)) + 8|0);
 $74 = $127;
 $128 = $74;
 $73 = $128;
 $129 = $73;
 $130 = HEAP32[$129>>2]|0;
 $131 = HEAP32[$125>>2]|0;
 $132 = $130;
 $133 = $131;
 $134 = (($132) - ($133))|0;
 $135 = (($134|0) / 16)&-1;
 $136 = (($123) + ($135<<4)|0);
 $78 = $89;
 $79 = $92;
 $80 = $108;
 $81 = $120;
 $82 = $136;
 $4 = $88;
 $137 = $4;
 $138 = ((($137)) + 8|0);
 $3 = $138;
 $139 = $3;
 $2 = $139;
 $140 = $2;
 $141 = HEAP32[$88>>2]|0;
 $142 = ((($88)) + 4|0);
 $143 = HEAP32[$142>>2]|0;
 $144 = $87;
 $145 = ((($144)) + 4|0);
 $5 = $140;
 $6 = $141;
 $7 = $143;
 $8 = $145;
 $146 = $7;
 $147 = $6;
 $148 = $146;
 $149 = $147;
 $150 = (($148) - ($149))|0;
 $151 = (($150|0) / 16)&-1;
 $9 = $151;
 $152 = $9;
 $153 = $8;
 $154 = HEAP32[$153>>2]|0;
 $155 = (0 - ($152))|0;
 $156 = (($154) + ($155<<4)|0);
 HEAP32[$153>>2] = $156;
 $157 = $9;
 $158 = ($157|0)>(0);
 if ($158) {
  $159 = $8;
  $160 = HEAP32[$159>>2]|0;
  $161 = $6;
  $162 = $9;
  $163 = $162<<4;
  _memcpy(($160|0),($161|0),($163|0))|0;
 }
 $164 = $87;
 $165 = ((($164)) + 4|0);
 $13 = $88;
 $14 = $165;
 $166 = $13;
 $12 = $166;
 $167 = $12;
 $168 = HEAP32[$167>>2]|0;
 HEAP32[$15>>2] = $168;
 $169 = $14;
 $10 = $169;
 $170 = $10;
 $171 = HEAP32[$170>>2]|0;
 $172 = $13;
 HEAP32[$172>>2] = $171;
 $11 = $15;
 $173 = $11;
 $174 = HEAP32[$173>>2]|0;
 $175 = $14;
 HEAP32[$175>>2] = $174;
 $176 = ((($88)) + 4|0);
 $177 = $87;
 $178 = ((($177)) + 8|0);
 $19 = $176;
 $20 = $178;
 $179 = $19;
 $18 = $179;
 $180 = $18;
 $181 = HEAP32[$180>>2]|0;
 HEAP32[$21>>2] = $181;
 $182 = $20;
 $16 = $182;
 $183 = $16;
 $184 = HEAP32[$183>>2]|0;
 $185 = $19;
 HEAP32[$185>>2] = $184;
 $17 = $21;
 $186 = $17;
 $187 = HEAP32[$186>>2]|0;
 $188 = $20;
 HEAP32[$188>>2] = $187;
 $24 = $88;
 $189 = $24;
 $190 = ((($189)) + 8|0);
 $23 = $190;
 $191 = $23;
 $22 = $191;
 $192 = $22;
 $193 = $87;
 $27 = $193;
 $194 = $27;
 $195 = ((($194)) + 12|0);
 $26 = $195;
 $196 = $26;
 $25 = $196;
 $197 = $25;
 $31 = $192;
 $32 = $197;
 $198 = $31;
 $30 = $198;
 $199 = $30;
 $200 = HEAP32[$199>>2]|0;
 HEAP32[$33>>2] = $200;
 $201 = $32;
 $28 = $201;
 $202 = $28;
 $203 = HEAP32[$202>>2]|0;
 $204 = $31;
 HEAP32[$204>>2] = $203;
 $29 = $33;
 $205 = $29;
 $206 = HEAP32[$205>>2]|0;
 $207 = $32;
 HEAP32[$207>>2] = $206;
 $208 = $87;
 $209 = ((($208)) + 4|0);
 $210 = HEAP32[$209>>2]|0;
 $211 = $87;
 HEAP32[$211>>2] = $210;
 $34 = $88;
 $212 = $34;
 $213 = ((($212)) + 4|0);
 $214 = HEAP32[$213>>2]|0;
 $215 = HEAP32[$212>>2]|0;
 $216 = $214;
 $217 = $215;
 $218 = (($216) - ($217))|0;
 $219 = (($218|0) / 16)&-1;
 $58 = $88;
 $59 = $219;
 $220 = $58;
 $57 = $220;
 $221 = $57;
 $222 = HEAP32[$221>>2]|0;
 $56 = $222;
 $223 = $56;
 $36 = $220;
 $224 = $36;
 $225 = HEAP32[$224>>2]|0;
 $35 = $225;
 $226 = $35;
 $41 = $220;
 $227 = $41;
 $40 = $227;
 $228 = $40;
 $39 = $228;
 $229 = $39;
 $230 = ((($229)) + 8|0);
 $38 = $230;
 $231 = $38;
 $37 = $231;
 $232 = $37;
 $233 = HEAP32[$232>>2]|0;
 $234 = HEAP32[$228>>2]|0;
 $235 = $233;
 $236 = $234;
 $237 = (($235) - ($236))|0;
 $238 = (($237|0) / 16)&-1;
 $239 = (($226) + ($238<<4)|0);
 $43 = $220;
 $240 = $43;
 $241 = HEAP32[$240>>2]|0;
 $42 = $241;
 $242 = $42;
 $48 = $220;
 $243 = $48;
 $47 = $243;
 $244 = $47;
 $46 = $244;
 $245 = $46;
 $246 = ((($245)) + 8|0);
 $45 = $246;
 $247 = $45;
 $44 = $247;
 $248 = $44;
 $249 = HEAP32[$248>>2]|0;
 $250 = HEAP32[$244>>2]|0;
 $251 = $249;
 $252 = $250;
 $253 = (($251) - ($252))|0;
 $254 = (($253|0) / 16)&-1;
 $255 = (($242) + ($254<<4)|0);
 $50 = $220;
 $256 = $50;
 $257 = HEAP32[$256>>2]|0;
 $49 = $257;
 $258 = $49;
 $259 = $59;
 $260 = (($258) + ($259<<4)|0);
 $51 = $220;
 $52 = $223;
 $53 = $239;
 $54 = $255;
 $55 = $260;
 $60 = $88;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferIN5Eigen7TripletIdiEERNS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $18 = sp + 8|0;
 $21 = sp + 125|0;
 $27 = sp;
 $30 = sp + 124|0;
 $32 = $0;
 $33 = $32;
 $31 = $33;
 $34 = $31;
 $35 = ((($34)) + 4|0);
 $36 = HEAP32[$35>>2]|0;
 $28 = $34;
 $29 = $36;
 $37 = $28;
 $38 = $29;
 ;HEAP8[$27>>0]=HEAP8[$30>>0]|0;
 $25 = $37;
 $26 = $38;
 $39 = $25;
 while(1) {
  $40 = $26;
  $41 = ((($39)) + 8|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = ($40|0)!=($42|0);
  if (!($43)) {
   break;
  }
  $24 = $39;
  $44 = $24;
  $45 = ((($44)) + 12|0);
  $23 = $45;
  $46 = $23;
  $22 = $46;
  $47 = $22;
  $48 = ((($47)) + 4|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ((($39)) + 8|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = ((($51)) + -16|0);
  HEAP32[$50>>2] = $52;
  $15 = $52;
  $53 = $15;
  $19 = $49;
  $20 = $53;
  $54 = $19;
  $55 = $20;
  ;HEAP8[$18>>0]=HEAP8[$21>>0]|0;
  $16 = $54;
  $17 = $55;
 }
 $56 = HEAP32[$33>>2]|0;
 $57 = ($56|0)!=(0|0);
 if (!($57)) {
  STACKTOP = sp;return;
 }
 $7 = $33;
 $58 = $7;
 $59 = ((($58)) + 12|0);
 $6 = $59;
 $60 = $6;
 $5 = $60;
 $61 = $5;
 $62 = ((($61)) + 4|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = HEAP32[$33>>2]|0;
 $4 = $33;
 $65 = $4;
 $3 = $65;
 $66 = $3;
 $67 = ((($66)) + 12|0);
 $2 = $67;
 $68 = $2;
 $1 = $68;
 $69 = $1;
 $70 = HEAP32[$69>>2]|0;
 $71 = HEAP32[$65>>2]|0;
 $72 = $70;
 $73 = $71;
 $74 = (($72) - ($73))|0;
 $75 = (($74|0) / 16)&-1;
 $12 = $63;
 $13 = $64;
 $14 = $75;
 $76 = $12;
 $77 = $13;
 $78 = $14;
 $9 = $76;
 $10 = $77;
 $11 = $78;
 $79 = $10;
 $8 = $79;
 $80 = $8;
 __ZdlPv($80);
 STACKTOP = sp;return;
}
function __ZNKSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE8max_sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $3 = sp + 8|0;
 $5 = sp + 77|0;
 $11 = sp;
 $14 = sp + 76|0;
 $19 = sp + 16|0;
 $20 = sp + 12|0;
 $18 = $0;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $4 = $25;
 $26 = $4;
 ;HEAP8[$3>>0]=HEAP8[$5>>0]|0;
 $2 = $26;
 $27 = $2;
 $1 = $27;
 HEAP32[$19>>2] = 268435455;
 HEAP32[$20>>2] = 2147483647;
 $12 = $19;
 $13 = $20;
 $28 = $12;
 $29 = $13;
 ;HEAP8[$11>>0]=HEAP8[$14>>0]|0;
 $9 = $28;
 $10 = $29;
 $30 = $10;
 $31 = $9;
 $6 = $11;
 $7 = $30;
 $8 = $31;
 $32 = $7;
 $33 = HEAP32[$32>>2]|0;
 $34 = $8;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $10;
 $38 = $9;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZNSt3__26__sortIR6SorterPN5Eigen7TripletIdiEEEEvT0_S7_T_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $8 = sp + 80|0;
 $14 = sp + 64|0;
 $20 = sp + 48|0;
 $26 = sp + 32|0;
 $32 = sp + 16|0;
 $38 = sp;
 $39 = $0;
 $40 = $1;
 $41 = $2;
 $42 = 30;
 L1: while(1) {
  L3: while(1) {
   $51 = $40;
   $52 = $39;
   $53 = $51;
   $54 = $52;
   $55 = (($53) - ($54))|0;
   $56 = (($55|0) / 16)&-1;
   $43 = $56;
   $57 = $43;
   switch ($57|0) {
   case 2:  {
    label = 4;
    break L1;
    break;
   }
   case 3:  {
    label = 6;
    break L1;
    break;
   }
   case 4:  {
    label = 7;
    break L1;
    break;
   }
   case 5:  {
    label = 8;
    break L1;
    break;
   }
   case 1: case 0:  {
    label = 52;
    break L1;
    break;
   }
   default: {
   }
   }
   $96 = $43;
   $97 = ($96|0)<=(30);
   $98 = $39;
   if ($97) {
    label = 10;
    break L1;
   }
   $44 = $98;
   $101 = $40;
   $45 = $101;
   $102 = $45;
   $103 = ((($102)) + -16|0);
   $45 = $103;
   $104 = $43;
   $105 = ($104|0)>=(1000);
   $106 = $43;
   $107 = (($106|0) / 2)&-1;
   $47 = $107;
   $108 = $47;
   $109 = $44;
   $110 = (($109) + ($108<<4)|0);
   $44 = $110;
   if ($105) {
    $111 = $47;
    $112 = (($111|0) / 2)&-1;
    $47 = $112;
    $113 = $39;
    $114 = $39;
    $115 = $47;
    $116 = (($114) + ($115<<4)|0);
    $117 = $44;
    $118 = $44;
    $119 = $47;
    $120 = (($118) + ($119<<4)|0);
    $121 = $45;
    $122 = $41;
    $123 = (__ZNSt3__27__sort5IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_S7_S7_T_($113,$116,$117,$120,$121,$122)|0);
    $46 = $123;
   } else {
    $124 = $39;
    $125 = $44;
    $126 = $45;
    $127 = $41;
    $128 = (__ZNSt3__27__sort3IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_T_($124,$125,$126,$127)|0);
    $46 = $128;
   }
   $129 = $39;
   $48 = $129;
   $130 = $45;
   $49 = $130;
   $131 = $41;
   $132 = $48;
   $133 = $44;
   $134 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($131,$132,$133)|0);
   if ($134) {
    break;
   }
   while(1) {
    $135 = $48;
    $136 = $49;
    $137 = ((($136)) + -16|0);
    $49 = $137;
    $138 = ($135|0)==($137|0);
    if ($138) {
     break;
    }
    $199 = $41;
    $200 = $49;
    $201 = $44;
    $202 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($199,$200,$201)|0);
    if ($202) {
     label = 30;
     break L3;
    }
   }
   $139 = $48;
   $140 = ((($139)) + 16|0);
   $48 = $140;
   $141 = $40;
   $49 = $141;
   $142 = $41;
   $143 = $39;
   $144 = $49;
   $145 = ((($144)) + -16|0);
   $49 = $145;
   $146 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($142,$143,$145)|0);
   if (!($146)) {
    while(1) {
     $147 = $48;
     $148 = $49;
     $149 = ($147|0)==($148|0);
     if ($149) {
      label = 52;
      break L1;
     }
     $150 = $41;
     $151 = $39;
     $152 = $48;
     $153 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($150,$151,$152)|0);
     $154 = $48;
     if ($153) {
      break;
     }
     $167 = ((($154)) + 16|0);
     $48 = $167;
    }
    $155 = $49;
    $30 = $154;
    $31 = $155;
    $156 = $30;
    $29 = $156;
    $157 = $29;
    ;HEAP32[$32>>2]=HEAP32[$157>>2]|0;HEAP32[$32+4>>2]=HEAP32[$157+4>>2]|0;HEAP32[$32+8>>2]=HEAP32[$157+8>>2]|0;HEAP32[$32+12>>2]=HEAP32[$157+12>>2]|0;
    $158 = $31;
    $27 = $158;
    $159 = $27;
    $160 = $30;
    ;HEAP32[$160>>2]=HEAP32[$159>>2]|0;HEAP32[$160+4>>2]=HEAP32[$159+4>>2]|0;HEAP32[$160+8>>2]=HEAP32[$159+8>>2]|0;HEAP32[$160+12>>2]=HEAP32[$159+12>>2]|0;
    $28 = $32;
    $161 = $28;
    $162 = $31;
    ;HEAP32[$162>>2]=HEAP32[$161>>2]|0;HEAP32[$162+4>>2]=HEAP32[$161+4>>2]|0;HEAP32[$162+8>>2]=HEAP32[$161+8>>2]|0;HEAP32[$162+12>>2]=HEAP32[$161+12>>2]|0;
    $163 = $46;
    $164 = (($163) + 1)|0;
    $46 = $164;
    $165 = $48;
    $166 = ((($165)) + 16|0);
    $48 = $166;
   }
   $168 = $48;
   $169 = $49;
   $170 = ($168|0)==($169|0);
   if ($170) {
    label = 52;
    break L1;
   }
   while(1) {
    while(1) {
     $171 = $41;
     $172 = $39;
     $173 = $48;
     $174 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($171,$172,$173)|0);
     $175 = $174 ^ 1;
     if (!($175)) {
      break;
     }
     $176 = $48;
     $177 = ((($176)) + 16|0);
     $48 = $177;
    }
    while(1) {
     $178 = $41;
     $179 = $39;
     $180 = $49;
     $181 = ((($180)) + -16|0);
     $49 = $181;
     $182 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($178,$179,$181)|0);
     if (!($182)) {
      break;
     }
    }
    $183 = $48;
    $184 = $49;
    $185 = ($183>>>0)>=($184>>>0);
    $186 = $48;
    if ($185) {
     break;
    }
    $187 = $49;
    $24 = $186;
    $25 = $187;
    $188 = $24;
    $23 = $188;
    $189 = $23;
    ;HEAP32[$26>>2]=HEAP32[$189>>2]|0;HEAP32[$26+4>>2]=HEAP32[$189+4>>2]|0;HEAP32[$26+8>>2]=HEAP32[$189+8>>2]|0;HEAP32[$26+12>>2]=HEAP32[$189+12>>2]|0;
    $190 = $25;
    $21 = $190;
    $191 = $21;
    $192 = $24;
    ;HEAP32[$192>>2]=HEAP32[$191>>2]|0;HEAP32[$192+4>>2]=HEAP32[$191+4>>2]|0;HEAP32[$192+8>>2]=HEAP32[$191+8>>2]|0;HEAP32[$192+12>>2]=HEAP32[$191+12>>2]|0;
    $22 = $26;
    $193 = $22;
    $194 = $25;
    ;HEAP32[$194>>2]=HEAP32[$193>>2]|0;HEAP32[$194+4>>2]=HEAP32[$193+4>>2]|0;HEAP32[$194+8>>2]=HEAP32[$193+8>>2]|0;HEAP32[$194+12>>2]=HEAP32[$193+12>>2]|0;
    $195 = $46;
    $196 = (($195) + 1)|0;
    $46 = $196;
    $197 = $48;
    $198 = ((($197)) + 16|0);
    $48 = $198;
   }
   $39 = $186;
  }
  if ((label|0) == 30) {
   label = 0;
   $203 = $48;
   $204 = $49;
   $18 = $203;
   $19 = $204;
   $205 = $18;
   $17 = $205;
   $206 = $17;
   ;HEAP32[$20>>2]=HEAP32[$206>>2]|0;HEAP32[$20+4>>2]=HEAP32[$206+4>>2]|0;HEAP32[$20+8>>2]=HEAP32[$206+8>>2]|0;HEAP32[$20+12>>2]=HEAP32[$206+12>>2]|0;
   $207 = $19;
   $15 = $207;
   $208 = $15;
   $209 = $18;
   ;HEAP32[$209>>2]=HEAP32[$208>>2]|0;HEAP32[$209+4>>2]=HEAP32[$208+4>>2]|0;HEAP32[$209+8>>2]=HEAP32[$208+8>>2]|0;HEAP32[$209+12>>2]=HEAP32[$208+12>>2]|0;
   $16 = $20;
   $210 = $16;
   $211 = $19;
   ;HEAP32[$211>>2]=HEAP32[$210>>2]|0;HEAP32[$211+4>>2]=HEAP32[$210+4>>2]|0;HEAP32[$211+8>>2]=HEAP32[$210+8>>2]|0;HEAP32[$211+12>>2]=HEAP32[$210+12>>2]|0;
   $212 = $46;
   $213 = (($212) + 1)|0;
   $46 = $213;
  }
  $214 = $48;
  $215 = ((($214)) + 16|0);
  $48 = $215;
  $216 = $48;
  $217 = $49;
  $218 = ($216>>>0)<($217>>>0);
  L35: do {
   if ($218) {
    while(1) {
     while(1) {
      $219 = $41;
      $220 = $48;
      $221 = $44;
      $222 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($219,$220,$221)|0);
      if (!($222)) {
       break;
      }
      $223 = $48;
      $224 = ((($223)) + 16|0);
      $48 = $224;
     }
     while(1) {
      $225 = $41;
      $226 = $49;
      $227 = ((($226)) + -16|0);
      $49 = $227;
      $228 = $44;
      $229 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($225,$227,$228)|0);
      $230 = $229 ^ 1;
      if (!($230)) {
       break;
      }
     }
     $231 = $48;
     $232 = $49;
     $233 = ($231>>>0)>($232>>>0);
     if ($233) {
      break L35;
     }
     $234 = $48;
     $235 = $49;
     $12 = $234;
     $13 = $235;
     $236 = $12;
     $11 = $236;
     $237 = $11;
     ;HEAP32[$14>>2]=HEAP32[$237>>2]|0;HEAP32[$14+4>>2]=HEAP32[$237+4>>2]|0;HEAP32[$14+8>>2]=HEAP32[$237+8>>2]|0;HEAP32[$14+12>>2]=HEAP32[$237+12>>2]|0;
     $238 = $13;
     $9 = $238;
     $239 = $9;
     $240 = $12;
     ;HEAP32[$240>>2]=HEAP32[$239>>2]|0;HEAP32[$240+4>>2]=HEAP32[$239+4>>2]|0;HEAP32[$240+8>>2]=HEAP32[$239+8>>2]|0;HEAP32[$240+12>>2]=HEAP32[$239+12>>2]|0;
     $10 = $14;
     $241 = $10;
     $242 = $13;
     ;HEAP32[$242>>2]=HEAP32[$241>>2]|0;HEAP32[$242+4>>2]=HEAP32[$241+4>>2]|0;HEAP32[$242+8>>2]=HEAP32[$241+8>>2]|0;HEAP32[$242+12>>2]=HEAP32[$241+12>>2]|0;
     $243 = $46;
     $244 = (($243) + 1)|0;
     $46 = $244;
     $245 = $44;
     $246 = $48;
     $247 = ($245|0)==($246|0);
     if ($247) {
      $248 = $49;
      $44 = $248;
     }
     $249 = $48;
     $250 = ((($249)) + 16|0);
     $48 = $250;
    }
   }
  } while(0);
  $251 = $48;
  $252 = $44;
  $253 = ($251|0)!=($252|0);
  if ($253) {
   $254 = $41;
   $255 = $44;
   $256 = $48;
   $257 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($254,$255,$256)|0);
   if ($257) {
    $258 = $48;
    $259 = $44;
    $6 = $258;
    $7 = $259;
    $260 = $6;
    $5 = $260;
    $261 = $5;
    ;HEAP32[$8>>2]=HEAP32[$261>>2]|0;HEAP32[$8+4>>2]=HEAP32[$261+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[$261+8>>2]|0;HEAP32[$8+12>>2]=HEAP32[$261+12>>2]|0;
    $262 = $7;
    $3 = $262;
    $263 = $3;
    $264 = $6;
    ;HEAP32[$264>>2]=HEAP32[$263>>2]|0;HEAP32[$264+4>>2]=HEAP32[$263+4>>2]|0;HEAP32[$264+8>>2]=HEAP32[$263+8>>2]|0;HEAP32[$264+12>>2]=HEAP32[$263+12>>2]|0;
    $4 = $8;
    $265 = $4;
    $266 = $7;
    ;HEAP32[$266>>2]=HEAP32[$265>>2]|0;HEAP32[$266+4>>2]=HEAP32[$265+4>>2]|0;HEAP32[$266+8>>2]=HEAP32[$265+8>>2]|0;HEAP32[$266+12>>2]=HEAP32[$265+12>>2]|0;
    $267 = $46;
    $268 = (($267) + 1)|0;
    $46 = $268;
   }
  }
  $269 = $46;
  $270 = ($269|0)==(0);
  do {
   if ($270) {
    $271 = $39;
    $272 = $48;
    $273 = $41;
    $274 = (__ZNSt3__227__insertion_sort_incompleteIR6SorterPN5Eigen7TripletIdiEEEEbT0_S7_T_($271,$272,$273)|0);
    $275 = $274&1;
    $50 = $275;
    $276 = $48;
    $277 = ((($276)) + 16|0);
    $278 = $40;
    $279 = $41;
    $280 = (__ZNSt3__227__insertion_sort_incompleteIR6SorterPN5Eigen7TripletIdiEEEEbT0_S7_T_($277,$278,$279)|0);
    $281 = $50;
    $282 = $281&1;
    if ($280) {
     if ($282) {
      label = 52;
      break L1;
     }
     $283 = $48;
     $40 = $283;
     continue L1;
    } else {
     if (!($282)) {
      break;
     }
     $284 = $48;
     $285 = ((($284)) + 16|0);
     $48 = $285;
     $39 = $285;
     continue L1;
    }
   }
  } while(0);
  $286 = $48;
  $287 = $39;
  $288 = $286;
  $289 = $287;
  $290 = (($288) - ($289))|0;
  $291 = (($290|0) / 16)&-1;
  $292 = $40;
  $293 = $48;
  $294 = $292;
  $295 = $293;
  $296 = (($294) - ($295))|0;
  $297 = (($296|0) / 16)&-1;
  $298 = ($291|0)<($297|0);
  if ($298) {
   $299 = $39;
   $300 = $48;
   $301 = $41;
   __ZNSt3__26__sortIR6SorterPN5Eigen7TripletIdiEEEEvT0_S7_T_($299,$300,$301);
   $302 = $48;
   $303 = ((($302)) + 16|0);
   $48 = $303;
   $39 = $303;
   continue;
  } else {
   $304 = $48;
   $305 = ((($304)) + 16|0);
   $306 = $40;
   $307 = $41;
   __ZNSt3__26__sortIR6SorterPN5Eigen7TripletIdiEEEEvT0_S7_T_($305,$306,$307);
   $308 = $48;
   $40 = $308;
   continue;
  }
 }
 if ((label|0) == 4) {
  $58 = $41;
  $59 = $40;
  $60 = ((($59)) + -16|0);
  $40 = $60;
  $61 = $39;
  $62 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($58,$60,$61)|0);
  if (!($62)) {
   STACKTOP = sp;return;
  }
  $63 = $39;
  $64 = $40;
  $36 = $63;
  $37 = $64;
  $65 = $36;
  $35 = $65;
  $66 = $35;
  ;HEAP32[$38>>2]=HEAP32[$66>>2]|0;HEAP32[$38+4>>2]=HEAP32[$66+4>>2]|0;HEAP32[$38+8>>2]=HEAP32[$66+8>>2]|0;HEAP32[$38+12>>2]=HEAP32[$66+12>>2]|0;
  $67 = $37;
  $33 = $67;
  $68 = $33;
  $69 = $36;
  ;HEAP32[$69>>2]=HEAP32[$68>>2]|0;HEAP32[$69+4>>2]=HEAP32[$68+4>>2]|0;HEAP32[$69+8>>2]=HEAP32[$68+8>>2]|0;HEAP32[$69+12>>2]=HEAP32[$68+12>>2]|0;
  $34 = $38;
  $70 = $34;
  $71 = $37;
  ;HEAP32[$71>>2]=HEAP32[$70>>2]|0;HEAP32[$71+4>>2]=HEAP32[$70+4>>2]|0;HEAP32[$71+8>>2]=HEAP32[$70+8>>2]|0;HEAP32[$71+12>>2]=HEAP32[$70+12>>2]|0;
  STACKTOP = sp;return;
 }
 else if ((label|0) == 6) {
  $72 = $39;
  $73 = $39;
  $74 = ((($73)) + 16|0);
  $75 = $40;
  $76 = ((($75)) + -16|0);
  $40 = $76;
  $77 = $41;
  (__ZNSt3__27__sort3IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_T_($72,$74,$76,$77)|0);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 7) {
  $78 = $39;
  $79 = $39;
  $80 = ((($79)) + 16|0);
  $81 = $39;
  $82 = ((($81)) + 32|0);
  $83 = $40;
  $84 = ((($83)) + -16|0);
  $40 = $84;
  $85 = $41;
  (__ZNSt3__27__sort4IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_S7_T_($78,$80,$82,$84,$85)|0);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 8) {
  $86 = $39;
  $87 = $39;
  $88 = ((($87)) + 16|0);
  $89 = $39;
  $90 = ((($89)) + 32|0);
  $91 = $39;
  $92 = ((($91)) + 48|0);
  $93 = $40;
  $94 = ((($93)) + -16|0);
  $40 = $94;
  $95 = $41;
  (__ZNSt3__27__sort5IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_S7_S7_T_($86,$88,$90,$92,$94,$95)|0);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 10) {
  $99 = $40;
  $100 = $41;
  __ZNSt3__218__insertion_sort_3IR6SorterPN5Eigen7TripletIdiEEEEvT0_S7_T_($98,$99,$100);
  STACKTOP = sp;return;
 }
 else if ((label|0) == 52) {
  STACKTOP = sp;return;
 }
}
function __ZN6SorterclERKN5Eigen7TripletIdiEES4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val2 = 0, $$pre_trunc = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 12|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $5;
 $8 = (__ZNK5Eigen7TripletIdiE3rowEv($7)|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $6;
 $11 = (__ZNK5Eigen7TripletIdiE3rowEv($10)|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($9|0)!=($12|0);
 $14 = $5;
 if ($13) {
  $15 = (__ZNK5Eigen7TripletIdiE3rowEv($14)|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = $6;
  $18 = (__ZNK5Eigen7TripletIdiE3rowEv($17)|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ($16|0)<($19|0);
  $$expand_i1_val = $20&1;
  HEAP8[$3>>0] = $$expand_i1_val;
  $$pre_trunc = HEAP8[$3>>0]|0;
  $27 = $$pre_trunc&1;
  STACKTOP = sp;return ($27|0);
 } else {
  $21 = (__ZNK5Eigen7TripletIdiE3colEv($14)|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = $6;
  $24 = (__ZNK5Eigen7TripletIdiE3colEv($23)|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ($22|0)<($25|0);
  $$expand_i1_val2 = $26&1;
  HEAP8[$3>>0] = $$expand_i1_val2;
  $$pre_trunc = HEAP8[$3>>0]|0;
  $27 = $$pre_trunc&1;
  STACKTOP = sp;return ($27|0);
 }
 return (0)|0;
}
function __ZNSt3__27__sort3IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_T_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $9 = sp + 64|0;
 $15 = sp + 48|0;
 $21 = sp + 32|0;
 $27 = sp + 16|0;
 $33 = sp;
 $35 = $0;
 $36 = $1;
 $37 = $2;
 $38 = $3;
 $39 = 0;
 $40 = $38;
 $41 = $36;
 $42 = $35;
 $43 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($40,$41,$42)|0);
 $44 = $38;
 $45 = $37;
 $46 = $36;
 $47 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($44,$45,$46)|0);
 if ($43) {
  $72 = $35;
  if ($47) {
   $73 = $37;
   $7 = $72;
   $8 = $73;
   $74 = $7;
   $6 = $74;
   $75 = $6;
   ;HEAP32[$9>>2]=HEAP32[$75>>2]|0;HEAP32[$9+4>>2]=HEAP32[$75+4>>2]|0;HEAP32[$9+8>>2]=HEAP32[$75+8>>2]|0;HEAP32[$9+12>>2]=HEAP32[$75+12>>2]|0;
   $76 = $8;
   $4 = $76;
   $77 = $4;
   $78 = $7;
   ;HEAP32[$78>>2]=HEAP32[$77>>2]|0;HEAP32[$78+4>>2]=HEAP32[$77+4>>2]|0;HEAP32[$78+8>>2]=HEAP32[$77+8>>2]|0;HEAP32[$78+12>>2]=HEAP32[$77+12>>2]|0;
   $5 = $9;
   $79 = $5;
   $80 = $8;
   ;HEAP32[$80>>2]=HEAP32[$79>>2]|0;HEAP32[$80+4>>2]=HEAP32[$79+4>>2]|0;HEAP32[$80+8>>2]=HEAP32[$79+8>>2]|0;HEAP32[$80+12>>2]=HEAP32[$79+12>>2]|0;
   $39 = 1;
   $81 = $39;
   $34 = $81;
   $104 = $34;
   STACKTOP = sp;return ($104|0);
  }
  $82 = $36;
  $13 = $72;
  $14 = $82;
  $83 = $13;
  $12 = $83;
  $84 = $12;
  ;HEAP32[$15>>2]=HEAP32[$84>>2]|0;HEAP32[$15+4>>2]=HEAP32[$84+4>>2]|0;HEAP32[$15+8>>2]=HEAP32[$84+8>>2]|0;HEAP32[$15+12>>2]=HEAP32[$84+12>>2]|0;
  $85 = $14;
  $10 = $85;
  $86 = $10;
  $87 = $13;
  ;HEAP32[$87>>2]=HEAP32[$86>>2]|0;HEAP32[$87+4>>2]=HEAP32[$86+4>>2]|0;HEAP32[$87+8>>2]=HEAP32[$86+8>>2]|0;HEAP32[$87+12>>2]=HEAP32[$86+12>>2]|0;
  $11 = $15;
  $88 = $11;
  $89 = $14;
  ;HEAP32[$89>>2]=HEAP32[$88>>2]|0;HEAP32[$89+4>>2]=HEAP32[$88+4>>2]|0;HEAP32[$89+8>>2]=HEAP32[$88+8>>2]|0;HEAP32[$89+12>>2]=HEAP32[$88+12>>2]|0;
  $39 = 1;
  $90 = $38;
  $91 = $37;
  $92 = $36;
  $93 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($90,$91,$92)|0);
  if ($93) {
   $94 = $36;
   $95 = $37;
   $25 = $94;
   $26 = $95;
   $96 = $25;
   $24 = $96;
   $97 = $24;
   ;HEAP32[$27>>2]=HEAP32[$97>>2]|0;HEAP32[$27+4>>2]=HEAP32[$97+4>>2]|0;HEAP32[$27+8>>2]=HEAP32[$97+8>>2]|0;HEAP32[$27+12>>2]=HEAP32[$97+12>>2]|0;
   $98 = $26;
   $22 = $98;
   $99 = $22;
   $100 = $25;
   ;HEAP32[$100>>2]=HEAP32[$99>>2]|0;HEAP32[$100+4>>2]=HEAP32[$99+4>>2]|0;HEAP32[$100+8>>2]=HEAP32[$99+8>>2]|0;HEAP32[$100+12>>2]=HEAP32[$99+12>>2]|0;
   $23 = $27;
   $101 = $23;
   $102 = $26;
   ;HEAP32[$102>>2]=HEAP32[$101>>2]|0;HEAP32[$102+4>>2]=HEAP32[$101+4>>2]|0;HEAP32[$102+8>>2]=HEAP32[$101+8>>2]|0;HEAP32[$102+12>>2]=HEAP32[$101+12>>2]|0;
   $39 = 2;
  }
  $103 = $39;
  $34 = $103;
  $104 = $34;
  STACKTOP = sp;return ($104|0);
 } else {
  if (!($47)) {
   $48 = $39;
   $34 = $48;
   $104 = $34;
   STACKTOP = sp;return ($104|0);
  }
  $49 = $36;
  $50 = $37;
  $31 = $49;
  $32 = $50;
  $51 = $31;
  $30 = $51;
  $52 = $30;
  ;HEAP32[$33>>2]=HEAP32[$52>>2]|0;HEAP32[$33+4>>2]=HEAP32[$52+4>>2]|0;HEAP32[$33+8>>2]=HEAP32[$52+8>>2]|0;HEAP32[$33+12>>2]=HEAP32[$52+12>>2]|0;
  $53 = $32;
  $28 = $53;
  $54 = $28;
  $55 = $31;
  ;HEAP32[$55>>2]=HEAP32[$54>>2]|0;HEAP32[$55+4>>2]=HEAP32[$54+4>>2]|0;HEAP32[$55+8>>2]=HEAP32[$54+8>>2]|0;HEAP32[$55+12>>2]=HEAP32[$54+12>>2]|0;
  $29 = $33;
  $56 = $29;
  $57 = $32;
  ;HEAP32[$57>>2]=HEAP32[$56>>2]|0;HEAP32[$57+4>>2]=HEAP32[$56+4>>2]|0;HEAP32[$57+8>>2]=HEAP32[$56+8>>2]|0;HEAP32[$57+12>>2]=HEAP32[$56+12>>2]|0;
  $39 = 1;
  $58 = $38;
  $59 = $36;
  $60 = $35;
  $61 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($58,$59,$60)|0);
  if ($61) {
   $62 = $35;
   $63 = $36;
   $19 = $62;
   $20 = $63;
   $64 = $19;
   $18 = $64;
   $65 = $18;
   ;HEAP32[$21>>2]=HEAP32[$65>>2]|0;HEAP32[$21+4>>2]=HEAP32[$65+4>>2]|0;HEAP32[$21+8>>2]=HEAP32[$65+8>>2]|0;HEAP32[$21+12>>2]=HEAP32[$65+12>>2]|0;
   $66 = $20;
   $16 = $66;
   $67 = $16;
   $68 = $19;
   ;HEAP32[$68>>2]=HEAP32[$67>>2]|0;HEAP32[$68+4>>2]=HEAP32[$67+4>>2]|0;HEAP32[$68+8>>2]=HEAP32[$67+8>>2]|0;HEAP32[$68+12>>2]=HEAP32[$67+12>>2]|0;
   $17 = $21;
   $69 = $17;
   $70 = $20;
   ;HEAP32[$70>>2]=HEAP32[$69>>2]|0;HEAP32[$70+4>>2]=HEAP32[$69+4>>2]|0;HEAP32[$70+8>>2]=HEAP32[$69+8>>2]|0;HEAP32[$70+12>>2]=HEAP32[$69+12>>2]|0;
   $39 = 2;
  }
  $71 = $39;
  $34 = $71;
  $104 = $34;
  STACKTOP = sp;return ($104|0);
 }
 return (0)|0;
}
function __ZNSt3__27__sort4IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_S7_T_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $10 = sp + 32|0;
 $16 = sp + 16|0;
 $22 = sp;
 $23 = $0;
 $24 = $1;
 $25 = $2;
 $26 = $3;
 $27 = $4;
 $29 = $23;
 $30 = $24;
 $31 = $25;
 $32 = $27;
 $33 = (__ZNSt3__27__sort3IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_T_($29,$30,$31,$32)|0);
 $28 = $33;
 $34 = $27;
 $35 = $26;
 $36 = $25;
 $37 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($34,$35,$36)|0);
 if (!($37)) {
  $79 = $28;
  STACKTOP = sp;return ($79|0);
 }
 $38 = $25;
 $39 = $26;
 $20 = $38;
 $21 = $39;
 $40 = $20;
 $19 = $40;
 $41 = $19;
 ;HEAP32[$22>>2]=HEAP32[$41>>2]|0;HEAP32[$22+4>>2]=HEAP32[$41+4>>2]|0;HEAP32[$22+8>>2]=HEAP32[$41+8>>2]|0;HEAP32[$22+12>>2]=HEAP32[$41+12>>2]|0;
 $42 = $21;
 $17 = $42;
 $43 = $17;
 $44 = $20;
 ;HEAP32[$44>>2]=HEAP32[$43>>2]|0;HEAP32[$44+4>>2]=HEAP32[$43+4>>2]|0;HEAP32[$44+8>>2]=HEAP32[$43+8>>2]|0;HEAP32[$44+12>>2]=HEAP32[$43+12>>2]|0;
 $18 = $22;
 $45 = $18;
 $46 = $21;
 ;HEAP32[$46>>2]=HEAP32[$45>>2]|0;HEAP32[$46+4>>2]=HEAP32[$45+4>>2]|0;HEAP32[$46+8>>2]=HEAP32[$45+8>>2]|0;HEAP32[$46+12>>2]=HEAP32[$45+12>>2]|0;
 $47 = $28;
 $48 = (($47) + 1)|0;
 $28 = $48;
 $49 = $27;
 $50 = $25;
 $51 = $24;
 $52 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($49,$50,$51)|0);
 if (!($52)) {
  $79 = $28;
  STACKTOP = sp;return ($79|0);
 }
 $53 = $24;
 $54 = $25;
 $8 = $53;
 $9 = $54;
 $55 = $8;
 $7 = $55;
 $56 = $7;
 ;HEAP32[$10>>2]=HEAP32[$56>>2]|0;HEAP32[$10+4>>2]=HEAP32[$56+4>>2]|0;HEAP32[$10+8>>2]=HEAP32[$56+8>>2]|0;HEAP32[$10+12>>2]=HEAP32[$56+12>>2]|0;
 $57 = $9;
 $5 = $57;
 $58 = $5;
 $59 = $8;
 ;HEAP32[$59>>2]=HEAP32[$58>>2]|0;HEAP32[$59+4>>2]=HEAP32[$58+4>>2]|0;HEAP32[$59+8>>2]=HEAP32[$58+8>>2]|0;HEAP32[$59+12>>2]=HEAP32[$58+12>>2]|0;
 $6 = $10;
 $60 = $6;
 $61 = $9;
 ;HEAP32[$61>>2]=HEAP32[$60>>2]|0;HEAP32[$61+4>>2]=HEAP32[$60+4>>2]|0;HEAP32[$61+8>>2]=HEAP32[$60+8>>2]|0;HEAP32[$61+12>>2]=HEAP32[$60+12>>2]|0;
 $62 = $28;
 $63 = (($62) + 1)|0;
 $28 = $63;
 $64 = $27;
 $65 = $24;
 $66 = $23;
 $67 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($64,$65,$66)|0);
 if (!($67)) {
  $79 = $28;
  STACKTOP = sp;return ($79|0);
 }
 $68 = $23;
 $69 = $24;
 $14 = $68;
 $15 = $69;
 $70 = $14;
 $13 = $70;
 $71 = $13;
 ;HEAP32[$16>>2]=HEAP32[$71>>2]|0;HEAP32[$16+4>>2]=HEAP32[$71+4>>2]|0;HEAP32[$16+8>>2]=HEAP32[$71+8>>2]|0;HEAP32[$16+12>>2]=HEAP32[$71+12>>2]|0;
 $72 = $15;
 $11 = $72;
 $73 = $11;
 $74 = $14;
 ;HEAP32[$74>>2]=HEAP32[$73>>2]|0;HEAP32[$74+4>>2]=HEAP32[$73+4>>2]|0;HEAP32[$74+8>>2]=HEAP32[$73+8>>2]|0;HEAP32[$74+12>>2]=HEAP32[$73+12>>2]|0;
 $12 = $16;
 $75 = $12;
 $76 = $15;
 ;HEAP32[$76>>2]=HEAP32[$75>>2]|0;HEAP32[$76+4>>2]=HEAP32[$75+4>>2]|0;HEAP32[$76+8>>2]=HEAP32[$75+8>>2]|0;HEAP32[$76+12>>2]=HEAP32[$75+12>>2]|0;
 $77 = $28;
 $78 = (($77) + 1)|0;
 $28 = $78;
 $79 = $28;
 STACKTOP = sp;return ($79|0);
}
function __ZNSt3__27__sort5IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_S7_S7_T_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $11 = sp + 48|0;
 $17 = sp + 32|0;
 $23 = sp + 16|0;
 $29 = sp;
 $30 = $0;
 $31 = $1;
 $32 = $2;
 $33 = $3;
 $34 = $4;
 $35 = $5;
 $37 = $30;
 $38 = $31;
 $39 = $32;
 $40 = $33;
 $41 = $35;
 $42 = (__ZNSt3__27__sort4IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_S7_T_($37,$38,$39,$40,$41)|0);
 $36 = $42;
 $43 = $35;
 $44 = $34;
 $45 = $33;
 $46 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($43,$44,$45)|0);
 if (!($46)) {
  $103 = $36;
  STACKTOP = sp;return ($103|0);
 }
 $47 = $33;
 $48 = $34;
 $27 = $47;
 $28 = $48;
 $49 = $27;
 $26 = $49;
 $50 = $26;
 ;HEAP32[$29>>2]=HEAP32[$50>>2]|0;HEAP32[$29+4>>2]=HEAP32[$50+4>>2]|0;HEAP32[$29+8>>2]=HEAP32[$50+8>>2]|0;HEAP32[$29+12>>2]=HEAP32[$50+12>>2]|0;
 $51 = $28;
 $24 = $51;
 $52 = $24;
 $53 = $27;
 ;HEAP32[$53>>2]=HEAP32[$52>>2]|0;HEAP32[$53+4>>2]=HEAP32[$52+4>>2]|0;HEAP32[$53+8>>2]=HEAP32[$52+8>>2]|0;HEAP32[$53+12>>2]=HEAP32[$52+12>>2]|0;
 $25 = $29;
 $54 = $25;
 $55 = $28;
 ;HEAP32[$55>>2]=HEAP32[$54>>2]|0;HEAP32[$55+4>>2]=HEAP32[$54+4>>2]|0;HEAP32[$55+8>>2]=HEAP32[$54+8>>2]|0;HEAP32[$55+12>>2]=HEAP32[$54+12>>2]|0;
 $56 = $36;
 $57 = (($56) + 1)|0;
 $36 = $57;
 $58 = $35;
 $59 = $33;
 $60 = $32;
 $61 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($58,$59,$60)|0);
 if (!($61)) {
  $103 = $36;
  STACKTOP = sp;return ($103|0);
 }
 $62 = $32;
 $63 = $33;
 $15 = $62;
 $16 = $63;
 $64 = $15;
 $14 = $64;
 $65 = $14;
 ;HEAP32[$17>>2]=HEAP32[$65>>2]|0;HEAP32[$17+4>>2]=HEAP32[$65+4>>2]|0;HEAP32[$17+8>>2]=HEAP32[$65+8>>2]|0;HEAP32[$17+12>>2]=HEAP32[$65+12>>2]|0;
 $66 = $16;
 $12 = $66;
 $67 = $12;
 $68 = $15;
 ;HEAP32[$68>>2]=HEAP32[$67>>2]|0;HEAP32[$68+4>>2]=HEAP32[$67+4>>2]|0;HEAP32[$68+8>>2]=HEAP32[$67+8>>2]|0;HEAP32[$68+12>>2]=HEAP32[$67+12>>2]|0;
 $13 = $17;
 $69 = $13;
 $70 = $16;
 ;HEAP32[$70>>2]=HEAP32[$69>>2]|0;HEAP32[$70+4>>2]=HEAP32[$69+4>>2]|0;HEAP32[$70+8>>2]=HEAP32[$69+8>>2]|0;HEAP32[$70+12>>2]=HEAP32[$69+12>>2]|0;
 $71 = $36;
 $72 = (($71) + 1)|0;
 $36 = $72;
 $73 = $35;
 $74 = $32;
 $75 = $31;
 $76 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($73,$74,$75)|0);
 if (!($76)) {
  $103 = $36;
  STACKTOP = sp;return ($103|0);
 }
 $77 = $31;
 $78 = $32;
 $9 = $77;
 $10 = $78;
 $79 = $9;
 $8 = $79;
 $80 = $8;
 ;HEAP32[$11>>2]=HEAP32[$80>>2]|0;HEAP32[$11+4>>2]=HEAP32[$80+4>>2]|0;HEAP32[$11+8>>2]=HEAP32[$80+8>>2]|0;HEAP32[$11+12>>2]=HEAP32[$80+12>>2]|0;
 $81 = $10;
 $6 = $81;
 $82 = $6;
 $83 = $9;
 ;HEAP32[$83>>2]=HEAP32[$82>>2]|0;HEAP32[$83+4>>2]=HEAP32[$82+4>>2]|0;HEAP32[$83+8>>2]=HEAP32[$82+8>>2]|0;HEAP32[$83+12>>2]=HEAP32[$82+12>>2]|0;
 $7 = $11;
 $84 = $7;
 $85 = $10;
 ;HEAP32[$85>>2]=HEAP32[$84>>2]|0;HEAP32[$85+4>>2]=HEAP32[$84+4>>2]|0;HEAP32[$85+8>>2]=HEAP32[$84+8>>2]|0;HEAP32[$85+12>>2]=HEAP32[$84+12>>2]|0;
 $86 = $36;
 $87 = (($86) + 1)|0;
 $36 = $87;
 $88 = $35;
 $89 = $31;
 $90 = $30;
 $91 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($88,$89,$90)|0);
 if (!($91)) {
  $103 = $36;
  STACKTOP = sp;return ($103|0);
 }
 $92 = $30;
 $93 = $31;
 $21 = $92;
 $22 = $93;
 $94 = $21;
 $20 = $94;
 $95 = $20;
 ;HEAP32[$23>>2]=HEAP32[$95>>2]|0;HEAP32[$23+4>>2]=HEAP32[$95+4>>2]|0;HEAP32[$23+8>>2]=HEAP32[$95+8>>2]|0;HEAP32[$23+12>>2]=HEAP32[$95+12>>2]|0;
 $96 = $22;
 $18 = $96;
 $97 = $18;
 $98 = $21;
 ;HEAP32[$98>>2]=HEAP32[$97>>2]|0;HEAP32[$98+4>>2]=HEAP32[$97+4>>2]|0;HEAP32[$98+8>>2]=HEAP32[$97+8>>2]|0;HEAP32[$98+12>>2]=HEAP32[$97+12>>2]|0;
 $19 = $23;
 $99 = $19;
 $100 = $22;
 ;HEAP32[$100>>2]=HEAP32[$99>>2]|0;HEAP32[$100+4>>2]=HEAP32[$99+4>>2]|0;HEAP32[$100+8>>2]=HEAP32[$99+8>>2]|0;HEAP32[$100+12>>2]=HEAP32[$99+12>>2]|0;
 $101 = $36;
 $102 = (($101) + 1)|0;
 $36 = $102;
 $103 = $36;
 STACKTOP = sp;return ($103|0);
}
function __ZNSt3__218__insertion_sort_3IR6SorterPN5Eigen7TripletIdiEEEEvT0_S7_T_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $11 = sp;
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $13 = $6;
 $14 = ((($13)) + 32|0);
 $9 = $14;
 $15 = $6;
 $16 = $6;
 $17 = ((($16)) + 16|0);
 $18 = $9;
 $19 = $8;
 (__ZNSt3__27__sort3IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_T_($15,$17,$18,$19)|0);
 $20 = $9;
 $21 = ((($20)) + 16|0);
 $10 = $21;
 while(1) {
  $22 = $10;
  $23 = $7;
  $24 = ($22|0)!=($23|0);
  if (!($24)) {
   break;
  }
  $25 = $8;
  $26 = $10;
  $27 = $9;
  $28 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($25,$26,$27)|0);
  if ($28) {
   $29 = $10;
   $5 = $29;
   $30 = $5;
   ;HEAP32[$11>>2]=HEAP32[$30>>2]|0;HEAP32[$11+4>>2]=HEAP32[$30+4>>2]|0;HEAP32[$11+8>>2]=HEAP32[$30+8>>2]|0;HEAP32[$11+12>>2]=HEAP32[$30+12>>2]|0;
   $31 = $9;
   $12 = $31;
   $32 = $10;
   $9 = $32;
   while(1) {
    $33 = $12;
    $3 = $33;
    $34 = $3;
    $35 = $9;
    ;HEAP32[$35>>2]=HEAP32[$34>>2]|0;HEAP32[$35+4>>2]=HEAP32[$34+4>>2]|0;HEAP32[$35+8>>2]=HEAP32[$34+8>>2]|0;HEAP32[$35+12>>2]=HEAP32[$34+12>>2]|0;
    $36 = $12;
    $9 = $36;
    $37 = $9;
    $38 = $6;
    $39 = ($37|0)!=($38|0);
    if (!($39)) {
     break;
    }
    $40 = $8;
    $41 = $12;
    $42 = ((($41)) + -16|0);
    $12 = $42;
    $43 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($40,$11,$42)|0);
    if (!($43)) {
     break;
    }
   }
   $4 = $11;
   $44 = $4;
   $45 = $9;
   ;HEAP32[$45>>2]=HEAP32[$44>>2]|0;HEAP32[$45+4>>2]=HEAP32[$44+4>>2]|0;HEAP32[$45+8>>2]=HEAP32[$44+8>>2]|0;HEAP32[$45+12>>2]=HEAP32[$44+12>>2]|0;
  }
  $46 = $10;
  $9 = $46;
  $47 = $10;
  $48 = ((($47)) + 16|0);
  $10 = $48;
 }
 STACKTOP = sp;return;
}
function __ZNSt3__227__insertion_sort_incompleteIR6SorterPN5Eigen7TripletIdiEEEEbT0_S7_T_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$expand_i1_val = 0, $$expand_i1_val10 = 0, $$expand_i1_val12 = 0, $$expand_i1_val2 = 0, $$expand_i1_val4 = 0, $$expand_i1_val6 = 0, $$expand_i1_val8 = 0, $$pre_trunc = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $11 = sp + 16|0;
 $12 = sp + 96|0;
 $20 = sp;
 $13 = $0;
 $14 = $1;
 $15 = $2;
 $22 = $14;
 $23 = $13;
 $24 = $22;
 $25 = $23;
 $26 = (($24) - ($25))|0;
 $27 = (($26|0) / 16)&-1;
 switch ($27|0) {
 case 1: case 0:  {
  $$expand_i1_val = 1;
  HEAP8[$12>>0] = $$expand_i1_val;
  $$pre_trunc = HEAP8[$12>>0]|0;
  $109 = $$pre_trunc&1;
  STACKTOP = sp;return ($109|0);
  break;
 }
 case 2:  {
  $28 = $15;
  $29 = $14;
  $30 = ((($29)) + -16|0);
  $14 = $30;
  $31 = $13;
  $32 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($28,$30,$31)|0);
  if ($32) {
   $33 = $13;
   $34 = $14;
   $9 = $33;
   $10 = $34;
   $35 = $9;
   $8 = $35;
   $36 = $8;
   ;HEAP32[$11>>2]=HEAP32[$36>>2]|0;HEAP32[$11+4>>2]=HEAP32[$36+4>>2]|0;HEAP32[$11+8>>2]=HEAP32[$36+8>>2]|0;HEAP32[$11+12>>2]=HEAP32[$36+12>>2]|0;
   $37 = $10;
   $6 = $37;
   $38 = $6;
   $39 = $9;
   ;HEAP32[$39>>2]=HEAP32[$38>>2]|0;HEAP32[$39+4>>2]=HEAP32[$38+4>>2]|0;HEAP32[$39+8>>2]=HEAP32[$38+8>>2]|0;HEAP32[$39+12>>2]=HEAP32[$38+12>>2]|0;
   $7 = $11;
   $40 = $7;
   $41 = $10;
   ;HEAP32[$41>>2]=HEAP32[$40>>2]|0;HEAP32[$41+4>>2]=HEAP32[$40+4>>2]|0;HEAP32[$41+8>>2]=HEAP32[$40+8>>2]|0;HEAP32[$41+12>>2]=HEAP32[$40+12>>2]|0;
  }
  $$expand_i1_val2 = 1;
  HEAP8[$12>>0] = $$expand_i1_val2;
  $$pre_trunc = HEAP8[$12>>0]|0;
  $109 = $$pre_trunc&1;
  STACKTOP = sp;return ($109|0);
  break;
 }
 case 3:  {
  $42 = $13;
  $43 = $13;
  $44 = ((($43)) + 16|0);
  $45 = $14;
  $46 = ((($45)) + -16|0);
  $14 = $46;
  $47 = $15;
  (__ZNSt3__27__sort3IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_T_($42,$44,$46,$47)|0);
  $$expand_i1_val4 = 1;
  HEAP8[$12>>0] = $$expand_i1_val4;
  $$pre_trunc = HEAP8[$12>>0]|0;
  $109 = $$pre_trunc&1;
  STACKTOP = sp;return ($109|0);
  break;
 }
 case 4:  {
  $48 = $13;
  $49 = $13;
  $50 = ((($49)) + 16|0);
  $51 = $13;
  $52 = ((($51)) + 32|0);
  $53 = $14;
  $54 = ((($53)) + -16|0);
  $14 = $54;
  $55 = $15;
  (__ZNSt3__27__sort4IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_S7_T_($48,$50,$52,$54,$55)|0);
  $$expand_i1_val6 = 1;
  HEAP8[$12>>0] = $$expand_i1_val6;
  $$pre_trunc = HEAP8[$12>>0]|0;
  $109 = $$pre_trunc&1;
  STACKTOP = sp;return ($109|0);
  break;
 }
 case 5:  {
  $56 = $13;
  $57 = $13;
  $58 = ((($57)) + 16|0);
  $59 = $13;
  $60 = ((($59)) + 32|0);
  $61 = $13;
  $62 = ((($61)) + 48|0);
  $63 = $14;
  $64 = ((($63)) + -16|0);
  $14 = $64;
  $65 = $15;
  (__ZNSt3__27__sort5IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_S7_S7_T_($56,$58,$60,$62,$64,$65)|0);
  $$expand_i1_val8 = 1;
  HEAP8[$12>>0] = $$expand_i1_val8;
  $$pre_trunc = HEAP8[$12>>0]|0;
  $109 = $$pre_trunc&1;
  STACKTOP = sp;return ($109|0);
  break;
 }
 default: {
  $66 = $13;
  $67 = ((($66)) + 32|0);
  $16 = $67;
  $68 = $13;
  $69 = $13;
  $70 = ((($69)) + 16|0);
  $71 = $16;
  $72 = $15;
  (__ZNSt3__27__sort3IR6SorterPN5Eigen7TripletIdiEEEEjT0_S7_S7_T_($68,$70,$71,$72)|0);
  $17 = 8;
  $18 = 0;
  $73 = $16;
  $74 = ((($73)) + 16|0);
  $19 = $74;
  while(1) {
   $75 = $19;
   $76 = $14;
   $77 = ($75|0)!=($76|0);
   if (!($77)) {
    label = 18;
    break;
   }
   $78 = $15;
   $79 = $19;
   $80 = $16;
   $81 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($78,$79,$80)|0);
   if ($81) {
    $82 = $19;
    $4 = $82;
    $83 = $4;
    ;HEAP32[$20>>2]=HEAP32[$83>>2]|0;HEAP32[$20+4>>2]=HEAP32[$83+4>>2]|0;HEAP32[$20+8>>2]=HEAP32[$83+8>>2]|0;HEAP32[$20+12>>2]=HEAP32[$83+12>>2]|0;
    $84 = $16;
    $21 = $84;
    $85 = $19;
    $16 = $85;
    while(1) {
     $86 = $21;
     $3 = $86;
     $87 = $3;
     $88 = $16;
     ;HEAP32[$88>>2]=HEAP32[$87>>2]|0;HEAP32[$88+4>>2]=HEAP32[$87+4>>2]|0;HEAP32[$88+8>>2]=HEAP32[$87+8>>2]|0;HEAP32[$88+12>>2]=HEAP32[$87+12>>2]|0;
     $89 = $21;
     $16 = $89;
     $90 = $16;
     $91 = $13;
     $92 = ($90|0)!=($91|0);
     if (!($92)) {
      break;
     }
     $93 = $15;
     $94 = $21;
     $95 = ((($94)) + -16|0);
     $21 = $95;
     $96 = (__ZN6SorterclERKN5Eigen7TripletIdiEES4_($93,$20,$95)|0);
     if (!($96)) {
      break;
     }
    }
    $5 = $20;
    $97 = $5;
    $98 = $16;
    ;HEAP32[$98>>2]=HEAP32[$97>>2]|0;HEAP32[$98+4>>2]=HEAP32[$97+4>>2]|0;HEAP32[$98+8>>2]=HEAP32[$97+8>>2]|0;HEAP32[$98+12>>2]=HEAP32[$97+12>>2]|0;
    $99 = $18;
    $100 = (($99) + 1)|0;
    $18 = $100;
    $101 = ($100|0)==(8);
    if ($101) {
     label = 16;
     break;
    }
   }
   $106 = $19;
   $16 = $106;
   $107 = $19;
   $108 = ((($107)) + 16|0);
   $19 = $108;
  }
  if ((label|0) == 16) {
   $102 = $19;
   $103 = ((($102)) + 16|0);
   $19 = $103;
   $104 = $14;
   $105 = ($103|0)==($104|0);
   $$expand_i1_val10 = $105&1;
   HEAP8[$12>>0] = $$expand_i1_val10;
   $$pre_trunc = HEAP8[$12>>0]|0;
   $109 = $$pre_trunc&1;
   STACKTOP = sp;return ($109|0);
  }
  else if ((label|0) == 18) {
   $$expand_i1_val12 = 1;
   HEAP8[$12>>0] = $$expand_i1_val12;
   $$pre_trunc = HEAP8[$12>>0]|0;
   $109 = $$pre_trunc&1;
   STACKTOP = sp;return ($109|0);
  }
 }
 }
 return (0)|0;
}
function __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(400|0);
 $8 = sp + 24|0;
 $11 = sp + 384|0;
 $55 = sp + 16|0;
 $58 = sp + 383|0;
 $65 = sp + 8|0;
 $68 = sp + 382|0;
 $76 = sp + 108|0;
 $79 = sp + 96|0;
 $89 = sp;
 $92 = sp + 381|0;
 $97 = sp + 32|0;
 $93 = $0;
 $94 = $1;
 $95 = $2;
 $100 = $93;
 $101 = $94;
 $102 = $95;
 $90 = $101;
 $91 = $102;
 $103 = $90;
 $104 = $91;
 ;HEAP8[$89>>0]=HEAP8[$92>>0]|0;
 $87 = $103;
 $88 = $104;
 $105 = $88;
 $106 = $87;
 $107 = $105;
 $108 = $106;
 $109 = (($107) - ($108))|0;
 $110 = (($109|0) / 16)&-1;
 $96 = $110;
 $111 = $96;
 $85 = $100;
 $112 = $85;
 $84 = $112;
 $113 = $84;
 $83 = $113;
 $114 = $83;
 $115 = ((($114)) + 8|0);
 $82 = $115;
 $116 = $82;
 $81 = $116;
 $117 = $81;
 $118 = HEAP32[$117>>2]|0;
 $119 = HEAP32[$113>>2]|0;
 $120 = $118;
 $121 = $119;
 $122 = (($120) - ($121))|0;
 $123 = (($122|0) / 16)&-1;
 $124 = ($111>>>0)<=($123>>>0);
 if (!($124)) {
  __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE10deallocateEv($100);
  $254 = $96;
  $75 = $100;
  HEAP32[$76>>2] = $254;
  $255 = $75;
  $256 = (__ZNKSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE8max_sizeEv($255)|0);
  $77 = $256;
  $257 = HEAP32[$76>>2]|0;
  $258 = $77;
  $259 = ($257>>>0)>($258>>>0);
  if ($259) {
   __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($255);
   // unreachable;
  }
  $73 = $255;
  $260 = $73;
  $72 = $260;
  $261 = $72;
  $71 = $261;
  $262 = $71;
  $263 = ((($262)) + 8|0);
  $70 = $263;
  $264 = $70;
  $69 = $264;
  $265 = $69;
  $266 = HEAP32[$265>>2]|0;
  $267 = HEAP32[$261>>2]|0;
  $268 = $266;
  $269 = $267;
  $270 = (($268) - ($269))|0;
  $271 = (($270|0) / 16)&-1;
  $78 = $271;
  $272 = $78;
  $273 = $77;
  $274 = (($273>>>0) / 2)&-1;
  $275 = ($272>>>0)>=($274>>>0);
  if ($275) {
   $276 = $77;
   $74 = $276;
  } else {
   $277 = $78;
   $278 = $277<<1;
   HEAP32[$79>>2] = $278;
   $66 = $79;
   $67 = $76;
   $279 = $66;
   $280 = $67;
   ;HEAP8[$65>>0]=HEAP8[$68>>0]|0;
   $63 = $279;
   $64 = $280;
   $281 = $63;
   $282 = $64;
   $60 = $65;
   $61 = $281;
   $62 = $282;
   $283 = $61;
   $284 = HEAP32[$283>>2]|0;
   $285 = $62;
   $286 = HEAP32[$285>>2]|0;
   $287 = ($284>>>0)<($286>>>0);
   $288 = $64;
   $289 = $63;
   $290 = $287 ? $288 : $289;
   $291 = HEAP32[$290>>2]|0;
   $74 = $291;
  }
  $292 = $74;
  __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE8allocateEj($100,$292);
  $293 = $94;
  $294 = $95;
  $295 = $96;
  __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_j($100,$293,$294,$295);
  $86 = $100;
  STACKTOP = sp;return;
 }
 $125 = $95;
 HEAP32[$97>>2] = $125;
 $98 = 0;
 $126 = $96;
 $80 = $100;
 $127 = $80;
 $128 = ((($127)) + 4|0);
 $129 = HEAP32[$128>>2]|0;
 $130 = HEAP32[$127>>2]|0;
 $131 = $129;
 $132 = $130;
 $133 = (($131) - ($132))|0;
 $134 = (($133|0) / 16)&-1;
 $135 = ($126>>>0)>($134>>>0);
 if ($135) {
  $98 = 1;
  $136 = $94;
  HEAP32[$97>>2] = $136;
  $59 = $100;
  $137 = $59;
  $138 = ((($137)) + 4|0);
  $139 = HEAP32[$138>>2]|0;
  $140 = HEAP32[$137>>2]|0;
  $141 = $139;
  $142 = $140;
  $143 = (($141) - ($142))|0;
  $144 = (($143|0) / 16)&-1;
  $56 = $97;
  $57 = $144;
  $145 = $56;
  $146 = $57;
  ;HEAP8[$55>>0]=HEAP8[$58>>0]|0;
  $53 = $145;
  $54 = $146;
  $147 = $54;
  $148 = $53;
  $149 = HEAP32[$148>>2]|0;
  $150 = (($149) + ($147<<4)|0);
  HEAP32[$148>>2] = $150;
 }
 $151 = $94;
 $152 = HEAP32[$97>>2]|0;
 $153 = HEAP32[$100>>2]|0;
 $50 = $151;
 $51 = $152;
 $52 = $153;
 $154 = $50;
 $49 = $154;
 $155 = $49;
 $156 = $51;
 $43 = $156;
 $157 = $43;
 $158 = $52;
 $44 = $158;
 $159 = $44;
 $45 = $155;
 $46 = $157;
 $47 = $159;
 $160 = $46;
 $161 = $45;
 $162 = $160;
 $163 = $161;
 $164 = (($162) - ($163))|0;
 $165 = (($164|0) / 16)&-1;
 $48 = $165;
 $166 = $48;
 $167 = ($166>>>0)>(0);
 if ($167) {
  $168 = $47;
  $169 = $45;
  $170 = $48;
  $171 = $170<<4;
  _memmove(($168|0),($169|0),($171|0))|0;
 }
 $172 = $47;
 $173 = $48;
 $174 = (($172) + ($173<<4)|0);
 $99 = $174;
 $175 = $98;
 $176 = $175&1;
 if ($176) {
  $177 = HEAP32[$97>>2]|0;
  $178 = $95;
  $179 = $96;
  $3 = $100;
  $180 = $3;
  $181 = ((($180)) + 4|0);
  $182 = HEAP32[$181>>2]|0;
  $183 = HEAP32[$180>>2]|0;
  $184 = $182;
  $185 = $183;
  $186 = (($184) - ($185))|0;
  $187 = (($186|0) / 16)&-1;
  $188 = (($179) - ($187))|0;
  __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_j($100,$177,$178,$188);
  $86 = $100;
  STACKTOP = sp;return;
 }
 $189 = $99;
 $40 = $100;
 $41 = $189;
 $190 = $40;
 $191 = $41;
 $38 = $190;
 $39 = $191;
 $4 = $190;
 $192 = $4;
 $193 = ((($192)) + 4|0);
 $194 = HEAP32[$193>>2]|0;
 $195 = HEAP32[$192>>2]|0;
 $196 = $194;
 $197 = $195;
 $198 = (($196) - ($197))|0;
 $199 = (($198|0) / 16)&-1;
 $42 = $199;
 $200 = $41;
 $15 = $190;
 $16 = $200;
 $201 = $15;
 while(1) {
  $202 = $16;
  $203 = ((($201)) + 4|0);
  $204 = HEAP32[$203>>2]|0;
  $205 = ($202|0)!=($204|0);
  if (!($205)) {
   break;
  }
  $14 = $201;
  $206 = $14;
  $207 = ((($206)) + 8|0);
  $13 = $207;
  $208 = $13;
  $12 = $208;
  $209 = $12;
  $210 = ((($201)) + 4|0);
  $211 = HEAP32[$210>>2]|0;
  $212 = ((($211)) + -16|0);
  HEAP32[$210>>2] = $212;
  $5 = $212;
  $213 = $5;
  $9 = $209;
  $10 = $213;
  $214 = $9;
  $215 = $10;
  ;HEAP8[$8>>0]=HEAP8[$11>>0]|0;
  $6 = $214;
  $7 = $215;
 }
 $216 = $42;
 $36 = $190;
 $37 = $216;
 $217 = $36;
 $35 = $217;
 $218 = $35;
 $219 = HEAP32[$218>>2]|0;
 $34 = $219;
 $220 = $34;
 $18 = $217;
 $221 = $18;
 $222 = HEAP32[$221>>2]|0;
 $17 = $222;
 $223 = $17;
 $23 = $217;
 $224 = $23;
 $22 = $224;
 $225 = $22;
 $21 = $225;
 $226 = $21;
 $227 = ((($226)) + 8|0);
 $20 = $227;
 $228 = $20;
 $19 = $228;
 $229 = $19;
 $230 = HEAP32[$229>>2]|0;
 $231 = HEAP32[$225>>2]|0;
 $232 = $230;
 $233 = $231;
 $234 = (($232) - ($233))|0;
 $235 = (($234|0) / 16)&-1;
 $236 = (($223) + ($235<<4)|0);
 $25 = $217;
 $237 = $25;
 $238 = HEAP32[$237>>2]|0;
 $24 = $238;
 $239 = $24;
 $240 = $37;
 $241 = (($239) + ($240<<4)|0);
 $27 = $217;
 $242 = $27;
 $243 = HEAP32[$242>>2]|0;
 $26 = $243;
 $244 = $26;
 $28 = $217;
 $245 = $28;
 $246 = ((($245)) + 4|0);
 $247 = HEAP32[$246>>2]|0;
 $248 = HEAP32[$245>>2]|0;
 $249 = $247;
 $250 = $248;
 $251 = (($249) - ($250))|0;
 $252 = (($251|0) / 16)&-1;
 $253 = (($244) + ($252<<4)|0);
 $29 = $217;
 $30 = $220;
 $31 = $236;
 $32 = $241;
 $33 = $253;
 $86 = $100;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_j($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $21 = sp + 68|0;
 $16 = $0;
 $17 = $1;
 $18 = $2;
 $19 = $3;
 $22 = $16;
 $15 = $22;
 $23 = $15;
 $24 = ((($23)) + 8|0);
 $14 = $24;
 $25 = $14;
 $13 = $25;
 $26 = $13;
 $20 = $26;
 $27 = $19;
 $4 = $21;
 $5 = $22;
 $6 = $27;
 $28 = $20;
 $29 = $17;
 $30 = $18;
 $31 = ((($22)) + 4|0);
 $7 = $28;
 $8 = $29;
 $9 = $30;
 $10 = $31;
 $32 = $9;
 $33 = $8;
 $34 = $32;
 $35 = $33;
 $36 = (($34) - ($35))|0;
 $37 = (($36|0) / 16)&-1;
 $11 = $37;
 $38 = $11;
 $39 = ($38|0)>(0);
 if (!($39)) {
  $12 = $21;
  STACKTOP = sp;return;
 }
 $40 = $10;
 $41 = HEAP32[$40>>2]|0;
 $42 = $8;
 $43 = $11;
 $44 = $43<<4;
 _memcpy(($41|0),($42|0),($44|0))|0;
 $45 = $11;
 $46 = $10;
 $47 = HEAP32[$46>>2]|0;
 $48 = (($47) + ($45<<4)|0);
 HEAP32[$46>>2] = $48;
 $12 = $21;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE10deallocateEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $4 = sp;
 $7 = sp + 264|0;
 $57 = sp + 44|0;
 $64 = sp + 16|0;
 $66 = sp + 8|0;
 $67 = sp + 4|0;
 $65 = $0;
 $68 = $65;
 $69 = HEAP32[$68>>2]|0;
 $62 = $64;
 $63 = -1;
 $70 = $62;
 HEAP32[$70>>2] = 0;
 $71 = HEAP32[$64>>2]|0;
 HEAP32[$66>>2] = $71;
 $47 = $66;
 $72 = ($69|0)!=(0|0);
 if (!($72)) {
  STACKTOP = sp;return;
 }
 $37 = $68;
 $73 = $37;
 $36 = $73;
 $74 = $36;
 $75 = ((($74)) + 4|0);
 $76 = HEAP32[$75>>2]|0;
 $77 = HEAP32[$74>>2]|0;
 $78 = $76;
 $79 = $77;
 $80 = (($78) - ($79))|0;
 $81 = (($80|0) / 16)&-1;
 $38 = $81;
 $13 = $73;
 $82 = $13;
 $83 = HEAP32[$82>>2]|0;
 $11 = $82;
 $12 = $83;
 $84 = $11;
 while(1) {
  $85 = $12;
  $86 = ((($84)) + 4|0);
  $87 = HEAP32[$86>>2]|0;
  $88 = ($85|0)!=($87|0);
  if (!($88)) {
   break;
  }
  $10 = $84;
  $89 = $10;
  $90 = ((($89)) + 8|0);
  $9 = $90;
  $91 = $9;
  $8 = $91;
  $92 = $8;
  $93 = ((($84)) + 4|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = ((($94)) + -16|0);
  HEAP32[$93>>2] = $95;
  $1 = $95;
  $96 = $1;
  $5 = $92;
  $6 = $96;
  $97 = $5;
  $98 = $6;
  ;HEAP8[$4>>0]=HEAP8[$7>>0]|0;
  $2 = $97;
  $3 = $98;
 }
 $99 = $38;
 $33 = $73;
 $34 = $99;
 $100 = $33;
 $32 = $100;
 $101 = $32;
 $102 = HEAP32[$101>>2]|0;
 $31 = $102;
 $103 = $31;
 $15 = $100;
 $104 = $15;
 $105 = HEAP32[$104>>2]|0;
 $14 = $105;
 $106 = $14;
 $20 = $100;
 $107 = $20;
 $19 = $107;
 $108 = $19;
 $18 = $108;
 $109 = $18;
 $110 = ((($109)) + 8|0);
 $17 = $110;
 $111 = $17;
 $16 = $111;
 $112 = $16;
 $113 = HEAP32[$112>>2]|0;
 $114 = HEAP32[$108>>2]|0;
 $115 = $113;
 $116 = $114;
 $117 = (($115) - ($116))|0;
 $118 = (($117|0) / 16)&-1;
 $119 = (($106) + ($118<<4)|0);
 $22 = $100;
 $120 = $22;
 $121 = HEAP32[$120>>2]|0;
 $21 = $121;
 $122 = $21;
 $123 = $34;
 $124 = (($122) + ($123<<4)|0);
 $24 = $100;
 $125 = $24;
 $126 = HEAP32[$125>>2]|0;
 $23 = $126;
 $127 = $23;
 $25 = $100;
 $128 = $25;
 $129 = ((($128)) + 4|0);
 $130 = HEAP32[$129>>2]|0;
 $131 = HEAP32[$128>>2]|0;
 $132 = $130;
 $133 = $131;
 $134 = (($132) - ($133))|0;
 $135 = (($134|0) / 16)&-1;
 $136 = (($127) + ($135<<4)|0);
 $26 = $100;
 $27 = $103;
 $28 = $119;
 $29 = $124;
 $30 = $136;
 $35 = $73;
 $41 = $68;
 $137 = $41;
 $138 = ((($137)) + 8|0);
 $40 = $138;
 $139 = $40;
 $39 = $139;
 $140 = $39;
 $141 = HEAP32[$68>>2]|0;
 $46 = $68;
 $142 = $46;
 $45 = $142;
 $143 = $45;
 $44 = $143;
 $144 = $44;
 $145 = ((($144)) + 8|0);
 $43 = $145;
 $146 = $43;
 $42 = $146;
 $147 = $42;
 $148 = HEAP32[$147>>2]|0;
 $149 = HEAP32[$143>>2]|0;
 $150 = $148;
 $151 = $149;
 $152 = (($150) - ($151))|0;
 $153 = (($152|0) / 16)&-1;
 $52 = $140;
 $53 = $141;
 $54 = $153;
 $154 = $52;
 $155 = $53;
 $156 = $54;
 $49 = $154;
 $50 = $155;
 $51 = $156;
 $157 = $50;
 $48 = $157;
 $158 = $48;
 __ZdlPv($158);
 $55 = $57;
 $56 = -1;
 $159 = $55;
 HEAP32[$159>>2] = 0;
 $160 = HEAP32[$57>>2]|0;
 HEAP32[$67>>2] = $160;
 $58 = $67;
 $61 = $68;
 $161 = $61;
 $162 = ((($161)) + 8|0);
 $60 = $162;
 $163 = $60;
 $59 = $163;
 $164 = $59;
 HEAP32[$164>>2] = 0;
 $165 = ((($68)) + 4|0);
 HEAP32[$165>>2] = 0;
 HEAP32[$68>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE8allocateEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $45 = $0;
 $46 = $1;
 $47 = $45;
 $48 = $46;
 $49 = (__ZNKSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE8max_sizeEv($47)|0);
 $50 = ($48>>>0)>($49>>>0);
 if ($50) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($47);
  // unreachable;
 }
 $44 = $47;
 $51 = $44;
 $52 = ((($51)) + 8|0);
 $43 = $52;
 $53 = $43;
 $42 = $53;
 $54 = $42;
 $55 = $46;
 $12 = $54;
 $13 = $55;
 $56 = $12;
 $57 = $13;
 $9 = $56;
 $10 = $57;
 $11 = 0;
 $58 = $9;
 $59 = $10;
 $8 = $58;
 $60 = ($59>>>0)>(268435455);
 if (!($60)) {
  $71 = $10;
  $72 = $71<<4;
  $7 = $72;
  $73 = $7;
  $74 = (__Znwj($73)|0);
  $75 = ((($47)) + 4|0);
  HEAP32[$75>>2] = $74;
  HEAP32[$47>>2] = $74;
  $76 = HEAP32[$47>>2]|0;
  $77 = $46;
  $78 = (($76) + ($77<<4)|0);
  $16 = $47;
  $79 = $16;
  $80 = ((($79)) + 8|0);
  $15 = $80;
  $81 = $15;
  $14 = $81;
  $82 = $14;
  HEAP32[$82>>2] = $78;
  $40 = $47;
  $41 = 0;
  $83 = $40;
  $39 = $83;
  $84 = $39;
  $85 = HEAP32[$84>>2]|0;
  $38 = $85;
  $86 = $38;
  $18 = $83;
  $87 = $18;
  $88 = HEAP32[$87>>2]|0;
  $17 = $88;
  $89 = $17;
  $23 = $83;
  $90 = $23;
  $22 = $90;
  $91 = $22;
  $21 = $91;
  $92 = $21;
  $93 = ((($92)) + 8|0);
  $20 = $93;
  $94 = $20;
  $19 = $94;
  $95 = $19;
  $96 = HEAP32[$95>>2]|0;
  $97 = HEAP32[$91>>2]|0;
  $98 = $96;
  $99 = $97;
  $100 = (($98) - ($99))|0;
  $101 = (($100|0) / 16)&-1;
  $102 = (($89) + ($101<<4)|0);
  $25 = $83;
  $103 = $25;
  $104 = HEAP32[$103>>2]|0;
  $24 = $104;
  $105 = $24;
  $30 = $83;
  $106 = $30;
  $29 = $106;
  $107 = $29;
  $28 = $107;
  $108 = $28;
  $109 = ((($108)) + 8|0);
  $27 = $109;
  $110 = $27;
  $26 = $110;
  $111 = $26;
  $112 = HEAP32[$111>>2]|0;
  $113 = HEAP32[$107>>2]|0;
  $114 = $112;
  $115 = $113;
  $116 = (($114) - ($115))|0;
  $117 = (($116|0) / 16)&-1;
  $118 = (($105) + ($117<<4)|0);
  $32 = $83;
  $119 = $32;
  $120 = HEAP32[$119>>2]|0;
  $31 = $120;
  $121 = $31;
  $122 = $41;
  $123 = (($121) + ($122<<4)|0);
  $33 = $83;
  $34 = $86;
  $35 = $102;
  $36 = $118;
  $37 = $123;
  STACKTOP = sp;return;
 }
 $4 = 1110;
 $61 = (___cxa_allocate_exception(8)|0);
 $62 = $4;
 $2 = $61;
 $3 = $62;
 $63 = $2;
 $64 = $3;
 __THREW__ = 0;
 invoke_vii(114,($63|0),($64|0));
 $65 = __THREW__; __THREW__ = 0;
 $66 = $65&1;
 if ($66) {
  $67 = ___cxa_find_matching_catch_2()|0;
  $68 = tempRet0;
  $5 = $67;
  $6 = $68;
  ___cxa_free_exception(($61|0));
  $69 = $5;
  $70 = $6;
  ___resumeException($69|0);
  // unreachable;
 } else {
  HEAP32[$63>>2] = (920);
  ___cxa_throw(($61|0),(104|0),(21|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal17set_from_tripletsINSt3__211__wrap_iterIPNS_7TripletIdiEEEENS_12SparseMatrixIdLi0EiEENS0_13scalar_sum_opIddEEEEvRKT_SE_RT0_T1_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0.0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $43 = sp + 32|0;
 $44 = sp + 24|0;
 $45 = sp + 20|0;
 $48 = sp + 8|0;
 $49 = sp + 4|0;
 $50 = sp;
 $51 = sp + 224|0;
 $40 = $0;
 $41 = $1;
 $42 = $2;
 $52 = $42;
 $53 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($52)|0);
 $54 = $42;
 $55 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($54)|0);
 __ZN5Eigen12SparseMatrixIdLi1EiEC2Eii($43,$53,$55);
 $56 = $40;
 $57 = $41;
 $38 = $56;
 $39 = $57;
 $58 = $38;
 $59 = $39;
 $36 = $58;
 $37 = $59;
 $60 = $36;
 $35 = $60;
 $61 = $35;
 $62 = HEAP32[$61>>2]|0;
 $63 = $37;
 $34 = $63;
 $64 = $34;
 $65 = HEAP32[$64>>2]|0;
 $66 = ($62|0)==($65|0);
 $67 = $66 ^ 1;
 L1: do {
  if ($67) {
   __THREW__ = 0;
   $68 = (invoke_ii(437,($43|0))|0);
   $69 = __THREW__; __THREW__ = 0;
   $70 = $69&1;
   if ($70) {
    label = 18;
   } else {
    HEAP32[$45>>2] = $68;
    __THREW__ = 0;
    invoke_vii(438,($44|0),($45|0));
    $71 = __THREW__; __THREW__ = 0;
    $72 = $71&1;
    if ($72) {
     label = 18;
    } else {
     __THREW__ = 0;
     (invoke_ii(439,($44|0))|0);
     $73 = __THREW__; __THREW__ = 0;
     $74 = $73&1;
     L5: do {
      if (!($74)) {
       $75 = $40;
       ;HEAP32[$48>>2]=HEAP32[$75>>2]|0;
       while(1) {
        $76 = $41;
        $32 = $48;
        $33 = $76;
        $77 = $32;
        $78 = $33;
        $30 = $77;
        $31 = $78;
        $79 = $30;
        $29 = $79;
        $80 = $29;
        $81 = HEAP32[$80>>2]|0;
        $82 = $31;
        $28 = $82;
        $83 = $28;
        $84 = HEAP32[$83>>2]|0;
        $85 = ($81|0)==($84|0);
        $86 = $85 ^ 1;
        if (!($86)) {
         break;
        }
        $27 = $48;
        $87 = $27;
        $88 = HEAP32[$87>>2]|0;
        $26 = $88;
        $89 = $26;
        __THREW__ = 0;
        $90 = (invoke_ii(56,($89|0))|0);
        $91 = __THREW__; __THREW__ = 0;
        $92 = $91&1;
        if ($92) {
         break L5;
        }
        $93 = HEAP32[$90>>2]|0;
        $94 = ($93|0)>=(0);
        if (!($94)) {
         label = 17;
         break;
        }
        $25 = $48;
        $95 = $25;
        $96 = HEAP32[$95>>2]|0;
        $24 = $96;
        $97 = $24;
        __THREW__ = 0;
        $98 = (invoke_ii(56,($97|0))|0);
        $99 = __THREW__; __THREW__ = 0;
        $100 = $99&1;
        if ($100) {
         break L5;
        }
        $101 = HEAP32[$98>>2]|0;
        $102 = $42;
        __THREW__ = 0;
        $103 = (invoke_ii(440,($102|0))|0);
        $104 = __THREW__; __THREW__ = 0;
        $105 = $104&1;
        if ($105) {
         break L5;
        }
        $106 = ($101|0)<($103|0);
        if (!($106)) {
         label = 17;
         break;
        }
        $23 = $48;
        $107 = $23;
        $108 = HEAP32[$107>>2]|0;
        $22 = $108;
        $109 = $22;
        __THREW__ = 0;
        $110 = (invoke_ii(57,($109|0))|0);
        $111 = __THREW__; __THREW__ = 0;
        $112 = $111&1;
        if ($112) {
         break L5;
        }
        $113 = HEAP32[$110>>2]|0;
        $114 = ($113|0)>=(0);
        if (!($114)) {
         label = 17;
         break;
        }
        $21 = $48;
        $115 = $21;
        $116 = HEAP32[$115>>2]|0;
        $20 = $116;
        $117 = $20;
        __THREW__ = 0;
        $118 = (invoke_ii(57,($117|0))|0);
        $119 = __THREW__; __THREW__ = 0;
        $120 = $119&1;
        if ($120) {
         break L5;
        }
        $121 = HEAP32[$118>>2]|0;
        $122 = $42;
        __THREW__ = 0;
        $123 = (invoke_ii(441,($122|0))|0);
        $124 = __THREW__; __THREW__ = 0;
        $125 = $124&1;
        if ($125) {
         break L5;
        }
        $126 = ($121|0)<($123|0);
        if (!($126)) {
         label = 17;
         break;
        }
        $19 = $48;
        $134 = $19;
        $135 = HEAP32[$134>>2]|0;
        $18 = $135;
        $136 = $18;
        __THREW__ = 0;
        $137 = (invoke_ii(56,($136|0))|0);
        $138 = __THREW__; __THREW__ = 0;
        $139 = $138&1;
        if ($139) {
         break L5;
        }
        $140 = HEAP32[$137>>2]|0;
        __THREW__ = 0;
        $141 = (invoke_iii(443,($44|0),($140|0))|0);
        $142 = __THREW__; __THREW__ = 0;
        $143 = $142&1;
        if ($143) {
         break L5;
        }
        $144 = HEAP32[$141>>2]|0;
        $145 = (($144) + 1)|0;
        HEAP32[$141>>2] = $145;
        $17 = $48;
        $146 = $17;
        $147 = HEAP32[$146>>2]|0;
        $148 = ((($147)) + 16|0);
        HEAP32[$146>>2] = $148;
       }
       if ((label|0) == 17) {
        __THREW__ = 0;
        invoke_viiii(162,(5361|0),(5438|0),934,(5482|0));
        $127 = __THREW__; __THREW__ = 0;
        break;
       }
       HEAP32[$49>>2] = 0;
       __THREW__ = 0;
       invoke_viii(444,($43|0),($44|0),($49|0));
       $149 = __THREW__; __THREW__ = 0;
       $150 = $149&1;
       if (!($150)) {
        $151 = $40;
        ;HEAP32[$50>>2]=HEAP32[$151>>2]|0;
        while(1) {
         $152 = $41;
         $14 = $50;
         $15 = $152;
         $153 = $14;
         $154 = $15;
         $12 = $153;
         $13 = $154;
         $155 = $12;
         $11 = $155;
         $156 = $11;
         $157 = HEAP32[$156>>2]|0;
         $158 = $13;
         $10 = $158;
         $159 = $10;
         $160 = HEAP32[$159>>2]|0;
         $161 = ($157|0)==($160|0);
         $162 = $161 ^ 1;
         if (!($162)) {
          break;
         }
         $9 = $50;
         $163 = $9;
         $164 = HEAP32[$163>>2]|0;
         $8 = $164;
         $165 = $8;
         __THREW__ = 0;
         $166 = (invoke_ii(58,($165|0))|0);
         $167 = __THREW__; __THREW__ = 0;
         $168 = $167&1;
         if ($168) {
          break L5;
         }
         $169 = +HEAPF64[$166>>3];
         $5 = $50;
         $170 = $5;
         $171 = HEAP32[$170>>2]|0;
         $4 = $171;
         $172 = $4;
         __THREW__ = 0;
         $173 = (invoke_ii(56,($172|0))|0);
         $174 = __THREW__; __THREW__ = 0;
         $175 = $174&1;
         if ($175) {
          break L5;
         }
         $176 = HEAP32[$173>>2]|0;
         $7 = $50;
         $177 = $7;
         $178 = HEAP32[$177>>2]|0;
         $6 = $178;
         $179 = $6;
         __THREW__ = 0;
         $180 = (invoke_ii(57,($179|0))|0);
         $181 = __THREW__; __THREW__ = 0;
         $182 = $181&1;
         if ($182) {
          break L5;
         }
         $183 = HEAP32[$180>>2]|0;
         __THREW__ = 0;
         $184 = (invoke_iiii(445,($43|0),($176|0),($183|0))|0);
         $185 = __THREW__; __THREW__ = 0;
         $186 = $185&1;
         if ($186) {
          break L5;
         }
         HEAPF64[$184>>3] = $169;
         $16 = $50;
         $187 = $16;
         $188 = HEAP32[$187>>2]|0;
         $189 = ((($188)) + 16|0);
         HEAP32[$187>>2] = $189;
        }
        __THREW__ = 0;
        invoke_vii(446,($51|0),($3|0));
        $190 = __THREW__; __THREW__ = 0;
        $191 = $190&1;
        if (!($191)) {
         __THREW__ = 0;
         invoke_vii(447,($43|0),($51|0));
         $192 = __THREW__; __THREW__ = 0;
         $193 = $192&1;
         if (!($193)) {
          __THREW__ = 0;
          invoke_vi(442,($44|0));
          $194 = __THREW__; __THREW__ = 0;
          $195 = $194&1;
          if ($195) {
           label = 18;
           break L1;
          } else {
           label = 34;
           break L1;
          }
         }
        }
       }
      }
     } while(0);
     $130 = ___cxa_find_matching_catch_2()|0;
     $131 = tempRet0;
     $46 = $130;
     $47 = $131;
     __THREW__ = 0;
     invoke_vi(442,($44|0));
     $132 = __THREW__; __THREW__ = 0;
     $133 = $132&1;
     if ($133) {
      $203 = ___cxa_find_matching_catch_3(0|0)|0;
      $204 = tempRet0;
      ___clang_call_terminate($203);
      // unreachable;
     }
    }
   }
  } else {
   label = 34;
  }
 } while(0);
 if ((label|0) == 34) {
  $196 = $42;
  __THREW__ = 0;
  (invoke_iii(448,($196|0),($43|0))|0);
  $197 = __THREW__; __THREW__ = 0;
  $198 = $197&1;
  if ($198) {
   label = 18;
  } else {
   __ZN5Eigen12SparseMatrixIdLi1EiED2Ev($43);
   STACKTOP = sp;return;
  }
 }
 if ((label|0) == 18) {
  $128 = ___cxa_find_matching_catch_2()|0;
  $129 = tempRet0;
  $46 = $128;
  $47 = $129;
 }
 __THREW__ = 0;
 invoke_vi(449,($43|0));
 $199 = __THREW__; __THREW__ = 0;
 $200 = $199&1;
 if ($200) {
  $203 = ___cxa_find_matching_catch_3(0|0)|0;
  $204 = tempRet0;
  ___clang_call_terminate($203);
  // unreachable;
 } else {
  $201 = $46;
  $202 = $47;
  ___resumeException($201|0);
  // unreachable;
 }
}
function __ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen12SparseMatrixIdLi1EiEC2Eii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEEC2Ev($8);
 $9 = ((($8)) + 4|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($8)) + 8|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($8)) + 12|0);
 HEAP32[$11>>2] = 0;
 $12 = ((($8)) + 16|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($8)) + 20|0);
 __ZN5Eigen8internal17CompressedStorageIdiEC2Ev($13);
 __THREW__ = 0;
 invoke_v(450);
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 if (!($15)) {
  $16 = $4;
  $17 = $5;
  __THREW__ = 0;
  invoke_viii(451,($8|0),($16|0),($17|0));
  $18 = __THREW__; __THREW__ = 0;
  $19 = $18&1;
  if (!($19)) {
   STACKTOP = sp;return;
  }
 }
 $20 = ___cxa_find_matching_catch_2()|0;
 $21 = tempRet0;
 $6 = $20;
 $7 = $21;
 __THREW__ = 0;
 invoke_vi(71,($13|0));
 $22 = __THREW__; __THREW__ = 0;
 $23 = $22&1;
 if ($23) {
  $26 = ___cxa_find_matching_catch_3(0|0)|0;
  $27 = tempRet0;
  ___clang_call_terminate($26);
  // unreachable;
 } else {
  $24 = $6;
  $25 = $7;
  ___resumeException($24|0);
  // unreachable;
 }
}
function __ZNK5Eigen12SparseMatrixIdLi1EiE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7setZeroEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1;
 HEAP32[$2>>2] = 0;
 $4 = (__ZN5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE11setConstantERKi($3,$2)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen15DenseCoeffsBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi1EEclEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ($5|0)>=(0);
 if (!($6)) {
  ___assert_fail((5177|0),(1678|0),425,(1719|0));
  // unreachable;
 }
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($4)|0);
 $9 = ($7|0)<($8|0);
 if ($9) {
  $10 = $3;
  $11 = (__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi1EE8coeffRefEi($4,$10)|0);
  STACKTOP = sp;return ($11|0);
 } else {
  ___assert_fail((5177|0),(1678|0),425,(1719|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen12SparseMatrixIdLi1EiE7reserveINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEvRKT_RKNS5_10value_typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $5;
 __ZN5Eigen8internal22ignore_unused_variableIiEEvRKT_($7);
 $8 = $4;
 __ZN5Eigen12SparseMatrixIdLi1EiE19reserveInnerVectorsINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEvRKT_($6,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen12SparseMatrixIdLi1EiE22insertBackUncompressedEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = $3;
 $10 = $4;
 $6 = $10;
 $11 = $5;
 $7 = $11;
 $12 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE12isCompressedEv($9)|0);
 if ($12) {
  ___assert_fail((5500|0),(5438|0),891,(5516|0));
  // unreachable;
 }
 $13 = ((($9)) + 16|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $6;
 $16 = (($14) + ($15<<2)|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($9)) + 12|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $6;
 $21 = (($20) + 1)|0;
 $22 = (($19) + ($21<<2)|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($9)) + 12|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = $6;
 $27 = (($25) + ($26<<2)|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (($23) - ($28))|0;
 $30 = ($17|0)<=($29|0);
 if ($30) {
  $31 = ((($9)) + 12|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = $6;
  $34 = (($32) + ($33<<2)|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = ((($9)) + 16|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = $6;
  $39 = (($37) + ($38<<2)|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = (($40) + 1)|0;
  HEAP32[$39>>2] = $41;
  $42 = (($35) + ($40))|0;
  $8 = $42;
  $43 = $7;
  $44 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE13convert_indexEi($43)|0);
  $45 = ((($9)) + 20|0);
  $46 = $8;
  $47 = (__ZN5Eigen8internal17CompressedStorageIdiE5indexEi($45,$46)|0);
  HEAP32[$47>>2] = $44;
  $48 = ((($9)) + 20|0);
  $49 = $8;
  $50 = (__ZN5Eigen8internal17CompressedStorageIdiE5valueEi($48,$49)|0);
  HEAPF64[$50>>3] = 0.0;
  STACKTOP = sp;return ($50|0);
 } else {
  ___assert_fail((5539|0),(5438|0),892,(5516|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen12SparseMatrixIdLi1EiE18collapseDuplicatesINS_8internal13scalar_sum_opIddEEEEvT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0.0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $3 = sp + 40|0;
 $4 = sp + 36|0;
 $5 = sp + 32|0;
 $2 = $0;
 $14 = $2;
 $15 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE12isCompressedEv($14)|0);
 if ($15) {
  ___assert_fail((5500|0),(5438|0),1019,(5609|0));
  // unreachable;
 }
 $16 = (__ZNK5Eigen12SparseMatrixIdLi1EiE9innerSizeEv($14)|0);
 HEAP32[$4>>2] = $16;
 __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEC2IiEERKT_($3,$4);
 HEAP32[$5>>2] = -1;
 __THREW__ = 0;
 invoke_vii(452,($3|0),($5|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 L4: do {
  if (!($18)) {
   $8 = 0;
   $9 = 0;
   while(1) {
    $19 = $9;
    __THREW__ = 0;
    $20 = (invoke_ii(437,($14|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if ($22) {
     break L4;
    }
    $23 = ($19|0)<($20|0);
    $24 = $8;
    if (!($23)) {
     break;
    }
    $10 = $24;
    $25 = ((($14)) + 12|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $9;
    $28 = (($26) + ($27<<2)|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ((($14)) + 16|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = $9;
    $33 = (($31) + ($32<<2)|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = (($29) + ($34))|0;
    $11 = $35;
    $36 = ((($14)) + 12|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = $9;
    $39 = (($37) + ($38<<2)|0);
    $40 = HEAP32[$39>>2]|0;
    $12 = $40;
    while(1) {
     $41 = $12;
     $42 = $11;
     $43 = ($41|0)<($42|0);
     if (!($43)) {
      break;
     }
     $44 = ((($14)) + 20|0);
     $45 = $12;
     __THREW__ = 0;
     $46 = (invoke_iii(453,($44|0),($45|0))|0);
     $47 = __THREW__; __THREW__ = 0;
     $48 = $47&1;
     if ($48) {
      break L4;
     }
     $49 = HEAP32[$46>>2]|0;
     $13 = $49;
     $50 = $13;
     __THREW__ = 0;
     $51 = (invoke_iii(443,($3|0),($50|0))|0);
     $52 = __THREW__; __THREW__ = 0;
     $53 = $52&1;
     if ($53) {
      break L4;
     }
     $54 = HEAP32[$51>>2]|0;
     $55 = $10;
     $56 = ($54|0)>=($55|0);
     $57 = ((($14)) + 20|0);
     if ($56) {
      $58 = $13;
      __THREW__ = 0;
      $59 = (invoke_iii(443,($3|0),($58|0))|0);
      $60 = __THREW__; __THREW__ = 0;
      $61 = $60&1;
      if ($61) {
       break L4;
      }
      $62 = HEAP32[$59>>2]|0;
      __THREW__ = 0;
      $63 = (invoke_iii(454,($57|0),($62|0))|0);
      $64 = __THREW__; __THREW__ = 0;
      $65 = $64&1;
      if ($65) {
       break L4;
      }
      $66 = ((($14)) + 20|0);
      $67 = $12;
      __THREW__ = 0;
      $68 = (invoke_iii(454,($66|0),($67|0))|0);
      $69 = __THREW__; __THREW__ = 0;
      $70 = $69&1;
      if ($70) {
       break L4;
      }
      __THREW__ = 0;
      $71 = (+invoke_diii(455,($1|0),($63|0),($68|0)));
      $72 = __THREW__; __THREW__ = 0;
      $73 = $72&1;
      if ($73) {
       break L4;
      }
      $74 = ((($14)) + 20|0);
      $75 = $13;
      __THREW__ = 0;
      $76 = (invoke_iii(443,($3|0),($75|0))|0);
      $77 = __THREW__; __THREW__ = 0;
      $78 = $77&1;
      if ($78) {
       break L4;
      }
      $79 = HEAP32[$76>>2]|0;
      __THREW__ = 0;
      $80 = (invoke_iii(454,($74|0),($79|0))|0);
      $81 = __THREW__; __THREW__ = 0;
      $82 = $81&1;
      if ($82) {
       break L4;
      }
      HEAPF64[$80>>3] = $71;
     } else {
      $87 = $12;
      __THREW__ = 0;
      $88 = (invoke_iii(454,($57|0),($87|0))|0);
      $89 = __THREW__; __THREW__ = 0;
      $90 = $89&1;
      if ($90) {
       break L4;
      }
      $91 = +HEAPF64[$88>>3];
      $92 = ((($14)) + 20|0);
      $93 = $8;
      __THREW__ = 0;
      $94 = (invoke_iii(454,($92|0),($93|0))|0);
      $95 = __THREW__; __THREW__ = 0;
      $96 = $95&1;
      if ($96) {
       break L4;
      }
      HEAPF64[$94>>3] = $91;
      $97 = ((($14)) + 20|0);
      $98 = $12;
      __THREW__ = 0;
      $99 = (invoke_iii(453,($97|0),($98|0))|0);
      $100 = __THREW__; __THREW__ = 0;
      $101 = $100&1;
      if ($101) {
       break L4;
      }
      $102 = HEAP32[$99>>2]|0;
      $103 = ((($14)) + 20|0);
      $104 = $8;
      __THREW__ = 0;
      $105 = (invoke_iii(453,($103|0),($104|0))|0);
      $106 = __THREW__; __THREW__ = 0;
      $107 = $106&1;
      if ($107) {
       break L4;
      }
      HEAP32[$105>>2] = $102;
      $108 = $8;
      $109 = $13;
      __THREW__ = 0;
      $110 = (invoke_iii(443,($3|0),($109|0))|0);
      $111 = __THREW__; __THREW__ = 0;
      $112 = $111&1;
      if ($112) {
       break L4;
      }
      HEAP32[$110>>2] = $108;
      $113 = $8;
      $114 = (($113) + 1)|0;
      $8 = $114;
     }
     $115 = $12;
     $116 = (($115) + 1)|0;
     $12 = $116;
    }
    $117 = $10;
    $118 = ((($14)) + 12|0);
    $119 = HEAP32[$118>>2]|0;
    $120 = $9;
    $121 = (($119) + ($120<<2)|0);
    HEAP32[$121>>2] = $117;
    $122 = $9;
    $123 = (($122) + 1)|0;
    $9 = $123;
   }
   $124 = ((($14)) + 12|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = ((($14)) + 4|0);
   $127 = HEAP32[$126>>2]|0;
   $128 = (($125) + ($127<<2)|0);
   HEAP32[$128>>2] = $24;
   $129 = ((($14)) + 16|0);
   $130 = HEAP32[$129>>2]|0;
   __THREW__ = 0;
   invoke_vi(72,($130|0));
   $131 = __THREW__; __THREW__ = 0;
   $132 = $131&1;
   if (!($132)) {
    $133 = ((($14)) + 16|0);
    HEAP32[$133>>2] = 0;
    $134 = ((($14)) + 20|0);
    $135 = ((($14)) + 12|0);
    $136 = HEAP32[$135>>2]|0;
    $137 = ((($14)) + 4|0);
    $138 = HEAP32[$137>>2]|0;
    $139 = (($136) + ($138<<2)|0);
    $140 = HEAP32[$139>>2]|0;
    __THREW__ = 0;
    invoke_viid(456,($134|0),($140|0),0.0);
    $141 = __THREW__; __THREW__ = 0;
    $142 = $141&1;
    if (!($142)) {
     __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EED2Ev($3);
     STACKTOP = sp;return;
    }
   }
  }
 } while(0);
 $83 = ___cxa_find_matching_catch_2()|0;
 $84 = tempRet0;
 $6 = $83;
 $7 = $84;
 __THREW__ = 0;
 invoke_vi(442,($3|0));
 $85 = __THREW__; __THREW__ = 0;
 $86 = $85&1;
 if ($86) {
  $145 = ___cxa_find_matching_catch_3(0|0)|0;
  $146 = tempRet0;
  ___clang_call_terminate($145);
  // unreachable;
 } else {
  $143 = $6;
  $144 = $7;
  ___resumeException($143|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal13scalar_sum_opIddEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen12SparseMatrixIdLi0EiEaSINS0_IdLi1EiEEEERS1_RKNS_16SparseMatrixBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0.0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $6 = sp;
 $7 = sp + 112|0;
 $10 = sp + 92|0;
 $11 = sp + 160|0;
 $13 = sp + 68|0;
 $15 = sp + 56|0;
 $16 = sp + 52|0;
 $20 = sp + 20|0;
 $2 = $0;
 $3 = $1;
 $22 = $2;
 $4 = 1;
 $23 = $3;
 $24 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE7derivedEv($23)|0);
 $5 = $24;
 $25 = $5;
 __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi1EiEEEC2ERKS3_($6,$25);
 $26 = $3;
 __THREW__ = 0;
 $27 = (invoke_ii(457,($26|0))|0);
 $28 = __THREW__; __THREW__ = 0;
 $29 = $28&1;
 L1: do {
  if ($29) {
   label = 17;
  } else {
   $30 = $3;
   __THREW__ = 0;
   $31 = (invoke_ii(458,($30|0))|0);
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   if ($33) {
    label = 17;
   } else {
    __THREW__ = 0;
    invoke_viii(61,($7|0),($27|0),($31|0));
    $34 = __THREW__; __THREW__ = 0;
    $35 = $34&1;
    if ($35) {
     label = 17;
    } else {
     $36 = ((($7)) + 12|0);
     $37 = HEAP32[$36>>2]|0;
     __THREW__ = 0;
     $38 = (invoke_ii(459,($7|0))|0);
     $39 = __THREW__; __THREW__ = 0;
     $40 = $39&1;
     L5: do {
      if ($40) {
       label = 18;
      } else {
       __THREW__ = 0;
       invoke_vi(460,($11|0));
       $41 = __THREW__; __THREW__ = 0;
       $42 = $41&1;
       if ($42) {
        label = 18;
       } else {
        __THREW__ = 0;
        invoke_viiii(461,($10|0),($37|0),($38|0),($11|0));
        $43 = __THREW__; __THREW__ = 0;
        $44 = $43&1;
        if ($44) {
         label = 18;
        } else {
         __THREW__ = 0;
         (invoke_ii(462,($10|0))|0);
         $45 = __THREW__; __THREW__ = 0;
         $46 = $45&1;
         if ($46) {
          label = 18;
         } else {
          $12 = 0;
          while(1) {
           $47 = $12;
           $48 = $5;
           __THREW__ = 0;
           $49 = (invoke_ii(437,($48|0))|0);
           $50 = __THREW__; __THREW__ = 0;
           $51 = $50&1;
           if ($51) {
            label = 18;
            break L5;
           }
           $52 = ($47|0)<($49|0);
           if (!($52)) {
            break;
           }
           __THREW__ = 0;
           $53 = (invoke_ii(463,($6|0))|0);
           $54 = __THREW__; __THREW__ = 0;
           $55 = $54&1;
           if ($55) {
            label = 18;
            break L5;
           }
           $56 = $12;
           __THREW__ = 0;
           invoke_viii(464,($13|0),($53|0),($56|0));
           $57 = __THREW__; __THREW__ = 0;
           $58 = $57&1;
           if ($58) {
            label = 18;
            break L5;
           }
           while(1) {
            __THREW__ = 0;
            $59 = (invoke_ii(465,($13|0))|0);
            $60 = __THREW__; __THREW__ = 0;
            $61 = $60&1;
            if ($61) {
             label = 18;
             break L5;
            }
            if (!($59)) {
             break;
            }
            $62 = ((($7)) + 12|0);
            $63 = HEAP32[$62>>2]|0;
            __THREW__ = 0;
            $64 = (invoke_ii(466,($13|0))|0);
            $65 = __THREW__; __THREW__ = 0;
            $66 = $65&1;
            if ($66) {
             label = 18;
             break L5;
            }
            $67 = (($63) + ($64<<2)|0);
            $68 = HEAP32[$67>>2]|0;
            $69 = (($68) + 1)|0;
            HEAP32[$67>>2] = $69;
            __THREW__ = 0;
            (invoke_ii(467,($13|0))|0);
            $70 = __THREW__; __THREW__ = 0;
            $71 = $70&1;
            if ($71) {
             label = 18;
             break L5;
            }
           }
           $76 = $12;
           $77 = (($76) + 1)|0;
           $12 = $77;
          }
          $14 = 0;
          __THREW__ = 0;
          $78 = (invoke_ii(459,($7|0))|0);
          $79 = __THREW__; __THREW__ = 0;
          $80 = $79&1;
          if ($80) {
           label = 18;
          } else {
           HEAP32[$16>>2] = $78;
           __THREW__ = 0;
           invoke_vii(438,($15|0),($16|0));
           $81 = __THREW__; __THREW__ = 0;
           $82 = $81&1;
           if ($82) {
            label = 18;
           } else {
            $17 = 0;
            while(1) {
             $83 = $17;
             __THREW__ = 0;
             $84 = (invoke_ii(459,($7|0))|0);
             $85 = __THREW__; __THREW__ = 0;
             $86 = $85&1;
             if ($86) {
              break;
             }
             $87 = ($83|0)<($84|0);
             if (!($87)) {
              label = 28;
              break;
             }
             $88 = ((($7)) + 12|0);
             $89 = HEAP32[$88>>2]|0;
             $90 = $17;
             $91 = (($89) + ($90<<2)|0);
             $92 = HEAP32[$91>>2]|0;
             $18 = $92;
             $93 = $14;
             $94 = ((($7)) + 12|0);
             $95 = HEAP32[$94>>2]|0;
             $96 = $17;
             $97 = (($95) + ($96<<2)|0);
             HEAP32[$97>>2] = $93;
             $98 = $14;
             $99 = $17;
             __THREW__ = 0;
             $100 = (invoke_iii(468,($15|0),($99|0))|0);
             $101 = __THREW__; __THREW__ = 0;
             $102 = $101&1;
             if ($102) {
              break;
             }
             HEAP32[$100>>2] = $98;
             $103 = $18;
             $104 = $14;
             $105 = (($104) + ($103))|0;
             $14 = $105;
             $106 = $17;
             $107 = (($106) + 1)|0;
             $17 = $107;
            }
            L29: do {
             if ((label|0) == 28) {
              $112 = $14;
              $113 = ((($7)) + 12|0);
              $114 = HEAP32[$113>>2]|0;
              __THREW__ = 0;
              $115 = (invoke_ii(459,($7|0))|0);
              $116 = __THREW__; __THREW__ = 0;
              $117 = $116&1;
              if (!($117)) {
               $118 = (($114) + ($115<<2)|0);
               HEAP32[$118>>2] = $112;
               $119 = ((($7)) + 20|0);
               $120 = $14;
               __THREW__ = 0;
               invoke_viid(456,($119|0),($120|0),0.0);
               $121 = __THREW__; __THREW__ = 0;
               $122 = $121&1;
               if (!($122)) {
                $19 = 0;
                while(1) {
                 $123 = $19;
                 $124 = $5;
                 __THREW__ = 0;
                 $125 = (invoke_ii(437,($124|0))|0);
                 $126 = __THREW__; __THREW__ = 0;
                 $127 = $126&1;
                 if ($127) {
                  break L29;
                 }
                 $128 = ($123|0)<($125|0);
                 if (!($128)) {
                  break;
                 }
                 __THREW__ = 0;
                 $129 = (invoke_ii(463,($6|0))|0);
                 $130 = __THREW__; __THREW__ = 0;
                 $131 = $130&1;
                 if ($131) {
                  break L29;
                 }
                 $132 = $19;
                 __THREW__ = 0;
                 invoke_viii(464,($20|0),($129|0),($132|0));
                 $133 = __THREW__; __THREW__ = 0;
                 $134 = $133&1;
                 if ($134) {
                  break L29;
                 }
                 while(1) {
                  __THREW__ = 0;
                  $135 = (invoke_ii(465,($20|0))|0);
                  $136 = __THREW__; __THREW__ = 0;
                  $137 = $136&1;
                  if ($137) {
                   break L29;
                  }
                  if (!($135)) {
                   break;
                  }
                  __THREW__ = 0;
                  $138 = (invoke_ii(466,($20|0))|0);
                  $139 = __THREW__; __THREW__ = 0;
                  $140 = $139&1;
                  if ($140) {
                   break L29;
                  }
                  __THREW__ = 0;
                  $141 = (invoke_iii(468,($15|0),($138|0))|0);
                  $142 = __THREW__; __THREW__ = 0;
                  $143 = $142&1;
                  if ($143) {
                   break L29;
                  }
                  $144 = HEAP32[$141>>2]|0;
                  $145 = (($144) + 1)|0;
                  HEAP32[$141>>2] = $145;
                  $21 = $144;
                  $146 = $19;
                  $147 = ((($7)) + 20|0);
                  $148 = $21;
                  __THREW__ = 0;
                  $149 = (invoke_iii(453,($147|0),($148|0))|0);
                  $150 = __THREW__; __THREW__ = 0;
                  $151 = $150&1;
                  if ($151) {
                   break L29;
                  }
                  HEAP32[$149>>2] = $146;
                  __THREW__ = 0;
                  $152 = (invoke_ii(469,($20|0))|0);
                  $153 = __THREW__; __THREW__ = 0;
                  $154 = $153&1;
                  if ($154) {
                   break L29;
                  }
                  $155 = +HEAPF64[$152>>3];
                  $156 = ((($7)) + 20|0);
                  $157 = $21;
                  __THREW__ = 0;
                  $158 = (invoke_iii(454,($156|0),($157|0))|0);
                  $159 = __THREW__; __THREW__ = 0;
                  $160 = $159&1;
                  if ($160) {
                   break L29;
                  }
                  HEAPF64[$158>>3] = $155;
                  __THREW__ = 0;
                  (invoke_ii(467,($20|0))|0);
                  $161 = __THREW__; __THREW__ = 0;
                  $162 = $161&1;
                  if ($162) {
                   break L29;
                  }
                 }
                 $163 = $19;
                 $164 = (($163) + 1)|0;
                 $19 = $164;
                }
                __THREW__ = 0;
                invoke_vii(470,($22|0),($7|0));
                $165 = __THREW__; __THREW__ = 0;
                $166 = $165&1;
                if (!($166)) {
                 __THREW__ = 0;
                 invoke_vi(442,($15|0));
                 $167 = __THREW__; __THREW__ = 0;
                 $168 = $167&1;
                 if ($168) {
                  label = 18;
                  break L5;
                 }
                 __THREW__ = 0;
                 invoke_vi(63,($7|0));
                 $169 = __THREW__; __THREW__ = 0;
                 $170 = $169&1;
                 if ($170) {
                  label = 17;
                  break L1;
                 }
                 __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi1EiEEED2Ev($6);
                 STACKTOP = sp;return ($22|0);
                }
               }
              }
             }
            } while(0);
            $108 = ___cxa_find_matching_catch_2()|0;
            $109 = tempRet0;
            $8 = $108;
            $9 = $109;
            __THREW__ = 0;
            invoke_vi(442,($15|0));
            $110 = __THREW__; __THREW__ = 0;
            $111 = $110&1;
            if ($111) {
             $177 = ___cxa_find_matching_catch_3(0|0)|0;
             $178 = tempRet0;
             ___clang_call_terminate($177);
             // unreachable;
            }
           }
          }
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 18) {
      $74 = ___cxa_find_matching_catch_2()|0;
      $75 = tempRet0;
      $8 = $74;
      $9 = $75;
     }
     __THREW__ = 0;
     invoke_vi(63,($7|0));
     $171 = __THREW__; __THREW__ = 0;
     $172 = $171&1;
     if ($172) {
      $177 = ___cxa_find_matching_catch_3(0|0)|0;
      $178 = tempRet0;
      ___clang_call_terminate($177);
      // unreachable;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 17) {
  $72 = ___cxa_find_matching_catch_2()|0;
  $73 = tempRet0;
  $8 = $72;
  $9 = $73;
 }
 __THREW__ = 0;
 invoke_vi(471,($6|0));
 $173 = __THREW__; __THREW__ = 0;
 $174 = $173&1;
 if ($174) {
  $177 = ___cxa_find_matching_catch_3(0|0)|0;
  $178 = tempRet0;
  ___clang_call_terminate($177);
  // unreachable;
 } else {
  $175 = $8;
  $176 = $9;
  ___resumeException($175|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen12SparseMatrixIdLi1EiED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 __THREW__ = 0;
 invoke_vi(72,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  $9 = ((($4)) + 16|0);
  $10 = HEAP32[$9>>2]|0;
  __THREW__ = 0;
  invoke_vi(72,($10|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   $13 = ((($4)) + 20|0);
   __ZN5Eigen8internal17CompressedStorageIdiED2Ev($13);
   STACKTOP = sp;return;
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $2 = $14;
 $3 = $15;
 $16 = ((($4)) + 20|0);
 __THREW__ = 0;
 invoke_vi(71,($16|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $21 = ___cxa_find_matching_catch_3(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 } else {
  $19 = $2;
  $20 = $3;
  ___resumeException($19|0);
  // unreachable;
 }
}
function __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen12SparseMatrixIdLi1EiE25check_template_parametersEv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN5Eigen12SparseMatrixIdLi1EiE6resizeEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $8 = $4;
 $6 = $8;
 $9 = $5;
 $10 = ((($7)) + 8|0);
 HEAP32[$10>>2] = $9;
 $11 = ((($7)) + 20|0);
 __ZN5Eigen8internal17CompressedStorageIdiE5clearEv($11);
 $12 = ((($7)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = ((($7)) + 4|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ($17|0)==(0);
  if ($18) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $19 = ((($7)) + 12|0);
  $20 = HEAP32[$19>>2]|0;
  _free($20);
  $21 = $6;
  $22 = (($21) + 1)|0;
  $23 = $22<<2;
  $24 = (_malloc($23)|0);
  $25 = ((($7)) + 12|0);
  HEAP32[$25>>2] = $24;
  $26 = ((($7)) + 12|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ($27|0)!=(0|0);
  if (!($28)) {
   __ZN5Eigen8internal19throw_std_bad_allocEv();
  }
  $29 = $6;
  $30 = ((($7)) + 4|0);
  HEAP32[$30>>2] = $29;
 }
 $31 = ((($7)) + 16|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ($32|0)!=(0|0);
 if (!($33)) {
  $37 = ((($7)) + 12|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ((($7)) + 4|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = (($40) + 1)|0;
  $42 = $41<<2;
  _memset(($38|0),0,($42|0))|0;
  STACKTOP = sp;return;
 }
 $34 = ((($7)) + 16|0);
 $35 = HEAP32[$34>>2]|0;
 _free($35);
 $36 = ((($7)) + 16|0);
 HEAP32[$36>>2] = 0;
 $37 = ((($7)) + 12|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = ((($7)) + 4|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = (($40) + 1)|0;
 $42 = $41<<2;
 _memset(($38|0),0,($42|0))|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE11setConstantERKi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($5)|0);
 $7 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($5)|0);
 $8 = $3;
 __ZN5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE8ConstantEiiRKi($4,$6,$7,$8);
 $9 = (__ZN5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($5)|0);
 $10 = (__ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEaSINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEES1_EEEERS1_RKNS_9DenseBaseIT_EE($9,$4)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZN5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE8ConstantEiiRKi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $7 = sp;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal18scalar_constant_opIiEC2ERKi($7,$10);
 __ZN5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE11NullaryExprINS_8internal18scalar_constant_opIiEEEEKNS_14CwiseNullaryOpIT_S2_EEiiRKS9_($0,$8,$9,$7);
 STACKTOP = sp;return;
}
function __ZN5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEaSINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEES1_EEEERS1_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4_setINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEES2_EEEERS2_RKNS_9DenseBaseIT_EE($4,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZN5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE11NullaryExprINS_8internal18scalar_constant_opIiEEEEKNS_14CwiseNullaryOpIT_S2_EEiiRKS9_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 $9 = $6;
 __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2EiiRKS3_($0,$7,$8,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18scalar_constant_opIiEC2ERKi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$4>>2] = $6;
 STACKTOP = sp;return;
}
function __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2EiiRKS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($8);
 $9 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($8,$9);
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($10,$11);
 $12 = ((($8)) + 8|0);
 $13 = $7;
 __ZN5Eigen8internal18scalar_constant_opIiEC2ERKS2_($12,$13);
 $14 = $5;
 $15 = ($14|0)>=(0);
 $16 = $6;
 $17 = ($16|0)>=(0);
 $or$cond = $15 & $17;
 $18 = $6;
 $19 = (1)==($18|0);
 $or$cond3 = $or$cond & $19;
 if ($or$cond3) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((3318|0),(3467|0),74,(3507|0));
  // unreachable;
 }
}
function __ZN5Eigen10MatrixBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18scalar_constant_opIiEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$4>>2] = $6;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4_setINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEES2_EEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EEEEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIiiEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EENS0_9assign_opIiiEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EENS0_9assign_opIiiEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EENS0_9assign_opIiiEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9assign_opIiiEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EENS0_9assign_opIiiEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EENS0_9assign_opIiiEENS0_11Dense2DenseEvE3runERS3_RKS7_RKS9_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EENS0_9assign_opIiiEENS0_11Dense2DenseEvE3runERS3_RKS7_RKS9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EEEEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EENS0_9assign_opIiiEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EEEEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EELb0EE3runERKS3_RKS7_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EENS0_9assign_opIiiEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 32|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS7_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(472,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(473,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(474,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(475,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(476,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(477,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(477,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(478,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EELb0EE3runERKS3_RKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(479,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  __THREW__ = 0;
  invoke_vii(480,($6|0),($8|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   STACKTOP = sp;return;
  }
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $4 = $13;
 $5 = $14;
 __THREW__ = 0;
 invoke_vi(481,($6|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $4;
  $18 = $5;
  ___resumeException($17|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17resize_if_allowedINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EEiiEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($23)|0);
 $25 = $6;
 $26 = ($24|0)==($25|0);
 if (!($26)) {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
 $27 = $3;
 $28 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($27)|0);
 $29 = $7;
 $30 = ($28|0)==($29|0);
 if ($30) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS5_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EEEENS0_9assign_opIiiEELi0EEC2ERS5_RKSA_RKSC_RS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEENS3_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES5_EEEENS0_9assign_opIiiEELi0EEELi1ELi0EE3runERSE_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EEEENS0_9assign_opIiiEELi0EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EEEENS0_9assign_opIiiEELi0EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7functorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $7;
 $11 = $9;
 $12 = ($11|0)==(1);
 $13 = $8;
 $14 = ($13|0)>=(0);
 $or$cond = $12 & $14;
 $15 = $9;
 $16 = ($15|0)>=(0);
 $or$cond3 = $or$cond & $16;
 if (!($or$cond3)) {
  ___assert_fail((1178|0),(1577|0),285,(1618|0));
  // unreachable;
 }
 $17 = $8;
 $18 = $9;
 $3 = $17;
 $4 = $18;
 $5 = 2147483647;
 $19 = $3;
 $20 = ($19|0)==(0);
 $21 = $4;
 $22 = ($21|0)==(0);
 $or$cond5 = $20 | $22;
 if ($or$cond5) {
  $29 = 0;
 } else {
  $23 = $3;
  $24 = $5;
  $25 = $4;
  $26 = (($24|0) / ($25|0))&-1;
  $27 = ($23|0)>($26|0);
  $29 = $27;
 }
 $28 = $29&1;
 $6 = $28;
 $30 = $6;
 $31 = $30&1;
 if ($31) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $32 = $8;
 $33 = $9;
 $34 = Math_imul($32, $33)|0;
 $35 = $8;
 $36 = $9;
 __ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE6resizeEiii($10,$34,$35,$36);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(482,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  __THREW__ = 0;
  invoke_vii(384,($11|0),0);
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if (!($13)) {
   STACKTOP = sp;return;
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $4 = $14;
 $5 = $15;
 __THREW__ = 0;
 invoke_vi(483,($6|0));
 $16 = __THREW__; __THREW__ = 0;
 $17 = $16&1;
 if ($17) {
  $20 = ___cxa_find_matching_catch_3(0|0)|0;
  $21 = tempRet0;
  ___clang_call_terminate($20);
  // unreachable;
 } else {
  $18 = $4;
  $19 = $5;
  ___resumeException($18|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE4dataEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EEEENS0_9assign_opIiiEELi0EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EEEENS0_9assign_opIiiEELi0EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$5>>2]|0;
 $9 = $3;
 $10 = (__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE8coeffRefEi($8,$9)|0);
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $3;
 $14 = (__ZNK5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE5coeffIiEEiT_($12,$13)|0);
 HEAP32[$4>>2] = $14;
 __ZNK5Eigen8internal9assign_opIiiE11assignCoeffERiRKi($7,$10,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal9assign_opIiiE11assignCoeffERiRKi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5;
 $7 = HEAP32[$6>>2]|0;
 $8 = $4;
 HEAP32[$8>>2] = $7;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (($5) + ($6<<2)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZNK5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE5coeffIiEEiT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 4|0);
 $6 = $3;
 $7 = (__ZNK5Eigen8internal15nullary_wrapperIiNS0_18scalar_constant_opIiEELb1ELb0ELb0EEclIiEEiRKS3_T_S8_($5,$4,$6,0)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZNK5Eigen8internal15nullary_wrapperIiNS0_18scalar_constant_opIiEELb1ELb0ELb0EEclIiEEiRKS3_T_S8_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $5;
 $9 = (__ZNK5Eigen8internal18scalar_constant_opIiEclEv($8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNK5Eigen8internal18scalar_constant_opIiEclEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen15DenseCoeffsBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi1EE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($7)|0);
 __ZN5Eigen8internal9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($4,$8);
 $9 = $3;
 __THREW__ = 0;
 $10 = (invoke_iii(484,($4|0),($9|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  __ZN5Eigen8internal9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev($4);
  STACKTOP = sp;return ($10|0);
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $5 = $13;
 $6 = $14;
 __THREW__ = 0;
 invoke_vi(477,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $5;
  $18 = $6;
  ___resumeException($17|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen12SparseMatrixIdLi1EiE19reserveInnerVectorsINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEvRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0.0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0.0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $7 = sp + 108|0;
 $13 = sp;
 $16 = sp + 132|0;
 $27 = sp + 36|0;
 $30 = sp + 24|0;
 $17 = $0;
 $18 = $1;
 $36 = $17;
 $37 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE12isCompressedEv($36)|0);
 if ($37) {
  $19 = 0;
  $38 = ((($36)) + 4|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = $39<<2;
  $41 = (_malloc($40)|0);
  $42 = ((($36)) + 16|0);
  HEAP32[$42>>2] = $41;
  $43 = ((($36)) + 16|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($44|0)!=(0|0);
  if (!($45)) {
   __ZN5Eigen8internal19throw_std_bad_allocEv();
  }
  $46 = ((($36)) + 16|0);
  $47 = HEAP32[$46>>2]|0;
  $20 = $47;
  $21 = 0;
  $22 = 0;
  while(1) {
   $48 = $22;
   $49 = ((($36)) + 4|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($48|0)<($50|0);
   if (!($51)) {
    break;
   }
   $52 = $21;
   $53 = $20;
   $54 = $22;
   $55 = (($53) + ($54<<2)|0);
   HEAP32[$55>>2] = $52;
   $56 = $18;
   $57 = $22;
   $58 = (__ZNK5Eigen15DenseCoeffsBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0EEixEi($56,$57)|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($36)) + 12|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = $22;
   $63 = (($62) + 1)|0;
   $64 = (($61) + ($63<<2)|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = ((($36)) + 12|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = $22;
   $69 = (($67) + ($68<<2)|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = (($65) - ($70))|0;
   $72 = (($59) + ($71))|0;
   $73 = $21;
   $74 = (($73) + ($72))|0;
   $21 = $74;
   $75 = $18;
   $76 = $22;
   $77 = (__ZNK5Eigen15DenseCoeffsBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0EEixEi($75,$76)|0);
   $78 = HEAP32[$77>>2]|0;
   $79 = $19;
   $80 = (($79) + ($78))|0;
   $19 = $80;
   $81 = $22;
   $82 = (($81) + 1)|0;
   $22 = $82;
  }
  $83 = ((($36)) + 20|0);
  $84 = $19;
  __ZN5Eigen8internal17CompressedStorageIdiE7reserveEi($83,$84);
  $85 = ((($36)) + 12|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = ((($36)) + 4|0);
  $88 = HEAP32[$87>>2]|0;
  $89 = (($86) + ($88<<2)|0);
  $90 = HEAP32[$89>>2]|0;
  $23 = $90;
  $91 = ((($36)) + 4|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = (($92) - 1)|0;
  $24 = $93;
  while(1) {
   $94 = $24;
   $95 = ($94|0)>=(0);
   if (!($95)) {
    break;
   }
   $96 = $23;
   $97 = ((($36)) + 12|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = $24;
   $100 = (($98) + ($99<<2)|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = (($96) - ($101))|0;
   $25 = $102;
   $103 = $25;
   $104 = (($103) - 1)|0;
   $26 = $104;
   while(1) {
    $105 = $26;
    $106 = ($105|0)>=(0);
    if (!($106)) {
     break;
    }
    $107 = ((($36)) + 20|0);
    $108 = ((($36)) + 12|0);
    $109 = HEAP32[$108>>2]|0;
    $110 = $24;
    $111 = (($109) + ($110<<2)|0);
    $112 = HEAP32[$111>>2]|0;
    $113 = $26;
    $114 = (($112) + ($113))|0;
    $115 = (__ZN5Eigen8internal17CompressedStorageIdiE5indexEi($107,$114)|0);
    $116 = HEAP32[$115>>2]|0;
    $117 = ((($36)) + 20|0);
    $118 = $20;
    $119 = $24;
    $120 = (($118) + ($119<<2)|0);
    $121 = HEAP32[$120>>2]|0;
    $122 = $26;
    $123 = (($121) + ($122))|0;
    $124 = (__ZN5Eigen8internal17CompressedStorageIdiE5indexEi($117,$123)|0);
    HEAP32[$124>>2] = $116;
    $125 = ((($36)) + 20|0);
    $126 = ((($36)) + 12|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = $24;
    $129 = (($127) + ($128<<2)|0);
    $130 = HEAP32[$129>>2]|0;
    $131 = $26;
    $132 = (($130) + ($131))|0;
    $133 = (__ZN5Eigen8internal17CompressedStorageIdiE5valueEi($125,$132)|0);
    $134 = +HEAPF64[$133>>3];
    $135 = ((($36)) + 20|0);
    $136 = $20;
    $137 = $24;
    $138 = (($136) + ($137<<2)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $26;
    $141 = (($139) + ($140))|0;
    $142 = (__ZN5Eigen8internal17CompressedStorageIdiE5valueEi($135,$141)|0);
    HEAPF64[$142>>3] = $134;
    $143 = $26;
    $144 = (($143) + -1)|0;
    $26 = $144;
   }
   $145 = ((($36)) + 12|0);
   $146 = HEAP32[$145>>2]|0;
   $147 = $24;
   $148 = (($146) + ($147<<2)|0);
   $149 = HEAP32[$148>>2]|0;
   $23 = $149;
   $150 = $20;
   $151 = $24;
   $152 = (($150) + ($151<<2)|0);
   $153 = HEAP32[$152>>2]|0;
   $154 = ((($36)) + 12|0);
   $155 = HEAP32[$154>>2]|0;
   $156 = $24;
   $157 = (($155) + ($156<<2)|0);
   HEAP32[$157>>2] = $153;
   $158 = $25;
   $159 = ((($36)) + 16|0);
   $160 = HEAP32[$159>>2]|0;
   $161 = $24;
   $162 = (($160) + ($161<<2)|0);
   HEAP32[$162>>2] = $158;
   $163 = $24;
   $164 = (($163) + -1)|0;
   $24 = $164;
  }
  $165 = ((($36)) + 12|0);
  $166 = HEAP32[$165>>2]|0;
  $167 = ((($36)) + 4|0);
  $168 = HEAP32[$167>>2]|0;
  $169 = (($168) - 1)|0;
  $170 = (($166) + ($169<<2)|0);
  $171 = HEAP32[$170>>2]|0;
  $172 = ((($36)) + 16|0);
  $173 = HEAP32[$172>>2]|0;
  $174 = ((($36)) + 4|0);
  $175 = HEAP32[$174>>2]|0;
  $176 = (($175) - 1)|0;
  $177 = (($173) + ($176<<2)|0);
  $178 = HEAP32[$177>>2]|0;
  $179 = (($171) + ($178))|0;
  $180 = $18;
  $181 = ((($36)) + 4|0);
  $182 = HEAP32[$181>>2]|0;
  $183 = (($182) - 1)|0;
  $184 = (__ZNK5Eigen15DenseCoeffsBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0EEixEi($180,$183)|0);
  $185 = HEAP32[$184>>2]|0;
  $186 = (($179) + ($185))|0;
  $187 = ((($36)) + 12|0);
  $188 = HEAP32[$187>>2]|0;
  $189 = ((($36)) + 4|0);
  $190 = HEAP32[$189>>2]|0;
  $191 = (($188) + ($190<<2)|0);
  HEAP32[$191>>2] = $186;
  $192 = ((($36)) + 20|0);
  $193 = ((($36)) + 12|0);
  $194 = HEAP32[$193>>2]|0;
  $195 = ((($36)) + 4|0);
  $196 = HEAP32[$195>>2]|0;
  $197 = (($194) + ($196<<2)|0);
  $198 = HEAP32[$197>>2]|0;
  __ZN5Eigen8internal17CompressedStorageIdiE6resizeEid($192,$198,0.0);
  STACKTOP = sp;return;
 }
 $199 = ((($36)) + 4|0);
 $200 = HEAP32[$199>>2]|0;
 $201 = (($200) + 1)|0;
 $202 = $201<<2;
 $203 = (_malloc($202)|0);
 HEAP32[$27>>2] = $203;
 $204 = HEAP32[$27>>2]|0;
 $205 = ($204|0)!=(0|0);
 if (!($205)) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $28 = 0;
 $29 = 0;
 while(1) {
  $206 = $29;
  $207 = ((($36)) + 4|0);
  $208 = HEAP32[$207>>2]|0;
  $209 = ($206|0)<($208|0);
  $210 = $28;
  $211 = HEAP32[$27>>2]|0;
  if (!($209)) {
   break;
  }
  $212 = $29;
  $213 = (($211) + ($212<<2)|0);
  HEAP32[$213>>2] = $210;
  $214 = ((($36)) + 12|0);
  $215 = HEAP32[$214>>2]|0;
  $216 = $29;
  $217 = (($216) + 1)|0;
  $218 = (($215) + ($217<<2)|0);
  $219 = HEAP32[$218>>2]|0;
  $220 = ((($36)) + 12|0);
  $221 = HEAP32[$220>>2]|0;
  $222 = $29;
  $223 = (($221) + ($222<<2)|0);
  $224 = HEAP32[$223>>2]|0;
  $225 = (($219) - ($224))|0;
  $226 = ((($36)) + 16|0);
  $227 = HEAP32[$226>>2]|0;
  $228 = $29;
  $229 = (($227) + ($228<<2)|0);
  $230 = HEAP32[$229>>2]|0;
  $231 = (($225) - ($230))|0;
  HEAP32[$30>>2] = $231;
  $232 = $18;
  $233 = $29;
  $234 = (__ZNK5Eigen15DenseCoeffsBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0EEixEi($232,$233)|0);
  $14 = $234;
  $15 = $30;
  $235 = $14;
  $236 = $15;
  ;HEAP8[$13>>0]=HEAP8[$16>>0]|0;
  $11 = $235;
  $12 = $236;
  $237 = $11;
  $238 = $12;
  $8 = $13;
  $9 = $237;
  $10 = $238;
  $239 = $9;
  $240 = HEAP32[$239>>2]|0;
  $241 = $10;
  $242 = HEAP32[$241>>2]|0;
  $243 = ($240|0)<($242|0);
  $244 = $12;
  $245 = $11;
  $246 = $243 ? $244 : $245;
  $247 = HEAP32[$246>>2]|0;
  $31 = $247;
  $248 = $31;
  $249 = ((($36)) + 16|0);
  $250 = HEAP32[$249>>2]|0;
  $251 = $29;
  $252 = (($250) + ($251<<2)|0);
  $253 = HEAP32[$252>>2]|0;
  $254 = (($248) + ($253))|0;
  $255 = $28;
  $256 = (($255) + ($254))|0;
  $28 = $256;
  $257 = $29;
  $258 = (($257) + 1)|0;
  $29 = $258;
 }
 $259 = ((($36)) + 4|0);
 $260 = HEAP32[$259>>2]|0;
 $261 = (($211) + ($260<<2)|0);
 HEAP32[$261>>2] = $210;
 $262 = ((($36)) + 20|0);
 $263 = $28;
 __ZN5Eigen8internal17CompressedStorageIdiE6resizeEid($262,$263,0.0);
 $264 = ((($36)) + 4|0);
 $265 = HEAP32[$264>>2]|0;
 $266 = (($265) - 1)|0;
 $32 = $266;
 while(1) {
  $267 = $32;
  $268 = ($267|0)>=(0);
  if (!($268)) {
   break;
  }
  $269 = HEAP32[$27>>2]|0;
  $270 = $32;
  $271 = (($269) + ($270<<2)|0);
  $272 = HEAP32[$271>>2]|0;
  $273 = ((($36)) + 12|0);
  $274 = HEAP32[$273>>2]|0;
  $275 = $32;
  $276 = (($274) + ($275<<2)|0);
  $277 = HEAP32[$276>>2]|0;
  $278 = (($272) - ($277))|0;
  $33 = $278;
  $279 = $33;
  $280 = ($279|0)>(0);
  L30: do {
   if ($280) {
    $281 = ((($36)) + 16|0);
    $282 = HEAP32[$281>>2]|0;
    $283 = $32;
    $284 = (($282) + ($283<<2)|0);
    $285 = HEAP32[$284>>2]|0;
    $34 = $285;
    $286 = $34;
    $287 = (($286) - 1)|0;
    $35 = $287;
    while(1) {
     $288 = $35;
     $289 = ($288|0)>=(0);
     if (!($289)) {
      break L30;
     }
     $290 = ((($36)) + 20|0);
     $291 = ((($36)) + 12|0);
     $292 = HEAP32[$291>>2]|0;
     $293 = $32;
     $294 = (($292) + ($293<<2)|0);
     $295 = HEAP32[$294>>2]|0;
     $296 = $35;
     $297 = (($295) + ($296))|0;
     $298 = (__ZN5Eigen8internal17CompressedStorageIdiE5indexEi($290,$297)|0);
     $299 = HEAP32[$298>>2]|0;
     $300 = ((($36)) + 20|0);
     $301 = HEAP32[$27>>2]|0;
     $302 = $32;
     $303 = (($301) + ($302<<2)|0);
     $304 = HEAP32[$303>>2]|0;
     $305 = $35;
     $306 = (($304) + ($305))|0;
     $307 = (__ZN5Eigen8internal17CompressedStorageIdiE5indexEi($300,$306)|0);
     HEAP32[$307>>2] = $299;
     $308 = ((($36)) + 20|0);
     $309 = ((($36)) + 12|0);
     $310 = HEAP32[$309>>2]|0;
     $311 = $32;
     $312 = (($310) + ($311<<2)|0);
     $313 = HEAP32[$312>>2]|0;
     $314 = $35;
     $315 = (($313) + ($314))|0;
     $316 = (__ZN5Eigen8internal17CompressedStorageIdiE5valueEi($308,$315)|0);
     $317 = +HEAPF64[$316>>3];
     $318 = ((($36)) + 20|0);
     $319 = HEAP32[$27>>2]|0;
     $320 = $32;
     $321 = (($319) + ($320<<2)|0);
     $322 = HEAP32[$321>>2]|0;
     $323 = $35;
     $324 = (($322) + ($323))|0;
     $325 = (__ZN5Eigen8internal17CompressedStorageIdiE5valueEi($318,$324)|0);
     HEAPF64[$325>>3] = $317;
     $326 = $35;
     $327 = (($326) + -1)|0;
     $35 = $327;
    }
   }
  } while(0);
  $328 = $32;
  $329 = (($328) + -1)|0;
  $32 = $329;
 }
 $330 = ((($36)) + 12|0);
 $5 = $330;
 $6 = $27;
 $331 = $5;
 $4 = $331;
 $332 = $4;
 $333 = HEAP32[$332>>2]|0;
 HEAP32[$7>>2] = $333;
 $334 = $6;
 $2 = $334;
 $335 = $2;
 $336 = HEAP32[$335>>2]|0;
 $337 = $5;
 HEAP32[$337>>2] = $336;
 $3 = $7;
 $338 = $3;
 $339 = HEAP32[$338>>2]|0;
 $340 = $6;
 HEAP32[$340>>2] = $339;
 $341 = HEAP32[$27>>2]|0;
 _free($341);
 STACKTOP = sp;return;
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE12isCompressedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE15innerNonZeroPtrEv($2)|0);
 $4 = ($3|0)==(0|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen15DenseCoeffsBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0EEixEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ($5|0)>=(0);
 if (!($6)) {
  ___assert_fail((5177|0),(1678|0),162,(1099|0));
  // unreachable;
 }
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($4)|0);
 $9 = ($7|0)<($8|0);
 if ($9) {
  $10 = $3;
  $11 = (__ZNK5Eigen15DenseCoeffsBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0EE5coeffEi($4,$10)|0);
  STACKTOP = sp;return ($11|0);
 } else {
  ___assert_fail((5177|0),(1678|0),162,(1099|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen8internal17CompressedStorageIdiE7reserveEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $3;
 $9 = (($7) + ($8))|0;
 $4 = $9;
 $10 = $4;
 $11 = ((($5)) + 12|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($10|0)>($12|0);
 if (!($13)) {
  STACKTOP = sp;return;
 }
 $14 = $4;
 __ZN5Eigen8internal17CompressedStorageIdiE10reallocateEi($5,$14);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17CompressedStorageIdiE5indexEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $3;
 $8 = (($6) + ($7<<2)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal17CompressedStorageIdiE5valueEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (($5) + ($6<<3)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZN5Eigen8internal17CompressedStorageIdiE6resizeEid($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = +$2;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $8 = sp + 8|0;
 $11 = sp + 60|0;
 $16 = sp + 16|0;
 $17 = sp + 12|0;
 $12 = $0;
 $13 = $1;
 $14 = $2;
 $18 = $12;
 $19 = ((($18)) + 12|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = $13;
 $22 = ($20|0)<($21|0);
 if (!($22)) {
  $48 = $13;
  $49 = ((($18)) + 8|0);
  HEAP32[$49>>2] = $48;
  STACKTOP = sp;return;
 }
 $23 = (__ZN5Eigen16GenericNumTraitsIiE7highestEv()|0);
 HEAP32[$16>>2] = $23;
 $24 = $13;
 $25 = $14;
 $26 = $13;
 $27 = (+($26|0));
 $28 = $25 * $27;
 $29 = (~~(($28)));
 $30 = (($24) + ($29))|0;
 HEAP32[$17>>2] = $30;
 $9 = $16;
 $10 = $17;
 $31 = $9;
 $32 = $10;
 ;HEAP8[$8>>0]=HEAP8[$11>>0]|0;
 $6 = $31;
 $7 = $32;
 $33 = $7;
 $34 = $6;
 $3 = $8;
 $4 = $33;
 $5 = $34;
 $35 = $4;
 $36 = HEAP32[$35>>2]|0;
 $37 = $5;
 $38 = HEAP32[$37>>2]|0;
 $39 = ($36|0)<($38|0);
 $40 = $7;
 $41 = $6;
 $42 = $39 ? $40 : $41;
 $43 = HEAP32[$42>>2]|0;
 $15 = $43;
 $44 = $15;
 $45 = $13;
 $46 = ($44|0)<($45|0);
 if ($46) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $47 = $15;
 __ZN5Eigen8internal17CompressedStorageIdiE10reallocateEi($18,$47);
 $48 = $13;
 $49 = ((($18)) + 8|0);
 HEAP32[$49>>2] = $48;
 STACKTOP = sp;return;
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE15innerNonZeroPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen12SparseMatrixIdLi1EiE15innerNonZeroPtrEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen12SparseMatrixIdLi1EiE15innerNonZeroPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen15DenseCoeffsBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0EE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($7)|0);
 __ZN5Eigen8internal9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($4,$8);
 $9 = $3;
 __THREW__ = 0;
 $10 = (invoke_iii(485,($4|0),($9|0))|0);
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if (!($12)) {
  __ZN5Eigen8internal9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev($4);
  STACKTOP = sp;return ($10|0);
 }
 $13 = ___cxa_find_matching_catch_2()|0;
 $14 = tempRet0;
 $5 = $13;
 $6 = $14;
 __THREW__ = 0;
 invoke_vi(477,($4|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if ($16) {
  $19 = ___cxa_find_matching_catch_3(0|0)|0;
  $20 = tempRet0;
  ___clang_call_terminate($19);
  // unreachable;
 } else {
  $17 = $5;
  $18 = $6;
  ___resumeException($17|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (($5) + ($6<<2)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZN5Eigen8internal17CompressedStorageIdiE10reallocateEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $7 = sp + 84|0;
 $13 = sp + 60|0;
 $19 = sp;
 $22 = sp + 108|0;
 $24 = sp + 24|0;
 $25 = sp + 20|0;
 $26 = sp + 16|0;
 $23 = $0;
 HEAP32[$24>>2] = $1;
 $30 = $23;
 $31 = HEAP32[$24>>2]|0;
 __ZN5Eigen8internal12scoped_arrayIdEC2Ei($25,$31);
 $32 = HEAP32[$24>>2]|0;
 __THREW__ = 0;
 invoke_vii(486,($26|0),($32|0));
 $33 = __THREW__; __THREW__ = 0;
 $34 = $33&1;
 do {
  if ($34) {
   label = 7;
  } else {
   $35 = ((($30)) + 8|0);
   $20 = $24;
   $21 = $35;
   $36 = $20;
   $37 = $21;
   ;HEAP8[$19>>0]=HEAP8[$22>>0]|0;
   $17 = $36;
   $18 = $37;
   $38 = $18;
   $39 = $17;
   $14 = $19;
   $15 = $38;
   $16 = $39;
   $40 = $15;
   $41 = HEAP32[$40>>2]|0;
   $42 = $16;
   $43 = HEAP32[$42>>2]|0;
   $44 = ($41|0)<($43|0);
   $45 = $18;
   $46 = $17;
   $47 = $44 ? $45 : $46;
   $48 = HEAP32[$47>>2]|0;
   $29 = $48;
   $49 = $29;
   $50 = ($49|0)>(0);
   if ($50) {
    $51 = HEAP32[$30>>2]|0;
    $52 = HEAP32[$30>>2]|0;
    $53 = $29;
    $54 = (($52) + ($53<<3)|0);
    __THREW__ = 0;
    $55 = (invoke_ii(487,($25|0))|0);
    $56 = __THREW__; __THREW__ = 0;
    $57 = $56&1;
    if (!($57)) {
     $58 = HEAP32[$55>>2]|0;
     __THREW__ = 0;
     invoke_viii(488,($51|0),($54|0),($58|0));
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if (!($60)) {
      $61 = ((($30)) + 4|0);
      $62 = HEAP32[$61>>2]|0;
      $63 = ((($30)) + 4|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = $29;
      $66 = (($64) + ($65<<2)|0);
      __THREW__ = 0;
      $67 = (invoke_ii(489,($26|0))|0);
      $68 = __THREW__; __THREW__ = 0;
      $69 = $68&1;
      if (!($69)) {
       $70 = HEAP32[$67>>2]|0;
       __THREW__ = 0;
       invoke_viii(490,($62|0),($66|0),($70|0));
       $71 = __THREW__; __THREW__ = 0;
       $72 = $71&1;
       if (!($72)) {
        label = 9;
       }
      }
     }
    }
   } else {
    label = 9;
   }
   if ((label|0) == 9) {
    __THREW__ = 0;
    $79 = (invoke_ii(487,($25|0))|0);
    $80 = __THREW__; __THREW__ = 0;
    $81 = $80&1;
    if (!($81)) {
     $11 = $30;
     $12 = $79;
     $82 = $11;
     $10 = $82;
     $83 = $10;
     $84 = HEAP32[$83>>2]|0;
     HEAP32[$13>>2] = $84;
     $85 = $12;
     $8 = $85;
     $86 = $8;
     $87 = HEAP32[$86>>2]|0;
     $88 = $11;
     HEAP32[$88>>2] = $87;
     $9 = $13;
     $89 = $9;
     $90 = HEAP32[$89>>2]|0;
     $91 = $12;
     HEAP32[$91>>2] = $90;
     $92 = ((($30)) + 4|0);
     __THREW__ = 0;
     $93 = (invoke_ii(489,($26|0))|0);
     $94 = __THREW__; __THREW__ = 0;
     $95 = $94&1;
     if (!($95)) {
      $5 = $92;
      $6 = $93;
      $96 = $5;
      $4 = $96;
      $97 = $4;
      $98 = HEAP32[$97>>2]|0;
      HEAP32[$7>>2] = $98;
      $99 = $6;
      $2 = $99;
      $100 = $2;
      $101 = HEAP32[$100>>2]|0;
      $102 = $5;
      HEAP32[$102>>2] = $101;
      $3 = $7;
      $103 = $3;
      $104 = HEAP32[$103>>2]|0;
      $105 = $6;
      HEAP32[$105>>2] = $104;
      $106 = HEAP32[$24>>2]|0;
      $107 = ((($30)) + 12|0);
      HEAP32[$107>>2] = $106;
      __THREW__ = 0;
      invoke_vi(491,($26|0));
      $108 = __THREW__; __THREW__ = 0;
      $109 = $108&1;
      if ($109) {
       label = 7;
       break;
      }
      __ZN5Eigen8internal12scoped_arrayIdED2Ev($25);
      STACKTOP = sp;return;
     }
    }
   }
   $75 = ___cxa_find_matching_catch_2()|0;
   $76 = tempRet0;
   $27 = $75;
   $28 = $76;
   __THREW__ = 0;
   invoke_vi(491,($26|0));
   $77 = __THREW__; __THREW__ = 0;
   $78 = $77&1;
   if ($78) {
    $114 = ___cxa_find_matching_catch_3(0|0)|0;
    $115 = tempRet0;
    ___clang_call_terminate($114);
    // unreachable;
   }
  }
 } while(0);
 if ((label|0) == 7) {
  $73 = ___cxa_find_matching_catch_2()|0;
  $74 = tempRet0;
  $27 = $73;
  $28 = $74;
 }
 __THREW__ = 0;
 invoke_vi(492,($25|0));
 $110 = __THREW__; __THREW__ = 0;
 $111 = $110&1;
 if ($111) {
  $114 = ___cxa_find_matching_catch_3(0|0)|0;
  $115 = tempRet0;
  ___clang_call_terminate($114);
  // unreachable;
 } else {
  $112 = $27;
  $113 = $28;
  ___resumeException($112|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal12scoped_arrayIdEC2Ei($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$arith = 0, $$overflow = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal11noncopyableC2Ev($6);
 $7 = $3;
 $$arith = $7<<3;
 $$overflow = ($7>>>0)>(536870911);
 $8 = $$overflow ? -1 : $$arith;
 __THREW__ = 0;
 $9 = (invoke_ii(493,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  HEAP32[$6>>2] = $9;
  STACKTOP = sp;return;
 }
 $12 = ___cxa_find_matching_catch_2()|0;
 $13 = tempRet0;
 $4 = $12;
 $5 = $13;
 __THREW__ = 0;
 invoke_vi(192,($6|0));
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 if ($15) {
  $18 = ___cxa_find_matching_catch_3(0|0)|0;
  $19 = tempRet0;
  ___clang_call_terminate($18);
  // unreachable;
 } else {
  $16 = $4;
  $17 = $5;
  ___resumeException($16|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal12scoped_arrayIiEC2Ei($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$arith = 0, $$overflow = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal11noncopyableC2Ev($6);
 $7 = $3;
 $$arith = $7<<2;
 $$overflow = ($7>>>0)>(1073741823);
 $8 = $$overflow ? -1 : $$arith;
 __THREW__ = 0;
 $9 = (invoke_ii(493,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  HEAP32[$6>>2] = $9;
  STACKTOP = sp;return;
 }
 $12 = ___cxa_find_matching_catch_2()|0;
 $13 = tempRet0;
 $4 = $12;
 $5 = $13;
 __THREW__ = 0;
 invoke_vi(192,($6|0));
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 if ($15) {
  $18 = ___cxa_find_matching_catch_3(0|0)|0;
  $19 = tempRet0;
  ___clang_call_terminate($18);
  // unreachable;
 } else {
  $16 = $4;
  $17 = $5;
  ___resumeException($16|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal12scoped_arrayIdE3ptrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal12scoped_arrayIiE3ptrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal12scoped_arrayIiED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  __ZdaPv($3);
 }
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal12scoped_arrayIdED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  __ZdaPv($3);
 }
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE13convert_indexEi($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 HEAP32[$1>>2] = $0;
 $2 = (__ZN5Eigen8internal13convert_indexIiiEET_RKT0_($1)|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen12SparseMatrixIdLi1EiE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4fillERKi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 (__ZN5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE11setConstantERKi($4,$5)|0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi1EiEEEC2ERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEEEEC2ERKS4_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen12SparseMatrixIdLi1EiE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen12SparseMatrixIdLi1EiE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen12SparseMatrixIdLi0EiE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEC2EPiiRKS4_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = (__ZN5Eigen3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEE20cast_to_pointer_typeEPi($8,$9)|0);
 $11 = $6;
 __ZN5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi1EEC2EPii($8,$10,$11);
 $12 = ((($8)) + 9|0);
 $13 = $7;
 __ZN5Eigen6StrideILi0ELi0EEC2ERKS1_($12,$13);
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE22_check_template_paramsEv();
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE7setZeroEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1;
 HEAP32[$2>>2] = 0;
 $4 = (__ZN5Eigen9DenseBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE11setConstantERKi($3,$2)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEEEEcvRS4_Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE18const_cast_derivedEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13InnerIteratorC2ERKS3_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE8valuePtrEv($7)|0);
 HEAP32[$6>>2] = $8;
 $9 = ((($6)) + 4|0);
 $10 = $4;
 $11 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13innerIndexPtrEv($10)|0);
 HEAP32[$9>>2] = $11;
 $12 = ((($6)) + 8|0);
 $13 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($12,$13);
 $14 = $4;
 $15 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13outerIndexPtrEv($14)|0);
 $16 = $5;
 $17 = (($15) + ($16<<2)|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($6)) + 12|0);
 HEAP32[$19>>2] = $18;
 $20 = $4;
 $21 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE12isCompressedEv($20)|0);
 if ($21) {
  $22 = $4;
  $23 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13outerIndexPtrEv($22)|0);
  $24 = $5;
  $25 = (($24) + 1)|0;
  $26 = (($23) + ($25<<2)|0);
  $27 = HEAP32[$26>>2]|0;
  $$sink = $27;
  $36 = ((($6)) + 16|0);
  HEAP32[$36>>2] = $$sink;
  STACKTOP = sp;return;
 } else {
  $28 = ((($6)) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = $4;
  $31 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE15innerNonZeroPtrEv($30)|0);
  $32 = $5;
  $33 = (($31) + ($32<<2)|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = (($29) + ($34))|0;
  $$sink = $35;
  $36 = ((($6)) + 16|0);
  HEAP32[$36>>2] = $$sink;
  STACKTOP = sp;return;
 }
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13InnerIteratorcvbEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4|0)<($6|0);
 STACKTOP = sp;return ($7|0);
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13InnerIterator5indexEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + ($6<<2)|0);
 $8 = HEAP32[$7>>2]|0;
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13InnerIteratorppEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 1)|0;
 HEAP32[$3>>2] = $5;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen15DenseCoeffsBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi1EEixEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ($5|0)>=(0);
 if (!($6)) {
  ___assert_fail((5177|0),(1678|0),408,(1099|0));
  // unreachable;
 }
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($4)|0);
 $9 = ($7|0)<($8|0);
 if ($9) {
  $10 = $3;
  $11 = (__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi1EE8coeffRefEi($4,$10)|0);
  STACKTOP = sp;return ($11|0);
 } else {
  ___assert_fail((5177|0),(1678|0),408,(1099|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13InnerIterator5valueEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + ($5<<3)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZN5Eigen12SparseMatrixIdLi0EiE4swapERS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $7 = sp + 80|0;
 $13 = sp + 56|0;
 $19 = sp + 32|0;
 $25 = sp + 8|0;
 $26 = $0;
 $27 = $1;
 $28 = $26;
 $29 = ((($28)) + 12|0);
 $30 = $27;
 $31 = ((($30)) + 12|0);
 $23 = $29;
 $24 = $31;
 $32 = $23;
 $22 = $32;
 $33 = $22;
 $34 = HEAP32[$33>>2]|0;
 HEAP32[$25>>2] = $34;
 $35 = $24;
 $20 = $35;
 $36 = $20;
 $37 = HEAP32[$36>>2]|0;
 $38 = $23;
 HEAP32[$38>>2] = $37;
 $21 = $25;
 $39 = $21;
 $40 = HEAP32[$39>>2]|0;
 $41 = $24;
 HEAP32[$41>>2] = $40;
 $42 = ((($28)) + 8|0);
 $43 = $27;
 $44 = ((($43)) + 8|0);
 $17 = $42;
 $18 = $44;
 $45 = $17;
 $16 = $45;
 $46 = $16;
 $47 = HEAP32[$46>>2]|0;
 HEAP32[$19>>2] = $47;
 $48 = $18;
 $14 = $48;
 $49 = $14;
 $50 = HEAP32[$49>>2]|0;
 $51 = $17;
 HEAP32[$51>>2] = $50;
 $15 = $19;
 $52 = $15;
 $53 = HEAP32[$52>>2]|0;
 $54 = $18;
 HEAP32[$54>>2] = $53;
 $55 = ((($28)) + 4|0);
 $56 = $27;
 $57 = ((($56)) + 4|0);
 $5 = $55;
 $6 = $57;
 $58 = $5;
 $4 = $58;
 $59 = $4;
 $60 = HEAP32[$59>>2]|0;
 HEAP32[$7>>2] = $60;
 $61 = $6;
 $2 = $61;
 $62 = $2;
 $63 = HEAP32[$62>>2]|0;
 $64 = $5;
 HEAP32[$64>>2] = $63;
 $3 = $7;
 $65 = $3;
 $66 = HEAP32[$65>>2]|0;
 $67 = $6;
 HEAP32[$67>>2] = $66;
 $68 = ((($28)) + 16|0);
 $69 = $27;
 $70 = ((($69)) + 16|0);
 $11 = $68;
 $12 = $70;
 $71 = $11;
 $10 = $71;
 $72 = $10;
 $73 = HEAP32[$72>>2]|0;
 HEAP32[$13>>2] = $73;
 $74 = $12;
 $8 = $74;
 $75 = $8;
 $76 = HEAP32[$75>>2]|0;
 $77 = $11;
 HEAP32[$77>>2] = $76;
 $9 = $13;
 $78 = $9;
 $79 = HEAP32[$78>>2]|0;
 $80 = $12;
 HEAP32[$80>>2] = $79;
 $81 = ((($28)) + 20|0);
 $82 = $27;
 $83 = ((($82)) + 20|0);
 __ZN5Eigen8internal17CompressedStorageIdiE4swapERS2_($81,$83);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi1EiEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEEEEC2ERKS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_12SparseMatrixIdLi1EiEEEC2Ev($4);
 $5 = $3;
 HEAP32[$4>>2] = $5;
 $6 = ((($4)) + 8|0);
 HEAPF64[$6>>3] = 0.0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_12SparseMatrixIdLi1EiEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12SparseMatrixIdLi1EiE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen12SparseMatrixIdLi1EiE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEE20cast_to_pointer_typeEPi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi1EEC2EPii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EEC2EPii($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EEC2EPii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen10MatrixBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($6);
 $7 = $4;
 HEAP32[$6>>2] = $7;
 $8 = ((($6)) + 4|0);
 $9 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($8,$9);
 $10 = ((($6)) + 8|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($10,1);
 $11 = $5;
 $12 = ($11|0)>=(0);
 if ($12) {
  __ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE11checkSanityIS6_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($6,0);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5628|0),(2705|0),163,(2738|0));
  // unreachable;
 }
}
function __ZN5Eigen10MatrixBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE11checkSanityIS6_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE11setConstantERKi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4rowsEv($5)|0);
 $7 = (__ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4colsEv($5)|0);
 $8 = $3;
 __ZN5Eigen9DenseBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE8ConstantEiiRKi($4,$6,$7,$8);
 $9 = (__ZN5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE7derivedEv($5)|0);
 $10 = (__ZN5Eigen3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEaSINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEES2_EEEERS5_RKNS_9DenseBaseIT_EE($9,$4)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZN5Eigen9DenseBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE8ConstantEiiRKi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $7 = sp;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal18scalar_constant_opIiEC2ERKi($7,$10);
 __ZN5Eigen9DenseBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE11NullaryExprINS_8internal18scalar_constant_opIiEEEEKNS_14CwiseNullaryOpIT_S3_EEiiRKSD_($0,$8,$9,$7);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEaSINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEES2_EEEERS5_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($5)|0);
 (__ZN5Eigen10MatrixBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEaSINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEES3_EEEERS6_RKNS_9DenseBaseIT_EE($4,$6)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen9DenseBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE11NullaryExprINS_8internal18scalar_constant_opIiEEEEKNS_14CwiseNullaryOpIT_S3_EEiiRKSD_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 $9 = $6;
 __ZN5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2EiiRKS3_($0,$7,$8,$9);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen10MatrixBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEaSINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEES3_EEEERS6_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EEEEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal15call_assignmentINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIiiEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EENS0_9assign_opIiiEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISG_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15call_assignmentINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EENS0_9assign_opIiiEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISG_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EENS0_9assign_opIiiEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EENS0_9assign_opIiiEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EENS0_9assign_opIiiEENS0_11Dense2DenseEvE3runERS7_RKSB_RKSD_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EENS0_9assign_opIiiEENS0_11Dense2DenseEvE3runERS7_RKSB_RKSD_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EEEEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EENS0_9assign_opIiiEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EEEEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EELb0EE3runERKS7_RKSB_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EENS0_9assign_opIiiEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 40|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS7_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(494,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(495,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(496,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(497,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(498,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(499,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(499,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(478,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EELb0EE3runERKS7_RKSB_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EEiiEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen9DenseBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = (__ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4rowsEv($23)|0);
 $25 = $6;
 $26 = ($24|0)==($25|0);
 if (!($26)) {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
 $27 = $3;
 $28 = (__ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4colsEv($27)|0);
 $29 = $7;
 $30 = ($28|0)==($29|0);
 if ($30) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2ERKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES4_EC2ERKS7_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES5_EEEENS0_9assign_opIiiEELi0EEC2ERS9_RKSE_RKSG_RS8_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEENS3_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES6_EEEENS0_9assign_opIiiEELi0EEELi1ELi0EE3runERSI_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES5_EEEENS0_9assign_opIiiEELi0EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES5_EEEENS0_9assign_opIiiEELi0EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES4_ED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE6resizeEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4rowsEv($6)|0);
 $9 = ($7|0)==($8|0);
 if (!($9)) {
  ___assert_fail((5206|0),(4613|0),257,(1618|0));
  // unreachable;
 }
 $10 = $5;
 $11 = (__ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4colsEv($6)|0);
 $12 = ($10|0)==($11|0);
 if ($12) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5206|0),(4613|0),257,(1618|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES4_EC2ERKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(500,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(501,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(166,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(502,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(121,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(503,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi1EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1;
}
function __ZNK5Eigen3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES5_EEEENS0_9assign_opIiiEELi0EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES5_EEEENS0_9assign_opIiiEELi0EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$5>>2]|0;
 $9 = $3;
 $10 = (__ZN5Eigen8internal17mapbase_evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES4_E8coeffRefEi($8,$9)|0);
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $3;
 $14 = (__ZNK5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE5coeffIiEEiT_($12,$13)|0);
 HEAP32[$4>>2] = $14;
 __ZNK5Eigen8internal9assign_opIiiE11assignCoeffERiRKi($7,$10,$4);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES4_E8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 $8 = Math_imul($6, $7)|0;
 $9 = (($5) + ($8<<2)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES4_ED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE8valuePtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen12SparseMatrixIdLi1EiE8valuePtrEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13innerIndexPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen12SparseMatrixIdLi1EiE13innerIndexPtrEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13outerIndexPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen12SparseMatrixIdLi1EiE13outerIndexPtrEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen12SparseMatrixIdLi1EiE8valuePtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0);
 $4 = (__ZNK5Eigen8internal17CompressedStorageIdiE8valuePtrEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal17CompressedStorageIdiE8valuePtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen12SparseMatrixIdLi1EiE13innerIndexPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0);
 $4 = (__ZNK5Eigen8internal17CompressedStorageIdiE8indexPtrEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal17CompressedStorageIdiE8indexPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen12SparseMatrixIdLi1EiE13outerIndexPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal17CompressedStorageIdiE4swapERS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $7 = sp + 80|0;
 $13 = sp + 56|0;
 $19 = sp + 32|0;
 $25 = sp + 8|0;
 $26 = $0;
 $27 = $1;
 $28 = $26;
 $29 = $27;
 $23 = $28;
 $24 = $29;
 $30 = $23;
 $22 = $30;
 $31 = $22;
 $32 = HEAP32[$31>>2]|0;
 HEAP32[$25>>2] = $32;
 $33 = $24;
 $20 = $33;
 $34 = $20;
 $35 = HEAP32[$34>>2]|0;
 $36 = $23;
 HEAP32[$36>>2] = $35;
 $21 = $25;
 $37 = $21;
 $38 = HEAP32[$37>>2]|0;
 $39 = $24;
 HEAP32[$39>>2] = $38;
 $40 = ((($28)) + 4|0);
 $41 = $27;
 $42 = ((($41)) + 4|0);
 $5 = $40;
 $6 = $42;
 $43 = $5;
 $4 = $43;
 $44 = $4;
 $45 = HEAP32[$44>>2]|0;
 HEAP32[$7>>2] = $45;
 $46 = $6;
 $2 = $46;
 $47 = $2;
 $48 = HEAP32[$47>>2]|0;
 $49 = $5;
 HEAP32[$49>>2] = $48;
 $3 = $7;
 $50 = $3;
 $51 = HEAP32[$50>>2]|0;
 $52 = $6;
 HEAP32[$52>>2] = $51;
 $53 = ((($28)) + 8|0);
 $54 = $27;
 $55 = ((($54)) + 8|0);
 $11 = $53;
 $12 = $55;
 $56 = $11;
 $10 = $56;
 $57 = $10;
 $58 = HEAP32[$57>>2]|0;
 HEAP32[$13>>2] = $58;
 $59 = $12;
 $8 = $59;
 $60 = $8;
 $61 = HEAP32[$60>>2]|0;
 $62 = $11;
 HEAP32[$62>>2] = $61;
 $9 = $13;
 $63 = $9;
 $64 = HEAP32[$63>>2]|0;
 $65 = $12;
 HEAP32[$65>>2] = $64;
 $66 = ((($28)) + 12|0);
 $67 = $27;
 $68 = ((($67)) + 12|0);
 $17 = $66;
 $18 = $68;
 $69 = $17;
 $16 = $69;
 $70 = $16;
 $71 = HEAP32[$70>>2]|0;
 HEAP32[$19>>2] = $71;
 $72 = $18;
 $14 = $72;
 $73 = $14;
 $74 = HEAP32[$73>>2]|0;
 $75 = $17;
 HEAP32[$75>>2] = $74;
 $15 = $19;
 $76 = $15;
 $77 = HEAP32[$76>>2]|0;
 $78 = $18;
 HEAP32[$78>>2] = $77;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_12SparseMatrixIdLi1EiEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_12SparseMatrixIdLi1EiEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE8isRValueEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP8[$2>>0]|0;
 $4 = $3&1;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen12SparseMatrixIdLi0EiE14initAssignmentIS1_EEvRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($7)|0);
 __ZN5Eigen12SparseMatrixIdLi0EiE6resizeEii($4,$6,$8);
 $9 = ((($4)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)!=(0|0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $12 = ((($4)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 _free($13);
 $14 = ((($4)) + 16|0);
 HEAP32[$14>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE12isCompressedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE15innerNonZeroPtrEv($2)|0);
 $4 = ($3|0)==(0|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal17CompressedStorageIdiEaSERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen8internal17CompressedStorageIdiE4sizeEv($5)|0);
 __ZN5Eigen8internal17CompressedStorageIdiE6resizeEid($4,$6,0.0);
 $7 = $3;
 $8 = (__ZNK5Eigen8internal17CompressedStorageIdiE4sizeEv($7)|0);
 $9 = ($8|0)>(0);
 if (!($9)) {
  STACKTOP = sp;return ($4|0);
 }
 $10 = $3;
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($4)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($13) + ($15<<3)|0);
 $17 = HEAP32[$4>>2]|0;
 __ZN5Eigen8internal10smart_copyIdEEvPKT_S4_PS2_($11,$16,$17);
 $18 = $3;
 $19 = ((($18)) + 4|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = $3;
 $22 = ((($21)) + 4|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($4)) + 8|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = (($23) + ($25<<2)|0);
 $27 = ((($4)) + 4|0);
 $28 = HEAP32[$27>>2]|0;
 __ZN5Eigen8internal10smart_copyIiEEvPKT_S4_PS2_($20,$26,$28);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEEaSERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($6)|0);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_12SparseMatrixIdLi0EiEES3_EEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE15innerNonZeroPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen12SparseMatrixIdLi0EiE15innerNonZeroPtrEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen12SparseMatrixIdLi0EiE15innerNonZeroPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal17CompressedStorageIdiE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_12SparseMatrixIdLi0EiEES3_EEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_12SparseMatrixIdLi0EiEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_($5,$6,$4);
 STACKTOP = sp;return;
}
function __ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_12SparseMatrixIdLi0EiEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_12SparseMatrixIdLi0EiEES3_NS0_9assign_opIddEENS0_13Sparse2SparseEvE3runERS3_RKS3_RKS5_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_12SparseMatrixIdLi0EiEES3_NS0_9assign_opIddEENS0_13Sparse2SparseEvE3runERS3_RKS3_RKS5_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($8)|0);
 __ZN5Eigen8internal23assign_sparse_to_sparseINS_12SparseMatrixIdLi0EiEES3_EEvRT_RKT0_($7,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal23assign_sparse_to_sparseINS_12SparseMatrixIdLi0EiEES3_EEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0.0, $106 = 0.0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $7 = sp + 40|0;
 $10 = sp + 222|0;
 $16 = sp + 32|0;
 $19 = sp + 221|0;
 $22 = sp + 16|0;
 $27 = sp + 140|0;
 $28 = sp + 136|0;
 $30 = sp + 112|0;
 $32 = sp + 76|0;
 $33 = sp + 72|0;
 $34 = sp + 68|0;
 $36 = sp + 44|0;
 $20 = $0;
 $21 = $1;
 $38 = $21;
 __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEEC2ERKS3_($22,$38);
 $23 = 0;
 $39 = $21;
 __THREW__ = 0;
 $40 = (invoke_ii(441,($39|0))|0);
 $41 = __THREW__; __THREW__ = 0;
 $42 = $41&1;
 L1: do {
  if ($42) {
   label = 22;
  } else {
   $24 = $40;
   $43 = $21;
   __THREW__ = 0;
   $44 = (invoke_ii(504,($43|0))|0);
   $45 = __THREW__; __THREW__ = 0;
   $46 = $45&1;
   if ($46) {
    label = 22;
   } else {
    if ($44) {
     $47 = $20;
     $48 = $21;
     __THREW__ = 0;
     $49 = (invoke_ii(440,($48|0))|0);
     $50 = __THREW__; __THREW__ = 0;
     $51 = $50&1;
     if ($51) {
      label = 22;
      break;
     }
     $52 = $21;
     __THREW__ = 0;
     $53 = (invoke_ii(441,($52|0))|0);
     $54 = __THREW__; __THREW__ = 0;
     $55 = $54&1;
     if ($55) {
      label = 22;
      break;
     }
     __THREW__ = 0;
     invoke_viii(70,($47|0),($49|0),($53|0));
     $56 = __THREW__; __THREW__ = 0;
     $57 = $56&1;
     if ($57) {
      label = 22;
      break;
     }
     $58 = $20;
     __THREW__ = 0;
     invoke_vi(505,($58|0));
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 22;
      break;
     }
     $61 = $20;
     $62 = $21;
     __THREW__ = 0;
     $63 = (invoke_ii(440,($62|0))|0);
     $64 = __THREW__; __THREW__ = 0;
     $65 = $64&1;
     if ($65) {
      label = 22;
      break;
     }
     HEAP32[$27>>2] = $63;
     $66 = $21;
     __THREW__ = 0;
     $67 = (invoke_ii(441,($66|0))|0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 22;
      break;
     }
     HEAP32[$28>>2] = $67;
     $17 = $27;
     $18 = $28;
     $70 = $17;
     $71 = $18;
     ;HEAP8[$16>>0]=HEAP8[$19>>0]|0;
     $14 = $70;
     $15 = $71;
     $72 = $14;
     $73 = $15;
     $11 = $16;
     $12 = $72;
     $13 = $73;
     $74 = $12;
     $75 = HEAP32[$74>>2]|0;
     $76 = $13;
     $77 = HEAP32[$76>>2]|0;
     $78 = ($75|0)<($77|0);
     $79 = $15;
     $80 = $14;
     $81 = $78 ? $79 : $80;
     $82 = HEAP32[$81>>2]|0;
     $83 = $82<<1;
     __THREW__ = 0;
     invoke_vii(506,($61|0),($83|0));
     $84 = __THREW__; __THREW__ = 0;
     $85 = $84&1;
     if ($85) {
      label = 22;
      break;
     }
     $29 = 0;
     while(1) {
      $86 = $29;
      $87 = $24;
      $88 = ($86|0)<($87|0);
      $89 = $20;
      if (!($88)) {
       break;
      }
      $90 = $29;
      __THREW__ = 0;
      invoke_vii(507,($89|0),($90|0));
      $91 = __THREW__; __THREW__ = 0;
      $92 = $91&1;
      if ($92) {
       label = 22;
       break L1;
      }
      __THREW__ = 0;
      $93 = (invoke_ii(508,($22|0))|0);
      $94 = __THREW__; __THREW__ = 0;
      $95 = $94&1;
      if ($95) {
       label = 22;
       break L1;
      }
      $96 = $29;
      __THREW__ = 0;
      invoke_viii(509,($30|0),($93|0),($96|0));
      $97 = __THREW__; __THREW__ = 0;
      $98 = $97&1;
      if ($98) {
       label = 22;
       break L1;
      }
      while(1) {
       __THREW__ = 0;
       $99 = (invoke_ii(510,($30|0))|0);
       $100 = __THREW__; __THREW__ = 0;
       $101 = $100&1;
       if ($101) {
        label = 22;
        break L1;
       }
       if (!($99)) {
        break;
       }
       __THREW__ = 0;
       $102 = (invoke_ii(511,($30|0))|0);
       $103 = __THREW__; __THREW__ = 0;
       $104 = $103&1;
       if ($104) {
        label = 22;
        break L1;
       }
       $105 = +HEAPF64[$102>>3];
       $31 = $105;
       $106 = $31;
       $107 = $20;
       $108 = $29;
       __THREW__ = 0;
       $109 = (invoke_ii(512,($30|0))|0);
       $110 = __THREW__; __THREW__ = 0;
       $111 = $110&1;
       if ($111) {
        label = 22;
        break L1;
       }
       __THREW__ = 0;
       $112 = (invoke_iiii(513,($107|0),($108|0),($109|0))|0);
       $113 = __THREW__; __THREW__ = 0;
       $114 = $113&1;
       if ($114) {
        label = 22;
        break L1;
       }
       HEAPF64[$112>>3] = $106;
       __THREW__ = 0;
       (invoke_ii(514,($30|0))|0);
       $115 = __THREW__; __THREW__ = 0;
       $116 = $115&1;
       if ($116) {
        label = 22;
        break L1;
       }
      }
      $119 = $29;
      $120 = (($119) + 1)|0;
      $29 = $120;
     }
     __THREW__ = 0;
     invoke_vi(515,($89|0));
     $121 = __THREW__; __THREW__ = 0;
     $122 = $121&1;
     if ($122) {
      label = 22;
      break;
     }
     __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEED2Ev($22);
     STACKTOP = sp;return;
    }
    $123 = $21;
    __THREW__ = 0;
    $124 = (invoke_ii(440,($123|0))|0);
    $125 = __THREW__; __THREW__ = 0;
    $126 = $125&1;
    if ($126) {
     label = 22;
    } else {
     $127 = $21;
     __THREW__ = 0;
     $128 = (invoke_ii(441,($127|0))|0);
     $129 = __THREW__; __THREW__ = 0;
     $130 = $129&1;
     if ($130) {
      label = 22;
     } else {
      __THREW__ = 0;
      invoke_viii(61,($32|0),($124|0),($128|0));
      $131 = __THREW__; __THREW__ = 0;
      $132 = $131&1;
      if ($132) {
       label = 22;
      } else {
       $133 = $21;
       __THREW__ = 0;
       $134 = (invoke_ii(440,($133|0))|0);
       $135 = __THREW__; __THREW__ = 0;
       $136 = $135&1;
       L32: do {
        if (!($136)) {
         HEAP32[$33>>2] = $134;
         $137 = $21;
         __THREW__ = 0;
         $138 = (invoke_ii(441,($137|0))|0);
         $139 = __THREW__; __THREW__ = 0;
         $140 = $139&1;
         if (!($140)) {
          HEAP32[$34>>2] = $138;
          $8 = $33;
          $9 = $34;
          $141 = $8;
          $142 = $9;
          ;HEAP8[$7>>0]=HEAP8[$10>>0]|0;
          $5 = $141;
          $6 = $142;
          $143 = $5;
          $144 = $6;
          $2 = $7;
          $3 = $143;
          $4 = $144;
          $145 = $3;
          $146 = HEAP32[$145>>2]|0;
          $147 = $4;
          $148 = HEAP32[$147>>2]|0;
          $149 = ($146|0)<($148|0);
          $150 = $6;
          $151 = $5;
          $152 = $149 ? $150 : $151;
          $153 = HEAP32[$152>>2]|0;
          $154 = $153<<1;
          __THREW__ = 0;
          invoke_vii(506,($32|0),($154|0));
          $155 = __THREW__; __THREW__ = 0;
          $156 = $155&1;
          if (!($156)) {
           $35 = 0;
           while(1) {
            $157 = $35;
            $158 = $24;
            $159 = ($157|0)<($158|0);
            if (!($159)) {
             break;
            }
            $160 = $35;
            __THREW__ = 0;
            invoke_vii(507,($32|0),($160|0));
            $161 = __THREW__; __THREW__ = 0;
            $162 = $161&1;
            if ($162) {
             break L32;
            }
            __THREW__ = 0;
            $163 = (invoke_ii(508,($22|0))|0);
            $164 = __THREW__; __THREW__ = 0;
            $165 = $164&1;
            if ($165) {
             break L32;
            }
            $166 = $35;
            __THREW__ = 0;
            invoke_viii(509,($36|0),($163|0),($166|0));
            $167 = __THREW__; __THREW__ = 0;
            $168 = $167&1;
            if ($168) {
             break L32;
            }
            while(1) {
             __THREW__ = 0;
             $169 = (invoke_ii(510,($36|0))|0);
             $170 = __THREW__; __THREW__ = 0;
             $171 = $170&1;
             if ($171) {
              break L32;
             }
             if (!($169)) {
              break;
             }
             __THREW__ = 0;
             $172 = (invoke_ii(511,($36|0))|0);
             $173 = __THREW__; __THREW__ = 0;
             $174 = $173&1;
             if ($174) {
              break L32;
             }
             $175 = +HEAPF64[$172>>3];
             $37 = $175;
             $176 = $37;
             $177 = $35;
             __THREW__ = 0;
             $178 = (invoke_ii(512,($36|0))|0);
             $179 = __THREW__; __THREW__ = 0;
             $180 = $179&1;
             if ($180) {
              break L32;
             }
             __THREW__ = 0;
             $181 = (invoke_iiii(513,($32|0),($177|0),($178|0))|0);
             $182 = __THREW__; __THREW__ = 0;
             $183 = $182&1;
             if ($183) {
              break L32;
             }
             HEAPF64[$181>>3] = $176;
             __THREW__ = 0;
             (invoke_ii(514,($36|0))|0);
             $184 = __THREW__; __THREW__ = 0;
             $185 = $184&1;
             if ($185) {
              break L32;
             }
            }
            $190 = $35;
            $191 = (($190) + 1)|0;
            $35 = $191;
           }
           __THREW__ = 0;
           invoke_vi(515,($32|0));
           $192 = __THREW__; __THREW__ = 0;
           $193 = $192&1;
           if (!($193)) {
            __THREW__ = 0;
            $194 = (invoke_ii(516,($32|0))|0);
            $195 = __THREW__; __THREW__ = 0;
            $196 = $195&1;
            if (!($196)) {
             $197 = $20;
             __THREW__ = 0;
             (invoke_iii(62,($197|0),($194|0))|0);
             $198 = __THREW__; __THREW__ = 0;
             $199 = $198&1;
             if (!($199)) {
              __THREW__ = 0;
              invoke_vi(63,($32|0));
              $200 = __THREW__; __THREW__ = 0;
              $201 = $200&1;
              if ($201) {
               label = 22;
               break L1;
              }
              __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEED2Ev($22);
              STACKTOP = sp;return;
             }
            }
           }
          }
         }
        }
       } while(0);
       $186 = ___cxa_find_matching_catch_2()|0;
       $187 = tempRet0;
       $25 = $186;
       $26 = $187;
       __THREW__ = 0;
       invoke_vi(63,($32|0));
       $188 = __THREW__; __THREW__ = 0;
       $189 = $188&1;
       if ($189) {
        $206 = ___cxa_find_matching_catch_3(0|0)|0;
        $207 = tempRet0;
        ___clang_call_terminate($206);
        // unreachable;
       }
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 22) {
  $117 = ___cxa_find_matching_catch_2()|0;
  $118 = tempRet0;
  $25 = $117;
  $26 = $118;
 }
 __THREW__ = 0;
 invoke_vi(517,($22|0));
 $202 = __THREW__; __THREW__ = 0;
 $203 = $202&1;
 if ($203) {
  $206 = ___cxa_find_matching_catch_3(0|0)|0;
  $207 = tempRet0;
  ___clang_call_terminate($206);
  // unreachable;
 } else {
  $204 = $25;
  $205 = $26;
  ___resumeException($204|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEEC2ERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEEC2ERKS4_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen12SparseMatrixIdLi0EiE7setZeroEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0);
 __ZN5Eigen8internal17CompressedStorageIdiE5clearEv($3);
 $4 = ((($2)) + 12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($2)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($7) + 1)|0;
 $9 = $8<<2;
 _memset(($5|0),0,($9|0))|0;
 $10 = ((($2)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)!=(0|0);
 if (!($12)) {
  STACKTOP = sp;return;
 }
 $13 = ((($2)) + 16|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($2)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $16<<2;
 _memset(($14|0),0,($17|0))|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen12SparseMatrixIdLi0EiE7reserveEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE12isCompressedEv($4)|0);
 if ($5) {
  $6 = ((($4)) + 20|0);
  $7 = $3;
  __ZN5Eigen8internal17CompressedStorageIdiE7reserveEi($6,$7);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5641|0),(5438|0),264,(5719|0));
  // unreachable;
 }
}
function __ZN5Eigen12SparseMatrixIdLi0EiE8startVecEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $3;
 $8 = (($6) + ($7<<2)|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($4)) + 20|0);
 $11 = (__ZNK5Eigen8internal17CompressedStorageIdiE4sizeEv($10)|0);
 $12 = ($9|0)==($11|0);
 if (!($12)) {
  ___assert_fail((5727|0),(5438|0),414,(5832|0));
  // unreachable;
 }
 $13 = ((($4)) + 12|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $3;
 $16 = (($15) + 1)|0;
 $17 = (($14) + ($16<<2)|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0);
 if ($19) {
  $20 = ((($4)) + 12|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = $3;
  $23 = (($21) + ($22<<2)|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ((($4)) + 12|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = $3;
  $28 = (($27) + 1)|0;
  $29 = (($26) + ($28<<2)|0);
  HEAP32[$29>>2] = $24;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5841|0),(5438|0),415,(5832|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEEcvRS4_Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE18const_cast_derivedEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorC2ERKS3_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE8valuePtrEv($7)|0);
 HEAP32[$6>>2] = $8;
 $9 = ((($6)) + 4|0);
 $10 = $4;
 $11 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13innerIndexPtrEv($10)|0);
 HEAP32[$9>>2] = $11;
 $12 = ((($6)) + 8|0);
 $13 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($12,$13);
 $14 = $4;
 $15 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13outerIndexPtrEv($14)|0);
 $16 = $5;
 $17 = (($15) + ($16<<2)|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($6)) + 12|0);
 HEAP32[$19>>2] = $18;
 $20 = $4;
 $21 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE12isCompressedEv($20)|0);
 if ($21) {
  $22 = $4;
  $23 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13outerIndexPtrEv($22)|0);
  $24 = $5;
  $25 = (($24) + 1)|0;
  $26 = (($23) + ($25<<2)|0);
  $27 = HEAP32[$26>>2]|0;
  $$sink = $27;
  $36 = ((($6)) + 16|0);
  HEAP32[$36>>2] = $$sink;
  STACKTOP = sp;return;
 } else {
  $28 = ((($6)) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = $4;
  $31 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE15innerNonZeroPtrEv($30)|0);
  $32 = $5;
  $33 = (($31) + ($32<<2)|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = (($29) + ($34))|0;
  $$sink = $35;
  $36 = ((($6)) + 16|0);
  HEAP32[$36>>2] = $$sink;
  STACKTOP = sp;return;
 }
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorcvbEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4|0)<($6|0);
 STACKTOP = sp;return ($7|0);
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5valueEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + ($5<<3)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZN5Eigen12SparseMatrixIdLi0EiE22insertBackByOuterInnerEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = ((($8)) + 12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = (($11) + 1)|0;
 $13 = (($10) + ($12<<2)|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($8)) + 20|0);
 $16 = (__ZNK5Eigen8internal17CompressedStorageIdiE4sizeEv($15)|0);
 $17 = ($14|0)==($16|0);
 if (!($17)) {
  ___assert_fail((5929|0),(5438|0),392,(6028|0));
  // unreachable;
 }
 $18 = ((($8)) + 12|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $4;
 $21 = (($20) + 1)|0;
 $22 = (($19) + ($21<<2)|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($8)) + 12|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = $4;
 $27 = (($25) + ($26<<2)|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (($23) - ($28))|0;
 $30 = ($29|0)==(0);
 if (!($30)) {
  $31 = ((($8)) + 20|0);
  $32 = ((($8)) + 20|0);
  $33 = (__ZNK5Eigen8internal17CompressedStorageIdiE4sizeEv($32)|0);
  $34 = (($33) - 1)|0;
  $35 = (__ZN5Eigen8internal17CompressedStorageIdiE5indexEi($31,$34)|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = $5;
  $38 = ($36|0)<($37|0);
  if (!($38)) {
   ___assert_fail((6051|0),(5438|0),393,(6028|0));
   // unreachable;
  }
 }
 $39 = ((($8)) + 12|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = $4;
 $42 = (($41) + 1)|0;
 $43 = (($40) + ($42<<2)|0);
 $44 = HEAP32[$43>>2]|0;
 $6 = $44;
 $45 = ((($8)) + 12|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = $4;
 $48 = (($47) + 1)|0;
 $49 = (($46) + ($48<<2)|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = (($50) + 1)|0;
 HEAP32[$49>>2] = $51;
 $52 = ((($8)) + 20|0);
 HEAPF64[$7>>3] = 0.0;
 $53 = $5;
 __ZN5Eigen8internal17CompressedStorageIdiE6appendERKdi($52,$7,$53);
 $54 = ((($8)) + 20|0);
 $55 = $6;
 $56 = (__ZN5Eigen8internal17CompressedStorageIdiE5valueEi($54,$55)|0);
 STACKTOP = sp;return ($56|0);
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5indexEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + ($6<<2)|0);
 $8 = HEAP32[$7>>2]|0;
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorppEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 1)|0;
 HEAP32[$3>>2] = $5;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen12SparseMatrixIdLi0EiE8finalizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 4|0;
 $1 = $0;
 $5 = $1;
 $6 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE12isCompressedEv($5)|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = ((($5)) + 20|0);
 $8 = (__ZNK5Eigen8internal17CompressedStorageIdiE4sizeEv($7)|0);
 HEAP32[$3>>2] = $8;
 $9 = (__ZN5Eigen8internal13convert_indexIiiEET_RKT0_($3)|0);
 $2 = $9;
 $10 = ((($5)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $4 = $11;
 while(1) {
  $12 = $4;
  $13 = ($12|0)>=(0);
  if ($13) {
   $14 = ((($5)) + 12|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = $4;
   $17 = (($15) + ($16<<2)|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($18|0)==(0);
   $34 = $19;
  } else {
   $34 = 0;
  }
  $20 = $4;
  if (!($34)) {
   break;
  }
  $21 = (($20) + -1)|0;
  $4 = $21;
 }
 $22 = (($20) + 1)|0;
 $4 = $22;
 while(1) {
  $23 = $4;
  $24 = ((($5)) + 4|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ($23|0)<=($25|0);
  if (!($26)) {
   break;
  }
  $27 = $2;
  $28 = ((($5)) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = $4;
  $31 = (($29) + ($30<<2)|0);
  HEAP32[$31>>2] = $27;
  $32 = $4;
  $33 = (($32) + 1)|0;
  $4 = $33;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE12markAsRValueEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 1;
 $3 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEEC2ERKS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_12SparseMatrixIdLi0EiEEEC2Ev($4);
 $5 = $3;
 HEAP32[$4>>2] = $5;
 $6 = ((($4)) + 8|0);
 HEAPF64[$6>>3] = 0.0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_12SparseMatrixIdLi0EiEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE8valuePtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen12SparseMatrixIdLi0EiE8valuePtrEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13innerIndexPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen12SparseMatrixIdLi0EiE13innerIndexPtrEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13outerIndexPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen12SparseMatrixIdLi0EiE13outerIndexPtrEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen12SparseMatrixIdLi0EiE8valuePtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0);
 $4 = (__ZNK5Eigen8internal17CompressedStorageIdiE8valuePtrEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen12SparseMatrixIdLi0EiE13innerIndexPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0);
 $4 = (__ZNK5Eigen8internal17CompressedStorageIdiE8indexPtrEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen12SparseMatrixIdLi0EiE13outerIndexPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal17CompressedStorageIdiE6appendERKdi($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp + 4|0;
 $3 = $0;
 $4 = $1;
 HEAP32[$5>>2] = $2;
 $7 = $3;
 $8 = ((($7)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $6 = $9;
 $10 = ((($7)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($11) + 1)|0;
 __ZN5Eigen8internal17CompressedStorageIdiE6resizeEid($7,$12,1.0);
 $13 = $4;
 $14 = +HEAPF64[$13>>3];
 $15 = HEAP32[$7>>2]|0;
 $16 = $6;
 $17 = (($15) + ($16<<3)|0);
 HEAPF64[$17>>3] = $14;
 $18 = (__ZN5Eigen8internal13convert_indexIiiEET_RKT0_($5)|0);
 $19 = ((($7)) + 4|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = $6;
 $22 = (($20) + ($21<<2)|0);
 HEAP32[$22>>2] = $18;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_12SparseMatrixIdLi0EiEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_12SparseMatrixIdLi0EiEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9TransposeINS_12SparseMatrixIdLi0EiEEEC2ERS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen13TransposeImplINS_12SparseMatrixIdLi0EiEENS_6SparseEEC2Ev($4);
 $5 = ((($4)) + 4|0);
 $6 = $3;
 HEAP32[$5>>2] = $6;
 STACKTOP = sp;return;
}
function __ZN5Eigen13TransposeImplINS_12SparseMatrixIdLi0EiEENS_6SparseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal19SparseTransposeImplINS_12SparseMatrixIdLi0EiEELi1024EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal19SparseTransposeImplINS_12SparseMatrixIdLi0EiEELi1024EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen20SparseCompressedBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen20SparseCompressedBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES3_Li2EEC2ERKS4_RKS3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen11ProductImplINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES3_Li2ENS_6SparseEEC2Ev($6);
 $7 = ((($6)) + 4|0);
 $8 = $4;
 ;HEAP32[$7>>2]=HEAP32[$8>>2]|0;HEAP32[$7+4>>2]=HEAP32[$8+4>>2]|0;
 $9 = ((($6)) + 12|0);
 $10 = $5;
 HEAP32[$9>>2] = $10;
 $11 = $4;
 $12 = (__ZNK5Eigen9TransposeINS_12SparseMatrixIdLi0EiEEE4colsEv($11)|0);
 $13 = $5;
 $14 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($13)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2150|0),(2290|0),97,(2323|0));
  // unreachable;
 }
}
function __ZN5Eigen11ProductImplINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES3_Li2ENS_6SparseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen16SparseMatrixBaseINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES4_Li2EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9TransposeINS_12SparseMatrixIdLi0EiEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen16SparseMatrixBaseINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES4_Li2EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_12SparseMatrixIdLi0EiEENS_7ProductINS_9TransposeIS3_EES3_Li2EEEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_12SparseMatrixIdLi0EiEENS_7ProductINS_9TransposeIS3_EES3_Li2EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($5,$6,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES4_Li2EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_12SparseMatrixIdLi0EiEENS_7ProductINS_9TransposeIS3_EES3_Li2EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_12SparseMatrixIdLi0EiEENS_7ProductINS_9TransposeIS3_EES3_Li2EEENS0_9assign_opIddEENS0_13Sparse2SparseEvE3runERS3_RKS7_RKS9_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_12SparseMatrixIdLi0EiEENS_7ProductINS_9TransposeIS3_EES3_Li2EEENS0_9assign_opIddEENS0_13Sparse2SparseEvE3runERS3_RKS7_RKS9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen16SparseMatrixBaseINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES4_Li2EEEE7derivedEv($8)|0);
 __ZN5Eigen8internal23assign_sparse_to_sparseINS_12SparseMatrixIdLi0EiEENS_7ProductINS_9TransposeIS3_EES3_Li2EEEEEvRT_RKT0_($7,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal23assign_sparse_to_sparseINS_12SparseMatrixIdLi0EiEENS_7ProductINS_9TransposeIS3_EES3_Li2EEEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0.0, $106 = 0.0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $7 = sp + 80|0;
 $10 = sp + 262|0;
 $16 = sp + 72|0;
 $19 = sp + 261|0;
 $22 = sp + 16|0;
 $27 = sp + 180|0;
 $28 = sp + 176|0;
 $30 = sp + 152|0;
 $32 = sp + 116|0;
 $33 = sp + 112|0;
 $34 = sp + 108|0;
 $36 = sp + 84|0;
 $20 = $0;
 $21 = $1;
 $38 = $21;
 __ZN5Eigen8internal9evaluatorINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES5_Li2EEEEC2ERKS7_($22,$38);
 $23 = 0;
 $39 = $21;
 __THREW__ = 0;
 $40 = (invoke_ii(518,($39|0))|0);
 $41 = __THREW__; __THREW__ = 0;
 $42 = $41&1;
 L1: do {
  if ($42) {
   label = 22;
  } else {
   $24 = $40;
   $43 = $21;
   __THREW__ = 0;
   $44 = (invoke_ii(519,($43|0))|0);
   $45 = __THREW__; __THREW__ = 0;
   $46 = $45&1;
   if ($46) {
    label = 22;
   } else {
    if ($44) {
     $47 = $20;
     $48 = $21;
     __THREW__ = 0;
     $49 = (invoke_ii(520,($48|0))|0);
     $50 = __THREW__; __THREW__ = 0;
     $51 = $50&1;
     if ($51) {
      label = 22;
      break;
     }
     $52 = $21;
     __THREW__ = 0;
     $53 = (invoke_ii(518,($52|0))|0);
     $54 = __THREW__; __THREW__ = 0;
     $55 = $54&1;
     if ($55) {
      label = 22;
      break;
     }
     __THREW__ = 0;
     invoke_viii(70,($47|0),($49|0),($53|0));
     $56 = __THREW__; __THREW__ = 0;
     $57 = $56&1;
     if ($57) {
      label = 22;
      break;
     }
     $58 = $20;
     __THREW__ = 0;
     invoke_vi(505,($58|0));
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 22;
      break;
     }
     $61 = $20;
     $62 = $21;
     __THREW__ = 0;
     $63 = (invoke_ii(520,($62|0))|0);
     $64 = __THREW__; __THREW__ = 0;
     $65 = $64&1;
     if ($65) {
      label = 22;
      break;
     }
     HEAP32[$27>>2] = $63;
     $66 = $21;
     __THREW__ = 0;
     $67 = (invoke_ii(518,($66|0))|0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 22;
      break;
     }
     HEAP32[$28>>2] = $67;
     $17 = $27;
     $18 = $28;
     $70 = $17;
     $71 = $18;
     ;HEAP8[$16>>0]=HEAP8[$19>>0]|0;
     $14 = $70;
     $15 = $71;
     $72 = $14;
     $73 = $15;
     $11 = $16;
     $12 = $72;
     $13 = $73;
     $74 = $12;
     $75 = HEAP32[$74>>2]|0;
     $76 = $13;
     $77 = HEAP32[$76>>2]|0;
     $78 = ($75|0)<($77|0);
     $79 = $15;
     $80 = $14;
     $81 = $78 ? $79 : $80;
     $82 = HEAP32[$81>>2]|0;
     $83 = $82<<1;
     __THREW__ = 0;
     invoke_vii(506,($61|0),($83|0));
     $84 = __THREW__; __THREW__ = 0;
     $85 = $84&1;
     if ($85) {
      label = 22;
      break;
     }
     $29 = 0;
     while(1) {
      $86 = $29;
      $87 = $24;
      $88 = ($86|0)<($87|0);
      $89 = $20;
      if (!($88)) {
       break;
      }
      $90 = $29;
      __THREW__ = 0;
      invoke_vii(507,($89|0),($90|0));
      $91 = __THREW__; __THREW__ = 0;
      $92 = $91&1;
      if ($92) {
       label = 22;
       break L1;
      }
      __THREW__ = 0;
      $93 = (invoke_ii(508,($22|0))|0);
      $94 = __THREW__; __THREW__ = 0;
      $95 = $94&1;
      if ($95) {
       label = 22;
       break L1;
      }
      $96 = $29;
      __THREW__ = 0;
      invoke_viii(509,($30|0),($93|0),($96|0));
      $97 = __THREW__; __THREW__ = 0;
      $98 = $97&1;
      if ($98) {
       label = 22;
       break L1;
      }
      while(1) {
       __THREW__ = 0;
       $99 = (invoke_ii(510,($30|0))|0);
       $100 = __THREW__; __THREW__ = 0;
       $101 = $100&1;
       if ($101) {
        label = 22;
        break L1;
       }
       if (!($99)) {
        break;
       }
       __THREW__ = 0;
       $102 = (invoke_ii(511,($30|0))|0);
       $103 = __THREW__; __THREW__ = 0;
       $104 = $103&1;
       if ($104) {
        label = 22;
        break L1;
       }
       $105 = +HEAPF64[$102>>3];
       $31 = $105;
       $106 = $31;
       $107 = $20;
       $108 = $29;
       __THREW__ = 0;
       $109 = (invoke_ii(512,($30|0))|0);
       $110 = __THREW__; __THREW__ = 0;
       $111 = $110&1;
       if ($111) {
        label = 22;
        break L1;
       }
       __THREW__ = 0;
       $112 = (invoke_iiii(513,($107|0),($108|0),($109|0))|0);
       $113 = __THREW__; __THREW__ = 0;
       $114 = $113&1;
       if ($114) {
        label = 22;
        break L1;
       }
       HEAPF64[$112>>3] = $106;
       __THREW__ = 0;
       (invoke_ii(514,($30|0))|0);
       $115 = __THREW__; __THREW__ = 0;
       $116 = $115&1;
       if ($116) {
        label = 22;
        break L1;
       }
      }
      $119 = $29;
      $120 = (($119) + 1)|0;
      $29 = $120;
     }
     __THREW__ = 0;
     invoke_vi(515,($89|0));
     $121 = __THREW__; __THREW__ = 0;
     $122 = $121&1;
     if ($122) {
      label = 22;
      break;
     }
     __ZN5Eigen8internal9evaluatorINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES5_Li2EEEED2Ev($22);
     STACKTOP = sp;return;
    }
    $123 = $21;
    __THREW__ = 0;
    $124 = (invoke_ii(520,($123|0))|0);
    $125 = __THREW__; __THREW__ = 0;
    $126 = $125&1;
    if ($126) {
     label = 22;
    } else {
     $127 = $21;
     __THREW__ = 0;
     $128 = (invoke_ii(518,($127|0))|0);
     $129 = __THREW__; __THREW__ = 0;
     $130 = $129&1;
     if ($130) {
      label = 22;
     } else {
      __THREW__ = 0;
      invoke_viii(61,($32|0),($124|0),($128|0));
      $131 = __THREW__; __THREW__ = 0;
      $132 = $131&1;
      if ($132) {
       label = 22;
      } else {
       $133 = $21;
       __THREW__ = 0;
       $134 = (invoke_ii(520,($133|0))|0);
       $135 = __THREW__; __THREW__ = 0;
       $136 = $135&1;
       L32: do {
        if (!($136)) {
         HEAP32[$33>>2] = $134;
         $137 = $21;
         __THREW__ = 0;
         $138 = (invoke_ii(518,($137|0))|0);
         $139 = __THREW__; __THREW__ = 0;
         $140 = $139&1;
         if (!($140)) {
          HEAP32[$34>>2] = $138;
          $8 = $33;
          $9 = $34;
          $141 = $8;
          $142 = $9;
          ;HEAP8[$7>>0]=HEAP8[$10>>0]|0;
          $5 = $141;
          $6 = $142;
          $143 = $5;
          $144 = $6;
          $2 = $7;
          $3 = $143;
          $4 = $144;
          $145 = $3;
          $146 = HEAP32[$145>>2]|0;
          $147 = $4;
          $148 = HEAP32[$147>>2]|0;
          $149 = ($146|0)<($148|0);
          $150 = $6;
          $151 = $5;
          $152 = $149 ? $150 : $151;
          $153 = HEAP32[$152>>2]|0;
          $154 = $153<<1;
          __THREW__ = 0;
          invoke_vii(506,($32|0),($154|0));
          $155 = __THREW__; __THREW__ = 0;
          $156 = $155&1;
          if (!($156)) {
           $35 = 0;
           while(1) {
            $157 = $35;
            $158 = $24;
            $159 = ($157|0)<($158|0);
            if (!($159)) {
             break;
            }
            $160 = $35;
            __THREW__ = 0;
            invoke_vii(507,($32|0),($160|0));
            $161 = __THREW__; __THREW__ = 0;
            $162 = $161&1;
            if ($162) {
             break L32;
            }
            __THREW__ = 0;
            $163 = (invoke_ii(508,($22|0))|0);
            $164 = __THREW__; __THREW__ = 0;
            $165 = $164&1;
            if ($165) {
             break L32;
            }
            $166 = $35;
            __THREW__ = 0;
            invoke_viii(509,($36|0),($163|0),($166|0));
            $167 = __THREW__; __THREW__ = 0;
            $168 = $167&1;
            if ($168) {
             break L32;
            }
            while(1) {
             __THREW__ = 0;
             $169 = (invoke_ii(510,($36|0))|0);
             $170 = __THREW__; __THREW__ = 0;
             $171 = $170&1;
             if ($171) {
              break L32;
             }
             if (!($169)) {
              break;
             }
             __THREW__ = 0;
             $172 = (invoke_ii(511,($36|0))|0);
             $173 = __THREW__; __THREW__ = 0;
             $174 = $173&1;
             if ($174) {
              break L32;
             }
             $175 = +HEAPF64[$172>>3];
             $37 = $175;
             $176 = $37;
             $177 = $35;
             __THREW__ = 0;
             $178 = (invoke_ii(512,($36|0))|0);
             $179 = __THREW__; __THREW__ = 0;
             $180 = $179&1;
             if ($180) {
              break L32;
             }
             __THREW__ = 0;
             $181 = (invoke_iiii(513,($32|0),($177|0),($178|0))|0);
             $182 = __THREW__; __THREW__ = 0;
             $183 = $182&1;
             if ($183) {
              break L32;
             }
             HEAPF64[$181>>3] = $176;
             __THREW__ = 0;
             (invoke_ii(514,($36|0))|0);
             $184 = __THREW__; __THREW__ = 0;
             $185 = $184&1;
             if ($185) {
              break L32;
             }
            }
            $190 = $35;
            $191 = (($190) + 1)|0;
            $35 = $191;
           }
           __THREW__ = 0;
           invoke_vi(515,($32|0));
           $192 = __THREW__; __THREW__ = 0;
           $193 = $192&1;
           if (!($193)) {
            __THREW__ = 0;
            $194 = (invoke_ii(516,($32|0))|0);
            $195 = __THREW__; __THREW__ = 0;
            $196 = $195&1;
            if (!($196)) {
             $197 = $20;
             __THREW__ = 0;
             (invoke_iii(62,($197|0),($194|0))|0);
             $198 = __THREW__; __THREW__ = 0;
             $199 = $198&1;
             if (!($199)) {
              __THREW__ = 0;
              invoke_vi(63,($32|0));
              $200 = __THREW__; __THREW__ = 0;
              $201 = $200&1;
              if ($201) {
               label = 22;
               break L1;
              }
              __ZN5Eigen8internal9evaluatorINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES5_Li2EEEED2Ev($22);
              STACKTOP = sp;return;
             }
            }
           }
          }
         }
        }
       } while(0);
       $186 = ___cxa_find_matching_catch_2()|0;
       $187 = tempRet0;
       $25 = $186;
       $26 = $187;
       __THREW__ = 0;
       invoke_vi(63,($32|0));
       $188 = __THREW__; __THREW__ = 0;
       $189 = $188&1;
       if ($189) {
        $206 = ___cxa_find_matching_catch_3(0|0)|0;
        $207 = tempRet0;
        ___clang_call_terminate($206);
        // unreachable;
       }
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 22) {
  $117 = ___cxa_find_matching_catch_2()|0;
  $118 = tempRet0;
  $25 = $117;
  $26 = $118;
 }
 __THREW__ = 0;
 invoke_vi(521,($22|0));
 $202 = __THREW__; __THREW__ = 0;
 $203 = $202&1;
 if ($203) {
  $206 = ___cxa_find_matching_catch_3(0|0)|0;
  $207 = tempRet0;
  ___clang_call_terminate($206);
  // unreachable;
 } else {
  $204 = $25;
  $205 = $26;
  ___resumeException($204|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES5_Li2EEEEC2ERKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES5_Li2EEELi8ENS_11SparseShapeES8_ddEC2ERKS7_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES3_Li2EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen16SparseMatrixBaseINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES4_Li2EEEE8isRValueEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP8[$2>>0]|0;
 $4 = $3&1;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES3_Li2EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen9TransposeINS_12SparseMatrixIdLi0EiEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal9evaluatorINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES5_Li2EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES5_Li2EEELi8ENS_11SparseShapeES8_ddED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES5_Li2EEELi8ENS_11SparseShapeES8_ddEC2ERKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEEC2Ev($6);
 $7 = ((($6)) + 16|0);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(520,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  label = 9;
 } else {
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(518,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if ($15) {
   label = 9;
  } else {
   __THREW__ = 0;
   invoke_viii(61,($7|0),($9|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if ($17) {
    label = 9;
   } else {
    $18 = ((($6)) + 16|0);
    __THREW__ = 0;
    invoke_vii(522,($6|0),($18|0));
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if (!($20)) {
     $21 = ((($6)) + 16|0);
     $22 = $3;
     __THREW__ = 0;
     $23 = (invoke_ii(523,($22|0))|0);
     $24 = __THREW__; __THREW__ = 0;
     $25 = $24&1;
     if (!($25)) {
      $26 = $3;
      __THREW__ = 0;
      $27 = (invoke_ii(524,($26|0))|0);
      $28 = __THREW__; __THREW__ = 0;
      $29 = $28&1;
      if (!($29)) {
       __THREW__ = 0;
       invoke_viii(525,($21|0),($23|0),($27|0));
       $30 = __THREW__; __THREW__ = 0;
       $31 = $30&1;
       if (!($31)) {
        STACKTOP = sp;return;
       }
      }
     }
    }
    $34 = ___cxa_find_matching_catch_2()|0;
    $35 = tempRet0;
    $4 = $34;
    $5 = $35;
    __THREW__ = 0;
    invoke_vi(63,($7|0));
    $36 = __THREW__; __THREW__ = 0;
    $37 = $36&1;
    if ($37) {
     $42 = ___cxa_find_matching_catch_3(0|0)|0;
     $43 = tempRet0;
     ___clang_call_terminate($42);
     // unreachable;
    }
   }
  }
 }
 if ((label|0) == 9) {
  $32 = ___cxa_find_matching_catch_2()|0;
  $33 = tempRet0;
  $4 = $32;
  $5 = $33;
 }
 __THREW__ = 0;
 invoke_vi(517,($6|0));
 $38 = __THREW__; __THREW__ = 0;
 $39 = $38&1;
 if ($39) {
  $42 = ___cxa_find_matching_catch_3(0|0)|0;
  $43 = tempRet0;
  ___clang_call_terminate($42);
  // unreachable;
 } else {
  $40 = $4;
  $41 = $5;
  ___resumeException($40|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal20generic_product_implINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES4_NS_11SparseShapeES6_Li8EE6evalToIS4_EEvRT_RKS5_RKS4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$byval_copy = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $$byval_copy = sp + 13|0;
 $6 = sp + 12|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 ;HEAP8[$$byval_copy>>0]=HEAP8[$6>>0]|0;
 __ZN5Eigen8internal20generic_product_implINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES4_NS_11SparseShapeES6_Li8EE6evalToIS4_EEvRT_RKS5_RKS4_S6_($7,$8,$9,$$byval_copy);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES3_Li2EE3lhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES3_Li2EE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_12SparseMatrixIdLi0EiEEEC2Ev($2);
 HEAP32[$2>>2] = 0;
 $3 = ((($2)) + 8|0);
 HEAPF64[$3>>3] = 0.0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal20generic_product_implINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES4_NS_11SparseShapeES6_Li8EE6evalToIS4_EEvRT_RKS5_RKS4_S6_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 8|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $9 = $5;
 ;HEAP32[$7>>2]=HEAP32[$9>>2]|0;HEAP32[$7+4>>2]=HEAP32[$9+4>>2]|0;
 $10 = $6;
 $8 = $10;
 $11 = $8;
 $12 = $4;
 __ZN5Eigen8internal43conservative_sparse_sparse_product_selectorINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES4_S4_Li1ELi0ELi0EE3runERKS5_RKS4_RS4_($7,$11,$12);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal43conservative_sparse_sparse_product_selectorINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES4_S4_Li1ELi0ELi0EE3runERKS5_RKS4_RS4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $6 = sp + 44|0;
 $7 = sp + 8|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $10 = $4;
 __ZN5Eigen12SparseMatrixIdLi1EiEC2INS0_IdLi0EiEEEERKNS_16SparseMatrixBaseIT_EE($6,$10);
 $11 = $3;
 __THREW__ = 0;
 $12 = (invoke_ii(526,($11|0))|0);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 do {
  if ($14) {
   label = 8;
  } else {
   $15 = $4;
   __THREW__ = 0;
   $16 = (invoke_ii(441,($15|0))|0);
   $17 = __THREW__; __THREW__ = 0;
   $18 = $17&1;
   if ($18) {
    label = 8;
   } else {
    __THREW__ = 0;
    invoke_viii(527,($7|0),($12|0),($16|0));
    $19 = __THREW__; __THREW__ = 0;
    $20 = $19&1;
    if ($20) {
     label = 8;
    } else {
     $21 = $3;
     __THREW__ = 0;
     invoke_viiii(528,($6|0),($21|0),($7|0),0);
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if (!($23)) {
      $24 = $5;
      __THREW__ = 0;
      (invoke_iii(448,($24|0),($7|0))|0);
      $25 = __THREW__; __THREW__ = 0;
      $26 = $25&1;
      if (!($26)) {
       __THREW__ = 0;
       invoke_vi(449,($7|0));
       $27 = __THREW__; __THREW__ = 0;
       $28 = $27&1;
       if ($28) {
        label = 8;
        break;
       }
       __ZN5Eigen12SparseMatrixIdLi1EiED2Ev($6);
       STACKTOP = sp;return;
      }
     }
     $31 = ___cxa_find_matching_catch_2()|0;
     $32 = tempRet0;
     $8 = $31;
     $9 = $32;
     __THREW__ = 0;
     invoke_vi(449,($7|0));
     $33 = __THREW__; __THREW__ = 0;
     $34 = $33&1;
     if ($34) {
      $39 = ___cxa_find_matching_catch_3(0|0)|0;
      $40 = tempRet0;
      ___clang_call_terminate($39);
      // unreachable;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $29 = ___cxa_find_matching_catch_2()|0;
  $30 = tempRet0;
  $8 = $29;
  $9 = $30;
 }
 __THREW__ = 0;
 invoke_vi(449,($6|0));
 $35 = __THREW__; __THREW__ = 0;
 $36 = $35&1;
 if ($36) {
  $39 = ___cxa_find_matching_catch_3(0|0)|0;
  $40 = tempRet0;
  ___clang_call_terminate($39);
  // unreachable;
 } else {
  $37 = $8;
  $38 = $9;
  ___resumeException($37|0);
  // unreachable;
 }
}
function __ZN5Eigen12SparseMatrixIdLi1EiEC2INS0_IdLi0EiEEEERKNS_16SparseMatrixBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $7 = $2;
 __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEEC2Ev($7);
 $8 = ((($7)) + 4|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($7)) + 8|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($7)) + 12|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($7)) + 16|0);
 HEAP32[$11>>2] = 0;
 $12 = ((($7)) + 20|0);
 __ZN5Eigen8internal17CompressedStorageIdiEC2Ev($12);
 __THREW__ = 0;
 invoke_v(450);
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if (!($14)) {
  $6 = 1;
  $15 = $3;
  __THREW__ = 0;
  $16 = (invoke_ii(529,($15|0))|0);
  $17 = __THREW__; __THREW__ = 0;
  $18 = $17&1;
  if (!($18)) {
   __THREW__ = 0;
   (invoke_iii(530,($7|0),($16|0))|0);
   $19 = __THREW__; __THREW__ = 0;
   $20 = $19&1;
   if (!($20)) {
    STACKTOP = sp;return;
   }
  }
 }
 $21 = ___cxa_find_matching_catch_2()|0;
 $22 = tempRet0;
 $4 = $21;
 $5 = $22;
 __THREW__ = 0;
 invoke_vi(71,($12|0));
 $23 = __THREW__; __THREW__ = 0;
 $24 = $23&1;
 if ($24) {
  $27 = ___cxa_find_matching_catch_3(0|0)|0;
  $28 = tempRet0;
  ___clang_call_terminate($27);
  // unreachable;
 } else {
  $25 = $4;
  $26 = $5;
  ___resumeException($25|0);
  // unreachable;
 }
}
function __ZNK5Eigen9TransposeINS_12SparseMatrixIdLi0EiEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internalL39conservative_sparse_sparse_product_implINS_12SparseMatrixIdLi1EiEENS_9TransposeINS2_IdLi0EiEEEES3_EEvRKT_RKT0_RT1_b($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$alloca_mul = 0, $$alloca_mul42 = 0, $$alloca_mul44 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0.0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0.0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0.0, $202 = 0.0, $203 = 0.0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0.0, $226 = 0.0, $227 = 0.0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0.0, $232 = 0.0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0.0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0.0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0;
 var $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0.0, $328 = 0, $329 = 0, $33 = 0.0, $330 = 0, $331 = 0, $332 = 0;
 var $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0;
 var $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $6 = sp + 56|0;
 $9 = sp + 253|0;
 $20 = sp + 188|0;
 $24 = sp + 164|0;
 $26 = sp + 148|0;
 $27 = sp + 40|0;
 $28 = sp + 16|0;
 $32 = sp + 116|0;
 $35 = sp + 92|0;
 $13 = $0;
 $14 = $1;
 $15 = $2;
 $45 = $3&1;
 $16 = $45;
 $46 = $13;
 $47 = (__ZNK5Eigen12SparseMatrixIdLi1EiE9innerSizeEv($46)|0);
 $17 = $47;
 $48 = $14;
 $49 = (__ZNK5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEE9outerSizeEv($48)|0);
 $18 = $49;
 $50 = $13;
 $51 = (__ZNK5Eigen12SparseMatrixIdLi1EiE9outerSizeEv($50)|0);
 $52 = $14;
 $53 = (__ZNK5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEE9innerSizeEv($52)|0);
 $54 = ($51|0)==($53|0);
 if (!($54)) {
  ___assert_fail((6190|0),(6225|0),25,(6288|0));
  // unreachable;
 }
 $55 = $17;
 $12 = $55;
 $56 = $17;
 $57 = $56;
 $58 = ($57>>>0)<=(131072);
 $59 = $17;
 $60 = $59;
 if ($58) {
  $61 = (($60) + 16)|0;
  $62 = (($61) - 1)|0;
  $$alloca_mul = $62;
  $63 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
  $64 = $63;
  $65 = (($64) + 16)|0;
  $66 = (($65) - 1)|0;
  $67 = $66 & -16;
  $68 = $67;
  $70 = $68;
 } else {
  $69 = (__ZN5Eigen8internal14aligned_mallocEj($60)|0);
  $70 = $69;
 }
 $19 = $70;
 $71 = $19;
 $72 = $17;
 $73 = $17;
 $74 = $73;
 $75 = ($74>>>0)>(131072);
 __ZN5Eigen8internal28aligned_stack_memory_handlerIbEC2EPbjb($20,$71,$72,$75);
 $76 = $17;
 $11 = $76;
 $77 = $11;
 $78 = ($77>>>0)>(536870911);
 if ($78) {
  __THREW__ = 0;
  invoke_v(183);
  $79 = __THREW__; __THREW__ = 0;
  $80 = $79&1;
  if ($80) {
   label = 40;
  } else {
   label = 8;
  }
 } else {
  label = 8;
 }
 L10: do {
  if ((label|0) == 8) {
   $81 = $17;
   $82 = $81<<3;
   $83 = ($82>>>0)<=(131072);
   $84 = $17;
   $85 = $84<<3;
   if ($83) {
    $86 = (($85) + 16)|0;
    $87 = (($86) - 1)|0;
    $$alloca_mul42 = $87;
    $88 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul42)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul42)|0)+15)&-16)|0);;
    $89 = $88;
    $90 = (($89) + 16)|0;
    $91 = (($90) - 1)|0;
    $92 = $91 & -16;
    $93 = $92;
    $97 = $93;
   } else {
    __THREW__ = 0;
    $94 = (invoke_ii(185,($85|0))|0);
    $95 = __THREW__; __THREW__ = 0;
    $96 = $95&1;
    if ($96) {
     label = 40;
     break;
    } else {
     $97 = $94;
    }
   }
   $23 = $97;
   $98 = $23;
   $99 = $17;
   $100 = $17;
   $101 = $100<<3;
   $102 = ($101>>>0)>(131072);
   __THREW__ = 0;
   invoke_viiii(186,($24|0),($98|0),($99|0),($102|0));
   $103 = __THREW__; __THREW__ = 0;
   $104 = $103&1;
   if ($104) {
    label = 40;
   } else {
    $105 = $17;
    $10 = $105;
    $106 = $10;
    $107 = ($106>>>0)>(1073741823);
    if ($107) {
     __THREW__ = 0;
     invoke_v(183);
     $108 = __THREW__; __THREW__ = 0;
     $109 = $108&1;
     if ($109) {
      label = 41;
     } else {
      label = 14;
     }
    } else {
     label = 14;
    }
    L19: do {
     if ((label|0) == 14) {
      $110 = $17;
      $111 = $110<<2;
      $112 = ($111>>>0)<=(131072);
      $113 = $17;
      $114 = $113<<2;
      if ($112) {
       $115 = (($114) + 16)|0;
       $116 = (($115) - 1)|0;
       $$alloca_mul44 = $116;
       $117 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul44)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul44)|0)+15)&-16)|0);;
       $118 = $117;
       $119 = (($118) + 16)|0;
       $120 = (($119) - 1)|0;
       $121 = $120 & -16;
       $122 = $121;
       $126 = $122;
      } else {
       __THREW__ = 0;
       $123 = (invoke_ii(185,($114|0))|0);
       $124 = __THREW__; __THREW__ = 0;
       $125 = $124&1;
       if ($125) {
        label = 41;
        break;
       } else {
        $126 = $123;
       }
      }
      $25 = $126;
      $127 = $25;
      $128 = $17;
      $129 = $17;
      $130 = $129<<2;
      $131 = ($130>>>0)>(131072);
      __THREW__ = 0;
      invoke_viiii(531,($26|0),($127|0),($128|0),($131|0));
      $132 = __THREW__; __THREW__ = 0;
      $133 = $132&1;
      if ($133) {
       label = 41;
      } else {
       $134 = $19;
       $135 = $17;
       $136 = $135;
       _memset(($134|0),0,($136|0))|0;
       $137 = $13;
       __THREW__ = 0;
       invoke_vii(532,($27|0),($137|0));
       $138 = __THREW__; __THREW__ = 0;
       $139 = $138&1;
       L26: do {
        if ($139) {
         label = 42;
        } else {
         $140 = $14;
         __THREW__ = 0;
         invoke_vii(533,($28|0),($140|0));
         $141 = __THREW__; __THREW__ = 0;
         $142 = $141&1;
         L28: do {
          if ($142) {
           label = 43;
          } else {
           __THREW__ = 0;
           $143 = (invoke_ii(534,($27|0))|0);
           $144 = __THREW__; __THREW__ = 0;
           $145 = $144&1;
           L30: do {
            if (!($145)) {
             __THREW__ = 0;
             $146 = (invoke_ii(535,($28|0))|0);
             $147 = __THREW__; __THREW__ = 0;
             $148 = $147&1;
             if (!($148)) {
              $149 = (($143) + ($146))|0;
              $29 = $149;
              $150 = $15;
              __THREW__ = 0;
              invoke_vi(536,($150|0));
              $151 = __THREW__; __THREW__ = 0;
              $152 = $151&1;
              if (!($152)) {
               $153 = $15;
               $154 = $29;
               __THREW__ = 0;
               invoke_vii(537,($153|0),($154|0));
               $155 = __THREW__; __THREW__ = 0;
               $156 = $155&1;
               if (!($156)) {
                $30 = 0;
                while(1) {
                 $157 = $30;
                 $158 = $18;
                 $159 = ($157|0)<($158|0);
                 $160 = $15;
                 if (!($159)) {
                  break;
                 }
                 $161 = $30;
                 __THREW__ = 0;
                 invoke_vii(538,($160|0),($161|0));
                 $162 = __THREW__; __THREW__ = 0;
                 $163 = $162&1;
                 if ($163) {
                  break L30;
                 }
                 $31 = 0;
                 $164 = $30;
                 __THREW__ = 0;
                 invoke_viii(539,($32|0),($28|0),($164|0));
                 $165 = __THREW__; __THREW__ = 0;
                 $166 = $165&1;
                 if ($166) {
                  break L30;
                 }
                 while(1) {
                  __THREW__ = 0;
                  $167 = (invoke_ii(510,($32|0))|0);
                  $168 = __THREW__; __THREW__ = 0;
                  $169 = $168&1;
                  if ($169) {
                   break L30;
                  }
                  if (!($167)) {
                   break;
                  }
                  __THREW__ = 0;
                  $170 = (invoke_ii(511,($32|0))|0);
                  $171 = __THREW__; __THREW__ = 0;
                  $172 = $171&1;
                  if ($172) {
                   break L30;
                  }
                  $173 = +HEAPF64[$170>>3];
                  $33 = $173;
                  __THREW__ = 0;
                  $174 = (invoke_ii(512,($32|0))|0);
                  $175 = __THREW__; __THREW__ = 0;
                  $176 = $175&1;
                  if ($176) {
                   break L30;
                  }
                  $34 = $174;
                  __THREW__ = 0;
                  $177 = (invoke_ii(463,($27|0))|0);
                  $178 = __THREW__; __THREW__ = 0;
                  $179 = $178&1;
                  if ($179) {
                   break L30;
                  }
                  $180 = $34;
                  __THREW__ = 0;
                  invoke_viii(464,($35|0),($177|0),($180|0));
                  $181 = __THREW__; __THREW__ = 0;
                  $182 = $181&1;
                  if ($182) {
                   break L30;
                  }
                  while(1) {
                   __THREW__ = 0;
                   $183 = (invoke_ii(465,($35|0))|0);
                   $184 = __THREW__; __THREW__ = 0;
                   $185 = $184&1;
                   if ($185) {
                    break L30;
                   }
                   if (!($183)) {
                    break;
                   }
                   __THREW__ = 0;
                   $186 = (invoke_ii(466,($35|0))|0);
                   $187 = __THREW__; __THREW__ = 0;
                   $188 = $187&1;
                   if ($188) {
                    break L30;
                   }
                   $36 = $186;
                   __THREW__ = 0;
                   $189 = (invoke_ii(469,($35|0))|0);
                   $190 = __THREW__; __THREW__ = 0;
                   $191 = $190&1;
                   if ($191) {
                    break L30;
                   }
                   $192 = +HEAPF64[$189>>3];
                   $37 = $192;
                   $193 = $19;
                   $194 = $36;
                   $195 = (($193) + ($194)|0);
                   $196 = HEAP8[$195>>0]|0;
                   $197 = $196&1;
                   if ($197) {
                    $225 = $37;
                    $226 = $33;
                    $227 = $225 * $226;
                    $228 = $23;
                    $229 = $36;
                    $230 = (($228) + ($229<<3)|0);
                    $231 = +HEAPF64[$230>>3];
                    $232 = $231 + $227;
                    HEAPF64[$230>>3] = $232;
                   } else {
                    $198 = $19;
                    $199 = $36;
                    $200 = (($198) + ($199)|0);
                    HEAP8[$200>>0] = 1;
                    $201 = $37;
                    $202 = $33;
                    $203 = $201 * $202;
                    $204 = $23;
                    $205 = $36;
                    $206 = (($204) + ($205<<3)|0);
                    HEAPF64[$206>>3] = $203;
                    $207 = $36;
                    $208 = $25;
                    $209 = $31;
                    $210 = (($208) + ($209<<2)|0);
                    HEAP32[$210>>2] = $207;
                    $211 = $31;
                    $212 = (($211) + 1)|0;
                    $31 = $212;
                   }
                   __THREW__ = 0;
                   (invoke_ii(467,($35|0))|0);
                   $233 = __THREW__; __THREW__ = 0;
                   $234 = $233&1;
                   if ($234) {
                    break L30;
                   }
                  }
                  __THREW__ = 0;
                  (invoke_ii(514,($32|0))|0);
                  $235 = __THREW__; __THREW__ = 0;
                  $236 = $235&1;
                  if ($236) {
                   break L30;
                  }
                 }
                 $237 = $16;
                 $238 = $237&1;
                 L58: do {
                  if ($238) {
                   $261 = $17;
                   $262 = (($261|0) / 11)&-1;
                   $40 = $262;
                   $263 = $17;
                   $264 = ($263*100)|0;
                   $265 = (($264|0) / 139)&-1;
                   $41 = $265;
                   $266 = $31;
                   $267 = ($266|0)<(200);
                   if ($267) {
                    $268 = $31;
                    $269 = $40;
                    $270 = ($268|0)<($269|0);
                    if (!($270)) {
                     label = 55;
                    }
                   } else {
                    label = 55;
                   }
                   do {
                    if ((label|0) == 55) {
                     label = 0;
                     $271 = $31;
                     $272 = $31;
                     __THREW__ = 0;
                     $273 = (invoke_ii(542,($272|0))|0);
                     $274 = __THREW__; __THREW__ = 0;
                     $275 = $274&1;
                     if ($275) {
                      break L30;
                     }
                     $276 = Math_imul($271, $273)|0;
                     $277 = $41;
                     $278 = ($276|0)<($277|0);
                     if ($278) {
                      break;
                     }
                     $44 = 0;
                     while(1) {
                      $313 = $44;
                      $314 = $17;
                      $315 = ($313|0)<($314|0);
                      if (!($315)) {
                       break L58;
                      }
                      $316 = $19;
                      $317 = $44;
                      $318 = (($316) + ($317)|0);
                      $319 = HEAP8[$318>>0]|0;
                      $320 = $319&1;
                      if ($320) {
                       $321 = $19;
                       $322 = $44;
                       $323 = (($321) + ($322)|0);
                       HEAP8[$323>>0] = 0;
                       $324 = $23;
                       $325 = $44;
                       $326 = (($324) + ($325<<3)|0);
                       $327 = +HEAPF64[$326>>3];
                       $328 = $15;
                       $329 = $30;
                       $330 = $44;
                       __THREW__ = 0;
                       $331 = (invoke_iiii(544,($328|0),($329|0),($330|0))|0);
                       $332 = __THREW__; __THREW__ = 0;
                       $333 = $332&1;
                       if ($333) {
                        break L30;
                       }
                       HEAPF64[$331>>3] = $327;
                      }
                      $334 = $44;
                      $335 = (($334) + 1)|0;
                      $44 = $335;
                     }
                    }
                   } while(0);
                   $279 = $31;
                   $280 = ($279|0)>(1);
                   if ($280) {
                    $281 = $25;
                    $282 = $25;
                    $283 = $31;
                    $284 = (($282) + ($283<<2)|0);
                    $7 = $281;
                    $8 = $284;
                    $285 = $7;
                    $286 = $8;
                    ;HEAP8[$6>>0]=HEAP8[$9>>0]|0;
                    $4 = $285;
                    $5 = $286;
                    $287 = $4;
                    $288 = $5;
                    __THREW__ = 0;
                    invoke_viii(543,($287|0),($288|0),($6|0));
                    $289 = __THREW__; __THREW__ = 0;
                    $290 = $289&1;
                    if ($290) {
                     break L30;
                    }
                   }
                   $42 = 0;
                   while(1) {
                    $291 = $42;
                    $292 = $31;
                    $293 = ($291|0)<($292|0);
                    if (!($293)) {
                     break L58;
                    }
                    $294 = $25;
                    $295 = $42;
                    $296 = (($294) + ($295<<2)|0);
                    $297 = HEAP32[$296>>2]|0;
                    $43 = $297;
                    $298 = $23;
                    $299 = $43;
                    $300 = (($298) + ($299<<3)|0);
                    $301 = +HEAPF64[$300>>3];
                    $302 = $15;
                    $303 = $30;
                    $304 = $43;
                    __THREW__ = 0;
                    $305 = (invoke_iiii(544,($302|0),($303|0),($304|0))|0);
                    $306 = __THREW__; __THREW__ = 0;
                    $307 = $306&1;
                    if ($307) {
                     break L30;
                    }
                    HEAPF64[$305>>3] = $301;
                    $308 = $19;
                    $309 = $43;
                    $310 = (($308) + ($309)|0);
                    HEAP8[$310>>0] = 0;
                    $311 = $42;
                    $312 = (($311) + 1)|0;
                    $42 = $312;
                   }
                  } else {
                   $38 = 0;
                   while(1) {
                    $239 = $38;
                    $240 = $31;
                    $241 = ($239|0)<($240|0);
                    if (!($241)) {
                     break L58;
                    }
                    $242 = $25;
                    $243 = $38;
                    $244 = (($242) + ($243<<2)|0);
                    $245 = HEAP32[$244>>2]|0;
                    $39 = $245;
                    $246 = $23;
                    $247 = $39;
                    $248 = (($246) + ($247<<3)|0);
                    $249 = +HEAPF64[$248>>3];
                    $250 = $15;
                    $251 = $30;
                    $252 = $39;
                    __THREW__ = 0;
                    $253 = (invoke_iiii(541,($250|0),($251|0),($252|0))|0);
                    $254 = __THREW__; __THREW__ = 0;
                    $255 = $254&1;
                    if ($255) {
                     break L30;
                    }
                    HEAPF64[$253>>3] = $249;
                    $256 = $19;
                    $257 = $39;
                    $258 = (($256) + ($257)|0);
                    HEAP8[$258>>0] = 0;
                    $259 = $38;
                    $260 = (($259) + 1)|0;
                    $38 = $260;
                   }
                  }
                 } while(0);
                 $336 = $30;
                 $337 = (($336) + 1)|0;
                 $30 = $337;
                }
                __THREW__ = 0;
                invoke_vi(545,($160|0));
                $338 = __THREW__; __THREW__ = 0;
                $339 = $338&1;
                if (!($339)) {
                 __THREW__ = 0;
                 invoke_vi(540,($28|0));
                 $340 = __THREW__; __THREW__ = 0;
                 $341 = $340&1;
                 if ($341) {
                  label = 43;
                  break L28;
                 }
                 __THREW__ = 0;
                 invoke_vi(471,($27|0));
                 $342 = __THREW__; __THREW__ = 0;
                 $343 = $342&1;
                 if ($343) {
                  label = 42;
                  break L26;
                 }
                 __THREW__ = 0;
                 invoke_vi(546,($26|0));
                 $344 = __THREW__; __THREW__ = 0;
                 $345 = $344&1;
                 if ($345) {
                  label = 41;
                  break L19;
                 }
                 __THREW__ = 0;
                 invoke_vi(189,($24|0));
                 $346 = __THREW__; __THREW__ = 0;
                 $347 = $346&1;
                 if ($347) {
                  label = 40;
                  break L10;
                 }
                 __ZN5Eigen8internal28aligned_stack_memory_handlerIbED2Ev($20);
                 STACKTOP = sp;return;
                }
               }
              }
             }
            }
           } while(0);
           $221 = ___cxa_find_matching_catch_2()|0;
           $222 = tempRet0;
           $21 = $221;
           $22 = $222;
           __THREW__ = 0;
           invoke_vi(540,($28|0));
           $223 = __THREW__; __THREW__ = 0;
           $224 = $223&1;
           if ($224) {
            $358 = ___cxa_find_matching_catch_3(0|0)|0;
            $359 = tempRet0;
            ___clang_call_terminate($358);
            // unreachable;
           }
          }
         } while(0);
         if ((label|0) == 43) {
          $219 = ___cxa_find_matching_catch_2()|0;
          $220 = tempRet0;
          $21 = $219;
          $22 = $220;
         }
         __THREW__ = 0;
         invoke_vi(471,($27|0));
         $348 = __THREW__; __THREW__ = 0;
         $349 = $348&1;
         if ($349) {
          $358 = ___cxa_find_matching_catch_3(0|0)|0;
          $359 = tempRet0;
          ___clang_call_terminate($358);
          // unreachable;
         }
        }
       } while(0);
       if ((label|0) == 42) {
        $217 = ___cxa_find_matching_catch_2()|0;
        $218 = tempRet0;
        $21 = $217;
        $22 = $218;
       }
       __THREW__ = 0;
       invoke_vi(546,($26|0));
       $350 = __THREW__; __THREW__ = 0;
       $351 = $350&1;
       if ($351) {
        $358 = ___cxa_find_matching_catch_3(0|0)|0;
        $359 = tempRet0;
        ___clang_call_terminate($358);
        // unreachable;
       }
      }
     }
    } while(0);
    if ((label|0) == 41) {
     $215 = ___cxa_find_matching_catch_2()|0;
     $216 = tempRet0;
     $21 = $215;
     $22 = $216;
    }
    __THREW__ = 0;
    invoke_vi(189,($24|0));
    $352 = __THREW__; __THREW__ = 0;
    $353 = $352&1;
    if ($353) {
     $358 = ___cxa_find_matching_catch_3(0|0)|0;
     $359 = tempRet0;
     ___clang_call_terminate($358);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 40) {
  $213 = ___cxa_find_matching_catch_2()|0;
  $214 = tempRet0;
  $21 = $213;
  $22 = $214;
 }
 __THREW__ = 0;
 invoke_vi(547,($20|0));
 $354 = __THREW__; __THREW__ = 0;
 $355 = $354&1;
 if ($355) {
  $358 = ___cxa_find_matching_catch_3(0|0)|0;
  $359 = tempRet0;
  ___clang_call_terminate($358);
  // unreachable;
 } else {
  $356 = $21;
  $357 = $22;
  ___resumeException($356|0);
  // unreachable;
 }
}
function __ZN5Eigen12SparseMatrixIdLi1EiEaSINS0_IdLi0EiEEEERS1_RKNS_16SparseMatrixBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0.0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $6 = sp;
 $7 = sp + 112|0;
 $10 = sp + 92|0;
 $11 = sp + 160|0;
 $13 = sp + 68|0;
 $15 = sp + 56|0;
 $16 = sp + 52|0;
 $20 = sp + 20|0;
 $2 = $0;
 $3 = $1;
 $22 = $2;
 $4 = 1;
 $23 = $3;
 $24 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($23)|0);
 $5 = $24;
 $25 = $5;
 __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEEC2ERKS3_($6,$25);
 $26 = $3;
 __THREW__ = 0;
 $27 = (invoke_ii(548,($26|0))|0);
 $28 = __THREW__; __THREW__ = 0;
 $29 = $28&1;
 L1: do {
  if ($29) {
   label = 17;
  } else {
   $30 = $3;
   __THREW__ = 0;
   $31 = (invoke_ii(549,($30|0))|0);
   $32 = __THREW__; __THREW__ = 0;
   $33 = $32&1;
   if ($33) {
    label = 17;
   } else {
    __THREW__ = 0;
    invoke_viii(527,($7|0),($27|0),($31|0));
    $34 = __THREW__; __THREW__ = 0;
    $35 = $34&1;
    if ($35) {
     label = 17;
    } else {
     $36 = ((($7)) + 12|0);
     $37 = HEAP32[$36>>2]|0;
     __THREW__ = 0;
     $38 = (invoke_ii(437,($7|0))|0);
     $39 = __THREW__; __THREW__ = 0;
     $40 = $39&1;
     L5: do {
      if ($40) {
       label = 18;
      } else {
       __THREW__ = 0;
       invoke_vi(460,($11|0));
       $41 = __THREW__; __THREW__ = 0;
       $42 = $41&1;
       if ($42) {
        label = 18;
       } else {
        __THREW__ = 0;
        invoke_viiii(461,($10|0),($37|0),($38|0),($11|0));
        $43 = __THREW__; __THREW__ = 0;
        $44 = $43&1;
        if ($44) {
         label = 18;
        } else {
         __THREW__ = 0;
         (invoke_ii(462,($10|0))|0);
         $45 = __THREW__; __THREW__ = 0;
         $46 = $45&1;
         if ($46) {
          label = 18;
         } else {
          $12 = 0;
          while(1) {
           $47 = $12;
           $48 = $5;
           __THREW__ = 0;
           $49 = (invoke_ii(459,($48|0))|0);
           $50 = __THREW__; __THREW__ = 0;
           $51 = $50&1;
           if ($51) {
            label = 18;
            break L5;
           }
           $52 = ($47|0)<($49|0);
           if (!($52)) {
            break;
           }
           __THREW__ = 0;
           $53 = (invoke_ii(508,($6|0))|0);
           $54 = __THREW__; __THREW__ = 0;
           $55 = $54&1;
           if ($55) {
            label = 18;
            break L5;
           }
           $56 = $12;
           __THREW__ = 0;
           invoke_viii(509,($13|0),($53|0),($56|0));
           $57 = __THREW__; __THREW__ = 0;
           $58 = $57&1;
           if ($58) {
            label = 18;
            break L5;
           }
           while(1) {
            __THREW__ = 0;
            $59 = (invoke_ii(510,($13|0))|0);
            $60 = __THREW__; __THREW__ = 0;
            $61 = $60&1;
            if ($61) {
             label = 18;
             break L5;
            }
            if (!($59)) {
             break;
            }
            $62 = ((($7)) + 12|0);
            $63 = HEAP32[$62>>2]|0;
            __THREW__ = 0;
            $64 = (invoke_ii(512,($13|0))|0);
            $65 = __THREW__; __THREW__ = 0;
            $66 = $65&1;
            if ($66) {
             label = 18;
             break L5;
            }
            $67 = (($63) + ($64<<2)|0);
            $68 = HEAP32[$67>>2]|0;
            $69 = (($68) + 1)|0;
            HEAP32[$67>>2] = $69;
            __THREW__ = 0;
            (invoke_ii(514,($13|0))|0);
            $70 = __THREW__; __THREW__ = 0;
            $71 = $70&1;
            if ($71) {
             label = 18;
             break L5;
            }
           }
           $76 = $12;
           $77 = (($76) + 1)|0;
           $12 = $77;
          }
          $14 = 0;
          __THREW__ = 0;
          $78 = (invoke_ii(437,($7|0))|0);
          $79 = __THREW__; __THREW__ = 0;
          $80 = $79&1;
          if ($80) {
           label = 18;
          } else {
           HEAP32[$16>>2] = $78;
           __THREW__ = 0;
           invoke_vii(438,($15|0),($16|0));
           $81 = __THREW__; __THREW__ = 0;
           $82 = $81&1;
           if ($82) {
            label = 18;
           } else {
            $17 = 0;
            while(1) {
             $83 = $17;
             __THREW__ = 0;
             $84 = (invoke_ii(437,($7|0))|0);
             $85 = __THREW__; __THREW__ = 0;
             $86 = $85&1;
             if ($86) {
              break;
             }
             $87 = ($83|0)<($84|0);
             if (!($87)) {
              label = 28;
              break;
             }
             $88 = ((($7)) + 12|0);
             $89 = HEAP32[$88>>2]|0;
             $90 = $17;
             $91 = (($89) + ($90<<2)|0);
             $92 = HEAP32[$91>>2]|0;
             $18 = $92;
             $93 = $14;
             $94 = ((($7)) + 12|0);
             $95 = HEAP32[$94>>2]|0;
             $96 = $17;
             $97 = (($95) + ($96<<2)|0);
             HEAP32[$97>>2] = $93;
             $98 = $14;
             $99 = $17;
             __THREW__ = 0;
             $100 = (invoke_iii(468,($15|0),($99|0))|0);
             $101 = __THREW__; __THREW__ = 0;
             $102 = $101&1;
             if ($102) {
              break;
             }
             HEAP32[$100>>2] = $98;
             $103 = $18;
             $104 = $14;
             $105 = (($104) + ($103))|0;
             $14 = $105;
             $106 = $17;
             $107 = (($106) + 1)|0;
             $17 = $107;
            }
            L29: do {
             if ((label|0) == 28) {
              $112 = $14;
              $113 = ((($7)) + 12|0);
              $114 = HEAP32[$113>>2]|0;
              __THREW__ = 0;
              $115 = (invoke_ii(437,($7|0))|0);
              $116 = __THREW__; __THREW__ = 0;
              $117 = $116&1;
              if (!($117)) {
               $118 = (($114) + ($115<<2)|0);
               HEAP32[$118>>2] = $112;
               $119 = ((($7)) + 20|0);
               $120 = $14;
               __THREW__ = 0;
               invoke_viid(456,($119|0),($120|0),0.0);
               $121 = __THREW__; __THREW__ = 0;
               $122 = $121&1;
               if (!($122)) {
                $19 = 0;
                while(1) {
                 $123 = $19;
                 $124 = $5;
                 __THREW__ = 0;
                 $125 = (invoke_ii(459,($124|0))|0);
                 $126 = __THREW__; __THREW__ = 0;
                 $127 = $126&1;
                 if ($127) {
                  break L29;
                 }
                 $128 = ($123|0)<($125|0);
                 if (!($128)) {
                  break;
                 }
                 __THREW__ = 0;
                 $129 = (invoke_ii(508,($6|0))|0);
                 $130 = __THREW__; __THREW__ = 0;
                 $131 = $130&1;
                 if ($131) {
                  break L29;
                 }
                 $132 = $19;
                 __THREW__ = 0;
                 invoke_viii(509,($20|0),($129|0),($132|0));
                 $133 = __THREW__; __THREW__ = 0;
                 $134 = $133&1;
                 if ($134) {
                  break L29;
                 }
                 while(1) {
                  __THREW__ = 0;
                  $135 = (invoke_ii(510,($20|0))|0);
                  $136 = __THREW__; __THREW__ = 0;
                  $137 = $136&1;
                  if ($137) {
                   break L29;
                  }
                  if (!($135)) {
                   break;
                  }
                  __THREW__ = 0;
                  $138 = (invoke_ii(512,($20|0))|0);
                  $139 = __THREW__; __THREW__ = 0;
                  $140 = $139&1;
                  if ($140) {
                   break L29;
                  }
                  __THREW__ = 0;
                  $141 = (invoke_iii(468,($15|0),($138|0))|0);
                  $142 = __THREW__; __THREW__ = 0;
                  $143 = $142&1;
                  if ($143) {
                   break L29;
                  }
                  $144 = HEAP32[$141>>2]|0;
                  $145 = (($144) + 1)|0;
                  HEAP32[$141>>2] = $145;
                  $21 = $144;
                  $146 = $19;
                  $147 = ((($7)) + 20|0);
                  $148 = $21;
                  __THREW__ = 0;
                  $149 = (invoke_iii(453,($147|0),($148|0))|0);
                  $150 = __THREW__; __THREW__ = 0;
                  $151 = $150&1;
                  if ($151) {
                   break L29;
                  }
                  HEAP32[$149>>2] = $146;
                  __THREW__ = 0;
                  $152 = (invoke_ii(511,($20|0))|0);
                  $153 = __THREW__; __THREW__ = 0;
                  $154 = $153&1;
                  if ($154) {
                   break L29;
                  }
                  $155 = +HEAPF64[$152>>3];
                  $156 = ((($7)) + 20|0);
                  $157 = $21;
                  __THREW__ = 0;
                  $158 = (invoke_iii(454,($156|0),($157|0))|0);
                  $159 = __THREW__; __THREW__ = 0;
                  $160 = $159&1;
                  if ($160) {
                   break L29;
                  }
                  HEAPF64[$158>>3] = $155;
                  __THREW__ = 0;
                  (invoke_ii(514,($20|0))|0);
                  $161 = __THREW__; __THREW__ = 0;
                  $162 = $161&1;
                  if ($162) {
                   break L29;
                  }
                 }
                 $163 = $19;
                 $164 = (($163) + 1)|0;
                 $19 = $164;
                }
                __THREW__ = 0;
                invoke_vii(550,($22|0),($7|0));
                $165 = __THREW__; __THREW__ = 0;
                $166 = $165&1;
                if (!($166)) {
                 __THREW__ = 0;
                 invoke_vi(442,($15|0));
                 $167 = __THREW__; __THREW__ = 0;
                 $168 = $167&1;
                 if ($168) {
                  label = 18;
                  break L5;
                 }
                 __THREW__ = 0;
                 invoke_vi(449,($7|0));
                 $169 = __THREW__; __THREW__ = 0;
                 $170 = $169&1;
                 if ($170) {
                  label = 17;
                  break L1;
                 }
                 __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEED2Ev($6);
                 STACKTOP = sp;return ($22|0);
                }
               }
              }
             }
            } while(0);
            $108 = ___cxa_find_matching_catch_2()|0;
            $109 = tempRet0;
            $8 = $108;
            $9 = $109;
            __THREW__ = 0;
            invoke_vi(442,($15|0));
            $110 = __THREW__; __THREW__ = 0;
            $111 = $110&1;
            if ($111) {
             $177 = ___cxa_find_matching_catch_3(0|0)|0;
             $178 = tempRet0;
             ___clang_call_terminate($177);
             // unreachable;
            }
           }
          }
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 18) {
      $74 = ___cxa_find_matching_catch_2()|0;
      $75 = tempRet0;
      $8 = $74;
      $9 = $75;
     }
     __THREW__ = 0;
     invoke_vi(449,($7|0));
     $171 = __THREW__; __THREW__ = 0;
     $172 = $171&1;
     if ($172) {
      $177 = ___cxa_find_matching_catch_3(0|0)|0;
      $178 = tempRet0;
      ___clang_call_terminate($177);
      // unreachable;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 17) {
  $72 = ___cxa_find_matching_catch_2()|0;
  $73 = tempRet0;
  $8 = $72;
  $9 = $73;
 }
 __THREW__ = 0;
 invoke_vi(517,($6|0));
 $173 = __THREW__; __THREW__ = 0;
 $174 = $173&1;
 if ($174) {
  $177 = ___cxa_find_matching_catch_3(0|0)|0;
  $178 = tempRet0;
  ___clang_call_terminate($177);
  // unreachable;
 } else {
  $175 = $8;
  $176 = $9;
  ___resumeException($175|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen12SparseMatrixIdLi1EiE4swapERS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $7 = sp + 80|0;
 $13 = sp + 56|0;
 $19 = sp + 32|0;
 $25 = sp + 8|0;
 $26 = $0;
 $27 = $1;
 $28 = $26;
 $29 = ((($28)) + 12|0);
 $30 = $27;
 $31 = ((($30)) + 12|0);
 $23 = $29;
 $24 = $31;
 $32 = $23;
 $22 = $32;
 $33 = $22;
 $34 = HEAP32[$33>>2]|0;
 HEAP32[$25>>2] = $34;
 $35 = $24;
 $20 = $35;
 $36 = $20;
 $37 = HEAP32[$36>>2]|0;
 $38 = $23;
 HEAP32[$38>>2] = $37;
 $21 = $25;
 $39 = $21;
 $40 = HEAP32[$39>>2]|0;
 $41 = $24;
 HEAP32[$41>>2] = $40;
 $42 = ((($28)) + 8|0);
 $43 = $27;
 $44 = ((($43)) + 8|0);
 $17 = $42;
 $18 = $44;
 $45 = $17;
 $16 = $45;
 $46 = $16;
 $47 = HEAP32[$46>>2]|0;
 HEAP32[$19>>2] = $47;
 $48 = $18;
 $14 = $48;
 $49 = $14;
 $50 = HEAP32[$49>>2]|0;
 $51 = $17;
 HEAP32[$51>>2] = $50;
 $15 = $19;
 $52 = $15;
 $53 = HEAP32[$52>>2]|0;
 $54 = $18;
 HEAP32[$54>>2] = $53;
 $55 = ((($28)) + 4|0);
 $56 = $27;
 $57 = ((($56)) + 4|0);
 $5 = $55;
 $6 = $57;
 $58 = $5;
 $4 = $58;
 $59 = $4;
 $60 = HEAP32[$59>>2]|0;
 HEAP32[$7>>2] = $60;
 $61 = $6;
 $2 = $61;
 $62 = $2;
 $63 = HEAP32[$62>>2]|0;
 $64 = $5;
 HEAP32[$64>>2] = $63;
 $3 = $7;
 $65 = $3;
 $66 = HEAP32[$65>>2]|0;
 $67 = $6;
 HEAP32[$67>>2] = $66;
 $68 = ((($28)) + 16|0);
 $69 = $27;
 $70 = ((($69)) + 16|0);
 $11 = $68;
 $12 = $70;
 $71 = $11;
 $10 = $71;
 $72 = $10;
 $73 = HEAP32[$72>>2]|0;
 HEAP32[$13>>2] = $73;
 $74 = $12;
 $8 = $74;
 $75 = $8;
 $76 = HEAP32[$75>>2]|0;
 $77 = $11;
 HEAP32[$77>>2] = $76;
 $9 = $13;
 $78 = $9;
 $79 = HEAP32[$78>>2]|0;
 $80 = $12;
 HEAP32[$80>>2] = $79;
 $81 = ((($28)) + 20|0);
 $82 = $27;
 $83 = ((($82)) + 20|0);
 __ZN5Eigen8internal17CompressedStorageIdiE4swapERS2_($81,$83);
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEE4colsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal28aligned_stack_memory_handlerIbEC2EPbjb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $8 = $3&1;
 $7 = $8;
 $9 = $4;
 __ZN5Eigen8internal11noncopyableC2Ev($9);
 $10 = $5;
 HEAP32[$9>>2] = $10;
 $11 = ((($9)) + 4|0);
 $12 = $6;
 HEAP32[$11>>2] = $12;
 $13 = ((($9)) + 8|0);
 $14 = $7;
 $15 = $14&1;
 $16 = $15&1;
 HEAP8[$13>>0] = $16;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal28aligned_stack_memory_handlerIiEC2EPijb($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $8 = $3&1;
 $7 = $8;
 $9 = $4;
 __ZN5Eigen8internal11noncopyableC2Ev($9);
 $10 = $5;
 HEAP32[$9>>2] = $10;
 $11 = ((($9)) + 4|0);
 $12 = $6;
 HEAP32[$11>>2] = $12;
 $13 = ((($9)) + 8|0);
 $14 = $7;
 $15 = $14&1;
 $16 = $15&1;
 HEAP8[$13>>0] = $16;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_12SparseMatrixIdLi0EiEEEENS0_13IteratorBasedEdEC2ERKS5_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEEEE16nonZerosEstimateEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE8nonZerosEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal15unary_evaluatorINS_9TransposeINS_12SparseMatrixIdLi0EiEEEENS0_13IteratorBasedEdE16nonZerosEstimateEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEE16nonZerosEstimateEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen12SparseMatrixIdLi1EiE7setZeroEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0);
 __ZN5Eigen8internal17CompressedStorageIdiE5clearEv($3);
 $4 = ((($2)) + 12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($2)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($7) + 1)|0;
 $9 = $8<<2;
 _memset(($5|0),0,($9|0))|0;
 $10 = ((($2)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)!=(0|0);
 if (!($12)) {
  STACKTOP = sp;return;
 }
 $13 = ((($2)) + 16|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($2)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $16<<2;
 _memset(($14|0),0,($17|0))|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen12SparseMatrixIdLi1EiE7reserveEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE12isCompressedEv($4)|0);
 if ($5) {
  $6 = ((($4)) + 20|0);
  $7 = $3;
  __ZN5Eigen8internal17CompressedStorageIdiE7reserveEi($6,$7);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5641|0),(5438|0),264,(5719|0));
  // unreachable;
 }
}
function __ZN5Eigen12SparseMatrixIdLi1EiE8startVecEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $3;
 $8 = (($6) + ($7<<2)|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($4)) + 20|0);
 $11 = (__ZNK5Eigen8internal17CompressedStorageIdiE4sizeEv($10)|0);
 $12 = ($9|0)==($11|0);
 if (!($12)) {
  ___assert_fail((5727|0),(5438|0),414,(5832|0));
  // unreachable;
 }
 $13 = ((($4)) + 12|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $3;
 $16 = (($15) + 1)|0;
 $17 = (($14) + ($16<<2)|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0);
 if ($19) {
  $20 = ((($4)) + 12|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = $3;
  $23 = (($21) + ($22<<2)|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ((($4)) + 12|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = $3;
  $28 = (($27) + 1)|0;
  $29 = (($26) + ($28<<2)|0);
  HEAP32[$29>>2] = $24;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5841|0),(5438|0),415,(5832|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_12SparseMatrixIdLi0EiEEEENS0_13IteratorBasedEdE13InnerIteratorC2ERKS7_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = ((($7)) + 8|0);
 $9 = (__ZNK5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEEcvRKS4_Ev($8)|0);
 $10 = $5;
 __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorC2ERKS3_i($6,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen12SparseMatrixIdLi1EiE31insertBackByOuterInnerUnorderedEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = ((($8)) + 12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = (($11) + 1)|0;
 $13 = (($10) + ($12<<2)|0);
 $14 = HEAP32[$13>>2]|0;
 $6 = $14;
 $15 = ((($8)) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $4;
 $18 = (($17) + 1)|0;
 $19 = (($16) + ($18<<2)|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (($20) + 1)|0;
 HEAP32[$19>>2] = $21;
 $22 = ((($8)) + 20|0);
 HEAPF64[$7>>3] = 0.0;
 $23 = $5;
 __ZN5Eigen8internal17CompressedStorageIdiE6appendERKdi($22,$7,$23);
 $24 = ((($8)) + 20|0);
 $25 = $6;
 $26 = (__ZN5Eigen8internal17CompressedStorageIdiE5valueEi($24,$25)|0);
 STACKTOP = sp;return ($26|0);
}
function __ZN5Eigen6numext4log2Ei($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1;
 $4 = ($3|0)>=(0);
 if ($4) {
  $5 = $1;
  $2 = $5;
  $6 = $2;
  $7 = $6 >>> 1;
  $8 = $2;
  $9 = $8 | $7;
  $2 = $9;
  $10 = $2;
  $11 = $10 >>> 2;
  $12 = $2;
  $13 = $12 | $11;
  $2 = $13;
  $14 = $2;
  $15 = $14 >>> 4;
  $16 = $2;
  $17 = $16 | $15;
  $2 = $17;
  $18 = $2;
  $19 = $18 >>> 8;
  $20 = $2;
  $21 = $20 | $19;
  $2 = $21;
  $22 = $2;
  $23 = $22 >>> 16;
  $24 = $2;
  $25 = $24 | $23;
  $2 = $25;
  $26 = $2;
  $27 = Math_imul($26, 130329821)|0;
  $28 = $27 >>> 27;
  $29 = (152 + ($28<<2)|0);
  $30 = HEAP32[$29>>2]|0;
  STACKTOP = sp;return ($30|0);
 } else {
  ___assert_fail((6328|0),(6333|0),1020,(6372|0));
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen12SparseMatrixIdLi1EiE22insertBackByOuterInnerEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 $9 = ((($8)) + 12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $4;
 $12 = (($11) + 1)|0;
 $13 = (($10) + ($12<<2)|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($8)) + 20|0);
 $16 = (__ZNK5Eigen8internal17CompressedStorageIdiE4sizeEv($15)|0);
 $17 = ($14|0)==($16|0);
 if (!($17)) {
  ___assert_fail((5929|0),(5438|0),392,(6028|0));
  // unreachable;
 }
 $18 = ((($8)) + 12|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $4;
 $21 = (($20) + 1)|0;
 $22 = (($19) + ($21<<2)|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($8)) + 12|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = $4;
 $27 = (($25) + ($26<<2)|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (($23) - ($28))|0;
 $30 = ($29|0)==(0);
 if (!($30)) {
  $31 = ((($8)) + 20|0);
  $32 = ((($8)) + 20|0);
  $33 = (__ZNK5Eigen8internal17CompressedStorageIdiE4sizeEv($32)|0);
  $34 = (($33) - 1)|0;
  $35 = (__ZN5Eigen8internal17CompressedStorageIdiE5indexEi($31,$34)|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = $5;
  $38 = ($36|0)<($37|0);
  if (!($38)) {
   ___assert_fail((6051|0),(5438|0),393,(6028|0));
   // unreachable;
  }
 }
 $39 = ((($8)) + 12|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = $4;
 $42 = (($41) + 1)|0;
 $43 = (($40) + ($42<<2)|0);
 $44 = HEAP32[$43>>2]|0;
 $6 = $44;
 $45 = ((($8)) + 12|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = $4;
 $48 = (($47) + 1)|0;
 $49 = (($46) + ($48<<2)|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = (($50) + 1)|0;
 HEAP32[$49>>2] = $51;
 $52 = ((($8)) + 20|0);
 HEAPF64[$7>>3] = 0.0;
 $53 = $5;
 __ZN5Eigen8internal17CompressedStorageIdiE6appendERKdi($52,$7,$53);
 $54 = ((($8)) + 20|0);
 $55 = $6;
 $56 = (__ZN5Eigen8internal17CompressedStorageIdiE5valueEi($54,$55)|0);
 STACKTOP = sp;return ($56|0);
}
function __ZN5Eigen12SparseMatrixIdLi1EiE8finalizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 4|0;
 $1 = $0;
 $5 = $1;
 $6 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE12isCompressedEv($5)|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = ((($5)) + 20|0);
 $8 = (__ZNK5Eigen8internal17CompressedStorageIdiE4sizeEv($7)|0);
 HEAP32[$3>>2] = $8;
 $9 = (__ZN5Eigen8internal13convert_indexIiiEET_RKT0_($3)|0);
 $2 = $9;
 $10 = ((($5)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $4 = $11;
 while(1) {
  $12 = $4;
  $13 = ($12|0)>=(0);
  if ($13) {
   $14 = ((($5)) + 12|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = $4;
   $17 = (($15) + ($16<<2)|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($18|0)==(0);
   $34 = $19;
  } else {
   $34 = 0;
  }
  $20 = $4;
  if (!($34)) {
   break;
  }
  $21 = (($20) + -1)|0;
  $4 = $21;
 }
 $22 = (($20) + 1)|0;
 $4 = $22;
 while(1) {
  $23 = $4;
  $24 = ((($5)) + 4|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ($23|0)<=($25|0);
  if (!($26)) {
   break;
  }
  $27 = $2;
  $28 = ((($5)) + 12|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = $4;
  $31 = (($29) + ($30<<2)|0);
  HEAP32[$31>>2] = $27;
  $32 = $4;
  $33 = (($32) + 1)|0;
  $4 = $33;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_12SparseMatrixIdLi0EiEEEENS0_13IteratorBasedEdED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal28aligned_stack_memory_handlerIiED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 8|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal11noncopyableD2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = HEAP32[$4>>2]|0;
 __THREW__ = 0;
 invoke_vi(191,($8|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  __ZN5Eigen8internal11noncopyableD2Ev($4);
  STACKTOP = sp;return;
 }
 $11 = ___cxa_find_matching_catch_2()|0;
 $12 = tempRet0;
 $2 = $11;
 $3 = $12;
 __THREW__ = 0;
 invoke_vi(192,($4|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  $17 = ___cxa_find_matching_catch_3(0|0)|0;
  $18 = tempRet0;
  ___clang_call_terminate($17);
  // unreachable;
 } else {
  $15 = $2;
  $16 = $3;
  ___resumeException($15|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal28aligned_stack_memory_handlerIbED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 8|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal11noncopyableD2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = HEAP32[$4>>2]|0;
 __THREW__ = 0;
 invoke_vi(191,($8|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  __ZN5Eigen8internal11noncopyableD2Ev($4);
  STACKTOP = sp;return;
 }
 $11 = ___cxa_find_matching_catch_2()|0;
 $12 = tempRet0;
 $2 = $11;
 $3 = $12;
 __THREW__ = 0;
 invoke_vi(192,($4|0));
 $13 = __THREW__; __THREW__ = 0;
 $14 = $13&1;
 if ($14) {
  $17 = ___cxa_find_matching_catch_3(0|0)|0;
  $18 = tempRet0;
  ___clang_call_terminate($17);
  // unreachable;
 } else {
  $15 = $2;
  $16 = $3;
  ___resumeException($15|0);
  // unreachable;
 }
}
function __ZNK5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen9TransposeINS_12SparseMatrixIdLi0EiEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen9TransposeINS_12SparseMatrixIdLi0EiEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_12SparseMatrixIdLi0EiEEEENS0_13IteratorBasedEdEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEEC2Ev($6);
 $7 = ((($6)) + 8|0);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(551,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  __THREW__ = 0;
  invoke_vii(522,($7|0),($9|0));
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if (!($13)) {
   STACKTOP = sp;return;
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $4 = $14;
 $5 = $15;
 __THREW__ = 0;
 invoke_vi(552,($6|0));
 $16 = __THREW__; __THREW__ = 0;
 $17 = $16&1;
 if ($17) {
  $20 = ___cxa_find_matching_catch_3(0|0)|0;
  $21 = tempRet0;
  ___clang_call_terminate($20);
  // unreachable;
 } else {
  $18 = $4;
  $19 = $5;
  ___resumeException($18|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9TransposeINS_12SparseMatrixIdLi0EiEEE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE8nonZerosEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp;
 $2 = $0;
 $4 = $2;
 $5 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE12isCompressedEv($4)|0);
 if ($5) {
  $6 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13outerIndexPtrEv($4)|0);
  $7 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE7derivedEv($4)|0);
  $8 = (__ZNK5Eigen12SparseMatrixIdLi1EiE9outerSizeEv($7)|0);
  $9 = (($6) + ($8<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13outerIndexPtrEv($4)|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($10) - ($12))|0;
  $1 = $13;
  $18 = $1;
  STACKTOP = sp;return ($18|0);
 }
 $14 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE7derivedEv($4)|0);
 $15 = (__ZNK5Eigen12SparseMatrixIdLi1EiE9outerSizeEv($14)|0);
 $16 = ($15|0)==(0);
 if ($16) {
  $1 = 0;
  $18 = $1;
  STACKTOP = sp;return ($18|0);
 } else {
  __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13innerNonZerosEv($3,$4);
  $17 = (__ZNK5Eigen9DenseBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE3sumEv($3)|0);
  $1 = $17;
  $18 = $1;
  STACKTOP = sp;return ($18|0);
 }
 return (0)|0;
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13innerNonZerosEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 4|0;
 $2 = $1;
 $4 = $2;
 $5 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE15innerNonZeroPtrEv($4)|0);
 $6 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE12isCompressedEv($4)|0);
 if ($6) {
  $9 = 0;
 } else {
  $7 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE7derivedEv($4)|0);
  $8 = (__ZNK5Eigen12SparseMatrixIdLi1EiE9outerSizeEv($7)|0);
  $9 = $8;
 }
 __ZN5Eigen6StrideILi0ELi0EEC2Ev($3);
 __ZN5Eigen3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEC2EPKiiRKS5_($0,$5,$9,$3);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9DenseBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE3sumEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 8|0;
 $2 = $0;
 $4 = $2;
 $5 = (__ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4sizeEv($4)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  $1 = 0;
  $9 = $1;
  STACKTOP = sp;return ($9|0);
 } else {
  $7 = (__ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE7derivedEv($4)|0);
  __ZN5Eigen8internal13scalar_sum_opIiiEC2Ev($3);
  $8 = (__ZNK5Eigen9DenseBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE5reduxINS_8internal13scalar_sum_opIiiEEEEiRKT_($7,$3)|0);
  $1 = $8;
  $9 = $1;
  STACKTOP = sp;return ($9|0);
 }
 return (0)|0;
}
function __ZN5Eigen3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEC2EPKiiRKS5_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = (__ZN5Eigen3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEE20cast_to_pointer_typeEPKi($8,$9)|0);
 $11 = $6;
 __ZN5Eigen7MapBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EEC2EPKii($8,$10,$11);
 $12 = ((($8)) + 9|0);
 $13 = $7;
 __ZN5Eigen6StrideILi0ELi0EEC2ERKS1_($12,$13);
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE22_check_template_paramsEv();
 STACKTOP = sp;return;
}
function __ZN5Eigen3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEE20cast_to_pointer_typeEPKi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen7MapBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EEC2EPKii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen10MatrixBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($6);
 $7 = $4;
 HEAP32[$6>>2] = $7;
 $8 = ((($6)) + 4|0);
 $9 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($8,$9);
 $10 = ((($6)) + 8|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($10,1);
 $11 = $5;
 $12 = ($11|0)>=(0);
 if ($12) {
  __ZNK5Eigen7MapBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE11checkSanityIS7_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($6,0);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5628|0),(2705|0),163,(2738|0));
  // unreachable;
 }
}
function __ZN5Eigen10MatrixBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE11checkSanityIS7_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9DenseBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE5reduxINS_8internal13scalar_sum_opIiiEEEEiRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = (__ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4rowsEv($7)|0);
 $9 = ($8|0)>(0);
 if (!($9)) {
  ___assert_fail((2930|0),(2998|0),413,(3029|0));
  // unreachable;
 }
 $10 = (__ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4colsEv($7)|0);
 $11 = ($10|0)>(0);
 if (!($11)) {
  ___assert_fail((2930|0),(2998|0),413,(3029|0));
  // unreachable;
 }
 $12 = (__ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE7derivedEv($7)|0);
 __ZN5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2ERKS8_($4,$12);
 $13 = $3;
 __THREW__ = 0;
 $14 = (invoke_iii(553,($4|0),($13|0))|0);
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if (!($16)) {
  __ZN5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEED2Ev($4);
  STACKTOP = sp;return ($14|0);
 }
 $17 = ___cxa_find_matching_catch_2()|0;
 $18 = tempRet0;
 $5 = $17;
 $6 = $18;
 __THREW__ = 0;
 invoke_vi(554,($4|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $23 = ___cxa_find_matching_catch_3(0|0)|0;
  $24 = tempRet0;
  ___clang_call_terminate($23);
  // unreachable;
 } else {
  $21 = $5;
  $22 = $6;
  ___resumeException($21|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen8internal13scalar_sum_opIiiEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7MapBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7MapBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2ERKS8_($4,$5);
 $6 = ((($4)) + 12|0);
 $7 = $3;
 HEAP32[$6>>2] = $7;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10redux_implINS0_13scalar_sum_opIiiEENS0_15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEELi0ELi0EE3runERKSC_RKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 20|0;
 $6 = sp + 12|0;
 $9 = sp;
 $2 = $0;
 $3 = $1;
 $10 = $2;
 $11 = (__ZNK5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4rowsEv($10)|0);
 $12 = ($11|0)>(0);
 if (!($12)) {
  ___assert_fail((3254|0),(2998|0),192,(2040|0));
  // unreachable;
 }
 $13 = $2;
 $14 = (__ZNK5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4colsEv($13)|0);
 $15 = ($14|0)>(0);
 if (!($15)) {
  ___assert_fail((3254|0),(2998|0),192,(2040|0));
  // unreachable;
 }
 $16 = $2;
 $17 = (__ZNK5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE17coeffByOuterInnerEii($16,0,0)|0);
 HEAP32[$4>>2] = $17;
 $5 = 1;
 while(1) {
  $18 = $5;
  $19 = $2;
  $20 = (__ZNK5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE9innerSizeEv($19)|0);
  $21 = ($18|0)<($20|0);
  if (!($21)) {
   break;
  }
  $22 = $3;
  $23 = $2;
  $24 = $5;
  $25 = (__ZNK5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE17coeffByOuterInnerEii($23,0,$24)|0);
  HEAP32[$6>>2] = $25;
  $26 = (__ZNK5Eigen8internal13scalar_sum_opIiiEclERKiS4_($22,$4,$6)|0);
  HEAP32[$4>>2] = $26;
  $27 = $5;
  $28 = (($27) + 1)|0;
  $5 = $28;
 }
 $7 = 1;
 while(1) {
  $29 = $7;
  $30 = $2;
  $31 = (__ZNK5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE9outerSizeEv($30)|0);
  $32 = ($29|0)<($31|0);
  if (!($32)) {
   break;
  }
  $8 = 0;
  while(1) {
   $33 = $8;
   $34 = $2;
   $35 = (__ZNK5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE9innerSizeEv($34)|0);
   $36 = ($33|0)<($35|0);
   if (!($36)) {
    break;
   }
   $37 = $3;
   $38 = $2;
   $39 = $7;
   $40 = $8;
   $41 = (__ZNK5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE17coeffByOuterInnerEii($38,$39,$40)|0);
   HEAP32[$9>>2] = $41;
   $42 = (__ZNK5Eigen8internal13scalar_sum_opIiiEclERKiS4_($37,$4,$9)|0);
   HEAP32[$4>>2] = $42;
   $43 = $8;
   $44 = (($43) + 1)|0;
   $8 = $44;
  }
  $45 = $7;
  $46 = (($45) + 1)|0;
  $7 = $46;
 }
 $47 = HEAP32[$4>>2]|0;
 STACKTOP = sp;return ($47|0);
}
function __ZN5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES5_EC2ERKS8_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES5_EC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(555,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(556,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(166,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(557,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(121,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(558,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1;
}
function __ZNK5Eigen3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen7MapBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4rowsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen7MapBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE17coeffByOuterInnerEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $5;
 $8 = $4;
 $9 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES5_E5coeffEii($6,$7,$8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE9innerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal13scalar_sum_opIiiEclERKiS4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4;
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + ($9))|0;
 STACKTOP = sp;return ($10|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE9outerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES5_E5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES5_E9colStrideEv($6)|0);
 $10 = Math_imul($8, $9)|0;
 $11 = $4;
 $12 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES5_E9rowStrideEv($6)|0);
 $13 = Math_imul($11, $12)|0;
 $14 = (($10) + ($13))|0;
 $15 = (($7) + ($14<<2)|0);
 $16 = HEAP32[$15>>2]|0;
 STACKTOP = sp;return ($16|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES5_E9colStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES5_E9rowStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9DenseBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen9DenseBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1;
}
function __ZN5Eigen8internal9evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES5_ED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEES5_ED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEE16nonZerosEstimateEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE8nonZerosEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE8nonZerosEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp;
 $2 = $0;
 $4 = $2;
 $5 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE12isCompressedEv($4)|0);
 if ($5) {
  $6 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13outerIndexPtrEv($4)|0);
  $7 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($4)|0);
  $8 = (__ZNK5Eigen12SparseMatrixIdLi0EiE9outerSizeEv($7)|0);
  $9 = (($6) + ($8<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13outerIndexPtrEv($4)|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (($10) - ($12))|0;
  $1 = $13;
  $18 = $1;
  STACKTOP = sp;return ($18|0);
 }
 $14 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($4)|0);
 $15 = (__ZNK5Eigen12SparseMatrixIdLi0EiE9outerSizeEv($14)|0);
 $16 = ($15|0)==(0);
 if ($16) {
  $1 = 0;
  $18 = $1;
  STACKTOP = sp;return ($18|0);
 } else {
  __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13innerNonZerosEv($3,$4);
  $17 = (__ZNK5Eigen9DenseBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE3sumEv($3)|0);
  $1 = $17;
  $18 = $1;
  STACKTOP = sp;return ($18|0);
 }
 return (0)|0;
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13innerNonZerosEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 4|0;
 $2 = $1;
 $4 = $2;
 $5 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE15innerNonZeroPtrEv($4)|0);
 $6 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE12isCompressedEv($4)|0);
 if ($6) {
  $9 = 0;
 } else {
  $7 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($4)|0);
  $8 = (__ZNK5Eigen12SparseMatrixIdLi0EiE9outerSizeEv($7)|0);
  $9 = $8;
 }
 __ZN5Eigen6StrideILi0ELi0EEC2Ev($3);
 __ZN5Eigen3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEC2EPKiiRKS5_($0,$5,$9,$3);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEEcvRKS4_Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_12SparseMatrixIdLi0EiEEEENS0_13IteratorBasedEdED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 8|0);
 __THREW__ = 0;
 invoke_vi(517,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch_2()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 __THREW__ = 0;
 invoke_vi(552,($4|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $2;
  $13 = $3;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES5_Li2EEELi8ENS_11SparseShapeES8_ddED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 16|0);
 __THREW__ = 0;
 invoke_vi(63,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch_2()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 __THREW__ = 0;
 invoke_vi(517,($4|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $2;
  $13 = $3;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __ZN5Eigen16SparseSolverBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEEC2Ev($4);
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($4)) + 12|0);
 __THREW__ = 0;
 invoke_vi(78,($6|0));
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 L1: do {
  if ($8) {
   $26 = ___cxa_find_matching_catch_2()|0;
   $27 = tempRet0;
   $2 = $26;
   $3 = $27;
   label = 18;
  } else {
   $9 = ((($4)) + 48|0);
   __THREW__ = 0;
   invoke_vi(559,($9|0));
   $10 = __THREW__; __THREW__ = 0;
   $11 = $10&1;
   if ($11) {
    $28 = ___cxa_find_matching_catch_2()|0;
    $29 = tempRet0;
    $2 = $28;
    $3 = $29;
   } else {
    $12 = ((($4)) + 56|0);
    __THREW__ = 0;
    invoke_vi(560,($12|0));
    $13 = __THREW__; __THREW__ = 0;
    $14 = $13&1;
    if ($14) {
     $30 = ___cxa_find_matching_catch_2()|0;
     $31 = tempRet0;
     $2 = $30;
     $3 = $31;
    } else {
     $15 = ((($4)) + 64|0);
     __THREW__ = 0;
     invoke_vi(560,($15|0));
     $16 = __THREW__; __THREW__ = 0;
     $17 = $16&1;
     if ($17) {
      $32 = ___cxa_find_matching_catch_2()|0;
      $33 = tempRet0;
      $2 = $32;
      $3 = $33;
     } else {
      $18 = ((($4)) + 72|0);
      __THREW__ = 0;
      invoke_vi(561,($18|0));
      $19 = __THREW__; __THREW__ = 0;
      $20 = $19&1;
      do {
       if ($20) {
        $34 = ___cxa_find_matching_catch_2()|0;
        $35 = tempRet0;
        $2 = $34;
        $3 = $35;
       } else {
        $21 = ((($4)) + 80|0);
        __THREW__ = 0;
        invoke_vi(561,($21|0));
        $22 = __THREW__; __THREW__ = 0;
        $23 = $22&1;
        if ($23) {
         $36 = ___cxa_find_matching_catch_2()|0;
         $37 = tempRet0;
         $2 = $36;
         $3 = $37;
         __THREW__ = 0;
         invoke_vi(200,($18|0));
         $38 = __THREW__; __THREW__ = 0;
         $39 = $38&1;
         if ($39) {
          break L1;
         } else {
          break;
         }
        } else {
         $24 = ((($4)) + 88|0);
         HEAPF64[$24>>3] = 0.0;
         $25 = ((($4)) + 96|0);
         HEAPF64[$25>>3] = 1.0;
         STACKTOP = sp;return;
        }
       }
      } while(0);
      __THREW__ = 0;
      invoke_vi(442,($15|0));
      $40 = __THREW__; __THREW__ = 0;
      $41 = $40&1;
      if ($41) {
       break;
      }
     }
     __THREW__ = 0;
     invoke_vi(442,($12|0));
     $42 = __THREW__; __THREW__ = 0;
     $43 = $42&1;
     if ($43) {
      break;
     }
    }
    __THREW__ = 0;
    invoke_vi(44,($9|0));
    $44 = __THREW__; __THREW__ = 0;
    $45 = $44&1;
    if ($45) {
     break;
    }
   }
   __THREW__ = 0;
   invoke_vi(63,($6|0));
   $46 = __THREW__; __THREW__ = 0;
   $47 = $46&1;
   if (!($47)) {
    label = 18;
   }
  }
 } while(0);
 if ((label|0) == 18) {
  __THREW__ = 0;
  invoke_vi(562,($4|0));
  $48 = __THREW__; __THREW__ = 0;
  $49 = $48&1;
  if (!($49)) {
   $50 = $2;
   $51 = $3;
   ___resumeException($50|0);
   // unreachable;
  }
 }
 $52 = ___cxa_find_matching_catch_3(0|0)|0;
 $53 = tempRet0;
 ___clang_call_terminate($52);
 // unreachable;
}
function __ZN5Eigen18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEE7computeERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 104|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&1;
 $8 = $3;
 if ($7) {
  __ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE7computeILb1EEEvRKS3_($4,$8);
  STACKTOP = sp;return ($4|0);
 } else {
  __ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE7computeILb0EEEvRKS3_($4,$8);
  STACKTOP = sp;return ($4|0);
 }
 return (0)|0;
}
function __ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 80|0);
 __THREW__ = 0;
 invoke_vi(200,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 do {
  if ($7) {
   $23 = ___cxa_find_matching_catch_2()|0;
   $24 = tempRet0;
   $2 = $23;
   $3 = $24;
   $25 = ((($4)) + 72|0);
   __THREW__ = 0;
   invoke_vi(200,($25|0));
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if (!($27)) {
    label = 11;
   }
  } else {
   $8 = ((($4)) + 72|0);
   __THREW__ = 0;
   invoke_vi(200,($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $28 = ___cxa_find_matching_catch_2()|0;
    $29 = tempRet0;
    $2 = $28;
    $3 = $29;
    label = 11;
    break;
   }
   $11 = ((($4)) + 64|0);
   __THREW__ = 0;
   invoke_vi(442,($11|0));
   $12 = __THREW__; __THREW__ = 0;
   $13 = $12&1;
   if ($13) {
    $30 = ___cxa_find_matching_catch_2()|0;
    $31 = tempRet0;
    $2 = $30;
    $3 = $31;
    label = 13;
    break;
   }
   $14 = ((($4)) + 56|0);
   __THREW__ = 0;
   invoke_vi(442,($14|0));
   $15 = __THREW__; __THREW__ = 0;
   $16 = $15&1;
   if ($16) {
    $35 = ___cxa_find_matching_catch_2()|0;
    $36 = tempRet0;
    $2 = $35;
    $3 = $36;
    label = 15;
    break;
   }
   $17 = ((($4)) + 48|0);
   __THREW__ = 0;
   invoke_vi(44,($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    $40 = ___cxa_find_matching_catch_2()|0;
    $41 = tempRet0;
    $2 = $40;
    $3 = $41;
    label = 17;
    break;
   }
   $20 = ((($4)) + 12|0);
   __THREW__ = 0;
   invoke_vi(63,($20|0));
   $21 = __THREW__; __THREW__ = 0;
   $22 = $21&1;
   if ($22) {
    $45 = ___cxa_find_matching_catch_2()|0;
    $46 = tempRet0;
    $2 = $45;
    $3 = $46;
    label = 18;
    break;
   } else {
    __ZN5Eigen16SparseSolverBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEED2Ev($4);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 if ((label|0) == 11) {
  $32 = ((($4)) + 64|0);
  __THREW__ = 0;
  invoke_vi(442,($32|0));
  $33 = __THREW__; __THREW__ = 0;
  $34 = $33&1;
  if (!($34)) {
   label = 13;
  }
 }
 if ((label|0) == 13) {
  $37 = ((($4)) + 56|0);
  __THREW__ = 0;
  invoke_vi(442,($37|0));
  $38 = __THREW__; __THREW__ = 0;
  $39 = $38&1;
  if (!($39)) {
   label = 15;
  }
 }
 if ((label|0) == 15) {
  $42 = ((($4)) + 48|0);
  __THREW__ = 0;
  invoke_vi(44,($42|0));
  $43 = __THREW__; __THREW__ = 0;
  $44 = $43&1;
  if (!($44)) {
   label = 17;
  }
 }
 if ((label|0) == 17) {
  $47 = ((($4)) + 12|0);
  __THREW__ = 0;
  invoke_vi(63,($47|0));
  $48 = __THREW__; __THREW__ = 0;
  $49 = $48&1;
  if (!($49)) {
   label = 18;
  }
 }
 if ((label|0) == 18) {
  __THREW__ = 0;
  invoke_vi(562,($4|0));
  $50 = __THREW__; __THREW__ = 0;
  $51 = $50&1;
  if (!($51)) {
   $52 = $2;
   $53 = $3;
   ___resumeException($52|0);
   // unreachable;
  }
 }
 $54 = ___cxa_find_matching_catch_3(0|0)|0;
 $55 = tempRet0;
 ___clang_call_terminate($54);
 // unreachable;
}
function __ZN5Eigen16SparseSolverBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 HEAP8[$2>>0] = 0;
 STACKTOP = sp;return;
}
function __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2Ev($4);
 __THREW__ = 0;
 invoke_v(210);
 $5 = __THREW__; __THREW__ = 0;
 $6 = $5&1;
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = ___cxa_find_matching_catch_2()|0;
 $8 = tempRet0;
 $2 = $7;
 $3 = $8;
 __THREW__ = 0;
 invoke_vi(212,($4|0));
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $13 = ___cxa_find_matching_catch_3(0|0)|0;
  $14 = tempRet0;
  ___clang_call_terminate($13);
  // unreachable;
 } else {
  $11 = $2;
  $12 = $3;
  ___resumeException($11|0);
  // unreachable;
 }
}
function __ZN5Eigen17PermutationMatrixILin1ELin1EiEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen16SparseSolverBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE7computeILb1EEEvRKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $5 = sp + 12|0;
 $6 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $9 = $2;
 $10 = $3;
 $11 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($10)|0);
 $12 = $3;
 $13 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($12)|0);
 $14 = ($11|0)==($13|0);
 if (!($14)) {
  ___assert_fail((6377|0),(6406|0),196,(4064|0));
  // unreachable;
 }
 $15 = $3;
 $16 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($15)|0);
 $4 = $16;
 $17 = $4;
 $18 = $4;
 __ZN5Eigen12SparseMatrixIdLi0EiEC2Eii($5,$17,$18);
 $19 = $3;
 __THREW__ = 0;
 invoke_viiii(563,($9|0),($19|0),($6|0),($5|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if (!($21)) {
  $22 = HEAP32[$6>>2]|0;
  __THREW__ = 0;
  invoke_viii(564,($9|0),($22|0),1);
  $23 = __THREW__; __THREW__ = 0;
  $24 = $23&1;
  if (!($24)) {
   $25 = HEAP32[$6>>2]|0;
   __THREW__ = 0;
   invoke_vii(565,($9|0),($25|0));
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if (!($27)) {
    __ZN5Eigen12SparseMatrixIdLi0EiED2Ev($5);
    STACKTOP = sp;return;
   }
  }
 }
 $28 = ___cxa_find_matching_catch_2()|0;
 $29 = tempRet0;
 $7 = $28;
 $8 = $29;
 __THREW__ = 0;
 invoke_vi(63,($5|0));
 $30 = __THREW__; __THREW__ = 0;
 $31 = $30&1;
 if ($31) {
  $34 = ___cxa_find_matching_catch_3(0|0)|0;
  $35 = tempRet0;
  ___clang_call_terminate($34);
  // unreachable;
 } else {
  $32 = $7;
  $33 = $8;
  ___resumeException($32|0);
  // unreachable;
 }
}
function __ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE7computeILb0EEEvRKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $5 = sp + 12|0;
 $6 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $9 = $2;
 $10 = $3;
 $11 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($10)|0);
 $12 = $3;
 $13 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($12)|0);
 $14 = ($11|0)==($13|0);
 if (!($14)) {
  ___assert_fail((6377|0),(6406|0),196,(4064|0));
  // unreachable;
 }
 $15 = $3;
 $16 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($15)|0);
 $4 = $16;
 $17 = $4;
 $18 = $4;
 __ZN5Eigen12SparseMatrixIdLi0EiEC2Eii($5,$17,$18);
 $19 = $3;
 __THREW__ = 0;
 invoke_viiii(563,($9|0),($19|0),($6|0),($5|0));
 $20 = __THREW__; __THREW__ = 0;
 $21 = $20&1;
 if (!($21)) {
  $22 = HEAP32[$6>>2]|0;
  __THREW__ = 0;
  invoke_viii(564,($9|0),($22|0),0);
  $23 = __THREW__; __THREW__ = 0;
  $24 = $23&1;
  if (!($24)) {
   $25 = HEAP32[$6>>2]|0;
   __THREW__ = 0;
   invoke_vii(566,($9|0),($25|0));
   $26 = __THREW__; __THREW__ = 0;
   $27 = $26&1;
   if (!($27)) {
    __ZN5Eigen12SparseMatrixIdLi0EiED2Ev($5);
    STACKTOP = sp;return;
   }
  }
 }
 $28 = ___cxa_find_matching_catch_2()|0;
 $29 = tempRet0;
 $7 = $28;
 $8 = $29;
 __THREW__ = 0;
 invoke_vi(63,($5|0));
 $30 = __THREW__; __THREW__ = 0;
 $31 = $30&1;
 if ($31) {
  $34 = ___cxa_find_matching_catch_3(0|0)|0;
  $35 = tempRet0;
  ___clang_call_terminate($34);
  // unreachable;
 } else {
  $32 = $7;
  $33 = $8;
  ___resumeException($32|0);
  // unreachable;
 }
}
function __ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE8orderingERKS3_RPS8_RS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $9 = sp + 44|0;
 $10 = sp + 40|0;
 $13 = sp + 100|0;
 $14 = sp + 24|0;
 $15 = sp + 16|0;
 $16 = sp + 8|0;
 $17 = sp + 4|0;
 $18 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $19 = $4;
 $20 = $5;
 $21 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($20)|0);
 $22 = $5;
 $23 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($22)|0);
 $24 = ($21|0)==($23|0);
 if (!($24)) {
  ___assert_fail((6460|0),(6406|0),652,(6479|0));
  // unreachable;
 }
 $25 = $5;
 $26 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($25)|0);
 $8 = $26;
 $27 = $7;
 $28 = $6;
 HEAP32[$28>>2] = $27;
 __ZN5Eigen12SparseMatrixIdLi0EiEC2Ev($9);
 $29 = $5;
 __THREW__ = 0;
 $30 = (invoke_ii(567,($29|0))|0);
 $31 = __THREW__; __THREW__ = 0;
 $32 = $31&1;
 if (!($32)) {
  HEAP32[$10>>2] = $30;
  __THREW__ = 0;
  (invoke_iii(568,($9|0),($10|0))|0);
  $33 = __THREW__; __THREW__ = 0;
  $34 = $33&1;
  if (!($34)) {
   $35 = ((($19)) + 80|0);
   __THREW__ = 0;
   invoke_viii(569,($13|0),($9|0),($35|0));
   $36 = __THREW__; __THREW__ = 0;
   $37 = $36&1;
   if (!($37)) {
    __ZN5Eigen12SparseMatrixIdLi0EiED2Ev($9);
    $38 = ((($19)) + 80|0);
    $39 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4sizeEv($38)|0);
    $40 = ($39|0)>(0);
    do {
     if ($40) {
      $41 = ((($19)) + 80|0);
      $42 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE7inverseEv($41)|0);
      HEAP32[$15>>2] = $42;
      __ZN5Eigen17PermutationMatrixILin1ELin1EiEC2IS1_EERKNS_11InverseImplIT_NS_18PermutationStorageEEE($14,$15);
      $43 = ((($19)) + 72|0);
      __THREW__ = 0;
      (invoke_iii(570,($43|0),($14|0))|0);
      $44 = __THREW__; __THREW__ = 0;
      $45 = $44&1;
      if (!($45)) {
       __ZN5Eigen17PermutationMatrixILin1ELin1EiED2Ev($14);
       break;
      }
      $50 = ___cxa_find_matching_catch_2()|0;
      $51 = tempRet0;
      $11 = $50;
      $12 = $51;
      __THREW__ = 0;
      invoke_vi(200,($14|0));
      $52 = __THREW__; __THREW__ = 0;
      $53 = $52&1;
      if ($53) {
       $65 = ___cxa_find_matching_catch_3(0|0)|0;
       $66 = tempRet0;
       ___clang_call_terminate($65);
       // unreachable;
      } else {
       $63 = $11;
       $64 = $12;
       ___resumeException($63|0);
       // unreachable;
      }
     } else {
      $54 = ((($19)) + 72|0);
      __ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE6resizeEi($54,0);
     }
    } while(0);
    $55 = $7;
    $56 = $8;
    $57 = $8;
    __ZN5Eigen12SparseMatrixIdLi0EiE6resizeEii($55,$56,$57);
    $58 = $5;
    $59 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE15selfadjointViewILj1EEENS3_30ConstSelfAdjointViewReturnTypeIXT_EE4TypeEv($58)|0);
    HEAP32[$17>>2] = $59;
    $60 = ((($19)) + 72|0);
    __ZNK5Eigen21SparseSelfAdjointViewIKNS_12SparseMatrixIdLi0EiEELj1EE9twistedByERKNS_17PermutationMatrixILin1ELin1EiEE($16,$17,$60);
    $61 = $7;
    $62 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE15selfadjointViewILj2EEENS3_25SelfAdjointViewReturnTypeIXT_EE4TypeEv($61)|0);
    HEAP32[$18>>2] = $62;
    (__ZN5Eigen21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EEaSIS2_Li1EEERS3_RKNS_33SparseSymmetricPermutationProductIT_XT0_EEE($18,$16)|0);
    STACKTOP = sp;return;
   }
  }
 }
 $46 = ___cxa_find_matching_catch_2()|0;
 $47 = tempRet0;
 $11 = $46;
 $12 = $47;
 __THREW__ = 0;
 invoke_vi(63,($9|0));
 $48 = __THREW__; __THREW__ = 0;
 $49 = $48&1;
 if ($49) {
  $65 = ___cxa_find_matching_catch_3(0|0)|0;
  $66 = tempRet0;
  ___clang_call_terminate($65);
  // unreachable;
 } else {
  $63 = $11;
  $64 = $12;
  ___resumeException($63|0);
  // unreachable;
 }
}
function __ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE25analyzePattern_preorderedERKS3_b($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$alloca_mul = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $9 = sp + 44|0;
 $13 = sp + 12|0;
 $4 = $0;
 $5 = $1;
 $17 = $2&1;
 $6 = $17;
 $18 = $4;
 $19 = $5;
 $20 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($19)|0);
 $7 = $20;
 $21 = ((($18)) + 12|0);
 $22 = $7;
 $23 = $7;
 __ZN5Eigen12SparseMatrixIdLi0EiE6resizeEii($21,$22,$23);
 $24 = ((($18)) + 56|0);
 $25 = $7;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE6resizeEi($24,$25);
 $26 = ((($18)) + 64|0);
 $27 = $7;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE6resizeEi($26,$27);
 $28 = $7;
 $3 = $28;
 $29 = $3;
 $30 = ($29>>>0)>(1073741823);
 if ($30) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $31 = $7;
 $32 = $31<<2;
 $33 = ($32>>>0)<=(131072);
 $34 = $7;
 $35 = $34<<2;
 if ($33) {
  $36 = (($35) + 16)|0;
  $37 = (($36) - 1)|0;
  $$alloca_mul = $37;
  $38 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
  $39 = $38;
  $40 = (($39) + 16)|0;
  $41 = (($40) - 1)|0;
  $42 = $41 & -16;
  $43 = $42;
  $45 = $43;
 } else {
  $44 = (__ZN5Eigen8internal14aligned_mallocEj($35)|0);
  $45 = $44;
 }
 $8 = $45;
 $46 = $8;
 $47 = $7;
 $48 = $7;
 $49 = $48<<2;
 $50 = ($49>>>0)>(131072);
 __ZN5Eigen8internal28aligned_stack_memory_handlerIiEC2EPijb($9,$46,$47,$50);
 $10 = 0;
 L8: while(1) {
  $51 = $10;
  $52 = $7;
  $53 = ($51|0)<($52|0);
  if (!($53)) {
   label = 26;
   break;
  }
  $54 = ((($18)) + 56|0);
  $55 = $10;
  __THREW__ = 0;
  $56 = (invoke_iii(468,($54|0),($55|0))|0);
  $57 = __THREW__; __THREW__ = 0;
  $58 = $57&1;
  if ($58) {
   break;
  }
  HEAP32[$56>>2] = -1;
  $59 = $10;
  $60 = $8;
  $61 = $10;
  $62 = (($60) + ($61<<2)|0);
  HEAP32[$62>>2] = $59;
  $63 = ((($18)) + 64|0);
  $64 = $10;
  __THREW__ = 0;
  $65 = (invoke_iii(468,($63|0),($64|0))|0);
  $66 = __THREW__; __THREW__ = 0;
  $67 = $66&1;
  if ($67) {
   break;
  }
  HEAP32[$65>>2] = 0;
  $68 = $5;
  $69 = $10;
  __THREW__ = 0;
  invoke_viii(509,($13|0),($68|0),($69|0));
  $70 = __THREW__; __THREW__ = 0;
  $71 = $70&1;
  if ($71) {
   break;
  }
  while(1) {
   __THREW__ = 0;
   $72 = (invoke_ii(510,($13|0))|0);
   $73 = __THREW__; __THREW__ = 0;
   $74 = $73&1;
   if ($74) {
    break L8;
   }
   if (!($72)) {
    break;
   }
   __THREW__ = 0;
   $75 = (invoke_ii(512,($13|0))|0);
   $76 = __THREW__; __THREW__ = 0;
   $77 = $76&1;
   if ($77) {
    break L8;
   }
   $14 = $75;
   $78 = $14;
   $79 = $10;
   $80 = ($78|0)<($79|0);
   L18: do {
    if ($80) {
     while(1) {
      $81 = $8;
      $82 = $14;
      $83 = (($81) + ($82<<2)|0);
      $84 = HEAP32[$83>>2]|0;
      $85 = $10;
      $86 = ($84|0)!=($85|0);
      if (!($86)) {
       break L18;
      }
      $87 = ((($18)) + 56|0);
      $88 = $14;
      __THREW__ = 0;
      $89 = (invoke_iii(468,($87|0),($88|0))|0);
      $90 = __THREW__; __THREW__ = 0;
      $91 = $90&1;
      if ($91) {
       break L8;
      }
      $92 = HEAP32[$89>>2]|0;
      $93 = ($92|0)==(-1);
      if ($93) {
       $94 = $10;
       $95 = ((($18)) + 56|0);
       $96 = $14;
       __THREW__ = 0;
       $97 = (invoke_iii(468,($95|0),($96|0))|0);
       $98 = __THREW__; __THREW__ = 0;
       $99 = $98&1;
       if ($99) {
        break L8;
       }
       HEAP32[$97>>2] = $94;
      }
      $104 = ((($18)) + 64|0);
      $105 = $14;
      __THREW__ = 0;
      $106 = (invoke_iii(468,($104|0),($105|0))|0);
      $107 = __THREW__; __THREW__ = 0;
      $108 = $107&1;
      if ($108) {
       break L8;
      }
      $109 = HEAP32[$106>>2]|0;
      $110 = (($109) + 1)|0;
      HEAP32[$106>>2] = $110;
      $111 = $10;
      $112 = $8;
      $113 = $14;
      $114 = (($112) + ($113<<2)|0);
      HEAP32[$114>>2] = $111;
      $115 = ((($18)) + 56|0);
      $116 = $14;
      __THREW__ = 0;
      $117 = (invoke_iii(468,($115|0),($116|0))|0);
      $118 = __THREW__; __THREW__ = 0;
      $119 = $118&1;
      if ($119) {
       break L8;
      }
      $120 = HEAP32[$117>>2]|0;
      $14 = $120;
     }
    }
   } while(0);
   __THREW__ = 0;
   (invoke_ii(514,($13|0))|0);
   $121 = __THREW__; __THREW__ = 0;
   $122 = $121&1;
   if ($122) {
    break L8;
   }
  }
  $123 = $10;
  $124 = (($123) + 1)|0;
  $10 = $124;
 }
 L31: do {
  if ((label|0) == 26) {
   $125 = ((($18)) + 12|0);
   __THREW__ = 0;
   $126 = (invoke_ii(571,($125|0))|0);
   $127 = __THREW__; __THREW__ = 0;
   $128 = $127&1;
   if (!($128)) {
    $15 = $126;
    $129 = $15;
    HEAP32[$129>>2] = 0;
    $16 = 0;
    while(1) {
     $130 = $16;
     $131 = $7;
     $132 = ($130|0)<($131|0);
     if (!($132)) {
      break;
     }
     $133 = $15;
     $134 = $16;
     $135 = (($133) + ($134<<2)|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = ((($18)) + 64|0);
     $138 = $16;
     __THREW__ = 0;
     $139 = (invoke_iii(468,($137|0),($138|0))|0);
     $140 = __THREW__; __THREW__ = 0;
     $141 = $140&1;
     if ($141) {
      break L31;
     }
     $142 = HEAP32[$139>>2]|0;
     $143 = (($136) + ($142))|0;
     $144 = $6;
     $145 = $144&1;
     $146 = $145 ? 0 : 1;
     $147 = (($143) + ($146))|0;
     $148 = $15;
     $149 = $16;
     $150 = (($149) + 1)|0;
     $151 = (($148) + ($150<<2)|0);
     HEAP32[$151>>2] = $147;
     $152 = $16;
     $153 = (($152) + 1)|0;
     $16 = $153;
    }
    $154 = ((($18)) + 12|0);
    $155 = $15;
    $156 = $7;
    $157 = (($155) + ($156<<2)|0);
    $158 = HEAP32[$157>>2]|0;
    __THREW__ = 0;
    invoke_vii(572,($154|0),($158|0));
    $159 = __THREW__; __THREW__ = 0;
    $160 = $159&1;
    if (!($160)) {
     HEAP8[$18>>0] = 1;
     $161 = ((($18)) + 4|0);
     HEAP32[$161>>2] = 0;
     $162 = ((($18)) + 9|0);
     HEAP8[$162>>0] = 1;
     $163 = ((($18)) + 8|0);
     HEAP8[$163>>0] = 0;
     __ZN5Eigen8internal28aligned_stack_memory_handlerIiED2Ev($9);
     STACKTOP = sp;return;
    }
   }
  }
 } while(0);
 $100 = ___cxa_find_matching_catch_2()|0;
 $101 = tempRet0;
 $11 = $100;
 $12 = $101;
 __THREW__ = 0;
 invoke_vi(546,($9|0));
 $102 = __THREW__; __THREW__ = 0;
 $103 = $102&1;
 if ($103) {
  $166 = ___cxa_find_matching_catch_3(0|0)|0;
  $167 = tempRet0;
  ___clang_call_terminate($166);
  // unreachable;
 } else {
  $164 = $11;
  $165 = $12;
  ___resumeException($164|0);
  // unreachable;
 }
}
function __ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE20factorize_preorderedILb1EEEvRKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$alloca_mul = 0, $$alloca_mul31 = 0, $$alloca_mul33 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0.0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0.0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0, $236 = 0.0, $237 = 0.0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0.0, $250 = 0, $251 = 0.0, $252 = 0, $253 = 0, $254 = 0, $255 = 0.0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0, $261 = 0.0, $262 = 0.0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0.0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0.0, $286 = 0, $287 = 0, $288 = 0.0, $289 = 0.0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0.0, $297 = 0.0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0.0, $301 = 0.0, $302 = 0, $303 = 0, $304 = 0.0, $305 = 0.0, $306 = 0, $307 = 0, $308 = 0.0, $309 = 0.0, $31 = 0, $310 = 0, $311 = 0, $312 = 0;
 var $313 = 0, $314 = 0.0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0.0, $328 = 0, $329 = 0, $33 = 0, $330 = 0;
 var $331 = 0, $332 = 0, $333 = 0.0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0;
 var $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $12 = sp + 120|0;
 $16 = sp + 96|0;
 $18 = sp + 80|0;
 $22 = sp + 52|0;
 $27 = sp + 16|0;
 $31 = sp;
 $5 = $0;
 $6 = $1;
 $32 = $5;
 $33 = ((($32)) + 9|0);
 $34 = HEAP8[$33>>0]|0;
 $35 = $34&1;
 if (!($35)) {
  ___assert_fail((6628|0),(6685|0),105,(6744|0));
  // unreachable;
 }
 $36 = $6;
 $37 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($36)|0);
 $38 = $6;
 $39 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($38)|0);
 $40 = ($37|0)==($39|0);
 if (!($40)) {
  ___assert_fail((6765|0),(6685|0),106,(6744|0));
  // unreachable;
 }
 $41 = ((($32)) + 56|0);
 $42 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($41)|0);
 $43 = $6;
 $44 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($43)|0);
 $45 = ($42|0)==($44|0);
 if (!($45)) {
  ___assert_fail((6786|0),(6685|0),107,(6744|0));
  // unreachable;
 }
 $46 = ((($32)) + 64|0);
 $47 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($46)|0);
 $48 = $6;
 $49 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($48)|0);
 $50 = ($47|0)==($49|0);
 if (!($50)) {
  ___assert_fail((6813|0),(6685|0),108,(6744|0));
  // unreachable;
 }
 $51 = $6;
 $52 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($51)|0);
 $7 = $52;
 $53 = ((($32)) + 12|0);
 $54 = (__ZN5Eigen12SparseMatrixIdLi0EiE13outerIndexPtrEv($53)|0);
 $8 = $54;
 $55 = ((($32)) + 12|0);
 $56 = (__ZN5Eigen12SparseMatrixIdLi0EiE13innerIndexPtrEv($55)|0);
 $9 = $56;
 $57 = ((($32)) + 12|0);
 $58 = (__ZN5Eigen12SparseMatrixIdLi0EiE8valuePtrEv($57)|0);
 $10 = $58;
 $59 = $7;
 $4 = $59;
 $60 = $4;
 $61 = ($60>>>0)>(536870911);
 if ($61) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $62 = $7;
 $63 = $62<<3;
 $64 = ($63>>>0)<=(131072);
 $65 = $7;
 $66 = $65<<3;
 if ($64) {
  $67 = (($66) + 16)|0;
  $68 = (($67) - 1)|0;
  $$alloca_mul = $68;
  $69 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
  $70 = $69;
  $71 = (($70) + 16)|0;
  $72 = (($71) - 1)|0;
  $73 = $72 & -16;
  $74 = $73;
  $76 = $74;
 } else {
  $75 = (__ZN5Eigen8internal14aligned_mallocEj($66)|0);
  $76 = $75;
 }
 $11 = $76;
 $77 = $11;
 $78 = $7;
 $79 = $7;
 $80 = $79<<3;
 $81 = ($80>>>0)>(131072);
 __ZN5Eigen8internal28aligned_stack_memory_handlerIdEC2EPdjb($12,$77,$78,$81);
 $82 = $7;
 $3 = $82;
 $83 = $3;
 $84 = ($83>>>0)>(1073741823);
 if ($84) {
  __THREW__ = 0;
  invoke_v(183);
  $85 = __THREW__; __THREW__ = 0;
  $86 = $85&1;
  if ($86) {
   label = 41;
  } else {
   label = 16;
  }
 } else {
  label = 16;
 }
 L22: do {
  if ((label|0) == 16) {
   $87 = $7;
   $88 = $87<<2;
   $89 = ($88>>>0)<=(131072);
   $90 = $7;
   $91 = $90<<2;
   if ($89) {
    $92 = (($91) + 16)|0;
    $93 = (($92) - 1)|0;
    $$alloca_mul31 = $93;
    $94 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul31)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul31)|0)+15)&-16)|0);;
    $95 = $94;
    $96 = (($95) + 16)|0;
    $97 = (($96) - 1)|0;
    $98 = $97 & -16;
    $99 = $98;
    $103 = $99;
   } else {
    __THREW__ = 0;
    $100 = (invoke_ii(185,($91|0))|0);
    $101 = __THREW__; __THREW__ = 0;
    $102 = $101&1;
    if ($102) {
     label = 41;
     break;
    } else {
     $103 = $100;
    }
   }
   $15 = $103;
   $104 = $15;
   $105 = $7;
   $106 = $7;
   $107 = $106<<2;
   $108 = ($107>>>0)>(131072);
   __THREW__ = 0;
   invoke_viiii(531,($16|0),($104|0),($105|0),($108|0));
   $109 = __THREW__; __THREW__ = 0;
   $110 = $109&1;
   if ($110) {
    label = 41;
   } else {
    $111 = $7;
    $2 = $111;
    $112 = $2;
    $113 = ($112>>>0)>(1073741823);
    if ($113) {
     __THREW__ = 0;
     invoke_v(183);
     $114 = __THREW__; __THREW__ = 0;
     $115 = $114&1;
     if ($115) {
      label = 42;
     } else {
      label = 22;
     }
    } else {
     label = 22;
    }
    L31: do {
     if ((label|0) == 22) {
      $116 = $7;
      $117 = $116<<2;
      $118 = ($117>>>0)<=(131072);
      $119 = $7;
      $120 = $119<<2;
      if ($118) {
       $121 = (($120) + 16)|0;
       $122 = (($121) - 1)|0;
       $$alloca_mul33 = $122;
       $123 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul33)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul33)|0)+15)&-16)|0);;
       $124 = $123;
       $125 = (($124) + 16)|0;
       $126 = (($125) - 1)|0;
       $127 = $126 & -16;
       $128 = $127;
       $132 = $128;
      } else {
       __THREW__ = 0;
       $129 = (invoke_ii(185,($120|0))|0);
       $130 = __THREW__; __THREW__ = 0;
       $131 = $130&1;
       if ($131) {
        label = 42;
        break;
       } else {
        $132 = $129;
       }
      }
      $17 = $132;
      $133 = $17;
      $134 = $7;
      $135 = $7;
      $136 = $135<<2;
      $137 = ($136>>>0)>(131072);
      __THREW__ = 0;
      invoke_viiii(531,($18|0),($133|0),($134|0),($137|0));
      $138 = __THREW__; __THREW__ = 0;
      $139 = $138&1;
      if ($139) {
       label = 42;
      } else {
       $19 = 1;
       $140 = ((($32)) + 48|0);
       $141 = $7;
       __THREW__ = 0;
       invoke_vii(573,($140|0),($141|0));
       $142 = __THREW__; __THREW__ = 0;
       $143 = $142&1;
       L38: do {
        if (!($143)) {
         $20 = 0;
         while(1) {
          $144 = $20;
          $145 = $7;
          $146 = ($144|0)<($145|0);
          if (!($146)) {
           break;
          }
          $147 = $11;
          $148 = $20;
          $149 = (($147) + ($148<<3)|0);
          HEAPF64[$149>>3] = 0.0;
          $150 = $7;
          $21 = $150;
          $151 = $20;
          $152 = $17;
          $153 = $20;
          $154 = (($152) + ($153<<2)|0);
          HEAP32[$154>>2] = $151;
          $155 = ((($32)) + 64|0);
          $156 = $20;
          __THREW__ = 0;
          $157 = (invoke_iii(468,($155|0),($156|0))|0);
          $158 = __THREW__; __THREW__ = 0;
          $159 = $158&1;
          if ($159) {
           break L38;
          }
          HEAP32[$157>>2] = 0;
          $160 = $6;
          $161 = $20;
          __THREW__ = 0;
          invoke_viii(509,($22|0),($160|0),($161|0));
          $162 = __THREW__; __THREW__ = 0;
          $163 = $162&1;
          if ($163) {
           break L38;
          }
          while(1) {
           __THREW__ = 0;
           $164 = (invoke_ii(510,($22|0))|0);
           $165 = __THREW__; __THREW__ = 0;
           $166 = $165&1;
           if ($166) {
            break L38;
           }
           if (!($164)) {
            break;
           }
           __THREW__ = 0;
           $167 = (invoke_ii(512,($22|0))|0);
           $168 = __THREW__; __THREW__ = 0;
           $169 = $168&1;
           if ($169) {
            break L38;
           }
           $23 = $167;
           $170 = $23;
           $171 = $20;
           $172 = ($170|0)<=($171|0);
           L49: do {
            if ($172) {
             __THREW__ = 0;
             $173 = (invoke_ii(511,($22|0))|0);
             $174 = __THREW__; __THREW__ = 0;
             $175 = $174&1;
             if ($175) {
              break L38;
             }
             __THREW__ = 0;
             $176 = (+invoke_di(574,($173|0)));
             $177 = __THREW__; __THREW__ = 0;
             $178 = $177&1;
             if ($178) {
              break L38;
             }
             $179 = $11;
             $180 = $23;
             $181 = (($179) + ($180<<3)|0);
             $182 = +HEAPF64[$181>>3];
             $183 = $182 + $176;
             HEAPF64[$181>>3] = $183;
             $24 = 0;
             while(1) {
              $184 = $17;
              $185 = $23;
              $186 = (($184) + ($185<<2)|0);
              $187 = HEAP32[$186>>2]|0;
              $188 = $20;
              $189 = ($187|0)!=($188|0);
              if (!($189)) {
               break;
              }
              $190 = $23;
              $191 = $15;
              $192 = $24;
              $193 = (($192) + 1)|0;
              $24 = $193;
              $194 = (($191) + ($192<<2)|0);
              HEAP32[$194>>2] = $190;
              $195 = $20;
              $196 = $17;
              $197 = $23;
              $198 = (($196) + ($197<<2)|0);
              HEAP32[$198>>2] = $195;
              $199 = ((($32)) + 56|0);
              $200 = $23;
              __THREW__ = 0;
              $201 = (invoke_iii(468,($199|0),($200|0))|0);
              $202 = __THREW__; __THREW__ = 0;
              $203 = $202&1;
              if ($203) {
               break L38;
              }
              $204 = HEAP32[$201>>2]|0;
              $23 = $204;
             }
             while(1) {
              $213 = $24;
              $214 = ($213|0)>(0);
              if (!($214)) {
               break L49;
              }
              $215 = $15;
              $216 = $24;
              $217 = (($216) + -1)|0;
              $24 = $217;
              $218 = (($215) + ($217<<2)|0);
              $219 = HEAP32[$218>>2]|0;
              $220 = $15;
              $221 = $21;
              $222 = (($221) + -1)|0;
              $21 = $222;
              $223 = (($220) + ($222<<2)|0);
              HEAP32[$223>>2] = $219;
             }
            }
           } while(0);
           __THREW__ = 0;
           (invoke_ii(514,($22|0))|0);
           $224 = __THREW__; __THREW__ = 0;
           $225 = $224&1;
           if ($225) {
            break L38;
           }
          }
          $226 = $11;
          $227 = $20;
          $228 = (($226) + ($227<<3)|0);
          __THREW__ = 0;
          $229 = (+invoke_di(575,($228|0)));
          $230 = __THREW__; __THREW__ = 0;
          $231 = $230&1;
          if ($231) {
           break L38;
          }
          $232 = ((($32)) + 96|0);
          $233 = +HEAPF64[$232>>3];
          $234 = $229 * $233;
          $235 = ((($32)) + 88|0);
          $236 = +HEAPF64[$235>>3];
          $237 = $234 + $236;
          $25 = $237;
          $238 = $11;
          $239 = $20;
          $240 = (($238) + ($239<<3)|0);
          HEAPF64[$240>>3] = 0.0;
          while(1) {
           $241 = $21;
           $242 = $7;
           $243 = ($241|0)<($242|0);
           if (!($243)) {
            break;
           }
           $244 = $15;
           $245 = $21;
           $246 = (($244) + ($245<<2)|0);
           $247 = HEAP32[$246>>2]|0;
           $26 = $247;
           $248 = $11;
           $249 = $26;
           $250 = (($248) + ($249<<3)|0);
           $251 = +HEAPF64[$250>>3];
           HEAPF64[$27>>3] = $251;
           $252 = $11;
           $253 = $26;
           $254 = (($252) + ($253<<3)|0);
           HEAPF64[$254>>3] = 0.0;
           $255 = +HEAPF64[$27>>3];
           $256 = ((($32)) + 48|0);
           $257 = $26;
           __THREW__ = 0;
           $258 = (invoke_iii(43,($256|0),($257|0))|0);
           $259 = __THREW__; __THREW__ = 0;
           $260 = $259&1;
           if ($260) {
            break L38;
           }
           $261 = +HEAPF64[$258>>3];
           $262 = $255 / $261;
           $28 = $262;
           $263 = $8;
           $264 = $26;
           $265 = (($263) + ($264<<2)|0);
           $266 = HEAP32[$265>>2]|0;
           $267 = ((($32)) + 64|0);
           $268 = $26;
           __THREW__ = 0;
           $269 = (invoke_iii(468,($267|0),($268|0))|0);
           $270 = __THREW__; __THREW__ = 0;
           $271 = $270&1;
           if ($271) {
            break L38;
           }
           $272 = HEAP32[$269>>2]|0;
           $273 = (($266) + ($272))|0;
           $29 = $273;
           $274 = $8;
           $275 = $26;
           $276 = (($274) + ($275<<2)|0);
           $277 = HEAP32[$276>>2]|0;
           $278 = (($277) + 0)|0;
           $30 = $278;
           while(1) {
            $279 = $30;
            $280 = $29;
            $281 = ($279|0)<($280|0);
            if (!($281)) {
             break;
            }
            $282 = $10;
            $283 = $30;
            $284 = (($282) + ($283<<3)|0);
            __THREW__ = 0;
            $285 = (+invoke_di(574,($284|0)));
            $286 = __THREW__; __THREW__ = 0;
            $287 = $286&1;
            if ($287) {
             break L38;
            }
            $288 = +HEAPF64[$27>>3];
            $289 = $285 * $288;
            $290 = $11;
            $291 = $9;
            $292 = $30;
            $293 = (($291) + ($292<<2)|0);
            $294 = HEAP32[$293>>2]|0;
            $295 = (($290) + ($294<<3)|0);
            $296 = +HEAPF64[$295>>3];
            $297 = $296 - $289;
            HEAPF64[$295>>3] = $297;
            $298 = $30;
            $299 = (($298) + 1)|0;
            $30 = $299;
           }
           $300 = $28;
           __THREW__ = 0;
           $301 = (+invoke_di(574,($27|0)));
           $302 = __THREW__; __THREW__ = 0;
           $303 = $302&1;
           if ($303) {
            break L38;
           }
           $304 = $300 * $301;
           HEAPF64[$31>>3] = $304;
           __THREW__ = 0;
           $305 = (+invoke_di(575,($31|0)));
           $306 = __THREW__; __THREW__ = 0;
           $307 = $306&1;
           if ($307) {
            break L38;
           }
           $308 = $25;
           $309 = $308 - $305;
           $25 = $309;
           $310 = $20;
           $311 = $9;
           $312 = $30;
           $313 = (($311) + ($312<<2)|0);
           HEAP32[$313>>2] = $310;
           $314 = $28;
           $315 = $10;
           $316 = $30;
           $317 = (($315) + ($316<<3)|0);
           HEAPF64[$317>>3] = $314;
           $318 = ((($32)) + 64|0);
           $319 = $26;
           __THREW__ = 0;
           $320 = (invoke_iii(468,($318|0),($319|0))|0);
           $321 = __THREW__; __THREW__ = 0;
           $322 = $321&1;
           if ($322) {
            break L38;
           }
           $323 = HEAP32[$320>>2]|0;
           $324 = (($323) + 1)|0;
           HEAP32[$320>>2] = $324;
           $325 = $21;
           $326 = (($325) + 1)|0;
           $21 = $326;
          }
          $327 = $25;
          $328 = ((($32)) + 48|0);
          $329 = $20;
          __THREW__ = 0;
          $330 = (invoke_iii(43,($328|0),($329|0))|0);
          $331 = __THREW__; __THREW__ = 0;
          $332 = $331&1;
          if ($332) {
           break L38;
          }
          HEAPF64[$330>>3] = $327;
          $333 = $25;
          $334 = $333 == 0.0;
          if ($334) {
           label = 62;
           break;
          }
          $335 = $20;
          $336 = (($335) + 1)|0;
          $20 = $336;
         }
         if ((label|0) == 62) {
          $19 = 0;
         }
         $337 = $19;
         $338 = $337&1;
         $339 = $338 ? 0 : 1;
         $340 = ((($32)) + 4|0);
         HEAP32[$340>>2] = $339;
         $341 = ((($32)) + 8|0);
         HEAP8[$341>>0] = 1;
         __THREW__ = 0;
         invoke_vi(546,($18|0));
         $342 = __THREW__; __THREW__ = 0;
         $343 = $342&1;
         if ($343) {
          label = 42;
          break L31;
         }
         __THREW__ = 0;
         invoke_vi(546,($16|0));
         $344 = __THREW__; __THREW__ = 0;
         $345 = $344&1;
         if ($345) {
          label = 41;
          break L22;
         }
         __ZN5Eigen8internal28aligned_stack_memory_handlerIdED2Ev($12);
         STACKTOP = sp;return;
        }
       } while(0);
       $209 = ___cxa_find_matching_catch_2()|0;
       $210 = tempRet0;
       $13 = $209;
       $14 = $210;
       __THREW__ = 0;
       invoke_vi(546,($18|0));
       $211 = __THREW__; __THREW__ = 0;
       $212 = $211&1;
       if ($212) {
        $352 = ___cxa_find_matching_catch_3(0|0)|0;
        $353 = tempRet0;
        ___clang_call_terminate($352);
        // unreachable;
       }
      }
     }
    } while(0);
    if ((label|0) == 42) {
     $207 = ___cxa_find_matching_catch_2()|0;
     $208 = tempRet0;
     $13 = $207;
     $14 = $208;
    }
    __THREW__ = 0;
    invoke_vi(546,($16|0));
    $346 = __THREW__; __THREW__ = 0;
    $347 = $346&1;
    if ($347) {
     $352 = ___cxa_find_matching_catch_3(0|0)|0;
     $353 = tempRet0;
     ___clang_call_terminate($352);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 41) {
  $205 = ___cxa_find_matching_catch_2()|0;
  $206 = tempRet0;
  $13 = $205;
  $14 = $206;
 }
 __THREW__ = 0;
 invoke_vi(189,($12|0));
 $348 = __THREW__; __THREW__ = 0;
 $349 = $348&1;
 if ($349) {
  $352 = ___cxa_find_matching_catch_3(0|0)|0;
  $353 = tempRet0;
  ___clang_call_terminate($352);
  // unreachable;
 } else {
  $350 = $13;
  $351 = $14;
  ___resumeException($350|0);
  // unreachable;
 }
}
function __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE15selfadjointViewILj1EEENS3_30ConstSelfAdjointViewReturnTypeIXT_EE4TypeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = $0;
 $3 = $2;
 $4 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($3)|0);
 __ZN5Eigen21SparseSelfAdjointViewIKNS_12SparseMatrixIdLi0EiEELj1EEC2ERS3_($1,$4);
 $5 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen12SparseMatrixIdLi0EiEaSINS_21SparseSelfAdjointViewIKS1_Lj1EEEEERS1_RKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_21SparseSelfAdjointViewIKNS_12SparseMatrixIdLi0EiEELj1EEEE7derivedEv($5)|0);
 $7 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEEaSINS_21SparseSelfAdjointViewIKS2_Lj1EEEEERS2_RKNS_9EigenBaseIT_EE($4,$6)|0);
 STACKTOP = sp;return ($7|0);
}
function __ZN5Eigen11AMDOrderingIiEclINS_12SparseMatrixIdLi0EiEEEEvRKT_RNS_17PermutationMatrixILin1ELin1EiEE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 8|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 __ZN5Eigen12SparseMatrixIdLi0EiEC2Ev($6);
 $9 = $4;
 __THREW__ = 0;
 invoke_vii(576,($9|0),($6|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  $12 = $5;
  __THREW__ = 0;
  invoke_vii(577,($6|0),($12|0));
  $13 = __THREW__; __THREW__ = 0;
  $14 = $13&1;
  if (!($14)) {
   __ZN5Eigen12SparseMatrixIdLi0EiED2Ev($6);
   STACKTOP = sp;return;
  }
 }
 $15 = ___cxa_find_matching_catch_2()|0;
 $16 = tempRet0;
 $7 = $15;
 $8 = $16;
 __THREW__ = 0;
 invoke_vi(63,($6|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $21 = ___cxa_find_matching_catch_3(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 } else {
  $19 = $7;
  $20 = $8;
  ___resumeException($19|0);
  // unreachable;
 }
}
function __ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE7inverseEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = $0;
 $3 = $2;
 $4 = (__ZNK5Eigen9EigenBaseINS_17PermutationMatrixILin1ELin1EiEEE7derivedEv($3)|0);
 __ZN5Eigen7InverseINS_17PermutationMatrixILin1ELin1EiEEEC2ERKS2_($1,$4);
 $5 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen17PermutationMatrixILin1ELin1EiEC2IS1_EERKNS_11InverseImplIT_NS_18PermutationStorageEEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 16|0;
 $2 = $0;
 $3 = $1;
 $9 = $2;
 $10 = $3;
 $11 = (__ZNK5Eigen9EigenBaseINS_7InverseINS_17PermutationMatrixILin1ELin1EiEEEEE7derivedEv($10)|0);
 $12 = (__ZNK5Eigen7InverseINS_17PermutationMatrixILin1ELin1EiEEE16nestedExpressionEv($11)|0);
 $13 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4sizeEv($12)|0);
 HEAP32[$4>>2] = $13;
 __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEC2IiEERKT_($9,$4);
 __THREW__ = 0;
 $14 = (invoke_ii(578,($9|0))|0);
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 L1: do {
  if (!($16)) {
   $5 = $14;
   $8 = 0;
   while(1) {
    $17 = $8;
    $18 = $5;
    $19 = ($17|0)<($18|0);
    if (!($19)) {
     break;
    }
    $20 = $8;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(579,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if ($24) {
     break L1;
    }
    __THREW__ = 0;
    $25 = (invoke_ii(580,($22|0))|0);
    $26 = __THREW__; __THREW__ = 0;
    $27 = $26&1;
    if ($27) {
     break L1;
    }
    __THREW__ = 0;
    $28 = (invoke_ii(366,($25|0))|0);
    $29 = __THREW__; __THREW__ = 0;
    $30 = $29&1;
    if ($30) {
     break L1;
    }
    $31 = $8;
    __THREW__ = 0;
    $32 = (invoke_iii(367,($28|0),($31|0))|0);
    $33 = __THREW__; __THREW__ = 0;
    $34 = $33&1;
    if ($34) {
     break L1;
    }
    $35 = HEAP32[$32>>2]|0;
    __THREW__ = 0;
    $36 = (invoke_iii(581,($9|0),($35|0))|0);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if ($38) {
     break L1;
    }
    HEAP32[$36>>2] = $20;
    $39 = $8;
    $40 = (($39) + 1)|0;
    $8 = $40;
   }
   STACKTOP = sp;return;
  }
 } while(0);
 $41 = ___cxa_find_matching_catch_2()|0;
 $42 = tempRet0;
 $6 = $41;
 $7 = $42;
 __THREW__ = 0;
 invoke_vi(442,($9|0));
 $43 = __THREW__; __THREW__ = 0;
 $44 = $43&1;
 if ($44) {
  $47 = ___cxa_find_matching_catch_3(0|0)|0;
  $48 = tempRet0;
  ___clang_call_terminate($47);
  // unreachable;
 } else {
  $45 = $6;
  $46 = $7;
  ___resumeException($45|0);
  // unreachable;
 }
}
function __ZN5Eigen17PermutationMatrixILin1ELin1EiEaSERKS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 (__ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEaSERKS1_($4,$5)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen21SparseSelfAdjointViewIKNS_12SparseMatrixIdLi0EiEELj1EE9twistedByERKNS_17PermutationMatrixILin1ELin1EiEE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = HEAP32[$5>>2]|0;
 $7 = $4;
 __ZN5Eigen33SparseSymmetricPermutationProductINS_12SparseMatrixIdLi0EiEELi1EEC2ERKS2_RKNS_17PermutationMatrixILin1ELin1EiEE($0,$6,$7);
 STACKTOP = sp;return;
}
function __ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE15selfadjointViewILj2EEENS3_25SelfAdjointViewReturnTypeIXT_EE4TypeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = $0;
 $3 = $2;
 $4 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($3)|0);
 __ZN5Eigen21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EEC2ERS2_($1,$4);
 $5 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EEaSIS2_Li1EEERS3_RKNS_33SparseSymmetricPermutationProductIT_XT0_EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal37call_assignment_no_alias_no_transposeINS_21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EEENS_33SparseSymmetricPermutationProductIS4_Li1EEEEEvRT_RKT0_($4,$5);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen21SparseSelfAdjointViewIKNS_12SparseMatrixIdLi0EiEELj1EEC2ERS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 HEAP32[$4>>2] = $5;
 $6 = (__ZNK5Eigen21SparseSelfAdjointViewIKNS_12SparseMatrixIdLi0EiEELj1EE4rowsEv($4)|0);
 $7 = (__ZNK5Eigen21SparseSelfAdjointViewIKNS_12SparseMatrixIdLi0EiEELj1EE4colsEv($4)|0);
 $8 = ($6|0)==($7|0);
 if ($8) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((6488|0),(6553|0),64,(6606|0));
  // unreachable;
 }
}
function __ZNK5Eigen21SparseSelfAdjointViewIKNS_12SparseMatrixIdLi0EiEELj1EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen21SparseSelfAdjointViewIKNS_12SparseMatrixIdLi0EiEELj1EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEEaSINS_21SparseSelfAdjointViewIKS2_Lj1EEEEERS2_RKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_21SparseSelfAdjointViewIKNS_12SparseMatrixIdLi0EiEELj1EEEE7derivedEv($6)|0);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_12SparseMatrixIdLi0EiEENS_21SparseSelfAdjointViewIKS3_Lj1EEEEEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZNK5Eigen9EigenBaseINS_21SparseSelfAdjointViewIKNS_12SparseMatrixIdLi0EiEELj1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_12SparseMatrixIdLi0EiEENS_21SparseSelfAdjointViewIKS3_Lj1EEEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_12SparseMatrixIdLi0EiEENS_21SparseSelfAdjointViewIKS3_Lj1EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($5,$6,$4);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_12SparseMatrixIdLi0EiEENS_21SparseSelfAdjointViewIKS3_Lj1EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_12SparseMatrixIdLi0EiEENS_21SparseSelfAdjointViewIKS3_Lj1EEENS0_9assign_opIddEENS0_24SparseSelfAdjoint2SparseEvE3runIdLi0EEEvRNS2_IT_XT0_EiEERKS6_RKS8_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_12SparseMatrixIdLi0EiEENS_21SparseSelfAdjointViewIKS3_Lj1EEENS0_9assign_opIddEENS0_24SparseSelfAdjoint2SparseEvE3runIdLi0EEEvRNS2_IT_XT0_EiEERKS6_RKS8_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4;
 $7 = (__ZNK5Eigen21SparseSelfAdjointViewIKNS_12SparseMatrixIdLi0EiEELj1EE6matrixEv($6)|0);
 $8 = $3;
 __ZN5Eigen8internal24permute_symm_to_fullsymmILi1ENS_12SparseMatrixIdLi0EiEELi0EEEvRKT0_RNS2_INS4_6ScalarEXT1_ENS4_12StorageIndexEEEPKS8_($7,$8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24permute_symm_to_fullsymmILi1ENS_12SparseMatrixIdLi0EiEELi0EEEvRKT0_RNS2_INS4_6ScalarEXT1_ENS4_12StorageIndexEEEPKS8_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0, $$sink4 = 0.0, $$sink5 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0.0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0.0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0.0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $6 = sp;
 $11 = sp + 128|0;
 $14 = sp + 100|0;
 $23 = sp + 48|0;
 $25 = sp + 40|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $32 = $3;
 __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEEC2ERKS3_($6,$32);
 $33 = $4;
 __THREW__ = 0;
 $34 = (invoke_ii(582,($33|0))|0);
 $35 = __THREW__; __THREW__ = 0;
 $36 = $35&1;
 L1: do {
  if ($36) {
   label = 24;
  } else {
   $7 = $34;
   $37 = $3;
   __THREW__ = 0;
   $38 = (invoke_ii(440,($37|0))|0);
   $39 = __THREW__; __THREW__ = 0;
   $40 = $39&1;
   if ($40) {
    label = 24;
   } else {
    $10 = $38;
    __THREW__ = 0;
    invoke_vi(560,($11|0));
    $41 = __THREW__; __THREW__ = 0;
    $42 = $41&1;
    if ($42) {
     label = 24;
    } else {
     $43 = $10;
     __THREW__ = 0;
     invoke_vii(583,($11|0),($43|0));
     $44 = __THREW__; __THREW__ = 0;
     $45 = $44&1;
     L5: do {
      if (!($45)) {
       __THREW__ = 0;
       (invoke_ii(439,($11|0))|0);
       $46 = __THREW__; __THREW__ = 0;
       $47 = $46&1;
       if (!($47)) {
        $48 = $7;
        $49 = $10;
        $50 = $10;
        __THREW__ = 0;
        invoke_viii(70,($48|0),($49|0),($50|0));
        $51 = __THREW__; __THREW__ = 0;
        $52 = $51&1;
        if (!($52)) {
         $12 = 0;
         while(1) {
          $53 = $12;
          $54 = $10;
          $55 = ($53|0)<($54|0);
          if (!($55)) {
           break;
          }
          $56 = $5;
          $57 = ($56|0)!=(0|0);
          if ($57) {
           $58 = $5;
           $59 = $12;
           $60 = (($58) + ($59<<2)|0);
           $61 = HEAP32[$60>>2]|0;
           $63 = $61;
          } else {
           $62 = $12;
           $63 = $62;
          }
          $13 = $63;
          __THREW__ = 0;
          $64 = (invoke_ii(508,($6|0))|0);
          $65 = __THREW__; __THREW__ = 0;
          $66 = $65&1;
          if ($66) {
           break L5;
          }
          $67 = $12;
          __THREW__ = 0;
          invoke_viii(509,($14|0),($64|0),($67|0));
          $68 = __THREW__; __THREW__ = 0;
          $69 = $68&1;
          if ($69) {
           break L5;
          }
          while(1) {
           __THREW__ = 0;
           $70 = (invoke_ii(510,($14|0))|0);
           $71 = __THREW__; __THREW__ = 0;
           $72 = $71&1;
           if ($72) {
            break L5;
           }
           if (!($70)) {
            break;
           }
           __THREW__ = 0;
           $73 = (invoke_ii(512,($14|0))|0);
           $74 = __THREW__; __THREW__ = 0;
           $75 = $74&1;
           if ($75) {
            break L5;
           }
           $15 = $73;
           __THREW__ = 0;
           $76 = (invoke_ii(584,($14|0))|0);
           $77 = __THREW__; __THREW__ = 0;
           $78 = $77&1;
           if ($78) {
            break L5;
           }
           $16 = $76;
           __THREW__ = 0;
           $79 = (invoke_ii(585,($14|0))|0);
           $80 = __THREW__; __THREW__ = 0;
           $81 = $80&1;
           if ($81) {
            break L5;
           }
           $17 = $79;
           $82 = $5;
           $83 = ($82|0)!=(0|0);
           if ($83) {
            $84 = $5;
            $85 = $15;
            $86 = (($84) + ($85<<2)|0);
            $87 = HEAP32[$86>>2]|0;
            $89 = $87;
           } else {
            $88 = $15;
            $89 = $88;
           }
           $18 = $89;
           $90 = $16;
           $91 = $17;
           $92 = ($90|0)==($91|0);
           do {
            if ($92) {
             $93 = $18;
             __THREW__ = 0;
             $94 = (invoke_iii(468,($11|0),($93|0))|0);
             $95 = __THREW__; __THREW__ = 0;
             $96 = $95&1;
             if ($96) {
              break L5;
             } else {
              $$sink = $94;
              label = 29;
             }
            } else {
             $103 = $16;
             $104 = $17;
             $105 = ($103|0)>($104|0);
             if (!($105)) {
              break;
             }
             $106 = $18;
             __THREW__ = 0;
             $107 = (invoke_iii(468,($11|0),($106|0))|0);
             $108 = __THREW__; __THREW__ = 0;
             $109 = $108&1;
             if ($109) {
              break L5;
             }
             $110 = HEAP32[$107>>2]|0;
             $111 = (($110) + 1)|0;
             HEAP32[$107>>2] = $111;
             $112 = $13;
             __THREW__ = 0;
             $113 = (invoke_iii(468,($11|0),($112|0))|0);
             $114 = __THREW__; __THREW__ = 0;
             $115 = $114&1;
             if ($115) {
              break L5;
             } else {
              $$sink = $113;
              label = 29;
             }
            }
           } while(0);
           if ((label|0) == 29) {
            label = 0;
            $116 = HEAP32[$$sink>>2]|0;
            $117 = (($116) + 1)|0;
            HEAP32[$$sink>>2] = $117;
           }
           __THREW__ = 0;
           (invoke_ii(514,($14|0))|0);
           $118 = __THREW__; __THREW__ = 0;
           $119 = $118&1;
           if ($119) {
            break L5;
           }
          }
          $120 = $12;
          $121 = (($120) + 1)|0;
          $12 = $121;
         }
         __THREW__ = 0;
         $122 = (invoke_ii(586,($11|0))|0);
         $123 = __THREW__; __THREW__ = 0;
         $124 = $123&1;
         if (!($124)) {
          $19 = $122;
          $125 = $7;
          $126 = $19;
          __THREW__ = 0;
          invoke_vii(572,($125|0),($126|0));
          $127 = __THREW__; __THREW__ = 0;
          $128 = $127&1;
          if (!($128)) {
           $129 = $7;
           __THREW__ = 0;
           $130 = (invoke_ii(571,($129|0))|0);
           $131 = __THREW__; __THREW__ = 0;
           $132 = $131&1;
           if (!($132)) {
            HEAP32[$130>>2] = 0;
            $20 = 0;
            while(1) {
             $133 = $20;
             $134 = $10;
             $135 = ($133|0)<($134|0);
             if (!($135)) {
              break;
             }
             $136 = $7;
             __THREW__ = 0;
             $137 = (invoke_ii(571,($136|0))|0);
             $138 = __THREW__; __THREW__ = 0;
             $139 = $138&1;
             if ($139) {
              break L5;
             }
             $140 = $20;
             $141 = (($137) + ($140<<2)|0);
             $142 = HEAP32[$141>>2]|0;
             $143 = $20;
             __THREW__ = 0;
             $144 = (invoke_iii(468,($11|0),($143|0))|0);
             $145 = __THREW__; __THREW__ = 0;
             $146 = $145&1;
             if ($146) {
              break L5;
             }
             $147 = HEAP32[$144>>2]|0;
             $148 = (($142) + ($147))|0;
             $149 = $7;
             __THREW__ = 0;
             $150 = (invoke_ii(571,($149|0))|0);
             $151 = __THREW__; __THREW__ = 0;
             $152 = $151&1;
             if ($152) {
              break L5;
             }
             $153 = $20;
             $154 = (($153) + 1)|0;
             $155 = (($150) + ($154<<2)|0);
             HEAP32[$155>>2] = $148;
             $156 = $20;
             $157 = (($156) + 1)|0;
             $20 = $157;
            }
            $21 = 0;
            while(1) {
             $158 = $21;
             $159 = $10;
             $160 = ($158|0)<($159|0);
             if (!($160)) {
              break;
             }
             $161 = $7;
             __THREW__ = 0;
             $162 = (invoke_ii(571,($161|0))|0);
             $163 = __THREW__; __THREW__ = 0;
             $164 = $163&1;
             if ($164) {
              break L5;
             }
             $165 = $21;
             $166 = (($162) + ($165<<2)|0);
             $167 = HEAP32[$166>>2]|0;
             $168 = $21;
             __THREW__ = 0;
             $169 = (invoke_iii(468,($11|0),($168|0))|0);
             $170 = __THREW__; __THREW__ = 0;
             $171 = $170&1;
             if ($171) {
              break L5;
             }
             HEAP32[$169>>2] = $167;
             $172 = $21;
             $173 = (($172) + 1)|0;
             $21 = $173;
            }
            $22 = 0;
            while(1) {
             $174 = $22;
             $175 = $10;
             $176 = ($174|0)<($175|0);
             if (!($176)) {
              break;
             }
             __THREW__ = 0;
             $177 = (invoke_ii(508,($6|0))|0);
             $178 = __THREW__; __THREW__ = 0;
             $179 = $178&1;
             if ($179) {
              break L5;
             }
             $180 = $22;
             __THREW__ = 0;
             invoke_viii(509,($23|0),($177|0),($180|0));
             $181 = __THREW__; __THREW__ = 0;
             $182 = $181&1;
             if ($182) {
              break L5;
             }
             while(1) {
              __THREW__ = 0;
              $183 = (invoke_ii(510,($23|0))|0);
              $184 = __THREW__; __THREW__ = 0;
              $185 = $184&1;
              if ($185) {
               break L5;
              }
              if (!($183)) {
               break;
              }
              __THREW__ = 0;
              $186 = (invoke_ii(512,($23|0))|0);
              $187 = __THREW__; __THREW__ = 0;
              $188 = $187&1;
              if ($188) {
               break L5;
              }
              HEAP32[$25>>2] = $186;
              __THREW__ = 0;
              $189 = (invoke_ii(587,($25|0))|0);
              $190 = __THREW__; __THREW__ = 0;
              $191 = $190&1;
              if ($191) {
               break L5;
              }
              $24 = $189;
              __THREW__ = 0;
              $192 = (invoke_ii(584,($23|0))|0);
              $193 = __THREW__; __THREW__ = 0;
              $194 = $193&1;
              if ($194) {
               break L5;
              }
              $26 = $192;
              __THREW__ = 0;
              $195 = (invoke_ii(585,($23|0))|0);
              $196 = __THREW__; __THREW__ = 0;
              $197 = $196&1;
              if ($197) {
               break L5;
              }
              $27 = $195;
              $198 = $5;
              $199 = ($198|0)!=(0|0);
              if ($199) {
               $200 = $5;
               $201 = $22;
               $202 = (($200) + ($201<<2)|0);
               $203 = HEAP32[$202>>2]|0;
               $205 = $203;
              } else {
               $204 = $22;
               $205 = $204;
              }
              $28 = $205;
              $206 = $5;
              $207 = ($206|0)!=(0|0);
              if ($207) {
               $208 = $5;
               $209 = $24;
               $210 = (($208) + ($209<<2)|0);
               $211 = HEAP32[$210>>2]|0;
               $213 = $211;
              } else {
               $212 = $24;
               $213 = $212;
              }
              $29 = $213;
              $214 = $26;
              $215 = $27;
              $216 = ($214|0)==($215|0);
              do {
               if ($216) {
                $217 = $29;
                __THREW__ = 0;
                $218 = (invoke_iii(468,($11|0),($217|0))|0);
                $219 = __THREW__; __THREW__ = 0;
                $220 = $219&1;
                if ($220) {
                 break L5;
                }
                $221 = HEAP32[$218>>2]|0;
                $222 = (($221) + 1)|0;
                HEAP32[$218>>2] = $222;
                $30 = $221;
                $223 = $29;
                $224 = $7;
                __THREW__ = 0;
                $225 = (invoke_ii(588,($224|0))|0);
                $226 = __THREW__; __THREW__ = 0;
                $227 = $226&1;
                if ($227) {
                 break L5;
                }
                $228 = $30;
                $229 = (($225) + ($228<<2)|0);
                HEAP32[$229>>2] = $223;
                __THREW__ = 0;
                $230 = (invoke_ii(511,($23|0))|0);
                $231 = __THREW__; __THREW__ = 0;
                $232 = $231&1;
                if ($232) {
                 break L5;
                }
                $233 = +HEAPF64[$230>>3];
                $234 = $7;
                __THREW__ = 0;
                $235 = (invoke_ii(589,($234|0))|0);
                $236 = __THREW__; __THREW__ = 0;
                $237 = $236&1;
                if ($237) {
                 break L5;
                }
                $238 = $30;
                $239 = (($235) + ($238<<3)|0);
                $$sink4 = $233;$$sink5 = $239;
                label = 79;
               } else {
                $240 = $26;
                $241 = $27;
                $242 = ($240|0)>($241|0);
                if (!($242)) {
                 break;
                }
                $243 = $28;
                __THREW__ = 0;
                $244 = (invoke_iii(468,($11|0),($243|0))|0);
                $245 = __THREW__; __THREW__ = 0;
                $246 = $245&1;
                if ($246) {
                 break L5;
                }
                $247 = HEAP32[$244>>2]|0;
                $248 = (($247) + 1)|0;
                HEAP32[$244>>2] = $248;
                $31 = $247;
                $249 = $29;
                $250 = $7;
                __THREW__ = 0;
                $251 = (invoke_ii(588,($250|0))|0);
                $252 = __THREW__; __THREW__ = 0;
                $253 = $252&1;
                if ($253) {
                 break L5;
                }
                $254 = $31;
                $255 = (($251) + ($254<<2)|0);
                HEAP32[$255>>2] = $249;
                __THREW__ = 0;
                $256 = (invoke_ii(511,($23|0))|0);
                $257 = __THREW__; __THREW__ = 0;
                $258 = $257&1;
                if ($258) {
                 break L5;
                }
                $259 = +HEAPF64[$256>>3];
                $260 = $7;
                __THREW__ = 0;
                $261 = (invoke_ii(589,($260|0))|0);
                $262 = __THREW__; __THREW__ = 0;
                $263 = $262&1;
                if ($263) {
                 break L5;
                }
                $264 = $31;
                $265 = (($261) + ($264<<3)|0);
                HEAPF64[$265>>3] = $259;
                $266 = $29;
                __THREW__ = 0;
                $267 = (invoke_iii(468,($11|0),($266|0))|0);
                $268 = __THREW__; __THREW__ = 0;
                $269 = $268&1;
                if ($269) {
                 break L5;
                }
                $270 = HEAP32[$267>>2]|0;
                $271 = (($270) + 1)|0;
                HEAP32[$267>>2] = $271;
                $31 = $270;
                $272 = $28;
                $273 = $7;
                __THREW__ = 0;
                $274 = (invoke_ii(588,($273|0))|0);
                $275 = __THREW__; __THREW__ = 0;
                $276 = $275&1;
                if ($276) {
                 break L5;
                }
                $277 = $31;
                $278 = (($274) + ($277<<2)|0);
                HEAP32[$278>>2] = $272;
                __THREW__ = 0;
                $279 = (invoke_ii(511,($23|0))|0);
                $280 = __THREW__; __THREW__ = 0;
                $281 = $280&1;
                if ($281) {
                 break L5;
                }
                __THREW__ = 0;
                $282 = (+invoke_di(574,($279|0)));
                $283 = __THREW__; __THREW__ = 0;
                $284 = $283&1;
                if ($284) {
                 break L5;
                }
                $285 = $7;
                __THREW__ = 0;
                $286 = (invoke_ii(589,($285|0))|0);
                $287 = __THREW__; __THREW__ = 0;
                $288 = $287&1;
                if ($288) {
                 break L5;
                }
                $289 = $31;
                $290 = (($286) + ($289<<3)|0);
                $$sink4 = $282;$$sink5 = $290;
                label = 79;
               }
              } while(0);
              if ((label|0) == 79) {
               label = 0;
               HEAPF64[$$sink5>>3] = $$sink4;
              }
              __THREW__ = 0;
              (invoke_ii(514,($23|0))|0);
              $291 = __THREW__; __THREW__ = 0;
              $292 = $291&1;
              if ($292) {
               break L5;
              }
             }
             $293 = $22;
             $294 = (($293) + 1)|0;
             $22 = $294;
            }
            __THREW__ = 0;
            invoke_vi(442,($11|0));
            $295 = __THREW__; __THREW__ = 0;
            $296 = $295&1;
            if ($296) {
             label = 24;
             break L1;
            }
            __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEED2Ev($6);
            STACKTOP = sp;return;
           }
          }
         }
        }
       }
      }
     } while(0);
     $99 = ___cxa_find_matching_catch_2()|0;
     $100 = tempRet0;
     $8 = $99;
     $9 = $100;
     __THREW__ = 0;
     invoke_vi(442,($11|0));
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      $301 = ___cxa_find_matching_catch_3(0|0)|0;
      $302 = tempRet0;
      ___clang_call_terminate($301);
      // unreachable;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 24) {
  $97 = ___cxa_find_matching_catch_2()|0;
  $98 = tempRet0;
  $8 = $97;
  $9 = $98;
 }
 __THREW__ = 0;
 invoke_vi(517,($6|0));
 $297 = __THREW__; __THREW__ = 0;
 $298 = $297&1;
 if ($298) {
  $301 = ___cxa_find_matching_catch_3(0|0)|0;
  $302 = tempRet0;
  ___clang_call_terminate($301);
  // unreachable;
 } else {
  $299 = $8;
  $300 = $9;
  ___resumeException($299|0);
  // unreachable;
 }
}
function __ZNK5Eigen21SparseSelfAdjointViewIKNS_12SparseMatrixIdLi0EiEELj1EE6matrixEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator3rowEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5indexEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator3colEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = (__ZNK5Eigen8internal19variable_if_dynamicIiLin1EE5valueEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE3sumEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 8|0;
 $2 = $0;
 $4 = $2;
 $5 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($4)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  $1 = 0;
  $9 = $1;
  STACKTOP = sp;return ($9|0);
 } else {
  $7 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
  __ZN5Eigen8internal13scalar_sum_opIiiEC2Ev($3);
  $8 = (__ZNK5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE5reduxINS_8internal13scalar_sum_opIiiEEEEiRKT_($7,$3)|0);
  $1 = $8;
  $9 = $1;
  STACKTOP = sp;return ($9|0);
 }
 return (0)|0;
}
function __ZN5Eigen12SparseMatrixIdLi0EiE14resizeNonZerosEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 20|0);
 $6 = $3;
 __ZN5Eigen8internal17CompressedStorageIdiE6resizeEid($5,$6,0.0);
 STACKTOP = sp;return;
}
function __ZN5Eigen12SparseMatrixIdLi0EiE13outerIndexPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen12SparseMatrixIdLi0EiE13innerIndexPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0);
 $4 = (__ZN5Eigen8internal17CompressedStorageIdiE8indexPtrEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen12SparseMatrixIdLi0EiE8valuePtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0);
 $4 = (__ZN5Eigen8internal17CompressedStorageIdiE8valuePtrEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen6numext4conjIdEENS_8internal11conj_retvalINS2_36global_math_functions_filtering_baseIT_vE4typeEE4typeERKS5_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (+__ZN5Eigen8internal9conj_implIdLb0EE3runERKd($2));
 STACKTOP = sp;return (+$3);
}
function __ZNK5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE5reduxINS_8internal13scalar_sum_opIiiEEEEiRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $7 = $2;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($7)|0);
 $9 = ($8|0)>(0);
 if (!($9)) {
  ___assert_fail((2930|0),(2998|0),413,(3029|0));
  // unreachable;
 }
 $10 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($7)|0);
 $11 = ($10|0)>(0);
 if (!($11)) {
  ___assert_fail((2930|0),(2998|0),413,(3029|0));
  // unreachable;
 }
 $12 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($7)|0);
 __ZN5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($4,$12);
 $13 = $3;
 __THREW__ = 0;
 $14 = (invoke_iii(590,($4|0),($13|0))|0);
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 if (!($16)) {
  __ZN5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev($4);
  STACKTOP = sp;return ($14|0);
 }
 $17 = ___cxa_find_matching_catch_2()|0;
 $18 = tempRet0;
 $5 = $17;
 $6 = $18;
 __THREW__ = 0;
 invoke_vi(591,($4|0));
 $19 = __THREW__; __THREW__ = 0;
 $20 = $19&1;
 if ($20) {
  $23 = ___cxa_find_matching_catch_3(0|0)|0;
  $24 = tempRet0;
  ___clang_call_terminate($23);
  // unreachable;
 } else {
  $21 = $5;
  $22 = $6;
  ___resumeException($21|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($4,$5);
 $6 = ((($4)) + 8|0);
 $7 = $3;
 HEAP32[$6>>2] = $7;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10redux_implINS0_13scalar_sum_opIiiEENS0_15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEELi0ELi0EE3runERKS7_RKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 12|0;
 $2 = $0;
 $3 = $1;
 $8 = $2;
 $9 = (__ZNK5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($8)|0);
 $10 = ($9|0)>(0);
 if (!($10)) {
  ___assert_fail((3254|0),(2998|0),192,(2040|0));
  // unreachable;
 }
 $11 = $2;
 $12 = (__ZNK5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($11)|0);
 $13 = ($12|0)>(0);
 if (!($13)) {
  ___assert_fail((3254|0),(2998|0),192,(2040|0));
  // unreachable;
 }
 $14 = $2;
 $15 = (__ZNK5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE17coeffByOuterInnerEii($14,0,0)|0);
 $16 = HEAP32[$15>>2]|0;
 HEAP32[$4>>2] = $16;
 $5 = 1;
 while(1) {
  $17 = $5;
  $18 = $2;
  $19 = (__ZNK5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE9innerSizeEv($18)|0);
  $20 = ($17|0)<($19|0);
  if (!($20)) {
   break;
  }
  $21 = $3;
  $22 = $2;
  $23 = $5;
  $24 = (__ZNK5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE17coeffByOuterInnerEii($22,0,$23)|0);
  $25 = (__ZNK5Eigen8internal13scalar_sum_opIiiEclERKiS4_($21,$4,$24)|0);
  HEAP32[$4>>2] = $25;
  $26 = $5;
  $27 = (($26) + 1)|0;
  $5 = $27;
 }
 $6 = 1;
 while(1) {
  $28 = $6;
  $29 = $2;
  $30 = (__ZNK5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE9outerSizeEv($29)|0);
  $31 = ($28|0)<($30|0);
  if (!($31)) {
   break;
  }
  $7 = 0;
  while(1) {
   $32 = $7;
   $33 = $2;
   $34 = (__ZNK5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE9innerSizeEv($33)|0);
   $35 = ($32|0)<($34|0);
   if (!($35)) {
    break;
   }
   $36 = $3;
   $37 = $2;
   $38 = $6;
   $39 = $7;
   $40 = (__ZNK5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE17coeffByOuterInnerEii($37,$38,$39)|0);
   $41 = (__ZNK5Eigen8internal13scalar_sum_opIiiEclERKiS4_($36,$4,$40)|0);
   HEAP32[$4>>2] = $41;
   $42 = $7;
   $43 = (($42) + 1)|0;
   $7 = $43;
  }
  $44 = $6;
  $45 = (($44) + 1)|0;
  $6 = $45;
 }
 $46 = HEAP32[$4>>2]|0;
 STACKTOP = sp;return ($46|0);
}
function __ZN5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE17coeffByOuterInnerEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $5;
 $8 = $4;
 $9 = (__ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE5coeffEii($6,$7,$8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE9innerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE9outerSizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = HEAP32[$6>>2]|0;
 $8 = $4;
 $9 = $5;
 $10 = (__ZN5Eigen8internal19variable_if_dynamicIiLi0EE5valueEv()|0);
 $11 = Math_imul($9, $10)|0;
 $12 = (($8) + ($11))|0;
 $13 = (($7) + ($12<<2)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZNK5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1;
}
function __ZN5Eigen8internal17CompressedStorageIdiE8indexPtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal17CompressedStorageIdiE8valuePtrEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal9conj_implIdLb0EE3runERKd($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = +HEAPF64[$2>>3];
 STACKTOP = sp;return (+$3);
}
function __ZN5Eigen8internal25ordering_helper_at_plus_aINS_12SparseMatrixIdLi0EiEEEEvRKT_RS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $4 = sp + 56|0;
 $5 = sp + 48|0;
 $9 = sp + 16|0;
 $10 = sp;
 $2 = $0;
 $3 = $1;
 __ZN5Eigen12SparseMatrixIdLi0EiEC2Ev($4);
 $11 = $2;
 __THREW__ = 0;
 invoke_vii(592,($5|0),($11|0));
 $12 = __THREW__; __THREW__ = 0;
 $13 = $12&1;
 L1: do {
  if (!($13)) {
   __THREW__ = 0;
   (invoke_iii(593,($4|0),($5|0))|0);
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if (!($15)) {
    $8 = 0;
    while(1) {
     $16 = $8;
     __THREW__ = 0;
     $17 = (invoke_ii(440,($4|0))|0);
     $18 = __THREW__; __THREW__ = 0;
     $19 = $18&1;
     if ($19) {
      break L1;
     }
     $20 = ($16|0)<($17|0);
     if (!($20)) {
      break;
     }
     $21 = $8;
     __THREW__ = 0;
     invoke_viii(509,($9|0),($4|0),($21|0));
     $22 = __THREW__; __THREW__ = 0;
     $23 = $22&1;
     if ($23) {
      break L1;
     }
     while(1) {
      __THREW__ = 0;
      $24 = (invoke_ii(510,($9|0))|0);
      $25 = __THREW__; __THREW__ = 0;
      $26 = $25&1;
      if ($26) {
       break L1;
      }
      if (!($24)) {
       break;
      }
      __THREW__ = 0;
      $27 = (invoke_ii(594,($9|0))|0);
      $28 = __THREW__; __THREW__ = 0;
      $29 = $28&1;
      if ($29) {
       break L1;
      }
      HEAPF64[$27>>3] = 0.0;
      __THREW__ = 0;
      (invoke_ii(514,($9|0))|0);
      $30 = __THREW__; __THREW__ = 0;
      $31 = $30&1;
      if ($31) {
       break L1;
      }
     }
     $36 = $8;
     $37 = (($36) + 1)|0;
     $8 = $37;
    }
    $38 = $2;
    __THREW__ = 0;
    invoke_viii(595,($10|0),($4|0),($38|0));
    $39 = __THREW__; __THREW__ = 0;
    $40 = $39&1;
    if (!($40)) {
     $41 = $3;
     __THREW__ = 0;
     (invoke_iii(596,($41|0),($10|0))|0);
     $42 = __THREW__; __THREW__ = 0;
     $43 = $42&1;
     if (!($43)) {
      __ZN5Eigen12SparseMatrixIdLi0EiED2Ev($4);
      STACKTOP = sp;return;
     }
    }
   }
  }
 } while(0);
 $32 = ___cxa_find_matching_catch_2()|0;
 $33 = tempRet0;
 $6 = $32;
 $7 = $33;
 __THREW__ = 0;
 invoke_vi(63,($4|0));
 $34 = __THREW__; __THREW__ = 0;
 $35 = $34&1;
 if ($35) {
  $46 = ___cxa_find_matching_catch_3(0|0)|0;
  $47 = tempRet0;
  ___clang_call_terminate($46);
  // unreachable;
 } else {
  $44 = $6;
  $45 = $7;
  ___resumeException($44|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal23minimum_degree_orderingIdiEEvRNS_12SparseMatrixIT_Li0ET0_EERNS_17PermutationMatrixILin1ELin1ES4_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$alloca_mul = 0, $$sink = 0, $$sink1 = 0, $$sink3 = 0, $$sink4 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0;
 var $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0;
 var $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0;
 var $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0;
 var $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0;
 var $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0;
 var $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0;
 var $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0;
 var $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0;
 var $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0;
 var $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0;
 var $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0;
 var $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0.0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0;
 var $1229 = 0, $123 = 0.0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0.0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0;
 var $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0;
 var $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0;
 var $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0;
 var $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0;
 var $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0;
 var $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0;
 var $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0;
 var $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0;
 var $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0;
 var $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0;
 var $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0;
 var $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0;
 var $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0;
 var $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0;
 var $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0;
 var $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0;
 var $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0;
 var $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0;
 var $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0;
 var $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0;
 var $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0;
 var $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0;
 var $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0;
 var $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0;
 var $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0;
 var $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0;
 var $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0;
 var $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0;
 var $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0;
 var $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0;
 var $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0;
 var $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0;
 var $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0;
 var $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0;
 var $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0;
 var $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0;
 var $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(480|0);
 $7 = sp + 40|0;
 $10 = sp + 474|0;
 $16 = sp + 32|0;
 $19 = sp + 473|0;
 $25 = sp + 24|0;
 $28 = sp + 472|0;
 $34 = sp + 16|0;
 $37 = sp + 471|0;
 $44 = sp + 8|0;
 $47 = sp + 470|0;
 $53 = sp;
 $56 = sp + 469|0;
 $59 = sp + 284|0;
 $60 = sp + 280|0;
 $62 = sp + 272|0;
 $66 = sp + 256|0;
 $67 = sp + 252|0;
 $68 = sp + 248|0;
 $74 = sp + 224|0;
 $76 = sp + 216|0;
 $97 = sp + 132|0;
 $98 = sp + 128|0;
 $99 = sp + 124|0;
 $100 = sp + 120|0;
 $103 = sp + 100|0;
 $118 = sp + 44|0;
 $57 = $0;
 $58 = $1;
 HEAP32[$62>>2] = 0;
 HEAP32[$76>>2] = 0;
 $83 = 0;
 $119 = $57;
 $120 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($119)|0);
 HEAP32[$97>>2] = $120;
 HEAP32[$98>>2] = 16;
 $121 = HEAP32[$97>>2]|0;
 $122 = (+($121|0));
 $123 = (+Math_sqrt((+$122)));
 $124 = 10.0 * $123;
 $125 = (~~(($124)));
 HEAP32[$99>>2] = $125;
 $54 = $98;
 $55 = $99;
 $126 = $54;
 $127 = $55;
 ;HEAP8[$53>>0]=HEAP8[$56>>0]|0;
 $51 = $126;
 $52 = $127;
 $128 = $51;
 $129 = $52;
 $48 = $53;
 $49 = $128;
 $50 = $129;
 $130 = $49;
 $131 = HEAP32[$130>>2]|0;
 $132 = $50;
 $133 = HEAP32[$132>>2]|0;
 $134 = ($131|0)<($133|0);
 $135 = $52;
 $136 = $51;
 $137 = $134 ? $135 : $136;
 $138 = HEAP32[$137>>2]|0;
 HEAP32[$74>>2] = $138;
 $139 = HEAP32[$97>>2]|0;
 $140 = (($139) - 2)|0;
 HEAP32[$100>>2] = $140;
 $45 = $100;
 $46 = $74;
 $141 = $45;
 $142 = $46;
 ;HEAP8[$44>>0]=HEAP8[$47>>0]|0;
 $42 = $141;
 $43 = $142;
 $143 = $43;
 $144 = $42;
 $39 = $44;
 $40 = $143;
 $41 = $144;
 $145 = $40;
 $146 = HEAP32[$145>>2]|0;
 $147 = $41;
 $148 = HEAP32[$147>>2]|0;
 $149 = ($146|0)<($148|0);
 $150 = $43;
 $151 = $42;
 $152 = $149 ? $150 : $151;
 $153 = HEAP32[$152>>2]|0;
 HEAP32[$74>>2] = $153;
 $154 = $57;
 $155 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE8nonZerosEv($154)|0);
 $101 = $155;
 $156 = $58;
 $157 = HEAP32[$97>>2]|0;
 $158 = (($157) + 1)|0;
 __ZN5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE6resizeEi($156,$158);
 $159 = $101;
 $160 = $101;
 $161 = (($160|0) / 5)&-1;
 $162 = (($159) + ($161))|0;
 $163 = HEAP32[$97>>2]|0;
 $164 = $163<<1;
 $165 = (($162) + ($164))|0;
 $95 = $165;
 $166 = $57;
 $167 = $95;
 __ZN5Eigen12SparseMatrixIdLi0EiE14resizeNonZerosEi($166,$167);
 $168 = HEAP32[$97>>2]|0;
 $169 = (($168) + 1)|0;
 $170 = $169<<3;
 $38 = $170;
 $171 = $38;
 $172 = ($171>>>0)>(1073741823);
 if ($172) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $173 = HEAP32[$97>>2]|0;
 $174 = (($173) + 1)|0;
 $175 = $174<<5;
 $176 = ($175>>>0)<=(131072);
 $177 = HEAP32[$97>>2]|0;
 $178 = (($177) + 1)|0;
 $179 = $178<<5;
 if ($176) {
  $180 = (($179) + 16)|0;
  $181 = (($180) - 1)|0;
  $$alloca_mul = $181;
  $182 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
  $183 = $182;
  $184 = (($183) + 16)|0;
  $185 = (($184) - 1)|0;
  $186 = $185 & -16;
  $187 = $186;
  $189 = $187;
 } else {
  $188 = (__ZN5Eigen8internal14aligned_mallocEj($179)|0);
  $189 = $188;
 }
 $102 = $189;
 $190 = $102;
 $191 = HEAP32[$97>>2]|0;
 $192 = (($191) + 1)|0;
 $193 = $192<<3;
 $194 = HEAP32[$97>>2]|0;
 $195 = (($194) + 1)|0;
 $196 = $195<<5;
 $197 = ($196>>>0)>(131072);
 __ZN5Eigen8internal28aligned_stack_memory_handlerIiEC2EPijb($103,$190,$193,$197);
 $198 = $102;
 $104 = $198;
 $199 = $102;
 $200 = HEAP32[$97>>2]|0;
 $201 = (($200) + 1)|0;
 $202 = (($199) + ($201<<2)|0);
 $105 = $202;
 $203 = $102;
 $204 = HEAP32[$97>>2]|0;
 $205 = (($204) + 1)|0;
 $206 = $205<<1;
 $207 = (($203) + ($206<<2)|0);
 $106 = $207;
 $208 = $102;
 $209 = HEAP32[$97>>2]|0;
 $210 = (($209) + 1)|0;
 $211 = ($210*3)|0;
 $212 = (($208) + ($211<<2)|0);
 $107 = $212;
 $213 = $102;
 $214 = HEAP32[$97>>2]|0;
 $215 = (($214) + 1)|0;
 $216 = $215<<2;
 $217 = (($213) + ($216<<2)|0);
 $108 = $217;
 $218 = $102;
 $219 = HEAP32[$97>>2]|0;
 $220 = (($219) + 1)|0;
 $221 = ($220*5)|0;
 $222 = (($218) + ($221<<2)|0);
 $109 = $222;
 $223 = $102;
 $224 = HEAP32[$97>>2]|0;
 $225 = (($224) + 1)|0;
 $226 = ($225*6)|0;
 $227 = (($223) + ($226<<2)|0);
 $110 = $227;
 $228 = $102;
 $229 = HEAP32[$97>>2]|0;
 $230 = (($229) + 1)|0;
 $231 = ($230*7)|0;
 $232 = (($228) + ($231<<2)|0);
 $111 = $232;
 $233 = $58;
 __THREW__ = 0;
 $234 = (invoke_ii(597,($233|0))|0);
 $235 = __THREW__; __THREW__ = 0;
 $236 = $235&1;
 L8: do {
  if (!($236)) {
   __THREW__ = 0;
   $237 = (invoke_ii(598,($234|0))|0);
   $238 = __THREW__; __THREW__ = 0;
   $239 = $238&1;
   if (!($239)) {
    $112 = $237;
    $240 = $57;
    __THREW__ = 0;
    $241 = (invoke_ii(571,($240|0))|0);
    $242 = __THREW__; __THREW__ = 0;
    $243 = $242&1;
    if (!($243)) {
     $115 = $241;
     $244 = $57;
     __THREW__ = 0;
     $245 = (invoke_ii(588,($244|0))|0);
     $246 = __THREW__; __THREW__ = 0;
     $247 = $246&1;
     if (!($247)) {
      $116 = $245;
      HEAP32[$68>>2] = 0;
      while(1) {
       $248 = HEAP32[$68>>2]|0;
       $249 = HEAP32[$97>>2]|0;
       $250 = ($248|0)<($249|0);
       if (!($250)) {
        break;
       }
       $251 = $115;
       $252 = HEAP32[$68>>2]|0;
       $253 = (($252) + 1)|0;
       $254 = (($251) + ($253<<2)|0);
       $255 = HEAP32[$254>>2]|0;
       $256 = $115;
       $257 = HEAP32[$68>>2]|0;
       $258 = (($256) + ($257<<2)|0);
       $259 = HEAP32[$258>>2]|0;
       $260 = (($255) - ($259))|0;
       $261 = $104;
       $262 = HEAP32[$68>>2]|0;
       $263 = (($261) + ($262<<2)|0);
       HEAP32[$263>>2] = $260;
       $264 = HEAP32[$68>>2]|0;
       $265 = (($264) + 1)|0;
       HEAP32[$68>>2] = $265;
      }
      $270 = $104;
      $271 = HEAP32[$97>>2]|0;
      $272 = (($270) + ($271<<2)|0);
      HEAP32[$272>>2] = 0;
      $273 = $95;
      $75 = $273;
      HEAP32[$66>>2] = 0;
      while(1) {
       $274 = HEAP32[$66>>2]|0;
       $275 = HEAP32[$97>>2]|0;
       $276 = ($274|0)<=($275|0);
       if (!($276)) {
        break;
       }
       $277 = $107;
       $278 = HEAP32[$66>>2]|0;
       $279 = (($277) + ($278<<2)|0);
       HEAP32[$279>>2] = -1;
       $280 = $112;
       $281 = HEAP32[$66>>2]|0;
       $282 = (($280) + ($281<<2)|0);
       HEAP32[$282>>2] = -1;
       $283 = $106;
       $284 = HEAP32[$66>>2]|0;
       $285 = (($283) + ($284<<2)|0);
       HEAP32[$285>>2] = -1;
       $286 = $111;
       $287 = HEAP32[$66>>2]|0;
       $288 = (($286) + ($287<<2)|0);
       HEAP32[$288>>2] = -1;
       $289 = $105;
       $290 = HEAP32[$66>>2]|0;
       $291 = (($289) + ($290<<2)|0);
       HEAP32[$291>>2] = 1;
       $292 = $110;
       $293 = HEAP32[$66>>2]|0;
       $294 = (($292) + ($293<<2)|0);
       HEAP32[$294>>2] = 1;
       $295 = $108;
       $296 = HEAP32[$66>>2]|0;
       $297 = (($295) + ($296<<2)|0);
       HEAP32[$297>>2] = 0;
       $298 = $104;
       $299 = HEAP32[$66>>2]|0;
       $300 = (($298) + ($299<<2)|0);
       $301 = HEAP32[$300>>2]|0;
       $302 = $109;
       $303 = HEAP32[$66>>2]|0;
       $304 = (($302) + ($303<<2)|0);
       HEAP32[$304>>2] = $301;
       $305 = HEAP32[$66>>2]|0;
       $306 = (($305) + 1)|0;
       HEAP32[$66>>2] = $306;
      }
      $307 = $110;
      $308 = HEAP32[$97>>2]|0;
      __THREW__ = 0;
      $309 = (invoke_iiiii(599,0,0,($307|0),($308|0))|0);
      $310 = __THREW__; __THREW__ = 0;
      $311 = $310&1;
      if (!($311)) {
       $80 = $309;
       HEAP32[$66>>2] = 0;
       while(1) {
        $312 = HEAP32[$66>>2]|0;
        $313 = HEAP32[$97>>2]|0;
        $314 = ($312|0)<($313|0);
        if (!($314)) {
         break;
        }
        $117 = 0;
        $315 = $115;
        $316 = HEAP32[$66>>2]|0;
        $317 = (($315) + ($316<<2)|0);
        $318 = HEAP32[$317>>2]|0;
        $84 = $318;
        while(1) {
         $319 = $84;
         $320 = $115;
         $321 = HEAP32[$66>>2]|0;
         $322 = (($321) + 1)|0;
         $323 = (($320) + ($322<<2)|0);
         $324 = HEAP32[$323>>2]|0;
         $325 = ($319|0)<($324|0);
         if (!($325)) {
          break;
         }
         $326 = $116;
         $327 = $84;
         $328 = (($326) + ($327<<2)|0);
         $329 = HEAP32[$328>>2]|0;
         $330 = HEAP32[$66>>2]|0;
         $331 = ($329|0)==($330|0);
         if ($331) {
          label = 23;
          break;
         }
         $332 = $84;
         $333 = (($332) + 1)|0;
         $84 = $333;
        }
        if ((label|0) == 23) {
         label = 0;
         $117 = 1;
        }
        $334 = $109;
        $335 = HEAP32[$66>>2]|0;
        $336 = (($334) + ($335<<2)|0);
        $337 = HEAP32[$336>>2]|0;
        HEAP32[$59>>2] = $337;
        $338 = HEAP32[$59>>2]|0;
        $339 = ($338|0)==(1);
        if ($339) {
         $340 = $117;
         $341 = $340&1;
         if ($341) {
          $342 = $108;
          $343 = HEAP32[$66>>2]|0;
          $344 = (($342) + ($343<<2)|0);
          HEAP32[$344>>2] = -2;
          $345 = $83;
          $346 = (($345) + 1)|0;
          $83 = $346;
          $347 = $115;
          $348 = HEAP32[$66>>2]|0;
          $349 = (($347) + ($348<<2)|0);
          HEAP32[$349>>2] = -1;
          $350 = $110;
          $351 = HEAP32[$66>>2]|0;
          $352 = (($350) + ($351<<2)|0);
          HEAP32[$352>>2] = 0;
         } else {
          label = 28;
         }
        } else {
         label = 28;
        }
        do {
         if ((label|0) == 28) {
          label = 0;
          $353 = HEAP32[$59>>2]|0;
          $354 = HEAP32[$74>>2]|0;
          $355 = ($353|0)>($354|0);
          if (!($355)) {
           $356 = $117;
           $357 = $356&1;
           if ($357) {
            $377 = $107;
            $378 = HEAP32[$59>>2]|0;
            $379 = (($377) + ($378<<2)|0);
            $380 = HEAP32[$379>>2]|0;
            $381 = ($380|0)!=(-1);
            if ($381) {
             $382 = HEAP32[$66>>2]|0;
             $383 = $112;
             $384 = $107;
             $385 = HEAP32[$59>>2]|0;
             $386 = (($384) + ($385<<2)|0);
             $387 = HEAP32[$386>>2]|0;
             $388 = (($383) + ($387<<2)|0);
             HEAP32[$388>>2] = $382;
            }
            $389 = $107;
            $390 = HEAP32[$59>>2]|0;
            $391 = (($389) + ($390<<2)|0);
            $392 = HEAP32[$391>>2]|0;
            $393 = $106;
            $394 = HEAP32[$66>>2]|0;
            $395 = (($393) + ($394<<2)|0);
            HEAP32[$395>>2] = $392;
            $396 = HEAP32[$66>>2]|0;
            $397 = $107;
            $398 = HEAP32[$59>>2]|0;
            $399 = (($397) + ($398<<2)|0);
            HEAP32[$399>>2] = $396;
            break;
           }
          }
          $358 = $105;
          $359 = HEAP32[$66>>2]|0;
          $360 = (($358) + ($359<<2)|0);
          HEAP32[$360>>2] = 0;
          $361 = $108;
          $362 = HEAP32[$66>>2]|0;
          $363 = (($361) + ($362<<2)|0);
          HEAP32[$363>>2] = -1;
          $364 = $83;
          $365 = (($364) + 1)|0;
          $83 = $365;
          __THREW__ = 0;
          $366 = (invoke_ii(600,($97|0))|0);
          $367 = __THREW__; __THREW__ = 0;
          $368 = $367&1;
          if ($368) {
           break L8;
          }
          $369 = $115;
          $370 = HEAP32[$66>>2]|0;
          $371 = (($369) + ($370<<2)|0);
          HEAP32[$371>>2] = $366;
          $372 = $105;
          $373 = HEAP32[$97>>2]|0;
          $374 = (($372) + ($373<<2)|0);
          $375 = HEAP32[$374>>2]|0;
          $376 = (($375) + 1)|0;
          HEAP32[$374>>2] = $376;
         }
        } while(0);
        $400 = HEAP32[$66>>2]|0;
        $401 = (($400) + 1)|0;
        HEAP32[$66>>2] = $401;
       }
       $402 = $108;
       $403 = HEAP32[$97>>2]|0;
       $404 = (($402) + ($403<<2)|0);
       HEAP32[$404>>2] = -2;
       $405 = $115;
       $406 = HEAP32[$97>>2]|0;
       $407 = (($405) + ($406<<2)|0);
       HEAP32[$407>>2] = -1;
       $408 = $110;
       $409 = HEAP32[$97>>2]|0;
       $410 = (($408) + ($409<<2)|0);
       HEAP32[$410>>2] = 0;
       while(1) {
        $411 = $83;
        $412 = HEAP32[$97>>2]|0;
        $413 = ($411|0)<($412|0);
        if (!($413)) {
         break;
        }
        HEAP32[$68>>2] = -1;
        while(1) {
         $414 = HEAP32[$76>>2]|0;
         $415 = HEAP32[$97>>2]|0;
         $416 = ($414|0)<($415|0);
         if (!($416)) {
          break;
         }
         $417 = $107;
         $418 = HEAP32[$76>>2]|0;
         $419 = (($417) + ($418<<2)|0);
         $420 = HEAP32[$419>>2]|0;
         HEAP32[$68>>2] = $420;
         $421 = ($420|0)==(-1);
         if (!($421)) {
          break;
         }
         $422 = HEAP32[$76>>2]|0;
         $423 = (($422) + 1)|0;
         HEAP32[$76>>2] = $423;
        }
        $424 = $106;
        $425 = HEAP32[$68>>2]|0;
        $426 = (($424) + ($425<<2)|0);
        $427 = HEAP32[$426>>2]|0;
        $428 = ($427|0)!=(-1);
        if ($428) {
         $429 = $112;
         $430 = $106;
         $431 = HEAP32[$68>>2]|0;
         $432 = (($430) + ($431<<2)|0);
         $433 = HEAP32[$432>>2]|0;
         $434 = (($429) + ($433<<2)|0);
         HEAP32[$434>>2] = -1;
        }
        $435 = $106;
        $436 = HEAP32[$68>>2]|0;
        $437 = (($435) + ($436<<2)|0);
        $438 = HEAP32[$437>>2]|0;
        $439 = $107;
        $440 = HEAP32[$76>>2]|0;
        $441 = (($439) + ($440<<2)|0);
        HEAP32[$441>>2] = $438;
        $442 = $108;
        $443 = HEAP32[$68>>2]|0;
        $444 = (($442) + ($443<<2)|0);
        $445 = HEAP32[$444>>2]|0;
        $64 = $445;
        $446 = $105;
        $447 = HEAP32[$68>>2]|0;
        $448 = (($446) + ($447<<2)|0);
        $449 = HEAP32[$448>>2]|0;
        $79 = $449;
        $450 = $79;
        $451 = $83;
        $452 = (($451) + ($450))|0;
        $83 = $452;
        $453 = $64;
        $454 = ($453|0)>(0);
        if ($454) {
         $455 = $101;
         $456 = HEAP32[$76>>2]|0;
         $457 = (($455) + ($456))|0;
         $458 = $75;
         $459 = ($457|0)>=($458|0);
         if ($459) {
          HEAP32[$67>>2] = 0;
          while(1) {
           $460 = HEAP32[$67>>2]|0;
           $461 = HEAP32[$97>>2]|0;
           $462 = ($460|0)<($461|0);
           if (!($462)) {
            break;
           }
           $463 = $115;
           $464 = HEAP32[$67>>2]|0;
           $465 = (($463) + ($464<<2)|0);
           $466 = HEAP32[$465>>2]|0;
           $84 = $466;
           $467 = ($466|0)>=(0);
           if ($467) {
            $468 = $116;
            $469 = $84;
            $470 = (($468) + ($469<<2)|0);
            $471 = HEAP32[$470>>2]|0;
            $472 = $115;
            $473 = HEAP32[$67>>2]|0;
            $474 = (($472) + ($473<<2)|0);
            HEAP32[$474>>2] = $471;
            __THREW__ = 0;
            $475 = (invoke_ii(600,($67|0))|0);
            $476 = __THREW__; __THREW__ = 0;
            $477 = $476&1;
            if ($477) {
             break L8;
            }
            $478 = $116;
            $479 = $84;
            $480 = (($478) + ($479<<2)|0);
            HEAP32[$480>>2] = $475;
           }
           $481 = HEAP32[$67>>2]|0;
           $482 = (($481) + 1)|0;
           HEAP32[$67>>2] = $482;
          }
          $94 = 0;
          $84 = 0;
          L69: while(1) {
           $483 = $84;
           $484 = $101;
           $485 = ($483|0)<($484|0);
           if (!($485)) {
            break;
           }
           $486 = $116;
           $487 = $84;
           $488 = (($487) + 1)|0;
           $84 = $488;
           $489 = (($486) + ($487<<2)|0);
           __THREW__ = 0;
           $490 = (invoke_ii(600,($489|0))|0);
           $491 = __THREW__; __THREW__ = 0;
           $492 = $491&1;
           if ($492) {
            break L8;
           }
           HEAP32[$67>>2] = $490;
           $493 = ($490|0)>=(0);
           if (!($493)) {
            continue;
           }
           $494 = $115;
           $495 = HEAP32[$67>>2]|0;
           $496 = (($494) + ($495<<2)|0);
           $497 = HEAP32[$496>>2]|0;
           $498 = $116;
           $499 = $94;
           $500 = (($498) + ($499<<2)|0);
           HEAP32[$500>>2] = $497;
           $501 = $94;
           $502 = (($501) + 1)|0;
           $94 = $502;
           $503 = $115;
           $504 = HEAP32[$67>>2]|0;
           $505 = (($503) + ($504<<2)|0);
           HEAP32[$505>>2] = $501;
           $71 = 0;
           while(1) {
            $506 = $71;
            $507 = $104;
            $508 = HEAP32[$67>>2]|0;
            $509 = (($507) + ($508<<2)|0);
            $510 = HEAP32[$509>>2]|0;
            $511 = (($510) - 1)|0;
            $512 = ($506|0)<($511|0);
            if (!($512)) {
             continue L69;
            }
            $513 = $116;
            $514 = $84;
            $515 = (($514) + 1)|0;
            $84 = $515;
            $516 = (($513) + ($514<<2)|0);
            $517 = HEAP32[$516>>2]|0;
            $518 = $116;
            $519 = $94;
            $520 = (($519) + 1)|0;
            $94 = $520;
            $521 = (($518) + ($519<<2)|0);
            HEAP32[$521>>2] = $517;
            $522 = $71;
            $523 = (($522) + 1)|0;
            $71 = $523;
           }
          }
          $524 = $94;
          $101 = $524;
         }
        }
        HEAP32[$60>>2] = 0;
        $525 = $79;
        $526 = (0 - ($525))|0;
        $527 = $105;
        $528 = HEAP32[$68>>2]|0;
        $529 = (($527) + ($528<<2)|0);
        HEAP32[$529>>2] = $526;
        $530 = $115;
        $531 = HEAP32[$68>>2]|0;
        $532 = (($530) + ($531<<2)|0);
        $533 = HEAP32[$532>>2]|0;
        $84 = $533;
        $534 = $64;
        $535 = ($534|0)==(0);
        $536 = $84;
        $537 = $101;
        $538 = $535 ? $536 : $537;
        $91 = $538;
        $539 = $91;
        $92 = $539;
        $69 = 1;
        while(1) {
         $540 = $69;
         $541 = $64;
         $542 = (($541) + 1)|0;
         $543 = ($540|0)<=($542|0);
         if (!($543)) {
          break;
         }
         $544 = $69;
         $545 = $64;
         $546 = ($544|0)>($545|0);
         if ($546) {
          $547 = HEAP32[$68>>2]|0;
          $63 = $547;
          $548 = $84;
          $89 = $548;
          $549 = $104;
          $550 = HEAP32[$68>>2]|0;
          $551 = (($549) + ($550<<2)|0);
          $552 = HEAP32[$551>>2]|0;
          $553 = $64;
          $554 = (($552) - ($553))|0;
          $73 = $554;
         } else {
          $555 = $116;
          $556 = $84;
          $557 = (($556) + 1)|0;
          $84 = $557;
          $558 = (($555) + ($556<<2)|0);
          $559 = HEAP32[$558>>2]|0;
          $63 = $559;
          $560 = $115;
          $561 = $63;
          $562 = (($560) + ($561<<2)|0);
          $563 = HEAP32[$562>>2]|0;
          $89 = $563;
          $564 = $104;
          $565 = $63;
          $566 = (($564) + ($565<<2)|0);
          $567 = HEAP32[$566>>2]|0;
          $73 = $567;
         }
         $70 = 1;
         while(1) {
          $568 = $70;
          $569 = $73;
          $570 = ($568|0)<=($569|0);
          if (!($570)) {
           break;
          }
          $571 = $116;
          $572 = $89;
          $573 = (($572) + 1)|0;
          $89 = $573;
          $574 = (($571) + ($572<<2)|0);
          $575 = HEAP32[$574>>2]|0;
          HEAP32[$66>>2] = $575;
          $576 = $105;
          $577 = HEAP32[$66>>2]|0;
          $578 = (($576) + ($577<<2)|0);
          $579 = HEAP32[$578>>2]|0;
          $77 = $579;
          $580 = ($579|0)<=(0);
          if (!($580)) {
           $581 = $77;
           $582 = HEAP32[$60>>2]|0;
           $583 = (($582) + ($581))|0;
           HEAP32[$60>>2] = $583;
           $584 = $77;
           $585 = (0 - ($584))|0;
           $586 = $105;
           $587 = HEAP32[$66>>2]|0;
           $588 = (($586) + ($587<<2)|0);
           HEAP32[$588>>2] = $585;
           $589 = HEAP32[$66>>2]|0;
           $590 = $116;
           $591 = $92;
           $592 = (($591) + 1)|0;
           $92 = $592;
           $593 = (($590) + ($591<<2)|0);
           HEAP32[$593>>2] = $589;
           $594 = $106;
           $595 = HEAP32[$66>>2]|0;
           $596 = (($594) + ($595<<2)|0);
           $597 = HEAP32[$596>>2]|0;
           $598 = ($597|0)!=(-1);
           if ($598) {
            $599 = $112;
            $600 = HEAP32[$66>>2]|0;
            $601 = (($599) + ($600<<2)|0);
            $602 = HEAP32[$601>>2]|0;
            $603 = $112;
            $604 = $106;
            $605 = HEAP32[$66>>2]|0;
            $606 = (($604) + ($605<<2)|0);
            $607 = HEAP32[$606>>2]|0;
            $608 = (($603) + ($607<<2)|0);
            HEAP32[$608>>2] = $602;
           }
           $609 = $112;
           $610 = HEAP32[$66>>2]|0;
           $611 = (($609) + ($610<<2)|0);
           $612 = HEAP32[$611>>2]|0;
           $613 = ($612|0)!=(-1);
           $614 = $106;
           $615 = HEAP32[$66>>2]|0;
           $616 = (($614) + ($615<<2)|0);
           $617 = HEAP32[$616>>2]|0;
           if ($613) {
            $618 = $106;
            $619 = $112;
            $620 = HEAP32[$66>>2]|0;
            $621 = (($619) + ($620<<2)|0);
            $$sink = $621;$$sink1 = $618;
           } else {
            $622 = $107;
            $623 = $109;
            $624 = HEAP32[$66>>2]|0;
            $625 = (($623) + ($624<<2)|0);
            $$sink = $625;$$sink1 = $622;
           }
           $626 = HEAP32[$$sink>>2]|0;
           $627 = (($$sink1) + ($626<<2)|0);
           HEAP32[$627>>2] = $617;
          }
          $628 = $70;
          $629 = (($628) + 1)|0;
          $70 = $629;
         }
         $630 = $63;
         $631 = HEAP32[$68>>2]|0;
         $632 = ($630|0)!=($631|0);
         if ($632) {
          __THREW__ = 0;
          $633 = (invoke_ii(600,($68|0))|0);
          $634 = __THREW__; __THREW__ = 0;
          $635 = $634&1;
          if ($635) {
           break L8;
          }
          $636 = $115;
          $637 = $63;
          $638 = (($636) + ($637<<2)|0);
          HEAP32[$638>>2] = $633;
          $639 = $110;
          $640 = $63;
          $641 = (($639) + ($640<<2)|0);
          HEAP32[$641>>2] = 0;
         }
         $642 = $69;
         $643 = (($642) + 1)|0;
         $69 = $643;
        }
        $644 = $64;
        $645 = ($644|0)!=(0);
        if ($645) {
         $646 = $92;
         $101 = $646;
        }
        $647 = HEAP32[$60>>2]|0;
        $648 = $109;
        $649 = HEAP32[$68>>2]|0;
        $650 = (($648) + ($649<<2)|0);
        HEAP32[$650>>2] = $647;
        $651 = $91;
        $652 = $115;
        $653 = HEAP32[$68>>2]|0;
        $654 = (($652) + ($653<<2)|0);
        HEAP32[$654>>2] = $651;
        $655 = $92;
        $656 = $91;
        $657 = (($655) - ($656))|0;
        $658 = $104;
        $659 = HEAP32[$68>>2]|0;
        $660 = (($658) + ($659<<2)|0);
        HEAP32[$660>>2] = $657;
        $661 = $108;
        $662 = HEAP32[$68>>2]|0;
        $663 = (($661) + ($662<<2)|0);
        HEAP32[$663>>2] = -2;
        $664 = $80;
        $665 = HEAP32[$62>>2]|0;
        $666 = $110;
        $667 = HEAP32[$97>>2]|0;
        __THREW__ = 0;
        $668 = (invoke_iiiii(599,($664|0),($665|0),($666|0),($667|0))|0);
        $669 = __THREW__; __THREW__ = 0;
        $670 = $669&1;
        if ($670) {
         break L8;
        }
        $80 = $668;
        $671 = $91;
        $90 = $671;
        while(1) {
         $672 = $90;
         $673 = $92;
         $674 = ($672|0)<($673|0);
         if (!($674)) {
          break;
         }
         $675 = $116;
         $676 = $90;
         $677 = (($675) + ($676<<2)|0);
         $678 = HEAP32[$677>>2]|0;
         HEAP32[$66>>2] = $678;
         $679 = $108;
         $680 = HEAP32[$66>>2]|0;
         $681 = (($679) + ($680<<2)|0);
         $682 = HEAP32[$681>>2]|0;
         $65 = $682;
         $683 = ($682|0)<=(0);
         L112: do {
          if (!($683)) {
           $684 = $105;
           $685 = HEAP32[$66>>2]|0;
           $686 = (($684) + ($685<<2)|0);
           $687 = HEAP32[$686>>2]|0;
           $688 = (0 - ($687))|0;
           $77 = $688;
           $689 = $80;
           $690 = $77;
           $691 = (($689) - ($690))|0;
           $81 = $691;
           $692 = $115;
           $693 = HEAP32[$66>>2]|0;
           $694 = (($692) + ($693<<2)|0);
           $695 = HEAP32[$694>>2]|0;
           $84 = $695;
           while(1) {
            $696 = $84;
            $697 = $115;
            $698 = HEAP32[$66>>2]|0;
            $699 = (($697) + ($698<<2)|0);
            $700 = HEAP32[$699>>2]|0;
            $701 = $65;
            $702 = (($700) + ($701))|0;
            $703 = (($702) - 1)|0;
            $704 = ($696|0)<=($703|0);
            if (!($704)) {
             break L112;
            }
            $705 = $116;
            $706 = $84;
            $707 = (($705) + ($706<<2)|0);
            $708 = HEAP32[$707>>2]|0;
            $63 = $708;
            $709 = $110;
            $710 = $63;
            $711 = (($709) + ($710<<2)|0);
            $712 = HEAP32[$711>>2]|0;
            $713 = $80;
            $714 = ($712|0)>=($713|0);
            do {
             if ($714) {
              $715 = $77;
              $716 = $110;
              $717 = $63;
              $718 = (($716) + ($717<<2)|0);
              $719 = HEAP32[$718>>2]|0;
              $720 = (($719) - ($715))|0;
              HEAP32[$718>>2] = $720;
             } else {
              $721 = $110;
              $722 = $63;
              $723 = (($721) + ($722<<2)|0);
              $724 = HEAP32[$723>>2]|0;
              $725 = ($724|0)!=(0);
              if (!($725)) {
               break;
              }
              $726 = $109;
              $727 = $63;
              $728 = (($726) + ($727<<2)|0);
              $729 = HEAP32[$728>>2]|0;
              $730 = $81;
              $731 = (($729) + ($730))|0;
              $732 = $110;
              $733 = $63;
              $734 = (($732) + ($733<<2)|0);
              HEAP32[$734>>2] = $731;
             }
            } while(0);
            $735 = $84;
            $736 = (($735) + 1)|0;
            $84 = $736;
           }
          }
         } while(0);
         $737 = $90;
         $738 = (($737) + 1)|0;
         $90 = $738;
        }
        $739 = $91;
        $90 = $739;
        while(1) {
         $740 = $90;
         $741 = $92;
         $742 = ($740|0)<($741|0);
         if (!($742)) {
          break;
         }
         $743 = $116;
         $744 = $90;
         $745 = (($743) + ($744<<2)|0);
         $746 = HEAP32[$745>>2]|0;
         HEAP32[$66>>2] = $746;
         $747 = $115;
         $748 = HEAP32[$66>>2]|0;
         $749 = (($747) + ($748<<2)|0);
         $750 = HEAP32[$749>>2]|0;
         $85 = $750;
         $751 = $85;
         $752 = $108;
         $753 = HEAP32[$66>>2]|0;
         $754 = (($752) + ($753<<2)|0);
         $755 = HEAP32[$754>>2]|0;
         $756 = (($751) + ($755))|0;
         $757 = (($756) - 1)|0;
         $86 = $757;
         $758 = $85;
         $93 = $758;
         $96 = 0;
         HEAP32[$59>>2] = 0;
         $759 = $85;
         $84 = $759;
         while(1) {
          $760 = $84;
          $761 = $86;
          $762 = ($760|0)<=($761|0);
          if (!($762)) {
           break;
          }
          $763 = $116;
          $764 = $84;
          $765 = (($763) + ($764<<2)|0);
          $766 = HEAP32[$765>>2]|0;
          $63 = $766;
          $767 = $110;
          $768 = $63;
          $769 = (($767) + ($768<<2)|0);
          $770 = HEAP32[$769>>2]|0;
          $771 = ($770|0)!=(0);
          do {
           if ($771) {
            $772 = $110;
            $773 = $63;
            $774 = (($772) + ($773<<2)|0);
            $775 = HEAP32[$774>>2]|0;
            $776 = $80;
            $777 = (($775) - ($776))|0;
            $61 = $777;
            $778 = $61;
            $779 = ($778|0)>(0);
            if ($779) {
             $780 = $61;
             $781 = HEAP32[$59>>2]|0;
             $782 = (($781) + ($780))|0;
             HEAP32[$59>>2] = $782;
             $783 = $63;
             $784 = $116;
             $785 = $93;
             $786 = (($785) + 1)|0;
             $93 = $786;
             $787 = (($784) + ($785<<2)|0);
             HEAP32[$787>>2] = $783;
             $788 = $63;
             $789 = $96;
             $790 = (($789) + ($788))|0;
             $96 = $790;
             break;
            }
            __THREW__ = 0;
            $791 = (invoke_ii(600,($68|0))|0);
            $792 = __THREW__; __THREW__ = 0;
            $793 = $792&1;
            if ($793) {
             break L8;
            }
            $794 = $115;
            $795 = $63;
            $796 = (($794) + ($795<<2)|0);
            HEAP32[$796>>2] = $791;
            $797 = $110;
            $798 = $63;
            $799 = (($797) + ($798<<2)|0);
            HEAP32[$799>>2] = 0;
           }
          } while(0);
          $800 = $84;
          $801 = (($800) + 1)|0;
          $84 = $801;
         }
         $802 = $93;
         $803 = $85;
         $804 = (($802) - ($803))|0;
         $805 = (($804) + 1)|0;
         $806 = $108;
         $807 = HEAP32[$66>>2]|0;
         $808 = (($806) + ($807<<2)|0);
         HEAP32[$808>>2] = $805;
         $809 = $93;
         $87 = $809;
         $810 = $85;
         $811 = $104;
         $812 = HEAP32[$66>>2]|0;
         $813 = (($811) + ($812<<2)|0);
         $814 = HEAP32[$813>>2]|0;
         $815 = (($810) + ($814))|0;
         $88 = $815;
         $816 = $86;
         $817 = (($816) + 1)|0;
         $84 = $817;
         while(1) {
          $818 = $84;
          $819 = $88;
          $820 = ($818|0)<($819|0);
          if (!($820)) {
           break;
          }
          $821 = $116;
          $822 = $84;
          $823 = (($821) + ($822<<2)|0);
          $824 = HEAP32[$823>>2]|0;
          HEAP32[$67>>2] = $824;
          $825 = $105;
          $826 = HEAP32[$67>>2]|0;
          $827 = (($825) + ($826<<2)|0);
          $828 = HEAP32[$827>>2]|0;
          $78 = $828;
          $829 = ($828|0)<=(0);
          if (!($829)) {
           $830 = $78;
           $831 = HEAP32[$59>>2]|0;
           $832 = (($831) + ($830))|0;
           HEAP32[$59>>2] = $832;
           $833 = HEAP32[$67>>2]|0;
           $834 = $116;
           $835 = $93;
           $836 = (($835) + 1)|0;
           $93 = $836;
           $837 = (($834) + ($835<<2)|0);
           HEAP32[$837>>2] = $833;
           $838 = HEAP32[$67>>2]|0;
           $839 = $96;
           $840 = (($839) + ($838))|0;
           $96 = $840;
          }
          $841 = $84;
          $842 = (($841) + 1)|0;
          $84 = $842;
         }
         $843 = HEAP32[$59>>2]|0;
         $844 = ($843|0)==(0);
         if ($844) {
          __THREW__ = 0;
          $845 = (invoke_ii(600,($68|0))|0);
          $846 = __THREW__; __THREW__ = 0;
          $847 = $846&1;
          if ($847) {
           break L8;
          }
          $848 = $115;
          $849 = HEAP32[$66>>2]|0;
          $850 = (($848) + ($849<<2)|0);
          HEAP32[$850>>2] = $845;
          $851 = $105;
          $852 = HEAP32[$66>>2]|0;
          $853 = (($851) + ($852<<2)|0);
          $854 = HEAP32[$853>>2]|0;
          $855 = (0 - ($854))|0;
          $77 = $855;
          $856 = $77;
          $857 = HEAP32[$60>>2]|0;
          $858 = (($857) - ($856))|0;
          HEAP32[$60>>2] = $858;
          $859 = $77;
          $860 = $79;
          $861 = (($860) + ($859))|0;
          $79 = $861;
          $862 = $77;
          $863 = $83;
          $864 = (($863) + ($862))|0;
          $83 = $864;
          $865 = $105;
          $866 = HEAP32[$66>>2]|0;
          $867 = (($865) + ($866<<2)|0);
          HEAP32[$867>>2] = 0;
          $868 = $108;
          $869 = HEAP32[$66>>2]|0;
          $870 = (($868) + ($869<<2)|0);
          $$sink3 = -1;$$sink4 = $870;
         } else {
          $871 = $109;
          $872 = HEAP32[$66>>2]|0;
          $873 = (($871) + ($872<<2)|0);
          $35 = $873;
          $36 = $59;
          $874 = $35;
          $875 = $36;
          ;HEAP8[$34>>0]=HEAP8[$37>>0]|0;
          $32 = $874;
          $33 = $875;
          $876 = $33;
          $877 = $32;
          $29 = $34;
          $30 = $876;
          $31 = $877;
          $878 = $30;
          $879 = HEAP32[$878>>2]|0;
          $880 = $31;
          $881 = HEAP32[$880>>2]|0;
          $882 = ($879|0)<($881|0);
          $883 = $33;
          $884 = $32;
          $885 = $882 ? $883 : $884;
          $886 = HEAP32[$885>>2]|0;
          $887 = $109;
          $888 = HEAP32[$66>>2]|0;
          $889 = (($887) + ($888<<2)|0);
          HEAP32[$889>>2] = $886;
          $890 = $116;
          $891 = $87;
          $892 = (($890) + ($891<<2)|0);
          $893 = HEAP32[$892>>2]|0;
          $894 = $116;
          $895 = $93;
          $896 = (($894) + ($895<<2)|0);
          HEAP32[$896>>2] = $893;
          $897 = $116;
          $898 = $85;
          $899 = (($897) + ($898<<2)|0);
          $900 = HEAP32[$899>>2]|0;
          $901 = $116;
          $902 = $87;
          $903 = (($901) + ($902<<2)|0);
          HEAP32[$903>>2] = $900;
          $904 = HEAP32[$68>>2]|0;
          $905 = $116;
          $906 = $85;
          $907 = (($905) + ($906<<2)|0);
          HEAP32[$907>>2] = $904;
          $908 = $93;
          $909 = $85;
          $910 = (($908) - ($909))|0;
          $911 = (($910) + 1)|0;
          $912 = $104;
          $913 = HEAP32[$66>>2]|0;
          $914 = (($912) + ($913<<2)|0);
          HEAP32[$914>>2] = $911;
          $915 = HEAP32[$97>>2]|0;
          $916 = $96;
          $917 = (($916|0) % ($915|0))&-1;
          $96 = $917;
          $918 = $111;
          $919 = $96;
          $920 = (($918) + ($919<<2)|0);
          $921 = HEAP32[$920>>2]|0;
          $922 = $106;
          $923 = HEAP32[$66>>2]|0;
          $924 = (($922) + ($923<<2)|0);
          HEAP32[$924>>2] = $921;
          $925 = HEAP32[$66>>2]|0;
          $926 = $111;
          $927 = $96;
          $928 = (($926) + ($927<<2)|0);
          HEAP32[$928>>2] = $925;
          $929 = $96;
          $930 = $112;
          $931 = HEAP32[$66>>2]|0;
          $932 = (($930) + ($931<<2)|0);
          $$sink3 = $929;$$sink4 = $932;
         }
         HEAP32[$$sink4>>2] = $$sink3;
         $933 = $90;
         $934 = (($933) + 1)|0;
         $90 = $934;
        }
        $935 = HEAP32[$60>>2]|0;
        $936 = $109;
        $937 = HEAP32[$68>>2]|0;
        $938 = (($936) + ($937<<2)|0);
        HEAP32[$938>>2] = $935;
        $26 = $62;
        $27 = $60;
        $939 = $26;
        $940 = $27;
        ;HEAP8[$25>>0]=HEAP8[$28>>0]|0;
        $23 = $939;
        $24 = $940;
        $941 = $23;
        $942 = $24;
        $20 = $25;
        $21 = $941;
        $22 = $942;
        $943 = $21;
        $944 = HEAP32[$943>>2]|0;
        $945 = $22;
        $946 = HEAP32[$945>>2]|0;
        $947 = ($944|0)<($946|0);
        $948 = $24;
        $949 = $23;
        $950 = $947 ? $948 : $949;
        $951 = HEAP32[$950>>2]|0;
        HEAP32[$62>>2] = $951;
        $952 = $80;
        $953 = HEAP32[$62>>2]|0;
        $954 = (($952) + ($953))|0;
        $955 = HEAP32[$62>>2]|0;
        $956 = $110;
        $957 = HEAP32[$97>>2]|0;
        __THREW__ = 0;
        $958 = (invoke_iiiii(599,($954|0),($955|0),($956|0),($957|0))|0);
        $959 = __THREW__; __THREW__ = 0;
        $960 = $959&1;
        if ($960) {
         break L8;
        }
        $80 = $958;
        $961 = $91;
        $90 = $961;
        while(1) {
         $962 = $90;
         $963 = $92;
         $964 = ($962|0)<($963|0);
         if (!($964)) {
          break;
         }
         $965 = $116;
         $966 = $90;
         $967 = (($965) + ($966<<2)|0);
         $968 = HEAP32[$967>>2]|0;
         HEAP32[$66>>2] = $968;
         $969 = $105;
         $970 = HEAP32[$66>>2]|0;
         $971 = (($969) + ($970<<2)|0);
         $972 = HEAP32[$971>>2]|0;
         $973 = ($972|0)>=(0);
         L155: do {
          if (!($973)) {
           $974 = $112;
           $975 = HEAP32[$66>>2]|0;
           $976 = (($974) + ($975<<2)|0);
           $977 = HEAP32[$976>>2]|0;
           $96 = $977;
           $978 = $111;
           $979 = $96;
           $980 = (($978) + ($979<<2)|0);
           $981 = HEAP32[$980>>2]|0;
           HEAP32[$66>>2] = $981;
           $982 = $111;
           $983 = $96;
           $984 = (($982) + ($983<<2)|0);
           HEAP32[$984>>2] = -1;
           while(1) {
            $985 = HEAP32[$66>>2]|0;
            $986 = ($985|0)!=(-1);
            if (!($986)) {
             break L155;
            }
            $987 = $106;
            $988 = HEAP32[$66>>2]|0;
            $989 = (($987) + ($988<<2)|0);
            $990 = HEAP32[$989>>2]|0;
            $991 = ($990|0)!=(-1);
            if (!($991)) {
             break L155;
            }
            $992 = $104;
            $993 = HEAP32[$66>>2]|0;
            $994 = (($992) + ($993<<2)|0);
            $995 = HEAP32[$994>>2]|0;
            $73 = $995;
            $996 = $108;
            $997 = HEAP32[$66>>2]|0;
            $998 = (($996) + ($997<<2)|0);
            $999 = HEAP32[$998>>2]|0;
            $65 = $999;
            $1000 = $115;
            $1001 = HEAP32[$66>>2]|0;
            $1002 = (($1000) + ($1001<<2)|0);
            $1003 = HEAP32[$1002>>2]|0;
            $1004 = (($1003) + 1)|0;
            $84 = $1004;
            while(1) {
             $1005 = $84;
             $1006 = $115;
             $1007 = HEAP32[$66>>2]|0;
             $1008 = (($1006) + ($1007<<2)|0);
             $1009 = HEAP32[$1008>>2]|0;
             $1010 = $73;
             $1011 = (($1009) + ($1010))|0;
             $1012 = (($1011) - 1)|0;
             $1013 = ($1005|0)<=($1012|0);
             if (!($1013)) {
              break;
             }
             $1014 = $80;
             $1015 = $110;
             $1016 = $116;
             $1017 = $84;
             $1018 = (($1016) + ($1017<<2)|0);
             $1019 = HEAP32[$1018>>2]|0;
             $1020 = (($1015) + ($1019<<2)|0);
             HEAP32[$1020>>2] = $1014;
             $1021 = $84;
             $1022 = (($1021) + 1)|0;
             $84 = $1022;
            }
            $1023 = HEAP32[$66>>2]|0;
            $72 = $1023;
            $1024 = $106;
            $1025 = HEAP32[$66>>2]|0;
            $1026 = (($1024) + ($1025<<2)|0);
            $1027 = HEAP32[$1026>>2]|0;
            HEAP32[$67>>2] = $1027;
            while(1) {
             $1028 = HEAP32[$67>>2]|0;
             $1029 = ($1028|0)!=(-1);
             if (!($1029)) {
              break;
             }
             $1030 = $104;
             $1031 = HEAP32[$67>>2]|0;
             $1032 = (($1030) + ($1031<<2)|0);
             $1033 = HEAP32[$1032>>2]|0;
             $1034 = $73;
             $1035 = ($1033|0)==($1034|0);
             if ($1035) {
              $1036 = $108;
              $1037 = HEAP32[$67>>2]|0;
              $1038 = (($1036) + ($1037<<2)|0);
              $1039 = HEAP32[$1038>>2]|0;
              $1040 = $65;
              $1041 = ($1039|0)==($1040|0);
              $1043 = $1041;
             } else {
              $1043 = 0;
             }
             $1042 = $1043&1;
             $82 = $1042;
             $1044 = $115;
             $1045 = HEAP32[$67>>2]|0;
             $1046 = (($1044) + ($1045<<2)|0);
             $1047 = HEAP32[$1046>>2]|0;
             $1048 = (($1047) + 1)|0;
             $84 = $1048;
             while(1) {
              $1049 = $82;
              $1050 = ($1049|0)!=(0);
              if (!($1050)) {
               break;
              }
              $1051 = $84;
              $1052 = $115;
              $1053 = HEAP32[$67>>2]|0;
              $1054 = (($1052) + ($1053<<2)|0);
              $1055 = HEAP32[$1054>>2]|0;
              $1056 = $73;
              $1057 = (($1055) + ($1056))|0;
              $1058 = (($1057) - 1)|0;
              $1059 = ($1051|0)<=($1058|0);
              if (!($1059)) {
               break;
              }
              $1060 = $110;
              $1061 = $116;
              $1062 = $84;
              $1063 = (($1061) + ($1062<<2)|0);
              $1064 = HEAP32[$1063>>2]|0;
              $1065 = (($1060) + ($1064<<2)|0);
              $1066 = HEAP32[$1065>>2]|0;
              $1067 = $80;
              $1068 = ($1066|0)!=($1067|0);
              if ($1068) {
               $82 = 0;
              }
              $1069 = $84;
              $1070 = (($1069) + 1)|0;
              $84 = $1070;
             }
             $1071 = $82;
             $1072 = ($1071|0)!=(0);
             if (!($1072)) {
              $1102 = HEAP32[$67>>2]|0;
              $72 = $1102;
              $1103 = $106;
              $1104 = HEAP32[$67>>2]|0;
              $1105 = (($1103) + ($1104<<2)|0);
              $1106 = HEAP32[$1105>>2]|0;
              HEAP32[$67>>2] = $1106;
              continue;
             }
             __THREW__ = 0;
             $1073 = (invoke_ii(600,($66|0))|0);
             $1074 = __THREW__; __THREW__ = 0;
             $1075 = $1074&1;
             if ($1075) {
              break L8;
             }
             $1076 = $115;
             $1077 = HEAP32[$67>>2]|0;
             $1078 = (($1076) + ($1077<<2)|0);
             HEAP32[$1078>>2] = $1073;
             $1079 = $105;
             $1080 = HEAP32[$67>>2]|0;
             $1081 = (($1079) + ($1080<<2)|0);
             $1082 = HEAP32[$1081>>2]|0;
             $1083 = $105;
             $1084 = HEAP32[$66>>2]|0;
             $1085 = (($1083) + ($1084<<2)|0);
             $1086 = HEAP32[$1085>>2]|0;
             $1087 = (($1086) + ($1082))|0;
             HEAP32[$1085>>2] = $1087;
             $1088 = $105;
             $1089 = HEAP32[$67>>2]|0;
             $1090 = (($1088) + ($1089<<2)|0);
             HEAP32[$1090>>2] = 0;
             $1091 = $108;
             $1092 = HEAP32[$67>>2]|0;
             $1093 = (($1091) + ($1092<<2)|0);
             HEAP32[$1093>>2] = -1;
             $1094 = $106;
             $1095 = HEAP32[$67>>2]|0;
             $1096 = (($1094) + ($1095<<2)|0);
             $1097 = HEAP32[$1096>>2]|0;
             HEAP32[$67>>2] = $1097;
             $1098 = HEAP32[$67>>2]|0;
             $1099 = $106;
             $1100 = $72;
             $1101 = (($1099) + ($1100<<2)|0);
             HEAP32[$1101>>2] = $1098;
            }
            $1107 = $106;
            $1108 = HEAP32[$66>>2]|0;
            $1109 = (($1107) + ($1108<<2)|0);
            $1110 = HEAP32[$1109>>2]|0;
            HEAP32[$66>>2] = $1110;
            $1111 = $80;
            $1112 = (($1111) + 1)|0;
            $80 = $1112;
           }
          }
         } while(0);
         $1113 = $90;
         $1114 = (($1113) + 1)|0;
         $90 = $1114;
        }
        $1115 = $91;
        $84 = $1115;
        $1116 = $91;
        $90 = $1116;
        while(1) {
         $1117 = $90;
         $1118 = $92;
         $1119 = ($1117|0)<($1118|0);
         if (!($1119)) {
          break;
         }
         $1120 = $116;
         $1121 = $90;
         $1122 = (($1120) + ($1121<<2)|0);
         $1123 = HEAP32[$1122>>2]|0;
         HEAP32[$66>>2] = $1123;
         $1124 = $105;
         $1125 = HEAP32[$66>>2]|0;
         $1126 = (($1124) + ($1125<<2)|0);
         $1127 = HEAP32[$1126>>2]|0;
         $1128 = (0 - ($1127))|0;
         $77 = $1128;
         $1129 = ($1128|0)<=(0);
         if (!($1129)) {
          $1130 = $77;
          $1131 = $105;
          $1132 = HEAP32[$66>>2]|0;
          $1133 = (($1131) + ($1132<<2)|0);
          HEAP32[$1133>>2] = $1130;
          $1134 = $109;
          $1135 = HEAP32[$66>>2]|0;
          $1136 = (($1134) + ($1135<<2)|0);
          $1137 = HEAP32[$1136>>2]|0;
          $1138 = HEAP32[$60>>2]|0;
          $1139 = (($1137) + ($1138))|0;
          $1140 = $77;
          $1141 = (($1139) - ($1140))|0;
          HEAP32[$59>>2] = $1141;
          $1142 = HEAP32[$97>>2]|0;
          $1143 = $83;
          $1144 = (($1142) - ($1143))|0;
          $1145 = $77;
          $1146 = (($1144) - ($1145))|0;
          HEAP32[$118>>2] = $1146;
          $17 = $59;
          $18 = $118;
          $1147 = $17;
          $1148 = $18;
          ;HEAP8[$16>>0]=HEAP8[$19>>0]|0;
          $14 = $1147;
          $15 = $1148;
          $1149 = $15;
          $1150 = $14;
          $11 = $16;
          $12 = $1149;
          $13 = $1150;
          $1151 = $12;
          $1152 = HEAP32[$1151>>2]|0;
          $1153 = $13;
          $1154 = HEAP32[$1153>>2]|0;
          $1155 = ($1152|0)<($1154|0);
          $1156 = $15;
          $1157 = $14;
          $1158 = $1155 ? $1156 : $1157;
          $1159 = HEAP32[$1158>>2]|0;
          HEAP32[$59>>2] = $1159;
          $1160 = $107;
          $1161 = HEAP32[$59>>2]|0;
          $1162 = (($1160) + ($1161<<2)|0);
          $1163 = HEAP32[$1162>>2]|0;
          $1164 = ($1163|0)!=(-1);
          if ($1164) {
           $1165 = HEAP32[$66>>2]|0;
           $1166 = $112;
           $1167 = $107;
           $1168 = HEAP32[$59>>2]|0;
           $1169 = (($1167) + ($1168<<2)|0);
           $1170 = HEAP32[$1169>>2]|0;
           $1171 = (($1166) + ($1170<<2)|0);
           HEAP32[$1171>>2] = $1165;
          }
          $1172 = $107;
          $1173 = HEAP32[$59>>2]|0;
          $1174 = (($1172) + ($1173<<2)|0);
          $1175 = HEAP32[$1174>>2]|0;
          $1176 = $106;
          $1177 = HEAP32[$66>>2]|0;
          $1178 = (($1176) + ($1177<<2)|0);
          HEAP32[$1178>>2] = $1175;
          $1179 = $112;
          $1180 = HEAP32[$66>>2]|0;
          $1181 = (($1179) + ($1180<<2)|0);
          HEAP32[$1181>>2] = -1;
          $1182 = HEAP32[$66>>2]|0;
          $1183 = $107;
          $1184 = HEAP32[$59>>2]|0;
          $1185 = (($1183) + ($1184<<2)|0);
          HEAP32[$1185>>2] = $1182;
          $8 = $76;
          $9 = $59;
          $1186 = $8;
          $1187 = $9;
          ;HEAP8[$7>>0]=HEAP8[$10>>0]|0;
          $5 = $1186;
          $6 = $1187;
          $1188 = $6;
          $1189 = $5;
          $2 = $7;
          $3 = $1188;
          $4 = $1189;
          $1190 = $3;
          $1191 = HEAP32[$1190>>2]|0;
          $1192 = $4;
          $1193 = HEAP32[$1192>>2]|0;
          $1194 = ($1191|0)<($1193|0);
          $1195 = $6;
          $1196 = $5;
          $1197 = $1194 ? $1195 : $1196;
          $1198 = HEAP32[$1197>>2]|0;
          HEAP32[$76>>2] = $1198;
          $1199 = HEAP32[$59>>2]|0;
          $1200 = $109;
          $1201 = HEAP32[$66>>2]|0;
          $1202 = (($1200) + ($1201<<2)|0);
          HEAP32[$1202>>2] = $1199;
          $1203 = HEAP32[$66>>2]|0;
          $1204 = $116;
          $1205 = $84;
          $1206 = (($1205) + 1)|0;
          $84 = $1206;
          $1207 = (($1204) + ($1205<<2)|0);
          HEAP32[$1207>>2] = $1203;
         }
         $1208 = $90;
         $1209 = (($1208) + 1)|0;
         $90 = $1209;
        }
        $1210 = $79;
        $1211 = $105;
        $1212 = HEAP32[$68>>2]|0;
        $1213 = (($1211) + ($1212<<2)|0);
        HEAP32[$1213>>2] = $1210;
        $1214 = $84;
        $1215 = $91;
        $1216 = (($1214) - ($1215))|0;
        $1217 = $104;
        $1218 = HEAP32[$68>>2]|0;
        $1219 = (($1217) + ($1218<<2)|0);
        HEAP32[$1219>>2] = $1216;
        $1220 = ($1216|0)==(0);
        if ($1220) {
         $1221 = $115;
         $1222 = HEAP32[$68>>2]|0;
         $1223 = (($1221) + ($1222<<2)|0);
         HEAP32[$1223>>2] = -1;
         $1224 = $110;
         $1225 = HEAP32[$68>>2]|0;
         $1226 = (($1224) + ($1225<<2)|0);
         HEAP32[$1226>>2] = 0;
        }
        $1227 = $64;
        $1228 = ($1227|0)!=(0);
        if (!($1228)) {
         continue;
        }
        $1229 = $84;
        $101 = $1229;
       }
       HEAP32[$66>>2] = 0;
       while(1) {
        $1230 = HEAP32[$66>>2]|0;
        $1231 = HEAP32[$97>>2]|0;
        $1232 = ($1230|0)<($1231|0);
        if (!($1232)) {
         break;
        }
        $1233 = $115;
        $1234 = HEAP32[$66>>2]|0;
        $1235 = (($1233) + ($1234<<2)|0);
        __THREW__ = 0;
        $1236 = (invoke_ii(600,($1235|0))|0);
        $1237 = __THREW__; __THREW__ = 0;
        $1238 = $1237&1;
        if ($1238) {
         break L8;
        }
        $1239 = $115;
        $1240 = HEAP32[$66>>2]|0;
        $1241 = (($1239) + ($1240<<2)|0);
        HEAP32[$1241>>2] = $1236;
        $1242 = HEAP32[$66>>2]|0;
        $1243 = (($1242) + 1)|0;
        HEAP32[$66>>2] = $1243;
       }
       HEAP32[$67>>2] = 0;
       while(1) {
        $1244 = HEAP32[$67>>2]|0;
        $1245 = HEAP32[$97>>2]|0;
        $1246 = ($1244|0)<=($1245|0);
        if (!($1246)) {
         break;
        }
        $1247 = $107;
        $1248 = HEAP32[$67>>2]|0;
        $1249 = (($1247) + ($1248<<2)|0);
        HEAP32[$1249>>2] = -1;
        $1250 = HEAP32[$67>>2]|0;
        $1251 = (($1250) + 1)|0;
        HEAP32[$67>>2] = $1251;
       }
       $1252 = HEAP32[$97>>2]|0;
       HEAP32[$67>>2] = $1252;
       while(1) {
        $1253 = HEAP32[$67>>2]|0;
        $1254 = ($1253|0)>=(0);
        if (!($1254)) {
         break;
        }
        $1255 = $105;
        $1256 = HEAP32[$67>>2]|0;
        $1257 = (($1255) + ($1256<<2)|0);
        $1258 = HEAP32[$1257>>2]|0;
        $1259 = ($1258|0)>(0);
        if (!($1259)) {
         $1260 = $107;
         $1261 = $115;
         $1262 = HEAP32[$67>>2]|0;
         $1263 = (($1261) + ($1262<<2)|0);
         $1264 = HEAP32[$1263>>2]|0;
         $1265 = (($1260) + ($1264<<2)|0);
         $1266 = HEAP32[$1265>>2]|0;
         $1267 = $106;
         $1268 = HEAP32[$67>>2]|0;
         $1269 = (($1267) + ($1268<<2)|0);
         HEAP32[$1269>>2] = $1266;
         $1270 = HEAP32[$67>>2]|0;
         $1271 = $107;
         $1272 = $115;
         $1273 = HEAP32[$67>>2]|0;
         $1274 = (($1272) + ($1273<<2)|0);
         $1275 = HEAP32[$1274>>2]|0;
         $1276 = (($1271) + ($1275<<2)|0);
         HEAP32[$1276>>2] = $1270;
        }
        $1277 = HEAP32[$67>>2]|0;
        $1278 = (($1277) + -1)|0;
        HEAP32[$67>>2] = $1278;
       }
       $1279 = HEAP32[$97>>2]|0;
       $63 = $1279;
       while(1) {
        $1280 = $63;
        $1281 = ($1280|0)>=(0);
        if (!($1281)) {
         break;
        }
        $1282 = $105;
        $1283 = $63;
        $1284 = (($1282) + ($1283<<2)|0);
        $1285 = HEAP32[$1284>>2]|0;
        $1286 = ($1285|0)<=(0);
        if (!($1286)) {
         $1287 = $115;
         $1288 = $63;
         $1289 = (($1287) + ($1288<<2)|0);
         $1290 = HEAP32[$1289>>2]|0;
         $1291 = ($1290|0)!=(-1);
         if ($1291) {
          $1292 = $107;
          $1293 = $115;
          $1294 = $63;
          $1295 = (($1293) + ($1294<<2)|0);
          $1296 = HEAP32[$1295>>2]|0;
          $1297 = (($1292) + ($1296<<2)|0);
          $1298 = HEAP32[$1297>>2]|0;
          $1299 = $106;
          $1300 = $63;
          $1301 = (($1299) + ($1300<<2)|0);
          HEAP32[$1301>>2] = $1298;
          $1302 = $63;
          $1303 = $107;
          $1304 = $115;
          $1305 = $63;
          $1306 = (($1304) + ($1305<<2)|0);
          $1307 = HEAP32[$1306>>2]|0;
          $1308 = (($1303) + ($1307<<2)|0);
          HEAP32[$1308>>2] = $1302;
         }
        }
        $1309 = $63;
        $1310 = (($1309) + -1)|0;
        $63 = $1310;
       }
       HEAP32[$68>>2] = 0;
       HEAP32[$66>>2] = 0;
       while(1) {
        $1311 = HEAP32[$66>>2]|0;
        $1312 = HEAP32[$97>>2]|0;
        $1313 = ($1311|0)<=($1312|0);
        if (!($1313)) {
         break;
        }
        $1314 = $115;
        $1315 = HEAP32[$66>>2]|0;
        $1316 = (($1314) + ($1315<<2)|0);
        $1317 = HEAP32[$1316>>2]|0;
        $1318 = ($1317|0)==(-1);
        if ($1318) {
         $1319 = HEAP32[$66>>2]|0;
         $1320 = HEAP32[$68>>2]|0;
         $1321 = $107;
         $1322 = $106;
         $1323 = $58;
         __THREW__ = 0;
         $1324 = (invoke_ii(597,($1323|0))|0);
         $1325 = __THREW__; __THREW__ = 0;
         $1326 = $1325&1;
         if ($1326) {
          break L8;
         }
         __THREW__ = 0;
         $1327 = (invoke_ii(598,($1324|0))|0);
         $1328 = __THREW__; __THREW__ = 0;
         $1329 = $1328&1;
         if ($1329) {
          break L8;
         }
         $1330 = $110;
         __THREW__ = 0;
         $1331 = (invoke_iiiiiii(601,($1319|0),($1320|0),($1321|0),($1322|0),($1327|0),($1330|0))|0);
         $1332 = __THREW__; __THREW__ = 0;
         $1333 = $1332&1;
         if ($1333) {
          break L8;
         }
         HEAP32[$68>>2] = $1331;
        }
        $1334 = HEAP32[$66>>2]|0;
        $1335 = (($1334) + 1)|0;
        HEAP32[$66>>2] = $1335;
       }
       $1336 = $58;
       __THREW__ = 0;
       $1337 = (invoke_ii(597,($1336|0))|0);
       $1338 = __THREW__; __THREW__ = 0;
       $1339 = $1338&1;
       if (!($1339)) {
        $1340 = HEAP32[$97>>2]|0;
        __THREW__ = 0;
        invoke_vii(602,($1337|0),($1340|0));
        $1341 = __THREW__; __THREW__ = 0;
        $1342 = $1341&1;
        if (!($1342)) {
         __ZN5Eigen8internal28aligned_stack_memory_handlerIiED2Ev($103);
         STACKTOP = sp;return;
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 $266 = ___cxa_find_matching_catch_2()|0;
 $267 = tempRet0;
 $113 = $266;
 $114 = $267;
 __THREW__ = 0;
 invoke_vi(546,($103|0));
 $268 = __THREW__; __THREW__ = 0;
 $269 = $268&1;
 if ($269) {
  $1345 = ___cxa_find_matching_catch_3(0|0)|0;
  $1346 = tempRet0;
  ___clang_call_terminate($1345);
  // unreachable;
 } else {
  $1343 = $113;
  $1344 = $114;
  ___resumeException($1343|0);
  // unreachable;
 }
}
function __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE9transposeEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $1;
 $3 = $2;
 $4 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($3)|0);
 __ZN5Eigen9TransposeIKNS_12SparseMatrixIdLi0EiEEEC2ERS3_($0,$4);
 STACKTOP = sp;return;
}
function __ZN5Eigen12SparseMatrixIdLi0EiEaSINS_9TransposeIKS1_EEEERS1_RKNS_16SparseMatrixBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0.0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $5 = sp + 160|0;
 $6 = sp;
 $7 = sp + 120|0;
 $10 = sp + 100|0;
 $11 = sp + 176|0;
 $13 = sp + 76|0;
 $15 = sp + 64|0;
 $16 = sp + 60|0;
 $20 = sp + 28|0;
 $2 = $0;
 $3 = $1;
 $22 = $2;
 $4 = 1;
 $23 = $3;
 $24 = (__ZNK5Eigen16SparseMatrixBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEE7derivedEv($23)|0);
 ;HEAP32[$5>>2]=HEAP32[$24>>2]|0;HEAP32[$5+4>>2]=HEAP32[$24+4>>2]|0;
 __ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEEC2ERKS6_($6,$5);
 $25 = $3;
 __THREW__ = 0;
 $26 = (invoke_ii(603,($25|0))|0);
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 L1: do {
  if ($28) {
   label = 16;
  } else {
   $29 = $3;
   __THREW__ = 0;
   $30 = (invoke_ii(604,($29|0))|0);
   $31 = __THREW__; __THREW__ = 0;
   $32 = $31&1;
   if ($32) {
    label = 16;
   } else {
    __THREW__ = 0;
    invoke_viii(61,($7|0),($26|0),($30|0));
    $33 = __THREW__; __THREW__ = 0;
    $34 = $33&1;
    if ($34) {
     label = 16;
    } else {
     $35 = ((($7)) + 12|0);
     $36 = HEAP32[$35>>2]|0;
     __THREW__ = 0;
     $37 = (invoke_ii(459,($7|0))|0);
     $38 = __THREW__; __THREW__ = 0;
     $39 = $38&1;
     L5: do {
      if ($39) {
       label = 17;
      } else {
       __THREW__ = 0;
       invoke_vi(460,($11|0));
       $40 = __THREW__; __THREW__ = 0;
       $41 = $40&1;
       if ($41) {
        label = 17;
       } else {
        __THREW__ = 0;
        invoke_viiii(461,($10|0),($36|0),($37|0),($11|0));
        $42 = __THREW__; __THREW__ = 0;
        $43 = $42&1;
        if ($43) {
         label = 17;
        } else {
         __THREW__ = 0;
         (invoke_ii(462,($10|0))|0);
         $44 = __THREW__; __THREW__ = 0;
         $45 = $44&1;
         if ($45) {
          label = 17;
         } else {
          $12 = 0;
          while(1) {
           $46 = $12;
           __THREW__ = 0;
           $47 = (invoke_ii(605,($5|0))|0);
           $48 = __THREW__; __THREW__ = 0;
           $49 = $48&1;
           if ($49) {
            label = 17;
            break L5;
           }
           $50 = ($46|0)<($47|0);
           if (!($50)) {
            break;
           }
           $51 = $12;
           __THREW__ = 0;
           invoke_viii(606,($13|0),($6|0),($51|0));
           $52 = __THREW__; __THREW__ = 0;
           $53 = $52&1;
           if ($53) {
            label = 17;
            break L5;
           }
           while(1) {
            __THREW__ = 0;
            $54 = (invoke_ii(510,($13|0))|0);
            $55 = __THREW__; __THREW__ = 0;
            $56 = $55&1;
            if ($56) {
             label = 17;
             break L5;
            }
            if (!($54)) {
             break;
            }
            $57 = ((($7)) + 12|0);
            $58 = HEAP32[$57>>2]|0;
            __THREW__ = 0;
            $59 = (invoke_ii(512,($13|0))|0);
            $60 = __THREW__; __THREW__ = 0;
            $61 = $60&1;
            if ($61) {
             label = 17;
             break L5;
            }
            $62 = (($58) + ($59<<2)|0);
            $63 = HEAP32[$62>>2]|0;
            $64 = (($63) + 1)|0;
            HEAP32[$62>>2] = $64;
            __THREW__ = 0;
            (invoke_ii(514,($13|0))|0);
            $65 = __THREW__; __THREW__ = 0;
            $66 = $65&1;
            if ($66) {
             label = 17;
             break L5;
            }
           }
           $71 = $12;
           $72 = (($71) + 1)|0;
           $12 = $72;
          }
          $14 = 0;
          __THREW__ = 0;
          $73 = (invoke_ii(459,($7|0))|0);
          $74 = __THREW__; __THREW__ = 0;
          $75 = $74&1;
          if ($75) {
           label = 17;
          } else {
           HEAP32[$16>>2] = $73;
           __THREW__ = 0;
           invoke_vii(438,($15|0),($16|0));
           $76 = __THREW__; __THREW__ = 0;
           $77 = $76&1;
           if ($77) {
            label = 17;
           } else {
            $17 = 0;
            while(1) {
             $78 = $17;
             __THREW__ = 0;
             $79 = (invoke_ii(459,($7|0))|0);
             $80 = __THREW__; __THREW__ = 0;
             $81 = $80&1;
             if ($81) {
              break;
             }
             $82 = ($78|0)<($79|0);
             if (!($82)) {
              label = 27;
              break;
             }
             $83 = ((($7)) + 12|0);
             $84 = HEAP32[$83>>2]|0;
             $85 = $17;
             $86 = (($84) + ($85<<2)|0);
             $87 = HEAP32[$86>>2]|0;
             $18 = $87;
             $88 = $14;
             $89 = ((($7)) + 12|0);
             $90 = HEAP32[$89>>2]|0;
             $91 = $17;
             $92 = (($90) + ($91<<2)|0);
             HEAP32[$92>>2] = $88;
             $93 = $14;
             $94 = $17;
             __THREW__ = 0;
             $95 = (invoke_iii(468,($15|0),($94|0))|0);
             $96 = __THREW__; __THREW__ = 0;
             $97 = $96&1;
             if ($97) {
              break;
             }
             HEAP32[$95>>2] = $93;
             $98 = $18;
             $99 = $14;
             $100 = (($99) + ($98))|0;
             $14 = $100;
             $101 = $17;
             $102 = (($101) + 1)|0;
             $17 = $102;
            }
            L28: do {
             if ((label|0) == 27) {
              $107 = $14;
              $108 = ((($7)) + 12|0);
              $109 = HEAP32[$108>>2]|0;
              __THREW__ = 0;
              $110 = (invoke_ii(459,($7|0))|0);
              $111 = __THREW__; __THREW__ = 0;
              $112 = $111&1;
              if (!($112)) {
               $113 = (($109) + ($110<<2)|0);
               HEAP32[$113>>2] = $107;
               $114 = ((($7)) + 20|0);
               $115 = $14;
               __THREW__ = 0;
               invoke_viid(456,($114|0),($115|0),0.0);
               $116 = __THREW__; __THREW__ = 0;
               $117 = $116&1;
               if (!($117)) {
                $19 = 0;
                while(1) {
                 $118 = $19;
                 __THREW__ = 0;
                 $119 = (invoke_ii(605,($5|0))|0);
                 $120 = __THREW__; __THREW__ = 0;
                 $121 = $120&1;
                 if ($121) {
                  break L28;
                 }
                 $122 = ($118|0)<($119|0);
                 if (!($122)) {
                  break;
                 }
                 $123 = $19;
                 __THREW__ = 0;
                 invoke_viii(606,($20|0),($6|0),($123|0));
                 $124 = __THREW__; __THREW__ = 0;
                 $125 = $124&1;
                 if ($125) {
                  break L28;
                 }
                 while(1) {
                  __THREW__ = 0;
                  $126 = (invoke_ii(510,($20|0))|0);
                  $127 = __THREW__; __THREW__ = 0;
                  $128 = $127&1;
                  if ($128) {
                   break L28;
                  }
                  if (!($126)) {
                   break;
                  }
                  __THREW__ = 0;
                  $129 = (invoke_ii(512,($20|0))|0);
                  $130 = __THREW__; __THREW__ = 0;
                  $131 = $130&1;
                  if ($131) {
                   break L28;
                  }
                  __THREW__ = 0;
                  $132 = (invoke_iii(468,($15|0),($129|0))|0);
                  $133 = __THREW__; __THREW__ = 0;
                  $134 = $133&1;
                  if ($134) {
                   break L28;
                  }
                  $135 = HEAP32[$132>>2]|0;
                  $136 = (($135) + 1)|0;
                  HEAP32[$132>>2] = $136;
                  $21 = $135;
                  $137 = $19;
                  $138 = ((($7)) + 20|0);
                  $139 = $21;
                  __THREW__ = 0;
                  $140 = (invoke_iii(453,($138|0),($139|0))|0);
                  $141 = __THREW__; __THREW__ = 0;
                  $142 = $141&1;
                  if ($142) {
                   break L28;
                  }
                  HEAP32[$140>>2] = $137;
                  __THREW__ = 0;
                  $143 = (invoke_ii(511,($20|0))|0);
                  $144 = __THREW__; __THREW__ = 0;
                  $145 = $144&1;
                  if ($145) {
                   break L28;
                  }
                  $146 = +HEAPF64[$143>>3];
                  $147 = ((($7)) + 20|0);
                  $148 = $21;
                  __THREW__ = 0;
                  $149 = (invoke_iii(454,($147|0),($148|0))|0);
                  $150 = __THREW__; __THREW__ = 0;
                  $151 = $150&1;
                  if ($151) {
                   break L28;
                  }
                  HEAPF64[$149>>3] = $146;
                  __THREW__ = 0;
                  (invoke_ii(514,($20|0))|0);
                  $152 = __THREW__; __THREW__ = 0;
                  $153 = $152&1;
                  if ($153) {
                   break L28;
                  }
                 }
                 $154 = $19;
                 $155 = (($154) + 1)|0;
                 $19 = $155;
                }
                __THREW__ = 0;
                invoke_vii(470,($22|0),($7|0));
                $156 = __THREW__; __THREW__ = 0;
                $157 = $156&1;
                if (!($157)) {
                 __THREW__ = 0;
                 invoke_vi(442,($15|0));
                 $158 = __THREW__; __THREW__ = 0;
                 $159 = $158&1;
                 if ($159) {
                  label = 17;
                  break L5;
                 }
                 __THREW__ = 0;
                 invoke_vi(63,($7|0));
                 $160 = __THREW__; __THREW__ = 0;
                 $161 = $160&1;
                 if ($161) {
                  label = 16;
                  break L1;
                 }
                 __ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEED2Ev($6);
                 STACKTOP = sp;return ($22|0);
                }
               }
              }
             }
            } while(0);
            $103 = ___cxa_find_matching_catch_2()|0;
            $104 = tempRet0;
            $8 = $103;
            $9 = $104;
            __THREW__ = 0;
            invoke_vi(442,($15|0));
            $105 = __THREW__; __THREW__ = 0;
            $106 = $105&1;
            if ($106) {
             $168 = ___cxa_find_matching_catch_3(0|0)|0;
             $169 = tempRet0;
             ___clang_call_terminate($168);
             // unreachable;
            }
           }
          }
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 17) {
      $69 = ___cxa_find_matching_catch_2()|0;
      $70 = tempRet0;
      $8 = $69;
      $9 = $70;
     }
     __THREW__ = 0;
     invoke_vi(63,($7|0));
     $162 = __THREW__; __THREW__ = 0;
     $163 = $162&1;
     if ($163) {
      $168 = ___cxa_find_matching_catch_3(0|0)|0;
      $169 = tempRet0;
      ___clang_call_terminate($168);
      // unreachable;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 16) {
  $67 = ___cxa_find_matching_catch_2()|0;
  $68 = tempRet0;
  $8 = $67;
  $9 = $68;
 }
 __THREW__ = 0;
 invoke_vi(607,($6|0));
 $164 = __THREW__; __THREW__ = 0;
 $165 = $164&1;
 if ($165) {
  $168 = ___cxa_find_matching_catch_3(0|0)|0;
  $169 = tempRet0;
  ___clang_call_terminate($168);
  // unreachable;
 } else {
  $166 = $8;
  $167 = $9;
  ___resumeException($166|0);
  // unreachable;
 }
 return (0)|0;
}
function __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator8valueRefEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + ($5<<3)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEEplIS2_EEKNS_13CwiseBinaryOpINS_8internal13scalar_sum_opIdNS6_6traitsIT_E6ScalarEEEKS2_KS9_EERKNS0_IS9_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp + 8|0;
 $3 = $1;
 $4 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($8)|0);
 __ZN5Eigen8internal13scalar_sum_opIddEC2Ev($5);
 __ZN5Eigen13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_EC2ERS6_S8_RKS3_($0,$7,$9,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen12SparseMatrixIdLi0EiEaSINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKS1_S7_EEEERS1_RKNS_16SparseMatrixBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $4 = 0;
 $6 = $3;
 $7 = (__ZNK5Eigen16SparseMatrixBaseINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEE8isRValueEv($6)|0);
 if ($7) {
  $8 = $3;
  $9 = (__ZNK5Eigen16SparseMatrixBaseINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEE7derivedEv($8)|0);
  __ZN5Eigen12SparseMatrixIdLi0EiE14initAssignmentINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKS1_S7_EEEEvRKT_($5,$9);
 }
 $10 = $3;
 $11 = (__ZNK5Eigen16SparseMatrixBaseINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEE7derivedEv($10)|0);
 $12 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEEaSINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKS2_S9_EEEERS2_RKNS0_IT_EE($5,$11)|0);
 STACKTOP = sp;return ($12|0);
}
function __ZN5Eigen9TransposeIKNS_12SparseMatrixIdLi0EiEEEC2ERS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen13TransposeImplIKNS_12SparseMatrixIdLi0EiEENS_6SparseEEC2Ev($4);
 $5 = ((($4)) + 4|0);
 $6 = $3;
 HEAP32[$5>>2] = $6;
 STACKTOP = sp;return;
}
function __ZN5Eigen13TransposeImplIKNS_12SparseMatrixIdLi0EiEENS_6SparseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal19SparseTransposeImplIKNS_12SparseMatrixIdLi0EiEELi1024EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal19SparseTransposeImplIKNS_12SparseMatrixIdLi0EiEELi1024EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen20SparseCompressedBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen20SparseCompressedBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen16SparseMatrixBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen16SparseMatrixBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEEC2ERKS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEENS0_13IteratorBasedEdEC2ERKS6_($4,$5);
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen9TransposeIKNS_12SparseMatrixIdLi0EiEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen16SparseMatrixBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen9TransposeIKNS_12SparseMatrixIdLi0EiEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen16SparseMatrixBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEE9outerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen16SparseMatrixBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEENS0_13IteratorBasedEdE13InnerIteratorC2ERKS8_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = ((($7)) + 8|0);
 $9 = (__ZNK5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEEcvRKS4_Ev($8)|0);
 $10 = $5;
 __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorC2ERKS3_i($6,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEENS0_13IteratorBasedEdED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEENS0_13IteratorBasedEdEC2ERKS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEEC2Ev($6);
 $7 = ((($6)) + 8|0);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(608,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if (!($11)) {
  __THREW__ = 0;
  invoke_vii(609,($7|0),($9|0));
  $12 = __THREW__; __THREW__ = 0;
  $13 = $12&1;
  if (!($13)) {
   STACKTOP = sp;return;
  }
 }
 $14 = ___cxa_find_matching_catch_2()|0;
 $15 = tempRet0;
 $4 = $14;
 $5 = $15;
 __THREW__ = 0;
 invoke_vi(610,($6|0));
 $16 = __THREW__; __THREW__ = 0;
 $17 = $16&1;
 if ($17) {
  $20 = ___cxa_find_matching_catch_3(0|0)|0;
  $21 = tempRet0;
  ___clang_call_terminate($20);
  // unreachable;
 } else {
  $18 = $4;
  $19 = $5;
  ___resumeException($18|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9TransposeIKNS_12SparseMatrixIdLi0EiEEE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_12SparseMatrixIdLi0EiEEEC2ERS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEEC2ERKS3_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9TransposeIKNS_12SparseMatrixIdLi0EiEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen9TransposeIKNS_12SparseMatrixIdLi0EiEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEENS0_13IteratorBasedEdED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 8|0);
 __THREW__ = 0;
 invoke_vi(611,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch_2()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 __THREW__ = 0;
 invoke_vi(610,($4|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $2;
  $13 = $3;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorIKNS_12SparseMatrixIdLi0EiEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_EC2ERS6_S8_RKS3_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen17CwiseBinaryOpImplINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_NS_6SparseEEC2Ev($8);
 $9 = ((($8)) + 4|0);
 $10 = $5;
 HEAP32[$9>>2] = $10;
 $11 = ((($8)) + 8|0);
 $12 = $6;
 HEAP32[$11>>2] = $12;
 $13 = ((($8)) + 12|0);
 $14 = $7;
 __ZN5Eigen8internal13scalar_sum_opIddEC2ERKS2_($13,$14);
 $15 = $5;
 $16 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($15)|0);
 $17 = $6;
 $18 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($17)|0);
 $19 = ($16|0)==($18|0);
 if (!($19)) {
  ___assert_fail((2820|0),(2877|0),110,(2916|0));
  // unreachable;
 }
 $20 = $5;
 $21 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($20)|0);
 $22 = $6;
 $23 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($22)|0);
 $24 = ($21|0)==($23|0);
 if ($24) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2820|0),(2877|0),110,(2916|0));
  // unreachable;
 }
}
function __ZN5Eigen17CwiseBinaryOpImplINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_NS_6SparseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen16SparseMatrixBaseINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen16SparseMatrixBaseINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEE8isRValueEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP8[$2>>0]|0;
 $4 = $3&1;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen12SparseMatrixIdLi0EiE14initAssignmentINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKS1_S7_EEEEvRKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_E4rowsEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_E4colsEv($7)|0);
 __ZN5Eigen12SparseMatrixIdLi0EiE6resizeEii($4,$6,$8);
 $9 = ((($4)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)!=(0|0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $12 = ((($4)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 _free($13);
 $14 = ((($4)) + 16|0);
 HEAP32[$14>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEEaSINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKS2_S9_EEEERS2_RKNS0_IT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen16SparseMatrixBaseINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEE7derivedEv($7)|0);
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal10AssignmentINS_12SparseMatrixIdLi0EiEENS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKS3_S7_EENS0_9assign_opIddEENS0_13Sparse2SparseEvE3runERS3_RKS8_RKSA_($6,$8,$4);
 $9 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($5)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_E4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_E4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal10AssignmentINS_12SparseMatrixIdLi0EiEENS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKS3_S7_EENS0_9assign_opIddEENS0_13Sparse2SparseEvE3runERS3_RKS8_RKSA_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen16SparseMatrixBaseINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEE7derivedEv($8)|0);
 __ZN5Eigen8internal23assign_sparse_to_sparseINS_12SparseMatrixIdLi0EiEENS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKS3_S7_EEEEvRT_RKT0_($7,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal23assign_sparse_to_sparseINS_12SparseMatrixIdLi0EiEENS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKS3_S7_EEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0.0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0.0, $166 = 0, $167 = 0, $168 = 0.0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(336|0);
 $7 = sp + 192|0;
 $10 = sp + 334|0;
 $16 = sp + 184|0;
 $19 = sp + 333|0;
 $22 = sp + 144|0;
 $27 = sp + 252|0;
 $28 = sp + 248|0;
 $30 = sp + 80|0;
 $32 = sp + 208|0;
 $33 = sp + 204|0;
 $34 = sp + 200|0;
 $36 = sp + 8|0;
 $20 = $0;
 $21 = $1;
 $38 = $21;
 __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEEC2ERKS8_($22,$38);
 $23 = 0;
 $39 = $21;
 __THREW__ = 0;
 $40 = (invoke_ii(612,($39|0))|0);
 $41 = __THREW__; __THREW__ = 0;
 $42 = $41&1;
 L1: do {
  if ($42) {
   label = 21;
  } else {
   $24 = $40;
   $43 = $21;
   __THREW__ = 0;
   $44 = (invoke_ii(613,($43|0))|0);
   $45 = __THREW__; __THREW__ = 0;
   $46 = $45&1;
   if ($46) {
    label = 21;
   } else {
    if ($44) {
     $47 = $20;
     $48 = $21;
     __THREW__ = 0;
     $49 = (invoke_ii(614,($48|0))|0);
     $50 = __THREW__; __THREW__ = 0;
     $51 = $50&1;
     if ($51) {
      label = 21;
      break;
     }
     $52 = $21;
     __THREW__ = 0;
     $53 = (invoke_ii(612,($52|0))|0);
     $54 = __THREW__; __THREW__ = 0;
     $55 = $54&1;
     if ($55) {
      label = 21;
      break;
     }
     __THREW__ = 0;
     invoke_viii(70,($47|0),($49|0),($53|0));
     $56 = __THREW__; __THREW__ = 0;
     $57 = $56&1;
     if ($57) {
      label = 21;
      break;
     }
     $58 = $20;
     __THREW__ = 0;
     invoke_vi(505,($58|0));
     $59 = __THREW__; __THREW__ = 0;
     $60 = $59&1;
     if ($60) {
      label = 21;
      break;
     }
     $61 = $20;
     $62 = $21;
     __THREW__ = 0;
     $63 = (invoke_ii(614,($62|0))|0);
     $64 = __THREW__; __THREW__ = 0;
     $65 = $64&1;
     if ($65) {
      label = 21;
      break;
     }
     HEAP32[$27>>2] = $63;
     $66 = $21;
     __THREW__ = 0;
     $67 = (invoke_ii(612,($66|0))|0);
     $68 = __THREW__; __THREW__ = 0;
     $69 = $68&1;
     if ($69) {
      label = 21;
      break;
     }
     HEAP32[$28>>2] = $67;
     $17 = $27;
     $18 = $28;
     $70 = $17;
     $71 = $18;
     ;HEAP8[$16>>0]=HEAP8[$19>>0]|0;
     $14 = $70;
     $15 = $71;
     $72 = $14;
     $73 = $15;
     $11 = $16;
     $12 = $72;
     $13 = $73;
     $74 = $12;
     $75 = HEAP32[$74>>2]|0;
     $76 = $13;
     $77 = HEAP32[$76>>2]|0;
     $78 = ($75|0)<($77|0);
     $79 = $15;
     $80 = $14;
     $81 = $78 ? $79 : $80;
     $82 = HEAP32[$81>>2]|0;
     $83 = $82<<1;
     __THREW__ = 0;
     invoke_vii(506,($61|0),($83|0));
     $84 = __THREW__; __THREW__ = 0;
     $85 = $84&1;
     if ($85) {
      label = 21;
      break;
     }
     $29 = 0;
     while(1) {
      $86 = $29;
      $87 = $24;
      $88 = ($86|0)<($87|0);
      $89 = $20;
      if (!($88)) {
       break;
      }
      $90 = $29;
      __THREW__ = 0;
      invoke_vii(507,($89|0),($90|0));
      $91 = __THREW__; __THREW__ = 0;
      $92 = $91&1;
      if ($92) {
       label = 21;
       break L1;
      }
      $93 = $29;
      __THREW__ = 0;
      invoke_viii(615,($30|0),($22|0),($93|0));
      $94 = __THREW__; __THREW__ = 0;
      $95 = $94&1;
      if ($95) {
       label = 21;
       break L1;
      }
      while(1) {
       __THREW__ = 0;
       $96 = (invoke_ii(616,($30|0))|0);
       $97 = __THREW__; __THREW__ = 0;
       $98 = $97&1;
       if ($98) {
        label = 21;
        break L1;
       }
       if (!($96)) {
        break;
       }
       __THREW__ = 0;
       $99 = (+invoke_di(617,($30|0)));
       $100 = __THREW__; __THREW__ = 0;
       $101 = $100&1;
       if ($101) {
        label = 21;
        break L1;
       }
       $31 = $99;
       $102 = $31;
       $103 = $20;
       $104 = $29;
       __THREW__ = 0;
       $105 = (invoke_ii(618,($30|0))|0);
       $106 = __THREW__; __THREW__ = 0;
       $107 = $106&1;
       if ($107) {
        label = 21;
        break L1;
       }
       __THREW__ = 0;
       $108 = (invoke_iiii(513,($103|0),($104|0),($105|0))|0);
       $109 = __THREW__; __THREW__ = 0;
       $110 = $109&1;
       if ($110) {
        label = 21;
        break L1;
       }
       HEAPF64[$108>>3] = $102;
       __THREW__ = 0;
       (invoke_ii(619,($30|0))|0);
       $111 = __THREW__; __THREW__ = 0;
       $112 = $111&1;
       if ($112) {
        label = 21;
        break L1;
       }
      }
      $115 = $29;
      $116 = (($115) + 1)|0;
      $29 = $116;
     }
     __THREW__ = 0;
     invoke_vi(515,($89|0));
     $117 = __THREW__; __THREW__ = 0;
     $118 = $117&1;
     if ($118) {
      label = 21;
      break;
     }
     __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEED2Ev($22);
     STACKTOP = sp;return;
    }
    $119 = $21;
    __THREW__ = 0;
    $120 = (invoke_ii(614,($119|0))|0);
    $121 = __THREW__; __THREW__ = 0;
    $122 = $121&1;
    if ($122) {
     label = 21;
    } else {
     $123 = $21;
     __THREW__ = 0;
     $124 = (invoke_ii(612,($123|0))|0);
     $125 = __THREW__; __THREW__ = 0;
     $126 = $125&1;
     if ($126) {
      label = 21;
     } else {
      __THREW__ = 0;
      invoke_viii(61,($32|0),($120|0),($124|0));
      $127 = __THREW__; __THREW__ = 0;
      $128 = $127&1;
      if ($128) {
       label = 21;
      } else {
       $129 = $21;
       __THREW__ = 0;
       $130 = (invoke_ii(614,($129|0))|0);
       $131 = __THREW__; __THREW__ = 0;
       $132 = $131&1;
       L31: do {
        if (!($132)) {
         HEAP32[$33>>2] = $130;
         $133 = $21;
         __THREW__ = 0;
         $134 = (invoke_ii(612,($133|0))|0);
         $135 = __THREW__; __THREW__ = 0;
         $136 = $135&1;
         if (!($136)) {
          HEAP32[$34>>2] = $134;
          $8 = $33;
          $9 = $34;
          $137 = $8;
          $138 = $9;
          ;HEAP8[$7>>0]=HEAP8[$10>>0]|0;
          $5 = $137;
          $6 = $138;
          $139 = $5;
          $140 = $6;
          $2 = $7;
          $3 = $139;
          $4 = $140;
          $141 = $3;
          $142 = HEAP32[$141>>2]|0;
          $143 = $4;
          $144 = HEAP32[$143>>2]|0;
          $145 = ($142|0)<($144|0);
          $146 = $6;
          $147 = $5;
          $148 = $145 ? $146 : $147;
          $149 = HEAP32[$148>>2]|0;
          $150 = $149<<1;
          __THREW__ = 0;
          invoke_vii(506,($32|0),($150|0));
          $151 = __THREW__; __THREW__ = 0;
          $152 = $151&1;
          if (!($152)) {
           $35 = 0;
           while(1) {
            $153 = $35;
            $154 = $24;
            $155 = ($153|0)<($154|0);
            if (!($155)) {
             break;
            }
            $156 = $35;
            __THREW__ = 0;
            invoke_vii(507,($32|0),($156|0));
            $157 = __THREW__; __THREW__ = 0;
            $158 = $157&1;
            if ($158) {
             break L31;
            }
            $159 = $35;
            __THREW__ = 0;
            invoke_viii(615,($36|0),($22|0),($159|0));
            $160 = __THREW__; __THREW__ = 0;
            $161 = $160&1;
            if ($161) {
             break L31;
            }
            while(1) {
             __THREW__ = 0;
             $162 = (invoke_ii(616,($36|0))|0);
             $163 = __THREW__; __THREW__ = 0;
             $164 = $163&1;
             if ($164) {
              break L31;
             }
             if (!($162)) {
              break;
             }
             __THREW__ = 0;
             $165 = (+invoke_di(617,($36|0)));
             $166 = __THREW__; __THREW__ = 0;
             $167 = $166&1;
             if ($167) {
              break L31;
             }
             $37 = $165;
             $168 = $37;
             $169 = $35;
             __THREW__ = 0;
             $170 = (invoke_ii(618,($36|0))|0);
             $171 = __THREW__; __THREW__ = 0;
             $172 = $171&1;
             if ($172) {
              break L31;
             }
             __THREW__ = 0;
             $173 = (invoke_iiii(513,($32|0),($169|0),($170|0))|0);
             $174 = __THREW__; __THREW__ = 0;
             $175 = $174&1;
             if ($175) {
              break L31;
             }
             HEAPF64[$173>>3] = $168;
             __THREW__ = 0;
             (invoke_ii(619,($36|0))|0);
             $176 = __THREW__; __THREW__ = 0;
             $177 = $176&1;
             if ($177) {
              break L31;
             }
            }
            $182 = $35;
            $183 = (($182) + 1)|0;
            $35 = $183;
           }
           __THREW__ = 0;
           invoke_vi(515,($32|0));
           $184 = __THREW__; __THREW__ = 0;
           $185 = $184&1;
           if (!($185)) {
            __THREW__ = 0;
            $186 = (invoke_ii(516,($32|0))|0);
            $187 = __THREW__; __THREW__ = 0;
            $188 = $187&1;
            if (!($188)) {
             $189 = $20;
             __THREW__ = 0;
             (invoke_iii(62,($189|0),($186|0))|0);
             $190 = __THREW__; __THREW__ = 0;
             $191 = $190&1;
             if (!($191)) {
              __THREW__ = 0;
              invoke_vi(63,($32|0));
              $192 = __THREW__; __THREW__ = 0;
              $193 = $192&1;
              if ($193) {
               label = 21;
               break L1;
              }
              __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEED2Ev($22);
              STACKTOP = sp;return;
             }
            }
           }
          }
         }
        }
       } while(0);
       $178 = ___cxa_find_matching_catch_2()|0;
       $179 = tempRet0;
       $25 = $178;
       $26 = $179;
       __THREW__ = 0;
       invoke_vi(63,($32|0));
       $180 = __THREW__; __THREW__ = 0;
       $181 = $180&1;
       if ($181) {
        $198 = ___cxa_find_matching_catch_3(0|0)|0;
        $199 = tempRet0;
        ___clang_call_terminate($198);
        // unreachable;
       }
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 21) {
  $113 = ___cxa_find_matching_catch_2()|0;
  $114 = tempRet0;
  $25 = $113;
  $26 = $114;
 }
 __THREW__ = 0;
 invoke_vi(620,($22|0));
 $194 = __THREW__; __THREW__ = 0;
 $195 = $194&1;
 if ($195) {
  $198 = ___cxa_find_matching_catch_3(0|0)|0;
  $199 = tempRet0;
  ___clang_call_terminate($198);
  // unreachable;
 } else {
  $196 = $25;
  $197 = $26;
  ___resumeException($196|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEEC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddEC2ERKS8_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddE13InnerIteratorC2ERKSA_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = ((($7)) + 8|0);
 $9 = (__ZNK5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEEcvRKS4_Ev($8)|0);
 $10 = $5;
 __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorC2ERKS3_i($6,$9,$10);
 $11 = ((($6)) + 20|0);
 $12 = $4;
 $13 = ((($12)) + 24|0);
 $14 = (__ZNK5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEEcvRKS4_Ev($13)|0);
 $15 = $5;
 __ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorC2ERKS3_i($11,$14,$15);
 $16 = ((($6)) + 40|0);
 $17 = $4;
 HEAP32[$16>>2] = $17;
 (__ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddE13InnerIteratorppEv($6)|0);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddE13InnerIteratorcvbEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 56|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)>=(0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddE13InnerIterator5valueEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 48|0);
 $4 = +HEAPF64[$3>>3];
 STACKTOP = sp;return (+$4);
}
function __ZNK5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddE13InnerIterator5indexEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 56|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddE13InnerIteratorppEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 8|0;
 $3 = sp;
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorcvbEv($4)|0);
 if ($5) {
  $6 = ((($4)) + 20|0);
  $7 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorcvbEv($6)|0);
  if ($7) {
   $8 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5indexEv($4)|0);
   $9 = ((($4)) + 20|0);
   $10 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5indexEv($9)|0);
   $11 = ($8|0)==($10|0);
   if ($11) {
    $12 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5indexEv($4)|0);
    $13 = ((($4)) + 56|0);
    HEAP32[$13>>2] = $12;
    $14 = ((($4)) + 40|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5valueEv($4)|0);
    $17 = ((($4)) + 20|0);
    $18 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5valueEv($17)|0);
    $19 = (+__ZNK5Eigen8internal13scalar_sum_opIddEclERKdS4_($15,$16,$18));
    $20 = ((($4)) + 48|0);
    HEAPF64[$20>>3] = $19;
    (__ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorppEv($4)|0);
    $21 = ((($4)) + 20|0);
    (__ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorppEv($21)|0);
    STACKTOP = sp;return ($4|0);
   }
  }
 }
 $22 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorcvbEv($4)|0);
 do {
  if ($22) {
   $23 = ((($4)) + 20|0);
   $24 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorcvbEv($23)|0);
   if ($24) {
    $25 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5indexEv($4)|0);
    $26 = ((($4)) + 20|0);
    $27 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5indexEv($26)|0);
    $28 = ($25|0)<($27|0);
    if (!($28)) {
     break;
    }
   }
   $29 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5indexEv($4)|0);
   $30 = ((($4)) + 56|0);
   HEAP32[$30>>2] = $29;
   $31 = ((($4)) + 40|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5valueEv($4)|0);
   HEAPF64[$2>>3] = 0.0;
   $34 = (+__ZNK5Eigen8internal13scalar_sum_opIddEclERKdS4_($32,$33,$2));
   $35 = ((($4)) + 48|0);
   HEAPF64[$35>>3] = $34;
   (__ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorppEv($4)|0);
   STACKTOP = sp;return ($4|0);
  }
 } while(0);
 $36 = ((($4)) + 20|0);
 $37 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorcvbEv($36)|0);
 do {
  if ($37) {
   $38 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorcvbEv($4)|0);
   if ($38) {
    $39 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5indexEv($4)|0);
    $40 = ((($4)) + 20|0);
    $41 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5indexEv($40)|0);
    $42 = ($39|0)>($41|0);
    if (!($42)) {
     break;
    }
   }
   $43 = ((($4)) + 20|0);
   $44 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5indexEv($43)|0);
   $45 = ((($4)) + 56|0);
   HEAP32[$45>>2] = $44;
   $46 = ((($4)) + 40|0);
   $47 = HEAP32[$46>>2]|0;
   HEAPF64[$3>>3] = 0.0;
   $48 = ((($4)) + 20|0);
   $49 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5valueEv($48)|0);
   $50 = (+__ZNK5Eigen8internal13scalar_sum_opIddEclERKdS4_($47,$3,$49));
   $51 = ((($4)) + 48|0);
   HEAPF64[$51>>3] = $50;
   $52 = ((($4)) + 20|0);
   (__ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorppEv($52)|0);
   STACKTOP = sp;return ($4|0);
  }
 } while(0);
 $53 = ((($4)) + 48|0);
 HEAPF64[$53>>3] = 0.0;
 $54 = ((($4)) + 56|0);
 HEAP32[$54>>2] = -1;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddEC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(621,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  label = 8;
 } else {
  __THREW__ = 0;
  invoke_vii(446,($6|0),($8|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if ($12) {
   label = 8;
  } else {
   $13 = ((($6)) + 8|0);
   $14 = $3;
   __THREW__ = 0;
   $15 = (invoke_ii(622,($14|0))|0);
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if ($17) {
    label = 8;
   } else {
    __THREW__ = 0;
    invoke_vii(609,($13|0),($15|0));
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if ($19) {
     label = 8;
    } else {
     $20 = ((($6)) + 24|0);
     $21 = $3;
     __THREW__ = 0;
     $22 = (invoke_ii(623,($21|0))|0);
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      __THREW__ = 0;
      invoke_vii(609,($20|0),($22|0));
      $25 = __THREW__; __THREW__ = 0;
      $26 = $25&1;
      if (!($26)) {
       STACKTOP = sp;return;
      }
     }
     $29 = ___cxa_find_matching_catch_2()|0;
     $30 = tempRet0;
     $4 = $29;
     $5 = $30;
     __THREW__ = 0;
     invoke_vi(611,($13|0));
     $31 = __THREW__; __THREW__ = 0;
     $32 = $31&1;
     if ($32) {
      $37 = ___cxa_find_matching_catch_3(0|0)|0;
      $38 = tempRet0;
      ___clang_call_terminate($37);
      // unreachable;
     }
    }
   }
  }
 }
 if ((label|0) == 8) {
  $27 = ___cxa_find_matching_catch_2()|0;
  $28 = tempRet0;
  $4 = $27;
  $5 = $28;
 }
 __THREW__ = 0;
 invoke_vi(624,($6|0));
 $33 = __THREW__; __THREW__ = 0;
 $34 = $33&1;
 if ($34) {
  $37 = ___cxa_find_matching_catch_3(0|0)|0;
  $38 = tempRet0;
  ___clang_call_terminate($37);
  // unreachable;
 } else {
  $35 = $4;
  $36 = $5;
  ___resumeException($35|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_E7functorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_E3lhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_E3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 24|0);
 __THREW__ = 0;
 invoke_vi(611,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 do {
  if ($7) {
   $11 = ___cxa_find_matching_catch_2()|0;
   $12 = tempRet0;
   $2 = $11;
   $3 = $12;
   $13 = ((($4)) + 8|0);
   __THREW__ = 0;
   invoke_vi(611,($13|0));
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $22 = ___cxa_find_matching_catch_3(0|0)|0;
    $23 = tempRet0;
    ___clang_call_terminate($22);
    // unreachable;
   }
  } else {
   $8 = ((($4)) + 8|0);
   __THREW__ = 0;
   invoke_vi(611,($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $16 = ___cxa_find_matching_catch_2()|0;
    $17 = tempRet0;
    $2 = $16;
    $3 = $17;
    break;
   } else {
    __ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEED2Ev($4);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(624,($4|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $2;
  $21 = $3;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE4dataEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internalL9cs_wclearIiEET_S2_S2_PS2_S2_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = $4;
 $10 = ($9|0)<(2);
 if (!($10)) {
  $11 = $4;
  $12 = $5;
  $13 = (($11) + ($12))|0;
  $14 = ($13|0)<(0);
  if (!($14)) {
   $28 = $4;
   STACKTOP = sp;return ($28|0);
  }
 }
 $8 = 0;
 while(1) {
  $15 = $8;
  $16 = $7;
  $17 = ($15|0)<($16|0);
  if (!($17)) {
   break;
  }
  $18 = $6;
  $19 = $8;
  $20 = (($18) + ($19<<2)|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = ($21|0)!=(0);
  if ($22) {
   $23 = $6;
   $24 = $8;
   $25 = (($23) + ($24<<2)|0);
   HEAP32[$25>>2] = 1;
  }
  $26 = $8;
  $27 = (($26) + 1)|0;
  $8 = $27;
 }
 $4 = 2;
 $28 = $4;
 STACKTOP = sp;return ($28|0);
}
function __ZN5Eigen8internal8amd_flipIiEET_RKS2_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (0 - ($3))|0;
 $5 = (($4) - 2)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal7cs_tdfsIiEET_S2_S2_PS2_PKS2_S3_S3_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$sink = 0, $$sink6 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $15 = 0;
 $16 = $9;
 $17 = ($16|0)!=(0|0);
 $18 = $10;
 $19 = ($18|0)!=(0|0);
 $or$cond = $17 & $19;
 $20 = $11;
 $21 = ($20|0)!=(0|0);
 $or$cond3 = $or$cond & $21;
 $22 = $12;
 $23 = ($22|0)!=(0|0);
 $or$cond5 = $or$cond3 & $23;
 if (!($or$cond5)) {
  $6 = -1;
  $58 = $6;
  STACKTOP = sp;return ($58|0);
 }
 $24 = $7;
 $25 = $12;
 HEAP32[$25>>2] = $24;
 while(1) {
  $26 = $15;
  $27 = ($26|0)>=(0);
  if (!($27)) {
   break;
  }
  $28 = $12;
  $29 = $15;
  $30 = (($28) + ($29<<2)|0);
  $31 = HEAP32[$30>>2]|0;
  $14 = $31;
  $32 = $9;
  $33 = $14;
  $34 = (($32) + ($33<<2)|0);
  $35 = HEAP32[$34>>2]|0;
  $13 = $35;
  $36 = $13;
  $37 = ($36|0)==(-1);
  if ($37) {
   $38 = $15;
   $39 = (($38) + -1)|0;
   $15 = $39;
   $40 = $14;
   $41 = $11;
   $42 = $8;
   $43 = (($42) + 1)|0;
   $8 = $43;
   $44 = (($41) + ($42<<2)|0);
   $$sink = $40;$$sink6 = $44;
  } else {
   $45 = $10;
   $46 = $13;
   $47 = (($45) + ($46<<2)|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = $9;
   $50 = $14;
   $51 = (($49) + ($50<<2)|0);
   HEAP32[$51>>2] = $48;
   $52 = $13;
   $53 = $12;
   $54 = $15;
   $55 = (($54) + 1)|0;
   $15 = $55;
   $56 = (($53) + ($55<<2)|0);
   $$sink = $52;$$sink6 = $56;
  }
  HEAP32[$$sink6>>2] = $$sink;
 }
 $57 = $8;
 $6 = $57;
 $58 = $6;
 STACKTOP = sp;return ($58|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE18conservativeResizeEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal29conservative_resize_like_implINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_Lb1EE3runERNS_9DenseBaseIS3_EEi($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal29conservative_resize_like_implINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_Lb1EE3runERNS_9DenseBaseIS3_EEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $3;
 $4 = $6;
 $5 = 1;
 $7 = $2;
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($7)|0);
 $9 = $3;
 $10 = $4;
 __ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE18conservativeResizeEiii($8,$9,$10,1);
 STACKTOP = sp;return;
}
function __ZN5Eigen12DenseStorageIiLin1ELin1ELi1ELi0EE18conservativeResizeEiii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = HEAP32[$8>>2]|0;
 $10 = $5;
 $11 = ((($8)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $12;
 $14 = (__ZN5Eigen8internal36conditional_aligned_realloc_new_autoIiLb1EEEPT_S3_jj($9,$10,$13)|0);
 HEAP32[$8>>2] = $14;
 $15 = $6;
 $16 = ((($8)) + 4|0);
 HEAP32[$16>>2] = $15;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal36conditional_aligned_realloc_new_autoIiLb1EEEPT_S3_jj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $9 = $6;
 $4 = $9;
 $10 = $4;
 $11 = ($10>>>0)>(1073741823);
 if ($11) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $12 = $7;
 $3 = $12;
 $13 = $3;
 $14 = ($13>>>0)>(1073741823);
 if ($14) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $15 = $5;
 $16 = $6;
 $17 = $16<<2;
 $18 = $7;
 $19 = $18<<2;
 $20 = (__ZN5Eigen8internal27conditional_aligned_reallocILb1EEEPvS2_jj($15,$17,$19)|0);
 $8 = $20;
 $21 = $8;
 STACKTOP = sp;return ($21|0);
}
function __ZN5Eigen8internal27conditional_aligned_reallocILb1EEEPvS2_jj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 $9 = (__ZN5Eigen8internal15aligned_reallocEPvjj($6,$7,$8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZN5Eigen8internal15aligned_reallocEPvjj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp + 4|0;
 $3 = $0;
 $4 = $1;
 HEAP32[$5>>2] = $2;
 __ZN5Eigen8internal22ignore_unused_variableIjEEvRKT_($5);
 $7 = $3;
 $8 = $4;
 $9 = HEAP32[$5>>2]|0;
 $10 = (__ZN5Eigen8internal24handmade_aligned_reallocEPvjj($7,$8,$9)|0);
 $6 = $10;
 $11 = $6;
 $12 = ($11|0)==(0|0);
 $13 = $4;
 $14 = ($13|0)!=(0);
 $or$cond = $12 & $14;
 if (!($or$cond)) {
  $15 = $6;
  STACKTOP = sp;return ($15|0);
 }
 __ZN5Eigen8internal19throw_std_bad_allocEv();
 $15 = $6;
 STACKTOP = sp;return ($15|0);
}
function __ZN5Eigen8internal22ignore_unused_variableIjEEvRKT_($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24handmade_aligned_reallocEPvjj($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $11 = $4;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $13 = $5;
  $14 = (__ZN5Eigen8internal23handmade_aligned_mallocEj($13)|0);
  $3 = $14;
  $47 = $3;
  STACKTOP = sp;return ($47|0);
 }
 $15 = $4;
 $16 = ((($15)) + -4|0);
 $17 = HEAP32[$16>>2]|0;
 $7 = $17;
 $18 = $4;
 $19 = $7;
 $20 = $18;
 $21 = $19;
 $22 = (($20) - ($21))|0;
 $8 = $22;
 $23 = $7;
 $24 = $5;
 $25 = (($24) + 16)|0;
 $26 = (_realloc($23,$25)|0);
 $7 = $26;
 $27 = $7;
 $28 = ($27|0)==(0|0);
 if ($28) {
  $3 = 0;
  $47 = $3;
  STACKTOP = sp;return ($47|0);
 }
 $29 = $7;
 $30 = $29;
 $31 = $30 & -16;
 $32 = (($31) + 16)|0;
 $33 = $32;
 $9 = $33;
 $34 = $7;
 $35 = $8;
 $36 = (($34) + ($35)|0);
 $10 = $36;
 $37 = $9;
 $38 = $10;
 $39 = ($37|0)!=($38|0);
 if ($39) {
  $40 = $9;
  $41 = $10;
  $42 = $5;
  _memmove(($40|0),($41|0),($42|0))|0;
 }
 $43 = $7;
 $44 = $9;
 $45 = ((($44)) + -4|0);
 HEAP32[$45>>2] = $43;
 $46 = $9;
 $3 = $46;
 $47 = $3;
 STACKTOP = sp;return ($47|0);
}
function __ZN5Eigen7InverseINS_17PermutationMatrixILin1ELin1EiEEEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen11InverseImplINS_17PermutationMatrixILin1ELin1EiEENS_18PermutationStorageEEC2Ev($4);
 $5 = $3;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen11InverseImplINS_17PermutationMatrixILin1ELin1EiEENS_18PermutationStorageEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_7InverseINS_17PermutationMatrixILin1ELin1EiEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7InverseINS_17PermutationMatrixILin1ELin1EiEEE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEaSERKS1_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4_setIS2_EERS2_RKNS_9DenseBaseIT_EE($4,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4_setIS2_EERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_EEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_EEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIiiEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIiiEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingIS8_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIiiEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingIS8_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIiiEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIiiEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIiiEENS0_11Dense2DenseEvE3runERS3_RKS3_RKS5_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIiiEENS0_11Dense2DenseEvE3runERS3_RKS3_RKS5_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_EEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIiiEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_EEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_Lb0EE3runERKS3_S6_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIiiEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 32|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(625,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(473,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(474,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(626,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(627,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(477,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(477,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(477,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_Lb0EE3runERKS3_S6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_iiEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($23)|0);
 $25 = $6;
 $26 = ($24|0)==($25|0);
 if (!($26)) {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
 $27 = $3;
 $28 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4colsEv($27)|0);
 $29 = $7;
 $30 = ($28|0)==($29|0);
 if ($30) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEES5_NS0_9assign_opIiiEELi0EEC2ERS5_RKS5_RKS7_RS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEES6_NS0_9assign_opIiiEELi0EEELi1ELi0EE3runERS9_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEES5_NS0_9assign_opIiiEELi0EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEES5_NS0_9assign_opIiiEELi0EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEES5_NS0_9assign_opIiiEELi0EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEES5_NS0_9assign_opIiiEELi0EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$4>>2]|0;
 $8 = $3;
 $9 = (__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE8coeffRefEi($7,$8)|0);
 $10 = ((($4)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = (__ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE5coeffEi($11,$12)|0);
 __ZNK5Eigen8internal9assign_opIiiE11assignCoeffERiRKi($6,$9,$13);
 STACKTOP = sp;return;
}
function __ZN5Eigen33SparseSymmetricPermutationProductINS_12SparseMatrixIdLi0EiEELi1EEC2ERKS2_RKNS_17PermutationMatrixILin1ELin1EiEE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 HEAP32[$6>>2] = $7;
 $8 = ((($6)) + 4|0);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 STACKTOP = sp;return;
}
function __ZN5Eigen21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EEC2ERS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 HEAP32[$4>>2] = $5;
 $6 = (__ZNK5Eigen21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EE4rowsEv($4)|0);
 $7 = (__ZNK5Eigen21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EE4colsEv($4)|0);
 $8 = ($6|0)==($7|0);
 if ($8) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((6488|0),(6553|0),64,(6606|0));
  // unreachable;
 }
}
function __ZNK5Eigen21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal37call_assignment_no_alias_no_transposeINS_21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EEENS_33SparseSymmetricPermutationProductIS4_Li1EEEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal37call_assignment_no_alias_no_transposeINS_21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EEENS_33SparseSymmetricPermutationProductIS4_Li1EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($5,$6,$4);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal37call_assignment_no_alias_no_transposeINS_21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EEENS_33SparseSymmetricPermutationProductIS4_Li1EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal10AssignmentINS_21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EEENS_33SparseSymmetricPermutationProductIS4_Li1EEENS0_9assign_opIddEENS0_13Sparse2SparseEvE3runIS4_Lj2EEEvRNS2_IT_XT0_EEERKS7_RKS9_($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EEENS_33SparseSymmetricPermutationProductIS4_Li1EEENS0_9assign_opIddEENS0_13Sparse2SparseEvE3runIS4_Lj2EEEvRNS2_IT_XT0_EEERKS7_RKS9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4;
 $7 = (__ZNK5Eigen33SparseSymmetricPermutationProductINS_12SparseMatrixIdLi0EiEELi1EE6matrixEv($6)|0);
 $8 = $3;
 $9 = (__ZN5Eigen21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EE6matrixEv($8)|0);
 $10 = $4;
 $11 = (__ZNK5Eigen33SparseSymmetricPermutationProductINS_12SparseMatrixIdLi0EiEELi1EE4permEv($10)|0);
 $12 = (__ZNK5Eigen17PermutationMatrixILin1ELin1EiE7indicesEv($11)|0);
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4dataEv($12)|0);
 __ZN5Eigen8internal20permute_symm_to_symmILi1ELi2ENS_12SparseMatrixIdLi0EiEELi0EEEvRKT1_RNS2_INS4_6ScalarEXT2_ENS4_12StorageIndexEEEPKS8_($7,$9,$13);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal20permute_symm_to_symmILi1ELi2ENS_12SparseMatrixIdLi0EiEELi0EEEvRKT1_RNS2_INS4_6ScalarEXT2_ENS4_12StorageIndexEEEPKS8_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0.0, $$sink1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0.0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0.0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $8 = sp + 32|0;
 $11 = sp + 242|0;
 $17 = sp + 24|0;
 $20 = sp + 241|0;
 $26 = sp + 16|0;
 $29 = sp + 240|0;
 $34 = sp;
 $35 = sp + 136|0;
 $38 = sp + 120|0;
 $40 = sp + 112|0;
 $41 = sp + 92|0;
 $43 = sp + 84|0;
 $47 = sp + 52|0;
 $49 = sp + 44|0;
 $50 = sp + 40|0;
 $30 = $0;
 $31 = $1;
 $32 = $2;
 $52 = $31;
 $53 = (__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv($52)|0);
 $33 = $53;
 $54 = $30;
 __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEEC2ERKS3_($34,$54);
 $55 = $30;
 __THREW__ = 0;
 $56 = (invoke_ii(440,($55|0))|0);
 $57 = __THREW__; __THREW__ = 0;
 $58 = $57&1;
 L1: do {
  if ($58) {
   label = 16;
  } else {
   HEAP32[$35>>2] = $56;
   __THREW__ = 0;
   invoke_vii(438,($38|0),($35|0));
   $59 = __THREW__; __THREW__ = 0;
   $60 = $59&1;
   if ($60) {
    label = 16;
   } else {
    __THREW__ = 0;
    (invoke_ii(439,($38|0))|0);
    $61 = __THREW__; __THREW__ = 0;
    $62 = $61&1;
    L4: do {
     if (!($62)) {
      $63 = $33;
      $64 = HEAP32[$35>>2]|0;
      $65 = HEAP32[$35>>2]|0;
      __THREW__ = 0;
      invoke_viii(70,($63|0),($64|0),($65|0));
      $66 = __THREW__; __THREW__ = 0;
      $67 = $66&1;
      if (!($67)) {
       $39 = 0;
       while(1) {
        $68 = $39;
        $69 = HEAP32[$35>>2]|0;
        $70 = ($68|0)<($69|0);
        if (!($70)) {
         break;
        }
        $71 = $32;
        $72 = ($71|0)!=(0|0);
        if ($72) {
         $73 = $32;
         $74 = $39;
         $75 = (($73) + ($74<<2)|0);
         $76 = HEAP32[$75>>2]|0;
         $78 = $76;
        } else {
         $77 = $39;
         $78 = $77;
        }
        HEAP32[$40>>2] = $78;
        __THREW__ = 0;
        $79 = (invoke_ii(508,($34|0))|0);
        $80 = __THREW__; __THREW__ = 0;
        $81 = $80&1;
        if ($81) {
         break L4;
        }
        $82 = $39;
        __THREW__ = 0;
        invoke_viii(509,($41|0),($79|0),($82|0));
        $83 = __THREW__; __THREW__ = 0;
        $84 = $83&1;
        if ($84) {
         break L4;
        }
        while(1) {
         __THREW__ = 0;
         $85 = (invoke_ii(510,($41|0))|0);
         $86 = __THREW__; __THREW__ = 0;
         $87 = $86&1;
         if ($87) {
          break L4;
         }
         if (!($85)) {
          break;
         }
         __THREW__ = 0;
         $88 = (invoke_ii(512,($41|0))|0);
         $89 = __THREW__; __THREW__ = 0;
         $90 = $89&1;
         if ($90) {
          break L4;
         }
         $42 = $88;
         $91 = $42;
         $92 = $39;
         $93 = ($91|0)<($92|0);
         if (!($93)) {
          $100 = $32;
          $101 = ($100|0)!=(0|0);
          if ($101) {
           $102 = $32;
           $103 = $42;
           $104 = (($102) + ($103<<2)|0);
           $105 = HEAP32[$104>>2]|0;
           $107 = $105;
          } else {
           $106 = $42;
           $107 = $106;
          }
          HEAP32[$43>>2] = $107;
          $27 = $43;
          $28 = $40;
          $108 = $27;
          $109 = $28;
          ;HEAP8[$26>>0]=HEAP8[$29>>0]|0;
          $24 = $108;
          $25 = $109;
          $110 = $24;
          $111 = $25;
          $21 = $26;
          $22 = $110;
          $23 = $111;
          $112 = $22;
          $113 = HEAP32[$112>>2]|0;
          $114 = $23;
          $115 = HEAP32[$114>>2]|0;
          $116 = ($113|0)<($115|0);
          $117 = $25;
          $118 = $24;
          $119 = $116 ? $117 : $118;
          $120 = HEAP32[$119>>2]|0;
          __THREW__ = 0;
          $121 = (invoke_iii(468,($38|0),($120|0))|0);
          $122 = __THREW__; __THREW__ = 0;
          $123 = $122&1;
          if ($123) {
           break L4;
          }
          $124 = HEAP32[$121>>2]|0;
          $125 = (($124) + 1)|0;
          HEAP32[$121>>2] = $125;
         }
         __THREW__ = 0;
         (invoke_ii(514,($41|0))|0);
         $126 = __THREW__; __THREW__ = 0;
         $127 = $126&1;
         if ($127) {
          break L4;
         }
        }
        $128 = $39;
        $129 = (($128) + 1)|0;
        $39 = $129;
       }
       $130 = $33;
       __THREW__ = 0;
       $131 = (invoke_ii(571,($130|0))|0);
       $132 = __THREW__; __THREW__ = 0;
       $133 = $132&1;
       if (!($133)) {
        HEAP32[$131>>2] = 0;
        $44 = 0;
        while(1) {
         $134 = $44;
         $135 = HEAP32[$35>>2]|0;
         $136 = ($134|0)<($135|0);
         $137 = $33;
         if (!($136)) {
          break;
         }
         __THREW__ = 0;
         $138 = (invoke_ii(571,($137|0))|0);
         $139 = __THREW__; __THREW__ = 0;
         $140 = $139&1;
         if ($140) {
          break L4;
         }
         $141 = $44;
         $142 = (($138) + ($141<<2)|0);
         $143 = HEAP32[$142>>2]|0;
         $144 = $44;
         __THREW__ = 0;
         $145 = (invoke_iii(468,($38|0),($144|0))|0);
         $146 = __THREW__; __THREW__ = 0;
         $147 = $146&1;
         if ($147) {
          break L4;
         }
         $148 = HEAP32[$145>>2]|0;
         $149 = (($143) + ($148))|0;
         $150 = $33;
         __THREW__ = 0;
         $151 = (invoke_ii(571,($150|0))|0);
         $152 = __THREW__; __THREW__ = 0;
         $153 = $152&1;
         if ($153) {
          break L4;
         }
         $154 = $44;
         $155 = (($154) + 1)|0;
         $156 = (($151) + ($155<<2)|0);
         HEAP32[$156>>2] = $149;
         $157 = $44;
         $158 = (($157) + 1)|0;
         $44 = $158;
        }
        $159 = $33;
        __THREW__ = 0;
        $160 = (invoke_ii(571,($159|0))|0);
        $161 = __THREW__; __THREW__ = 0;
        $162 = $161&1;
        if (!($162)) {
         $163 = HEAP32[$35>>2]|0;
         $164 = (($160) + ($163<<2)|0);
         $165 = HEAP32[$164>>2]|0;
         __THREW__ = 0;
         invoke_vii(572,($137|0),($165|0));
         $166 = __THREW__; __THREW__ = 0;
         $167 = $166&1;
         if (!($167)) {
          $45 = 0;
          while(1) {
           $168 = $45;
           $169 = HEAP32[$35>>2]|0;
           $170 = ($168|0)<($169|0);
           if (!($170)) {
            break;
           }
           $171 = $33;
           __THREW__ = 0;
           $172 = (invoke_ii(571,($171|0))|0);
           $173 = __THREW__; __THREW__ = 0;
           $174 = $173&1;
           if ($174) {
            break L4;
           }
           $175 = $45;
           $176 = (($172) + ($175<<2)|0);
           $177 = HEAP32[$176>>2]|0;
           $178 = $45;
           __THREW__ = 0;
           $179 = (invoke_iii(468,($38|0),($178|0))|0);
           $180 = __THREW__; __THREW__ = 0;
           $181 = $180&1;
           if ($181) {
            break L4;
           }
           HEAP32[$179>>2] = $177;
           $182 = $45;
           $183 = (($182) + 1)|0;
           $45 = $183;
          }
          $46 = 0;
          while(1) {
           $184 = $46;
           $185 = HEAP32[$35>>2]|0;
           $186 = ($184|0)<($185|0);
           if (!($186)) {
            break;
           }
           __THREW__ = 0;
           $187 = (invoke_ii(508,($34|0))|0);
           $188 = __THREW__; __THREW__ = 0;
           $189 = $188&1;
           if ($189) {
            break L4;
           }
           $190 = $46;
           __THREW__ = 0;
           invoke_viii(509,($47|0),($187|0),($190|0));
           $191 = __THREW__; __THREW__ = 0;
           $192 = $191&1;
           if ($192) {
            break L4;
           }
           while(1) {
            __THREW__ = 0;
            $193 = (invoke_ii(510,($47|0))|0);
            $194 = __THREW__; __THREW__ = 0;
            $195 = $194&1;
            if ($195) {
             break L4;
            }
            if (!($193)) {
             break;
            }
            __THREW__ = 0;
            $196 = (invoke_ii(512,($47|0))|0);
            $197 = __THREW__; __THREW__ = 0;
            $198 = $197&1;
            if ($198) {
             break L4;
            }
            $48 = $196;
            $199 = $48;
            $200 = $46;
            $201 = ($199|0)<($200|0);
            if (!($201)) {
             $202 = $32;
             $203 = ($202|0)!=(0|0);
             if ($203) {
              $204 = $32;
              $205 = $46;
              $206 = (($204) + ($205<<2)|0);
              $207 = HEAP32[$206>>2]|0;
              $209 = $207;
             } else {
              $208 = $46;
              $209 = $208;
             }
             HEAP32[$49>>2] = $209;
             $210 = $32;
             $211 = ($210|0)!=(0|0);
             if ($211) {
              $212 = $32;
              $213 = $48;
              $214 = (($212) + ($213<<2)|0);
              $215 = HEAP32[$214>>2]|0;
              $217 = $215;
             } else {
              $216 = $48;
              $217 = $216;
             }
             HEAP32[$50>>2] = $217;
             $18 = $50;
             $19 = $49;
             $218 = $18;
             $219 = $19;
             ;HEAP8[$17>>0]=HEAP8[$20>>0]|0;
             $15 = $218;
             $16 = $219;
             $220 = $15;
             $221 = $16;
             $12 = $17;
             $13 = $220;
             $14 = $221;
             $222 = $13;
             $223 = HEAP32[$222>>2]|0;
             $224 = $14;
             $225 = HEAP32[$224>>2]|0;
             $226 = ($223|0)<($225|0);
             $227 = $16;
             $228 = $15;
             $229 = $226 ? $227 : $228;
             $230 = HEAP32[$229>>2]|0;
             __THREW__ = 0;
             $231 = (invoke_iii(468,($38|0),($230|0))|0);
             $232 = __THREW__; __THREW__ = 0;
             $233 = $232&1;
             if ($233) {
              break L4;
             }
             $234 = HEAP32[$231>>2]|0;
             $235 = (($234) + 1)|0;
             HEAP32[$231>>2] = $235;
             $51 = $234;
             $9 = $50;
             $10 = $49;
             $236 = $9;
             $237 = $10;
             ;HEAP8[$8>>0]=HEAP8[$11>>0]|0;
             $6 = $236;
             $7 = $237;
             $238 = $7;
             $239 = $6;
             $3 = $8;
             $4 = $238;
             $5 = $239;
             $240 = $4;
             $241 = HEAP32[$240>>2]|0;
             $242 = $5;
             $243 = HEAP32[$242>>2]|0;
             $244 = ($241|0)<($243|0);
             $245 = $7;
             $246 = $6;
             $247 = $244 ? $245 : $246;
             $248 = HEAP32[$247>>2]|0;
             $249 = $33;
             __THREW__ = 0;
             $250 = (invoke_ii(588,($249|0))|0);
             $251 = __THREW__; __THREW__ = 0;
             $252 = $251&1;
             if ($252) {
              break L4;
             }
             $253 = $51;
             $254 = (($250) + ($253<<2)|0);
             HEAP32[$254>>2] = $248;
             $255 = HEAP32[$50>>2]|0;
             $256 = HEAP32[$49>>2]|0;
             $257 = ($255|0)>($256|0);
             if ($257) {
              __THREW__ = 0;
              $258 = (invoke_ii(511,($47|0))|0);
              $259 = __THREW__; __THREW__ = 0;
              $260 = $259&1;
              if ($260) {
               break L4;
              }
              __THREW__ = 0;
              $261 = (+invoke_di(574,($258|0)));
              $262 = __THREW__; __THREW__ = 0;
              $263 = $262&1;
              if ($263) {
               break L4;
              }
              $264 = $33;
              __THREW__ = 0;
              $265 = (invoke_ii(589,($264|0))|0);
              $266 = __THREW__; __THREW__ = 0;
              $267 = $266&1;
              if ($267) {
               break L4;
              }
              $268 = $51;
              $269 = (($265) + ($268<<3)|0);
              $$sink = $261;$$sink1 = $269;
             } else {
              __THREW__ = 0;
              $270 = (invoke_ii(511,($47|0))|0);
              $271 = __THREW__; __THREW__ = 0;
              $272 = $271&1;
              if ($272) {
               break L4;
              }
              $273 = +HEAPF64[$270>>3];
              $274 = $33;
              __THREW__ = 0;
              $275 = (invoke_ii(589,($274|0))|0);
              $276 = __THREW__; __THREW__ = 0;
              $277 = $276&1;
              if ($277) {
               break L4;
              }
              $278 = $51;
              $279 = (($275) + ($278<<3)|0);
              $$sink = $273;$$sink1 = $279;
             }
             HEAPF64[$$sink1>>3] = $$sink;
            }
            __THREW__ = 0;
            (invoke_ii(514,($47|0))|0);
            $280 = __THREW__; __THREW__ = 0;
            $281 = $280&1;
            if ($281) {
             break L4;
            }
           }
           $282 = $46;
           $283 = (($282) + 1)|0;
           $46 = $283;
          }
          __THREW__ = 0;
          invoke_vi(442,($38|0));
          $284 = __THREW__; __THREW__ = 0;
          $285 = $284&1;
          if ($285) {
           label = 16;
           break L1;
          }
          __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEED2Ev($34);
          STACKTOP = sp;return;
         }
        }
       }
      }
     }
    } while(0);
    $96 = ___cxa_find_matching_catch_2()|0;
    $97 = tempRet0;
    $36 = $96;
    $37 = $97;
    __THREW__ = 0;
    invoke_vi(442,($38|0));
    $98 = __THREW__; __THREW__ = 0;
    $99 = $98&1;
    if ($99) {
     $290 = ___cxa_find_matching_catch_3(0|0)|0;
     $291 = tempRet0;
     ___clang_call_terminate($290);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 16) {
  $94 = ___cxa_find_matching_catch_2()|0;
  $95 = tempRet0;
  $36 = $94;
  $37 = $95;
 }
 __THREW__ = 0;
 invoke_vi(517,($34|0));
 $286 = __THREW__; __THREW__ = 0;
 $287 = $286&1;
 if ($287) {
  $290 = ___cxa_find_matching_catch_3(0|0)|0;
  $291 = tempRet0;
  ___clang_call_terminate($290);
  // unreachable;
 } else {
  $288 = $36;
  $289 = $37;
  ___resumeException($288|0);
  // unreachable;
 }
}
function __ZNK5Eigen33SparseSymmetricPermutationProductINS_12SparseMatrixIdLi0EiEELi1EE6matrixEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen21SparseSelfAdjointViewINS_12SparseMatrixIdLi0EiEELj2EE6matrixEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen33SparseSymmetricPermutationProductINS_12SparseMatrixIdLi0EiEELi1EE4permEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = ($5|0)>=(0);
 if ($6) {
  $7 = $3;
  $8 = $3;
  __ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE6resizeEiii($4,$7,$8,1);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((3852|0),(1577|0),312,(1618|0));
  // unreachable;
 }
}
function __ZN5Eigen6numext4realIdEENS_8internal11real_retvalINS2_36global_math_functions_filtering_baseIT_vE4typeEE4typeERKS5_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (+__ZN5Eigen8internal17real_default_implIdLb0EE3runERKd($2));
 STACKTOP = sp;return (+$3);
}
function __ZN5Eigen8internal17real_default_implIdLb0EE3runERKd($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = +HEAPF64[$2>>3];
 STACKTOP = sp;return (+$3);
}
function __ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE20factorize_preorderedILb0EEEvRKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$alloca_mul = 0, $$alloca_mul32 = 0, $$alloca_mul34 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0.0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0.0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0, $236 = 0.0, $237 = 0.0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0.0, $250 = 0, $251 = 0.0, $252 = 0, $253 = 0, $254 = 0, $255 = 0.0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0, $261 = 0, $262 = 0.0, $263 = 0.0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0.0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0.0, $287 = 0, $288 = 0, $289 = 0.0, $29 = 0, $290 = 0.0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0.0, $298 = 0.0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0.0, $302 = 0.0, $303 = 0, $304 = 0, $305 = 0.0, $306 = 0.0, $307 = 0, $308 = 0, $309 = 0.0, $31 = 0, $310 = 0.0, $311 = 0, $312 = 0;
 var $313 = 0, $314 = 0, $315 = 0.0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0;
 var $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0.0, $345 = 0, $346 = 0.0, $347 = 0.0, $348 = 0, $349 = 0;
 var $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0;
 var $368 = 0, $369 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $12 = sp + 124|0;
 $16 = sp + 100|0;
 $18 = sp + 84|0;
 $22 = sp + 56|0;
 $27 = sp + 16|0;
 $31 = sp;
 $5 = $0;
 $6 = $1;
 $33 = $5;
 $34 = ((($33)) + 9|0);
 $35 = HEAP8[$34>>0]|0;
 $36 = $35&1;
 if (!($36)) {
  ___assert_fail((6628|0),(6685|0),105,(6744|0));
  // unreachable;
 }
 $37 = $6;
 $38 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($37)|0);
 $39 = $6;
 $40 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($39)|0);
 $41 = ($38|0)==($40|0);
 if (!($41)) {
  ___assert_fail((6765|0),(6685|0),106,(6744|0));
  // unreachable;
 }
 $42 = ((($33)) + 56|0);
 $43 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($42)|0);
 $44 = $6;
 $45 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($44)|0);
 $46 = ($43|0)==($45|0);
 if (!($46)) {
  ___assert_fail((6786|0),(6685|0),107,(6744|0));
  // unreachable;
 }
 $47 = ((($33)) + 64|0);
 $48 = (__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($47)|0);
 $49 = $6;
 $50 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($49)|0);
 $51 = ($48|0)==($50|0);
 if (!($51)) {
  ___assert_fail((6813|0),(6685|0),108,(6744|0));
  // unreachable;
 }
 $52 = $6;
 $53 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($52)|0);
 $7 = $53;
 $54 = ((($33)) + 12|0);
 $55 = (__ZN5Eigen12SparseMatrixIdLi0EiE13outerIndexPtrEv($54)|0);
 $8 = $55;
 $56 = ((($33)) + 12|0);
 $57 = (__ZN5Eigen12SparseMatrixIdLi0EiE13innerIndexPtrEv($56)|0);
 $9 = $57;
 $58 = ((($33)) + 12|0);
 $59 = (__ZN5Eigen12SparseMatrixIdLi0EiE8valuePtrEv($58)|0);
 $10 = $59;
 $60 = $7;
 $4 = $60;
 $61 = $4;
 $62 = ($61>>>0)>(536870911);
 if ($62) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $63 = $7;
 $64 = $63<<3;
 $65 = ($64>>>0)<=(131072);
 $66 = $7;
 $67 = $66<<3;
 if ($65) {
  $68 = (($67) + 16)|0;
  $69 = (($68) - 1)|0;
  $$alloca_mul = $69;
  $70 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
  $71 = $70;
  $72 = (($71) + 16)|0;
  $73 = (($72) - 1)|0;
  $74 = $73 & -16;
  $75 = $74;
  $77 = $75;
 } else {
  $76 = (__ZN5Eigen8internal14aligned_mallocEj($67)|0);
  $77 = $76;
 }
 $11 = $77;
 $78 = $11;
 $79 = $7;
 $80 = $7;
 $81 = $80<<3;
 $82 = ($81>>>0)>(131072);
 __ZN5Eigen8internal28aligned_stack_memory_handlerIdEC2EPdjb($12,$78,$79,$82);
 $83 = $7;
 $3 = $83;
 $84 = $3;
 $85 = ($84>>>0)>(1073741823);
 if ($85) {
  __THREW__ = 0;
  invoke_v(183);
  $86 = __THREW__; __THREW__ = 0;
  $87 = $86&1;
  if ($87) {
   label = 41;
  } else {
   label = 16;
  }
 } else {
  label = 16;
 }
 L22: do {
  if ((label|0) == 16) {
   $88 = $7;
   $89 = $88<<2;
   $90 = ($89>>>0)<=(131072);
   $91 = $7;
   $92 = $91<<2;
   if ($90) {
    $93 = (($92) + 16)|0;
    $94 = (($93) - 1)|0;
    $$alloca_mul32 = $94;
    $95 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul32)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul32)|0)+15)&-16)|0);;
    $96 = $95;
    $97 = (($96) + 16)|0;
    $98 = (($97) - 1)|0;
    $99 = $98 & -16;
    $100 = $99;
    $104 = $100;
   } else {
    __THREW__ = 0;
    $101 = (invoke_ii(185,($92|0))|0);
    $102 = __THREW__; __THREW__ = 0;
    $103 = $102&1;
    if ($103) {
     label = 41;
     break;
    } else {
     $104 = $101;
    }
   }
   $15 = $104;
   $105 = $15;
   $106 = $7;
   $107 = $7;
   $108 = $107<<2;
   $109 = ($108>>>0)>(131072);
   __THREW__ = 0;
   invoke_viiii(531,($16|0),($105|0),($106|0),($109|0));
   $110 = __THREW__; __THREW__ = 0;
   $111 = $110&1;
   if ($111) {
    label = 41;
   } else {
    $112 = $7;
    $2 = $112;
    $113 = $2;
    $114 = ($113>>>0)>(1073741823);
    if ($114) {
     __THREW__ = 0;
     invoke_v(183);
     $115 = __THREW__; __THREW__ = 0;
     $116 = $115&1;
     if ($116) {
      label = 42;
     } else {
      label = 22;
     }
    } else {
     label = 22;
    }
    L31: do {
     if ((label|0) == 22) {
      $117 = $7;
      $118 = $117<<2;
      $119 = ($118>>>0)<=(131072);
      $120 = $7;
      $121 = $120<<2;
      if ($119) {
       $122 = (($121) + 16)|0;
       $123 = (($122) - 1)|0;
       $$alloca_mul34 = $123;
       $124 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul34)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul34)|0)+15)&-16)|0);;
       $125 = $124;
       $126 = (($125) + 16)|0;
       $127 = (($126) - 1)|0;
       $128 = $127 & -16;
       $129 = $128;
       $133 = $129;
      } else {
       __THREW__ = 0;
       $130 = (invoke_ii(185,($121|0))|0);
       $131 = __THREW__; __THREW__ = 0;
       $132 = $131&1;
       if ($132) {
        label = 42;
        break;
       } else {
        $133 = $130;
       }
      }
      $17 = $133;
      $134 = $17;
      $135 = $7;
      $136 = $7;
      $137 = $136<<2;
      $138 = ($137>>>0)>(131072);
      __THREW__ = 0;
      invoke_viiii(531,($18|0),($134|0),($135|0),($138|0));
      $139 = __THREW__; __THREW__ = 0;
      $140 = $139&1;
      if ($140) {
       label = 42;
      } else {
       $19 = 1;
       $141 = ((($33)) + 48|0);
       __THREW__ = 0;
       invoke_vii(573,($141|0),0);
       $142 = __THREW__; __THREW__ = 0;
       $143 = $142&1;
       L38: do {
        if (!($143)) {
         $20 = 0;
         while(1) {
          $144 = $20;
          $145 = $7;
          $146 = ($144|0)<($145|0);
          if (!($146)) {
           break;
          }
          $147 = $11;
          $148 = $20;
          $149 = (($147) + ($148<<3)|0);
          HEAPF64[$149>>3] = 0.0;
          $150 = $7;
          $21 = $150;
          $151 = $20;
          $152 = $17;
          $153 = $20;
          $154 = (($152) + ($153<<2)|0);
          HEAP32[$154>>2] = $151;
          $155 = ((($33)) + 64|0);
          $156 = $20;
          __THREW__ = 0;
          $157 = (invoke_iii(468,($155|0),($156|0))|0);
          $158 = __THREW__; __THREW__ = 0;
          $159 = $158&1;
          if ($159) {
           break L38;
          }
          HEAP32[$157>>2] = 0;
          $160 = $6;
          $161 = $20;
          __THREW__ = 0;
          invoke_viii(509,($22|0),($160|0),($161|0));
          $162 = __THREW__; __THREW__ = 0;
          $163 = $162&1;
          if ($163) {
           break L38;
          }
          while(1) {
           __THREW__ = 0;
           $164 = (invoke_ii(510,($22|0))|0);
           $165 = __THREW__; __THREW__ = 0;
           $166 = $165&1;
           if ($166) {
            break L38;
           }
           if (!($164)) {
            break;
           }
           __THREW__ = 0;
           $167 = (invoke_ii(512,($22|0))|0);
           $168 = __THREW__; __THREW__ = 0;
           $169 = $168&1;
           if ($169) {
            break L38;
           }
           $23 = $167;
           $170 = $23;
           $171 = $20;
           $172 = ($170|0)<=($171|0);
           L49: do {
            if ($172) {
             __THREW__ = 0;
             $173 = (invoke_ii(511,($22|0))|0);
             $174 = __THREW__; __THREW__ = 0;
             $175 = $174&1;
             if ($175) {
              break L38;
             }
             __THREW__ = 0;
             $176 = (+invoke_di(574,($173|0)));
             $177 = __THREW__; __THREW__ = 0;
             $178 = $177&1;
             if ($178) {
              break L38;
             }
             $179 = $11;
             $180 = $23;
             $181 = (($179) + ($180<<3)|0);
             $182 = +HEAPF64[$181>>3];
             $183 = $182 + $176;
             HEAPF64[$181>>3] = $183;
             $24 = 0;
             while(1) {
              $184 = $17;
              $185 = $23;
              $186 = (($184) + ($185<<2)|0);
              $187 = HEAP32[$186>>2]|0;
              $188 = $20;
              $189 = ($187|0)!=($188|0);
              if (!($189)) {
               break;
              }
              $190 = $23;
              $191 = $15;
              $192 = $24;
              $193 = (($192) + 1)|0;
              $24 = $193;
              $194 = (($191) + ($192<<2)|0);
              HEAP32[$194>>2] = $190;
              $195 = $20;
              $196 = $17;
              $197 = $23;
              $198 = (($196) + ($197<<2)|0);
              HEAP32[$198>>2] = $195;
              $199 = ((($33)) + 56|0);
              $200 = $23;
              __THREW__ = 0;
              $201 = (invoke_iii(468,($199|0),($200|0))|0);
              $202 = __THREW__; __THREW__ = 0;
              $203 = $202&1;
              if ($203) {
               break L38;
              }
              $204 = HEAP32[$201>>2]|0;
              $23 = $204;
             }
             while(1) {
              $213 = $24;
              $214 = ($213|0)>(0);
              if (!($214)) {
               break L49;
              }
              $215 = $15;
              $216 = $24;
              $217 = (($216) + -1)|0;
              $24 = $217;
              $218 = (($215) + ($217<<2)|0);
              $219 = HEAP32[$218>>2]|0;
              $220 = $15;
              $221 = $21;
              $222 = (($221) + -1)|0;
              $21 = $222;
              $223 = (($220) + ($222<<2)|0);
              HEAP32[$223>>2] = $219;
             }
            }
           } while(0);
           __THREW__ = 0;
           (invoke_ii(514,($22|0))|0);
           $224 = __THREW__; __THREW__ = 0;
           $225 = $224&1;
           if ($225) {
            break L38;
           }
          }
          $226 = $11;
          $227 = $20;
          $228 = (($226) + ($227<<3)|0);
          __THREW__ = 0;
          $229 = (+invoke_di(575,($228|0)));
          $230 = __THREW__; __THREW__ = 0;
          $231 = $230&1;
          if ($231) {
           break L38;
          }
          $232 = ((($33)) + 96|0);
          $233 = +HEAPF64[$232>>3];
          $234 = $229 * $233;
          $235 = ((($33)) + 88|0);
          $236 = +HEAPF64[$235>>3];
          $237 = $234 + $236;
          $25 = $237;
          $238 = $11;
          $239 = $20;
          $240 = (($238) + ($239<<3)|0);
          HEAPF64[$240>>3] = 0.0;
          while(1) {
           $241 = $21;
           $242 = $7;
           $243 = ($241|0)<($242|0);
           if (!($243)) {
            break;
           }
           $244 = $15;
           $245 = $21;
           $246 = (($244) + ($245<<2)|0);
           $247 = HEAP32[$246>>2]|0;
           $26 = $247;
           $248 = $11;
           $249 = $26;
           $250 = (($248) + ($249<<3)|0);
           $251 = +HEAPF64[$250>>3];
           HEAPF64[$27>>3] = $251;
           $252 = $11;
           $253 = $26;
           $254 = (($252) + ($253<<3)|0);
           HEAPF64[$254>>3] = 0.0;
           $255 = +HEAPF64[$27>>3];
           $256 = $10;
           $257 = $8;
           $258 = $26;
           $259 = (($257) + ($258<<2)|0);
           $260 = HEAP32[$259>>2]|0;
           $261 = (($256) + ($260<<3)|0);
           $262 = +HEAPF64[$261>>3];
           $263 = $255 / $262;
           $28 = $263;
           HEAPF64[$27>>3] = $263;
           $264 = $8;
           $265 = $26;
           $266 = (($264) + ($265<<2)|0);
           $267 = HEAP32[$266>>2]|0;
           $268 = ((($33)) + 64|0);
           $269 = $26;
           __THREW__ = 0;
           $270 = (invoke_iii(468,($268|0),($269|0))|0);
           $271 = __THREW__; __THREW__ = 0;
           $272 = $271&1;
           if ($272) {
            break L38;
           }
           $273 = HEAP32[$270>>2]|0;
           $274 = (($267) + ($273))|0;
           $29 = $274;
           $275 = $8;
           $276 = $26;
           $277 = (($275) + ($276<<2)|0);
           $278 = HEAP32[$277>>2]|0;
           $279 = (($278) + 1)|0;
           $30 = $279;
           while(1) {
            $280 = $30;
            $281 = $29;
            $282 = ($280|0)<($281|0);
            if (!($282)) {
             break;
            }
            $283 = $10;
            $284 = $30;
            $285 = (($283) + ($284<<3)|0);
            __THREW__ = 0;
            $286 = (+invoke_di(574,($285|0)));
            $287 = __THREW__; __THREW__ = 0;
            $288 = $287&1;
            if ($288) {
             break L38;
            }
            $289 = +HEAPF64[$27>>3];
            $290 = $286 * $289;
            $291 = $11;
            $292 = $9;
            $293 = $30;
            $294 = (($292) + ($293<<2)|0);
            $295 = HEAP32[$294>>2]|0;
            $296 = (($291) + ($295<<3)|0);
            $297 = +HEAPF64[$296>>3];
            $298 = $297 - $290;
            HEAPF64[$296>>3] = $298;
            $299 = $30;
            $300 = (($299) + 1)|0;
            $30 = $300;
           }
           $301 = $28;
           __THREW__ = 0;
           $302 = (+invoke_di(574,($27|0)));
           $303 = __THREW__; __THREW__ = 0;
           $304 = $303&1;
           if ($304) {
            break L38;
           }
           $305 = $301 * $302;
           HEAPF64[$31>>3] = $305;
           __THREW__ = 0;
           $306 = (+invoke_di(575,($31|0)));
           $307 = __THREW__; __THREW__ = 0;
           $308 = $307&1;
           if ($308) {
            break L38;
           }
           $309 = $25;
           $310 = $309 - $306;
           $25 = $310;
           $311 = $20;
           $312 = $9;
           $313 = $30;
           $314 = (($312) + ($313<<2)|0);
           HEAP32[$314>>2] = $311;
           $315 = $28;
           $316 = $10;
           $317 = $30;
           $318 = (($316) + ($317<<3)|0);
           HEAPF64[$318>>3] = $315;
           $319 = ((($33)) + 64|0);
           $320 = $26;
           __THREW__ = 0;
           $321 = (invoke_iii(468,($319|0),($320|0))|0);
           $322 = __THREW__; __THREW__ = 0;
           $323 = $322&1;
           if ($323) {
            break L38;
           }
           $324 = HEAP32[$321>>2]|0;
           $325 = (($324) + 1)|0;
           HEAP32[$321>>2] = $325;
           $326 = $21;
           $327 = (($326) + 1)|0;
           $21 = $327;
          }
          $328 = $8;
          $329 = $20;
          $330 = (($328) + ($329<<2)|0);
          $331 = HEAP32[$330>>2]|0;
          $332 = ((($33)) + 64|0);
          $333 = $20;
          __THREW__ = 0;
          $334 = (invoke_iii(468,($332|0),($333|0))|0);
          $335 = __THREW__; __THREW__ = 0;
          $336 = $335&1;
          if ($336) {
           break L38;
          }
          $337 = HEAP32[$334>>2]|0;
          $338 = (($337) + 1)|0;
          HEAP32[$334>>2] = $338;
          $339 = (($331) + ($337))|0;
          $32 = $339;
          $340 = $20;
          $341 = $9;
          $342 = $32;
          $343 = (($341) + ($342<<2)|0);
          HEAP32[$343>>2] = $340;
          $344 = $25;
          $345 = $344 <= 0.0;
          if ($345) {
           label = 61;
           break;
          }
          $346 = $25;
          $347 = (+Math_sqrt((+$346)));
          $348 = $10;
          $349 = $32;
          $350 = (($348) + ($349<<3)|0);
          HEAPF64[$350>>3] = $347;
          $351 = $20;
          $352 = (($351) + 1)|0;
          $20 = $352;
         }
         if ((label|0) == 61) {
          $19 = 0;
         }
         $353 = $19;
         $354 = $353&1;
         $355 = $354 ? 0 : 1;
         $356 = ((($33)) + 4|0);
         HEAP32[$356>>2] = $355;
         $357 = ((($33)) + 8|0);
         HEAP8[$357>>0] = 1;
         __THREW__ = 0;
         invoke_vi(546,($18|0));
         $358 = __THREW__; __THREW__ = 0;
         $359 = $358&1;
         if ($359) {
          label = 42;
          break L31;
         }
         __THREW__ = 0;
         invoke_vi(546,($16|0));
         $360 = __THREW__; __THREW__ = 0;
         $361 = $360&1;
         if ($361) {
          label = 41;
          break L22;
         }
         __ZN5Eigen8internal28aligned_stack_memory_handlerIdED2Ev($12);
         STACKTOP = sp;return;
        }
       } while(0);
       $209 = ___cxa_find_matching_catch_2()|0;
       $210 = tempRet0;
       $13 = $209;
       $14 = $210;
       __THREW__ = 0;
       invoke_vi(546,($18|0));
       $211 = __THREW__; __THREW__ = 0;
       $212 = $211&1;
       if ($212) {
        $368 = ___cxa_find_matching_catch_3(0|0)|0;
        $369 = tempRet0;
        ___clang_call_terminate($368);
        // unreachable;
       }
      }
     }
    } while(0);
    if ((label|0) == 42) {
     $207 = ___cxa_find_matching_catch_2()|0;
     $208 = tempRet0;
     $13 = $207;
     $14 = $208;
    }
    __THREW__ = 0;
    invoke_vi(546,($16|0));
    $362 = __THREW__; __THREW__ = 0;
    $363 = $362&1;
    if ($363) {
     $368 = ___cxa_find_matching_catch_3(0|0)|0;
     $369 = tempRet0;
     ___clang_call_terminate($368);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 41) {
  $205 = ___cxa_find_matching_catch_2()|0;
  $206 = tempRet0;
  $13 = $205;
  $14 = $206;
 }
 __THREW__ = 0;
 invoke_vi(189,($12|0));
 $364 = __THREW__; __THREW__ = 0;
 $365 = $364&1;
 if ($365) {
  $368 = ___cxa_find_matching_catch_3(0|0)|0;
  $369 = tempRet0;
  ___clang_call_terminate($368);
  // unreachable;
 } else {
  $366 = $13;
  $367 = $14;
  ___resumeException($366|0);
  // unreachable;
 }
}
function __ZNSt3__26vectorIiNS_9allocatorIiEEE8allocateEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $45 = $0;
 $46 = $1;
 $47 = $45;
 $48 = $46;
 $49 = (__ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv($47)|0);
 $50 = ($48>>>0)>($49>>>0);
 if ($50) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($47);
  // unreachable;
 }
 $44 = $47;
 $51 = $44;
 $52 = ((($51)) + 8|0);
 $43 = $52;
 $53 = $43;
 $42 = $53;
 $54 = $42;
 $55 = $46;
 $12 = $54;
 $13 = $55;
 $56 = $12;
 $57 = $13;
 $9 = $56;
 $10 = $57;
 $11 = 0;
 $58 = $9;
 $59 = $10;
 $8 = $58;
 $60 = ($59>>>0)>(1073741823);
 if (!($60)) {
  $71 = $10;
  $72 = $71<<2;
  $7 = $72;
  $73 = $7;
  $74 = (__Znwj($73)|0);
  $75 = ((($47)) + 4|0);
  HEAP32[$75>>2] = $74;
  HEAP32[$47>>2] = $74;
  $76 = HEAP32[$47>>2]|0;
  $77 = $46;
  $78 = (($76) + ($77<<2)|0);
  $16 = $47;
  $79 = $16;
  $80 = ((($79)) + 8|0);
  $15 = $80;
  $81 = $15;
  $14 = $81;
  $82 = $14;
  HEAP32[$82>>2] = $78;
  $40 = $47;
  $41 = 0;
  $83 = $40;
  $39 = $83;
  $84 = $39;
  $85 = HEAP32[$84>>2]|0;
  $38 = $85;
  $86 = $38;
  $18 = $83;
  $87 = $18;
  $88 = HEAP32[$87>>2]|0;
  $17 = $88;
  $89 = $17;
  $23 = $83;
  $90 = $23;
  $22 = $90;
  $91 = $22;
  $21 = $91;
  $92 = $21;
  $93 = ((($92)) + 8|0);
  $20 = $93;
  $94 = $20;
  $19 = $94;
  $95 = $19;
  $96 = HEAP32[$95>>2]|0;
  $97 = HEAP32[$91>>2]|0;
  $98 = $96;
  $99 = $97;
  $100 = (($98) - ($99))|0;
  $101 = (($100|0) / 4)&-1;
  $102 = (($89) + ($101<<2)|0);
  $25 = $83;
  $103 = $25;
  $104 = HEAP32[$103>>2]|0;
  $24 = $104;
  $105 = $24;
  $30 = $83;
  $106 = $30;
  $29 = $106;
  $107 = $29;
  $28 = $107;
  $108 = $28;
  $109 = ((($108)) + 8|0);
  $27 = $109;
  $110 = $27;
  $26 = $110;
  $111 = $26;
  $112 = HEAP32[$111>>2]|0;
  $113 = HEAP32[$107>>2]|0;
  $114 = $112;
  $115 = $113;
  $116 = (($114) - ($115))|0;
  $117 = (($116|0) / 4)&-1;
  $118 = (($105) + ($117<<2)|0);
  $32 = $83;
  $119 = $32;
  $120 = HEAP32[$119>>2]|0;
  $31 = $120;
  $121 = $31;
  $122 = $41;
  $123 = (($121) + ($122<<2)|0);
  $33 = $83;
  $34 = $86;
  $35 = $102;
  $36 = $118;
  $37 = $123;
  STACKTOP = sp;return;
 }
 $4 = 1110;
 $61 = (___cxa_allocate_exception(8)|0);
 $62 = $4;
 $2 = $61;
 $3 = $62;
 $63 = $2;
 $64 = $3;
 __THREW__ = 0;
 invoke_vii(114,($63|0),($64|0));
 $65 = __THREW__; __THREW__ = 0;
 $66 = $65&1;
 if ($66) {
  $67 = ___cxa_find_matching_catch_2()|0;
  $68 = tempRet0;
  $5 = $67;
  $6 = $68;
  ___cxa_free_exception(($61|0));
  $69 = $5;
  $70 = $6;
  ___resumeException($69|0);
  // unreachable;
 } else {
  HEAP32[$63>>2] = (920);
  ___cxa_throw(($61|0),(104|0),(21|0));
  // unreachable;
 }
}
function __ZNSt3__26vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(400|0);
 $8 = sp + 24|0;
 $11 = sp + 384|0;
 $55 = sp + 16|0;
 $58 = sp + 383|0;
 $65 = sp + 8|0;
 $68 = sp + 382|0;
 $76 = sp + 108|0;
 $79 = sp + 96|0;
 $89 = sp;
 $92 = sp + 381|0;
 $97 = sp + 32|0;
 $93 = $0;
 $94 = $1;
 $95 = $2;
 $100 = $93;
 $101 = $94;
 $102 = $95;
 $90 = $101;
 $91 = $102;
 $103 = $90;
 $104 = $91;
 ;HEAP8[$89>>0]=HEAP8[$92>>0]|0;
 $87 = $103;
 $88 = $104;
 $105 = $88;
 $106 = $87;
 $107 = $105;
 $108 = $106;
 $109 = (($107) - ($108))|0;
 $110 = (($109|0) / 4)&-1;
 $96 = $110;
 $111 = $96;
 $85 = $100;
 $112 = $85;
 $84 = $112;
 $113 = $84;
 $83 = $113;
 $114 = $83;
 $115 = ((($114)) + 8|0);
 $82 = $115;
 $116 = $82;
 $81 = $116;
 $117 = $81;
 $118 = HEAP32[$117>>2]|0;
 $119 = HEAP32[$113>>2]|0;
 $120 = $118;
 $121 = $119;
 $122 = (($120) - ($121))|0;
 $123 = (($122|0) / 4)&-1;
 $124 = ($111>>>0)<=($123>>>0);
 if (!($124)) {
  __ZNSt3__26vectorIiNS_9allocatorIiEEE10deallocateEv($100);
  $254 = $96;
  $75 = $100;
  HEAP32[$76>>2] = $254;
  $255 = $75;
  $256 = (__ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv($255)|0);
  $77 = $256;
  $257 = HEAP32[$76>>2]|0;
  $258 = $77;
  $259 = ($257>>>0)>($258>>>0);
  if ($259) {
   __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($255);
   // unreachable;
  }
  $73 = $255;
  $260 = $73;
  $72 = $260;
  $261 = $72;
  $71 = $261;
  $262 = $71;
  $263 = ((($262)) + 8|0);
  $70 = $263;
  $264 = $70;
  $69 = $264;
  $265 = $69;
  $266 = HEAP32[$265>>2]|0;
  $267 = HEAP32[$261>>2]|0;
  $268 = $266;
  $269 = $267;
  $270 = (($268) - ($269))|0;
  $271 = (($270|0) / 4)&-1;
  $78 = $271;
  $272 = $78;
  $273 = $77;
  $274 = (($273>>>0) / 2)&-1;
  $275 = ($272>>>0)>=($274>>>0);
  if ($275) {
   $276 = $77;
   $74 = $276;
  } else {
   $277 = $78;
   $278 = $277<<1;
   HEAP32[$79>>2] = $278;
   $66 = $79;
   $67 = $76;
   $279 = $66;
   $280 = $67;
   ;HEAP8[$65>>0]=HEAP8[$68>>0]|0;
   $63 = $279;
   $64 = $280;
   $281 = $63;
   $282 = $64;
   $60 = $65;
   $61 = $281;
   $62 = $282;
   $283 = $61;
   $284 = HEAP32[$283>>2]|0;
   $285 = $62;
   $286 = HEAP32[$285>>2]|0;
   $287 = ($284>>>0)<($286>>>0);
   $288 = $64;
   $289 = $63;
   $290 = $287 ? $288 : $289;
   $291 = HEAP32[$290>>2]|0;
   $74 = $291;
  }
  $292 = $74;
  __ZNSt3__26vectorIiNS_9allocatorIiEEE8allocateEj($100,$292);
  $293 = $94;
  $294 = $95;
  $295 = $96;
  __ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_j($100,$293,$294,$295);
  $86 = $100;
  STACKTOP = sp;return;
 }
 $125 = $95;
 HEAP32[$97>>2] = $125;
 $98 = 0;
 $126 = $96;
 $80 = $100;
 $127 = $80;
 $128 = ((($127)) + 4|0);
 $129 = HEAP32[$128>>2]|0;
 $130 = HEAP32[$127>>2]|0;
 $131 = $129;
 $132 = $130;
 $133 = (($131) - ($132))|0;
 $134 = (($133|0) / 4)&-1;
 $135 = ($126>>>0)>($134>>>0);
 if ($135) {
  $98 = 1;
  $136 = $94;
  HEAP32[$97>>2] = $136;
  $59 = $100;
  $137 = $59;
  $138 = ((($137)) + 4|0);
  $139 = HEAP32[$138>>2]|0;
  $140 = HEAP32[$137>>2]|0;
  $141 = $139;
  $142 = $140;
  $143 = (($141) - ($142))|0;
  $144 = (($143|0) / 4)&-1;
  $56 = $97;
  $57 = $144;
  $145 = $56;
  $146 = $57;
  ;HEAP8[$55>>0]=HEAP8[$58>>0]|0;
  $53 = $145;
  $54 = $146;
  $147 = $54;
  $148 = $53;
  $149 = HEAP32[$148>>2]|0;
  $150 = (($149) + ($147<<2)|0);
  HEAP32[$148>>2] = $150;
 }
 $151 = $94;
 $152 = HEAP32[$97>>2]|0;
 $153 = HEAP32[$100>>2]|0;
 $50 = $151;
 $51 = $152;
 $52 = $153;
 $154 = $50;
 $49 = $154;
 $155 = $49;
 $156 = $51;
 $43 = $156;
 $157 = $43;
 $158 = $52;
 $44 = $158;
 $159 = $44;
 $45 = $155;
 $46 = $157;
 $47 = $159;
 $160 = $46;
 $161 = $45;
 $162 = $160;
 $163 = $161;
 $164 = (($162) - ($163))|0;
 $165 = (($164|0) / 4)&-1;
 $48 = $165;
 $166 = $48;
 $167 = ($166>>>0)>(0);
 if ($167) {
  $168 = $47;
  $169 = $45;
  $170 = $48;
  $171 = $170<<2;
  _memmove(($168|0),($169|0),($171|0))|0;
 }
 $172 = $47;
 $173 = $48;
 $174 = (($172) + ($173<<2)|0);
 $99 = $174;
 $175 = $98;
 $176 = $175&1;
 if ($176) {
  $177 = HEAP32[$97>>2]|0;
  $178 = $95;
  $179 = $96;
  $3 = $100;
  $180 = $3;
  $181 = ((($180)) + 4|0);
  $182 = HEAP32[$181>>2]|0;
  $183 = HEAP32[$180>>2]|0;
  $184 = $182;
  $185 = $183;
  $186 = (($184) - ($185))|0;
  $187 = (($186|0) / 4)&-1;
  $188 = (($179) - ($187))|0;
  __ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_j($100,$177,$178,$188);
  $86 = $100;
  STACKTOP = sp;return;
 }
 $189 = $99;
 $40 = $100;
 $41 = $189;
 $190 = $40;
 $191 = $41;
 $38 = $190;
 $39 = $191;
 $4 = $190;
 $192 = $4;
 $193 = ((($192)) + 4|0);
 $194 = HEAP32[$193>>2]|0;
 $195 = HEAP32[$192>>2]|0;
 $196 = $194;
 $197 = $195;
 $198 = (($196) - ($197))|0;
 $199 = (($198|0) / 4)&-1;
 $42 = $199;
 $200 = $41;
 $15 = $190;
 $16 = $200;
 $201 = $15;
 while(1) {
  $202 = $16;
  $203 = ((($201)) + 4|0);
  $204 = HEAP32[$203>>2]|0;
  $205 = ($202|0)!=($204|0);
  if (!($205)) {
   break;
  }
  $14 = $201;
  $206 = $14;
  $207 = ((($206)) + 8|0);
  $13 = $207;
  $208 = $13;
  $12 = $208;
  $209 = $12;
  $210 = ((($201)) + 4|0);
  $211 = HEAP32[$210>>2]|0;
  $212 = ((($211)) + -4|0);
  HEAP32[$210>>2] = $212;
  $5 = $212;
  $213 = $5;
  $9 = $209;
  $10 = $213;
  $214 = $9;
  $215 = $10;
  ;HEAP8[$8>>0]=HEAP8[$11>>0]|0;
  $6 = $214;
  $7 = $215;
 }
 $216 = $42;
 $36 = $190;
 $37 = $216;
 $217 = $36;
 $35 = $217;
 $218 = $35;
 $219 = HEAP32[$218>>2]|0;
 $34 = $219;
 $220 = $34;
 $18 = $217;
 $221 = $18;
 $222 = HEAP32[$221>>2]|0;
 $17 = $222;
 $223 = $17;
 $23 = $217;
 $224 = $23;
 $22 = $224;
 $225 = $22;
 $21 = $225;
 $226 = $21;
 $227 = ((($226)) + 8|0);
 $20 = $227;
 $228 = $20;
 $19 = $228;
 $229 = $19;
 $230 = HEAP32[$229>>2]|0;
 $231 = HEAP32[$225>>2]|0;
 $232 = $230;
 $233 = $231;
 $234 = (($232) - ($233))|0;
 $235 = (($234|0) / 4)&-1;
 $236 = (($223) + ($235<<2)|0);
 $25 = $217;
 $237 = $25;
 $238 = HEAP32[$237>>2]|0;
 $24 = $238;
 $239 = $24;
 $240 = $37;
 $241 = (($239) + ($240<<2)|0);
 $27 = $217;
 $242 = $27;
 $243 = HEAP32[$242>>2]|0;
 $26 = $243;
 $244 = $26;
 $28 = $217;
 $245 = $28;
 $246 = ((($245)) + 4|0);
 $247 = HEAP32[$246>>2]|0;
 $248 = HEAP32[$245>>2]|0;
 $249 = $247;
 $250 = $248;
 $251 = (($249) - ($250))|0;
 $252 = (($251|0) / 4)&-1;
 $253 = (($244) + ($252<<2)|0);
 $29 = $217;
 $30 = $220;
 $31 = $236;
 $32 = $241;
 $33 = $253;
 $86 = $100;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_j($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $21 = sp + 68|0;
 $16 = $0;
 $17 = $1;
 $18 = $2;
 $19 = $3;
 $22 = $16;
 $15 = $22;
 $23 = $15;
 $24 = ((($23)) + 8|0);
 $14 = $24;
 $25 = $14;
 $13 = $25;
 $26 = $13;
 $20 = $26;
 $27 = $19;
 $4 = $21;
 $5 = $22;
 $6 = $27;
 $28 = $20;
 $29 = $17;
 $30 = $18;
 $31 = ((($22)) + 4|0);
 $7 = $28;
 $8 = $29;
 $9 = $30;
 $10 = $31;
 $32 = $9;
 $33 = $8;
 $34 = $32;
 $35 = $33;
 $36 = (($34) - ($35))|0;
 $37 = (($36|0) / 4)&-1;
 $11 = $37;
 $38 = $11;
 $39 = ($38|0)>(0);
 if (!($39)) {
  $12 = $21;
  STACKTOP = sp;return;
 }
 $40 = $10;
 $41 = HEAP32[$40>>2]|0;
 $42 = $8;
 $43 = $11;
 $44 = $43<<2;
 _memcpy(($41|0),($42|0),($44|0))|0;
 $45 = $11;
 $46 = $10;
 $47 = HEAP32[$46>>2]|0;
 $48 = (($47) + ($45<<2)|0);
 HEAP32[$46>>2] = $48;
 $12 = $21;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIiNS_9allocatorIiEEE10deallocateEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $4 = sp;
 $7 = sp + 264|0;
 $57 = sp + 44|0;
 $64 = sp + 16|0;
 $66 = sp + 8|0;
 $67 = sp + 4|0;
 $65 = $0;
 $68 = $65;
 $69 = HEAP32[$68>>2]|0;
 $62 = $64;
 $63 = -1;
 $70 = $62;
 HEAP32[$70>>2] = 0;
 $71 = HEAP32[$64>>2]|0;
 HEAP32[$66>>2] = $71;
 $47 = $66;
 $72 = ($69|0)!=(0|0);
 if (!($72)) {
  STACKTOP = sp;return;
 }
 $37 = $68;
 $73 = $37;
 $36 = $73;
 $74 = $36;
 $75 = ((($74)) + 4|0);
 $76 = HEAP32[$75>>2]|0;
 $77 = HEAP32[$74>>2]|0;
 $78 = $76;
 $79 = $77;
 $80 = (($78) - ($79))|0;
 $81 = (($80|0) / 4)&-1;
 $38 = $81;
 $13 = $73;
 $82 = $13;
 $83 = HEAP32[$82>>2]|0;
 $11 = $82;
 $12 = $83;
 $84 = $11;
 while(1) {
  $85 = $12;
  $86 = ((($84)) + 4|0);
  $87 = HEAP32[$86>>2]|0;
  $88 = ($85|0)!=($87|0);
  if (!($88)) {
   break;
  }
  $10 = $84;
  $89 = $10;
  $90 = ((($89)) + 8|0);
  $9 = $90;
  $91 = $9;
  $8 = $91;
  $92 = $8;
  $93 = ((($84)) + 4|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = ((($94)) + -4|0);
  HEAP32[$93>>2] = $95;
  $1 = $95;
  $96 = $1;
  $5 = $92;
  $6 = $96;
  $97 = $5;
  $98 = $6;
  ;HEAP8[$4>>0]=HEAP8[$7>>0]|0;
  $2 = $97;
  $3 = $98;
 }
 $99 = $38;
 $33 = $73;
 $34 = $99;
 $100 = $33;
 $32 = $100;
 $101 = $32;
 $102 = HEAP32[$101>>2]|0;
 $31 = $102;
 $103 = $31;
 $15 = $100;
 $104 = $15;
 $105 = HEAP32[$104>>2]|0;
 $14 = $105;
 $106 = $14;
 $20 = $100;
 $107 = $20;
 $19 = $107;
 $108 = $19;
 $18 = $108;
 $109 = $18;
 $110 = ((($109)) + 8|0);
 $17 = $110;
 $111 = $17;
 $16 = $111;
 $112 = $16;
 $113 = HEAP32[$112>>2]|0;
 $114 = HEAP32[$108>>2]|0;
 $115 = $113;
 $116 = $114;
 $117 = (($115) - ($116))|0;
 $118 = (($117|0) / 4)&-1;
 $119 = (($106) + ($118<<2)|0);
 $22 = $100;
 $120 = $22;
 $121 = HEAP32[$120>>2]|0;
 $21 = $121;
 $122 = $21;
 $123 = $34;
 $124 = (($122) + ($123<<2)|0);
 $24 = $100;
 $125 = $24;
 $126 = HEAP32[$125>>2]|0;
 $23 = $126;
 $127 = $23;
 $25 = $100;
 $128 = $25;
 $129 = ((($128)) + 4|0);
 $130 = HEAP32[$129>>2]|0;
 $131 = HEAP32[$128>>2]|0;
 $132 = $130;
 $133 = $131;
 $134 = (($132) - ($133))|0;
 $135 = (($134|0) / 4)&-1;
 $136 = (($127) + ($135<<2)|0);
 $26 = $100;
 $27 = $103;
 $28 = $119;
 $29 = $124;
 $30 = $136;
 $35 = $73;
 $41 = $68;
 $137 = $41;
 $138 = ((($137)) + 8|0);
 $40 = $138;
 $139 = $40;
 $39 = $139;
 $140 = $39;
 $141 = HEAP32[$68>>2]|0;
 $46 = $68;
 $142 = $46;
 $45 = $142;
 $143 = $45;
 $44 = $143;
 $144 = $44;
 $145 = ((($144)) + 8|0);
 $43 = $145;
 $146 = $43;
 $42 = $146;
 $147 = $42;
 $148 = HEAP32[$147>>2]|0;
 $149 = HEAP32[$143>>2]|0;
 $150 = $148;
 $151 = $149;
 $152 = (($150) - ($151))|0;
 $153 = (($152|0) / 4)&-1;
 $52 = $140;
 $53 = $141;
 $54 = $153;
 $154 = $52;
 $155 = $53;
 $156 = $54;
 $49 = $154;
 $50 = $155;
 $51 = $156;
 $157 = $50;
 $48 = $157;
 $158 = $48;
 __ZdlPv($158);
 $55 = $57;
 $56 = -1;
 $159 = $55;
 HEAP32[$159>>2] = 0;
 $160 = HEAP32[$57>>2]|0;
 HEAP32[$67>>2] = $160;
 $58 = $67;
 $61 = $68;
 $161 = $61;
 $162 = ((($161)) + 8|0);
 $60 = $162;
 $163 = $60;
 $59 = $163;
 $164 = $59;
 HEAP32[$164>>2] = 0;
 $165 = ((($68)) + 4|0);
 HEAP32[$165>>2] = 0;
 HEAP32[$68>>2] = 0;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $8 = sp;
 $11 = sp + 148|0;
 $19 = sp + 84|0;
 $22 = sp + 72|0;
 $33 = sp + 12|0;
 $30 = $0;
 $31 = $1;
 $36 = $30;
 $29 = $36;
 $37 = $29;
 $38 = ((($37)) + 8|0);
 $28 = $38;
 $39 = $28;
 $27 = $39;
 $40 = $27;
 $41 = HEAP32[$40>>2]|0;
 $42 = ((($36)) + 4|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = $41;
 $45 = $43;
 $46 = (($44) - ($45))|0;
 $47 = (($46|0) / 12)&-1;
 $48 = $31;
 $49 = ($47>>>0)>=($48>>>0);
 if ($49) {
  $50 = $31;
  __ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE18__construct_at_endEj($36,$50);
  STACKTOP = sp;return;
 }
 $26 = $36;
 $51 = $26;
 $52 = ((($51)) + 8|0);
 $25 = $52;
 $53 = $25;
 $24 = $53;
 $54 = $24;
 $32 = $54;
 $23 = $36;
 $55 = $23;
 $56 = ((($55)) + 4|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = HEAP32[$55>>2]|0;
 $59 = $57;
 $60 = $58;
 $61 = (($59) - ($60))|0;
 $62 = (($61|0) / 12)&-1;
 $63 = $31;
 $64 = (($62) + ($63))|0;
 $18 = $36;
 HEAP32[$19>>2] = $64;
 $65 = $18;
 $66 = (__ZNKSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8max_sizeEv($65)|0);
 $20 = $66;
 $67 = HEAP32[$19>>2]|0;
 $68 = $20;
 $69 = ($67>>>0)>($68>>>0);
 if ($69) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($65);
  // unreachable;
 }
 $16 = $65;
 $70 = $16;
 $15 = $70;
 $71 = $15;
 $14 = $71;
 $72 = $14;
 $73 = ((($72)) + 8|0);
 $13 = $73;
 $74 = $13;
 $12 = $74;
 $75 = $12;
 $76 = HEAP32[$75>>2]|0;
 $77 = HEAP32[$71>>2]|0;
 $78 = $76;
 $79 = $77;
 $80 = (($78) - ($79))|0;
 $81 = (($80|0) / 12)&-1;
 $21 = $81;
 $82 = $21;
 $83 = $20;
 $84 = (($83>>>0) / 2)&-1;
 $85 = ($82>>>0)>=($84>>>0);
 if ($85) {
  $86 = $20;
  $17 = $86;
 } else {
  $87 = $21;
  $88 = $87<<1;
  HEAP32[$22>>2] = $88;
  $9 = $22;
  $10 = $19;
  $89 = $9;
  $90 = $10;
  ;HEAP8[$8>>0]=HEAP8[$11>>0]|0;
  $6 = $89;
  $7 = $90;
  $91 = $6;
  $92 = $7;
  $3 = $8;
  $4 = $91;
  $5 = $92;
  $93 = $4;
  $94 = HEAP32[$93>>2]|0;
  $95 = $5;
  $96 = HEAP32[$95>>2]|0;
  $97 = ($94>>>0)<($96>>>0);
  $98 = $7;
  $99 = $6;
  $100 = $97 ? $98 : $99;
  $101 = HEAP32[$100>>2]|0;
  $17 = $101;
 }
 $102 = $17;
 $2 = $36;
 $103 = $2;
 $104 = ((($103)) + 4|0);
 $105 = HEAP32[$104>>2]|0;
 $106 = HEAP32[$103>>2]|0;
 $107 = $105;
 $108 = $106;
 $109 = (($107) - ($108))|0;
 $110 = (($109|0) / 12)&-1;
 $111 = $32;
 __ZNSt3__214__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEEC2EjjS6_($33,$102,$110,$111);
 $112 = $31;
 __THREW__ = 0;
 invoke_vii(628,($33|0),($112|0));
 $113 = __THREW__; __THREW__ = 0;
 $114 = $113&1;
 if (!($114)) {
  __THREW__ = 0;
  invoke_vii(629,($36|0),($33|0));
  $115 = __THREW__; __THREW__ = 0;
  $116 = $115&1;
  if (!($116)) {
   __ZNSt3__214__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEED2Ev($33);
   STACKTOP = sp;return;
  }
 }
 $117 = ___cxa_find_matching_catch_2()|0;
 $118 = tempRet0;
 $34 = $117;
 $35 = $118;
 __THREW__ = 0;
 invoke_vi(630,($33|0));
 $119 = __THREW__; __THREW__ = 0;
 $120 = $119&1;
 if ($120) {
  $123 = ___cxa_find_matching_catch_3(0|0)|0;
  $124 = tempRet0;
  ___clang_call_terminate($123);
  // unreachable;
 } else {
  $121 = $34;
  $122 = $35;
  ___resumeException($121|0);
  // unreachable;
 }
}
function __ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE18__construct_at_endEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $8 = sp + 124|0;
 $12 = sp + 108|0;
 $16 = sp + 92|0;
 $21 = sp + 72|0;
 $24 = sp + 60|0;
 $27 = sp + 48|0;
 $28 = sp + 44|0;
 $29 = sp + 40|0;
 $40 = sp + 152|0;
 $37 = $0;
 $38 = $1;
 $41 = $37;
 $36 = $41;
 $42 = $36;
 $43 = ((($42)) + 8|0);
 $35 = $43;
 $44 = $35;
 $34 = $44;
 $45 = $34;
 $39 = $45;
 while(1) {
  $2 = $40;
  $3 = $41;
  $4 = 1;
  $46 = $39;
  $47 = ((($41)) + 4|0);
  $48 = HEAP32[$47>>2]|0;
  $5 = $48;
  $49 = $5;
  $31 = $46;
  $32 = $49;
  $50 = $32;
  $30 = $50;
  $51 = $30;
  $26 = $51;
  $52 = $26;
  $25 = $52;
  $6 = $8;
  $7 = -1;
  $53 = $6;
  HEAP32[$53>>2] = 0;
  $54 = HEAP32[$8>>2]|0;
  HEAP32[$27>>2] = $54;
  $9 = $27;
  HEAP32[$52>>2] = 0;
  $55 = ((($52)) + 4|0);
  $10 = $12;
  $11 = -1;
  $56 = $10;
  HEAP32[$56>>2] = 0;
  $57 = HEAP32[$12>>2]|0;
  HEAP32[$28>>2] = $57;
  $13 = $28;
  HEAP32[$55>>2] = 0;
  $58 = ((($52)) + 8|0);
  $14 = $16;
  $15 = -1;
  $59 = $14;
  HEAP32[$59>>2] = 0;
  $60 = HEAP32[$16>>2]|0;
  HEAP32[$29>>2] = $60;
  $17 = $29;
  $23 = $58;
  HEAP32[$24>>2] = 0;
  $61 = $23;
  $22 = $24;
  $62 = $22;
  $63 = HEAP32[$62>>2]|0;
  $20 = $61;
  HEAP32[$21>>2] = $63;
  $64 = $20;
  $19 = $64;
  $18 = $21;
  $65 = $18;
  $66 = HEAP32[$65>>2]|0;
  HEAP32[$64>>2] = $66;
  $67 = ((($41)) + 4|0);
  $68 = HEAP32[$67>>2]|0;
  $69 = ((($68)) + 12|0);
  HEAP32[$67>>2] = $69;
  $70 = $38;
  $71 = (($70) + -1)|0;
  $38 = $71;
  $33 = $40;
  $72 = $38;
  $73 = ($72>>>0)>(0);
  if (!($73)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEEC2EjjS6_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $11 = sp + 136|0;
 $15 = sp + 120|0;
 $32 = sp + 52|0;
 $39 = sp + 24|0;
 $44 = sp + 4|0;
 $45 = sp;
 $40 = $0;
 $41 = $1;
 $42 = $2;
 $43 = $3;
 $46 = $40;
 $47 = ((($46)) + 12|0);
 $37 = $39;
 $38 = -1;
 $48 = $37;
 HEAP32[$48>>2] = 0;
 $49 = HEAP32[$39>>2]|0;
 HEAP32[$44>>2] = $49;
 $17 = $44;
 $50 = $43;
 $14 = $47;
 HEAP32[$15>>2] = 0;
 $16 = $50;
 $51 = $14;
 $13 = $15;
 $52 = $13;
 $53 = HEAP32[$52>>2]|0;
 $54 = $16;
 $7 = $54;
 $55 = $7;
 $10 = $51;
 HEAP32[$11>>2] = $53;
 $12 = $55;
 $56 = $10;
 $9 = $11;
 $57 = $9;
 $58 = HEAP32[$57>>2]|0;
 HEAP32[$56>>2] = $58;
 $59 = ((($56)) + 4|0);
 $60 = $12;
 $8 = $60;
 $61 = $8;
 HEAP32[$59>>2] = $61;
 $62 = $41;
 $63 = ($62|0)!=(0);
 if (!($63)) {
  $30 = $32;
  $31 = -1;
  $90 = $30;
  HEAP32[$90>>2] = 0;
  $91 = HEAP32[$32>>2]|0;
  HEAP32[$45>>2] = $91;
  $33 = $45;
  $92 = 0;
  HEAP32[$46>>2] = $92;
  $93 = HEAP32[$46>>2]|0;
  $94 = $42;
  $95 = (($93) + (($94*12)|0)|0);
  $96 = ((($46)) + 8|0);
  HEAP32[$96>>2] = $95;
  $97 = ((($46)) + 4|0);
  HEAP32[$97>>2] = $95;
  $98 = HEAP32[$46>>2]|0;
  $99 = $41;
  $100 = (($98) + (($99*12)|0)|0);
  $36 = $46;
  $101 = $36;
  $102 = ((($101)) + 12|0);
  $35 = $102;
  $103 = $35;
  $34 = $103;
  $104 = $34;
  HEAP32[$104>>2] = $100;
  STACKTOP = sp;return;
 }
 $6 = $46;
 $64 = $6;
 $65 = ((($64)) + 12|0);
 $5 = $65;
 $66 = $5;
 $4 = $66;
 $67 = $4;
 $68 = ((($67)) + 4|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = $41;
 $28 = $69;
 $29 = $70;
 $71 = $28;
 $72 = $29;
 $25 = $71;
 $26 = $72;
 $27 = 0;
 $73 = $25;
 $74 = $26;
 $24 = $73;
 $75 = ($74>>>0)>(357913941);
 if (!($75)) {
  $86 = $26;
  $87 = ($86*12)|0;
  $23 = $87;
  $88 = $23;
  $89 = (__Znwj($88)|0);
  $92 = $89;
  HEAP32[$46>>2] = $92;
  $93 = HEAP32[$46>>2]|0;
  $94 = $42;
  $95 = (($93) + (($94*12)|0)|0);
  $96 = ((($46)) + 8|0);
  HEAP32[$96>>2] = $95;
  $97 = ((($46)) + 4|0);
  HEAP32[$97>>2] = $95;
  $98 = HEAP32[$46>>2]|0;
  $99 = $41;
  $100 = (($98) + (($99*12)|0)|0);
  $36 = $46;
  $101 = $36;
  $102 = ((($101)) + 12|0);
  $35 = $102;
  $103 = $35;
  $34 = $103;
  $104 = $34;
  HEAP32[$104>>2] = $100;
  STACKTOP = sp;return;
 }
 $20 = 1110;
 $76 = (___cxa_allocate_exception(8)|0);
 $77 = $20;
 $18 = $76;
 $19 = $77;
 $78 = $18;
 $79 = $19;
 __THREW__ = 0;
 invoke_vii(114,($78|0),($79|0));
 $80 = __THREW__; __THREW__ = 0;
 $81 = $80&1;
 if ($81) {
  $82 = ___cxa_find_matching_catch_2()|0;
  $83 = tempRet0;
  $21 = $82;
  $22 = $83;
  ___cxa_free_exception(($76|0));
  $84 = $21;
  $85 = $22;
  ___resumeException($84|0);
  // unreachable;
 } else {
  HEAP32[$78>>2] = (920);
  ___cxa_throw(($76|0),(104|0),(21|0));
  // unreachable;
 }
}
function __ZNSt3__214__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE18__construct_at_endEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $5 = sp + 120|0;
 $9 = sp + 104|0;
 $13 = sp + 88|0;
 $18 = sp + 68|0;
 $21 = sp + 56|0;
 $24 = sp + 44|0;
 $25 = sp + 40|0;
 $26 = sp + 36|0;
 $33 = $0;
 $34 = $1;
 $36 = $33;
 $32 = $36;
 $37 = $32;
 $38 = ((($37)) + 12|0);
 $31 = $38;
 $39 = $31;
 $30 = $39;
 $40 = $30;
 $41 = ((($40)) + 4|0);
 $42 = HEAP32[$41>>2]|0;
 $35 = $42;
 while(1) {
  $43 = $35;
  $44 = ((($36)) + 8|0);
  $45 = HEAP32[$44>>2]|0;
  $2 = $45;
  $46 = $2;
  $28 = $43;
  $29 = $46;
  $47 = $29;
  $27 = $47;
  $48 = $27;
  $23 = $48;
  $49 = $23;
  $22 = $49;
  $3 = $5;
  $4 = -1;
  $50 = $3;
  HEAP32[$50>>2] = 0;
  $51 = HEAP32[$5>>2]|0;
  HEAP32[$24>>2] = $51;
  $6 = $24;
  HEAP32[$49>>2] = 0;
  $52 = ((($49)) + 4|0);
  $7 = $9;
  $8 = -1;
  $53 = $7;
  HEAP32[$53>>2] = 0;
  $54 = HEAP32[$9>>2]|0;
  HEAP32[$25>>2] = $54;
  $10 = $25;
  HEAP32[$52>>2] = 0;
  $55 = ((($49)) + 8|0);
  $11 = $13;
  $12 = -1;
  $56 = $11;
  HEAP32[$56>>2] = 0;
  $57 = HEAP32[$13>>2]|0;
  HEAP32[$26>>2] = $57;
  $14 = $26;
  $20 = $55;
  HEAP32[$21>>2] = 0;
  $58 = $20;
  $19 = $21;
  $59 = $19;
  $60 = HEAP32[$59>>2]|0;
  $17 = $58;
  HEAP32[$18>>2] = $60;
  $61 = $17;
  $16 = $61;
  $15 = $18;
  $62 = $15;
  $63 = HEAP32[$62>>2]|0;
  HEAP32[$61>>2] = $63;
  $64 = ((($36)) + 8|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = ((($65)) + 12|0);
  HEAP32[$64>>2] = $66;
  $67 = $34;
  $68 = (($67) + -1)|0;
  $34 = $68;
  $69 = $34;
  $70 = ($69>>>0)>(0);
  if (!($70)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS4_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(368|0);
 $20 = sp + 288|0;
 $26 = sp + 264|0;
 $38 = sp + 216|0;
 $91 = $0;
 $92 = $1;
 $93 = $91;
 $90 = $93;
 $94 = $90;
 $89 = $94;
 $95 = $89;
 $96 = HEAP32[$95>>2]|0;
 $88 = $96;
 $97 = $88;
 $67 = $94;
 $98 = $67;
 $99 = HEAP32[$98>>2]|0;
 $66 = $99;
 $100 = $66;
 $72 = $94;
 $101 = $72;
 $71 = $101;
 $102 = $71;
 $70 = $102;
 $103 = $70;
 $104 = ((($103)) + 8|0);
 $69 = $104;
 $105 = $69;
 $68 = $105;
 $106 = $68;
 $107 = HEAP32[$106>>2]|0;
 $108 = HEAP32[$102>>2]|0;
 $109 = $107;
 $110 = $108;
 $111 = (($109) - ($110))|0;
 $112 = (($111|0) / 12)&-1;
 $113 = (($100) + (($112*12)|0)|0);
 $74 = $94;
 $114 = $74;
 $115 = HEAP32[$114>>2]|0;
 $73 = $115;
 $116 = $73;
 $75 = $94;
 $117 = $75;
 $118 = ((($117)) + 4|0);
 $119 = HEAP32[$118>>2]|0;
 $120 = HEAP32[$117>>2]|0;
 $121 = $119;
 $122 = $120;
 $123 = (($121) - ($122))|0;
 $124 = (($123|0) / 12)&-1;
 $125 = (($116) + (($124*12)|0)|0);
 $77 = $94;
 $126 = $77;
 $127 = HEAP32[$126>>2]|0;
 $76 = $127;
 $128 = $76;
 $82 = $94;
 $129 = $82;
 $81 = $129;
 $130 = $81;
 $80 = $130;
 $131 = $80;
 $132 = ((($131)) + 8|0);
 $79 = $132;
 $133 = $79;
 $78 = $133;
 $134 = $78;
 $135 = HEAP32[$134>>2]|0;
 $136 = HEAP32[$130>>2]|0;
 $137 = $135;
 $138 = $136;
 $139 = (($137) - ($138))|0;
 $140 = (($139|0) / 12)&-1;
 $141 = (($128) + (($140*12)|0)|0);
 $83 = $94;
 $84 = $97;
 $85 = $113;
 $86 = $125;
 $87 = $141;
 $4 = $93;
 $142 = $4;
 $143 = ((($142)) + 8|0);
 $3 = $143;
 $144 = $3;
 $2 = $144;
 $145 = $2;
 $146 = HEAP32[$93>>2]|0;
 $147 = ((($93)) + 4|0);
 $148 = HEAP32[$147>>2]|0;
 $149 = $92;
 $150 = ((($149)) + 4|0);
 $11 = $145;
 $12 = $146;
 $13 = $148;
 $14 = $150;
 while(1) {
  $151 = $13;
  $152 = $12;
  $153 = ($151|0)!=($152|0);
  if (!($153)) {
   break;
  }
  $154 = $11;
  $155 = $14;
  $156 = HEAP32[$155>>2]|0;
  $157 = ((($156)) + -12|0);
  $10 = $157;
  $158 = $10;
  $159 = $13;
  $160 = ((($159)) + -12|0);
  $13 = $160;
  $6 = $160;
  $161 = $6;
  $5 = $161;
  $162 = $5;
  $7 = $154;
  $8 = $158;
  $9 = $162;
  $163 = $8;
  $164 = $9;
  __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($163,$164);
  $165 = $14;
  $166 = HEAP32[$165>>2]|0;
  $167 = ((($166)) + -12|0);
  HEAP32[$165>>2] = $167;
 }
 $168 = $92;
 $169 = ((($168)) + 4|0);
 $18 = $93;
 $19 = $169;
 $170 = $18;
 $17 = $170;
 $171 = $17;
 $172 = HEAP32[$171>>2]|0;
 HEAP32[$20>>2] = $172;
 $173 = $19;
 $15 = $173;
 $174 = $15;
 $175 = HEAP32[$174>>2]|0;
 $176 = $18;
 HEAP32[$176>>2] = $175;
 $16 = $20;
 $177 = $16;
 $178 = HEAP32[$177>>2]|0;
 $179 = $19;
 HEAP32[$179>>2] = $178;
 $180 = ((($93)) + 4|0);
 $181 = $92;
 $182 = ((($181)) + 8|0);
 $24 = $180;
 $25 = $182;
 $183 = $24;
 $23 = $183;
 $184 = $23;
 $185 = HEAP32[$184>>2]|0;
 HEAP32[$26>>2] = $185;
 $186 = $25;
 $21 = $186;
 $187 = $21;
 $188 = HEAP32[$187>>2]|0;
 $189 = $24;
 HEAP32[$189>>2] = $188;
 $22 = $26;
 $190 = $22;
 $191 = HEAP32[$190>>2]|0;
 $192 = $25;
 HEAP32[$192>>2] = $191;
 $29 = $93;
 $193 = $29;
 $194 = ((($193)) + 8|0);
 $28 = $194;
 $195 = $28;
 $27 = $195;
 $196 = $27;
 $197 = $92;
 $32 = $197;
 $198 = $32;
 $199 = ((($198)) + 12|0);
 $31 = $199;
 $200 = $31;
 $30 = $200;
 $201 = $30;
 $36 = $196;
 $37 = $201;
 $202 = $36;
 $35 = $202;
 $203 = $35;
 $204 = HEAP32[$203>>2]|0;
 HEAP32[$38>>2] = $204;
 $205 = $37;
 $33 = $205;
 $206 = $33;
 $207 = HEAP32[$206>>2]|0;
 $208 = $36;
 HEAP32[$208>>2] = $207;
 $34 = $38;
 $209 = $34;
 $210 = HEAP32[$209>>2]|0;
 $211 = $37;
 HEAP32[$211>>2] = $210;
 $212 = $92;
 $213 = ((($212)) + 4|0);
 $214 = HEAP32[$213>>2]|0;
 $215 = $92;
 HEAP32[$215>>2] = $214;
 $39 = $93;
 $216 = $39;
 $217 = ((($216)) + 4|0);
 $218 = HEAP32[$217>>2]|0;
 $219 = HEAP32[$216>>2]|0;
 $220 = $218;
 $221 = $219;
 $222 = (($220) - ($221))|0;
 $223 = (($222|0) / 12)&-1;
 $63 = $93;
 $64 = $223;
 $224 = $63;
 $62 = $224;
 $225 = $62;
 $226 = HEAP32[$225>>2]|0;
 $61 = $226;
 $227 = $61;
 $41 = $224;
 $228 = $41;
 $229 = HEAP32[$228>>2]|0;
 $40 = $229;
 $230 = $40;
 $46 = $224;
 $231 = $46;
 $45 = $231;
 $232 = $45;
 $44 = $232;
 $233 = $44;
 $234 = ((($233)) + 8|0);
 $43 = $234;
 $235 = $43;
 $42 = $235;
 $236 = $42;
 $237 = HEAP32[$236>>2]|0;
 $238 = HEAP32[$232>>2]|0;
 $239 = $237;
 $240 = $238;
 $241 = (($239) - ($240))|0;
 $242 = (($241|0) / 12)&-1;
 $243 = (($230) + (($242*12)|0)|0);
 $48 = $224;
 $244 = $48;
 $245 = HEAP32[$244>>2]|0;
 $47 = $245;
 $246 = $47;
 $53 = $224;
 $247 = $53;
 $52 = $247;
 $248 = $52;
 $51 = $248;
 $249 = $51;
 $250 = ((($249)) + 8|0);
 $50 = $250;
 $251 = $50;
 $49 = $251;
 $252 = $49;
 $253 = HEAP32[$252>>2]|0;
 $254 = HEAP32[$248>>2]|0;
 $255 = $253;
 $256 = $254;
 $257 = (($255) - ($256))|0;
 $258 = (($257|0) / 12)&-1;
 $259 = (($246) + (($258*12)|0)|0);
 $55 = $224;
 $260 = $55;
 $261 = HEAP32[$260>>2]|0;
 $54 = $261;
 $262 = $54;
 $263 = $64;
 $264 = (($262) + (($263*12)|0)|0);
 $56 = $224;
 $57 = $227;
 $58 = $243;
 $59 = $259;
 $60 = $264;
 $65 = $93;
 STACKTOP = sp;return;
}
function __ZNSt3__214__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $18 = sp + 8|0;
 $21 = sp + 133|0;
 $29 = sp;
 $32 = sp + 132|0;
 $34 = $0;
 $35 = $34;
 $33 = $35;
 $36 = $33;
 $37 = ((($36)) + 4|0);
 $38 = HEAP32[$37>>2]|0;
 $30 = $36;
 $31 = $38;
 $39 = $30;
 $40 = $31;
 ;HEAP8[$29>>0]=HEAP8[$32>>0]|0;
 $25 = $39;
 $26 = $40;
 $41 = $25;
 while(1) {
  $42 = $26;
  $43 = ((($41)) + 8|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($42|0)!=($44|0);
  if (!($45)) {
   break;
  }
  $24 = $41;
  $46 = $24;
  $47 = ((($46)) + 12|0);
  $23 = $47;
  $48 = $23;
  $22 = $48;
  $49 = $22;
  $50 = ((($49)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = ((($41)) + 8|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = ((($53)) + -12|0);
  HEAP32[$52>>2] = $54;
  $15 = $54;
  $55 = $15;
  $19 = $51;
  $20 = $55;
  $56 = $19;
  $57 = $20;
  ;HEAP8[$18>>0]=HEAP8[$21>>0]|0;
  $16 = $56;
  $17 = $57;
  $58 = $17;
  __THREW__ = 0;
  invoke_vi(37,($58|0));
  $59 = __THREW__; __THREW__ = 0;
  $60 = $59&1;
  if ($60) {
   label = 4;
   break;
  }
 }
 if ((label|0) == 4) {
  $61 = ___cxa_find_matching_catch_2()|0;
  $62 = tempRet0;
  $27 = $61;
  $28 = $62;
  $63 = $27;
  ___cxa_call_unexpected(($63|0));
  // unreachable;
 }
 $64 = HEAP32[$35>>2]|0;
 $65 = ($64|0)!=(0|0);
 if (!($65)) {
  STACKTOP = sp;return;
 }
 $14 = $35;
 $66 = $14;
 $67 = ((($66)) + 12|0);
 $13 = $67;
 $68 = $13;
 $12 = $68;
 $69 = $12;
 $70 = ((($69)) + 4|0);
 $71 = HEAP32[$70>>2]|0;
 $72 = HEAP32[$35>>2]|0;
 $11 = $35;
 $73 = $11;
 $10 = $73;
 $74 = $10;
 $75 = ((($74)) + 12|0);
 $9 = $75;
 $76 = $9;
 $8 = $76;
 $77 = $8;
 $78 = HEAP32[$77>>2]|0;
 $79 = HEAP32[$73>>2]|0;
 $80 = $78;
 $81 = $79;
 $82 = (($80) - ($81))|0;
 $83 = (($82|0) / 12)&-1;
 $5 = $71;
 $6 = $72;
 $7 = $83;
 $84 = $5;
 $85 = $6;
 $86 = $7;
 $2 = $84;
 $3 = $85;
 $4 = $86;
 $87 = $3;
 $1 = $87;
 $88 = $1;
 __ZdlPv($88);
 STACKTOP = sp;return;
}
function __ZNKSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8max_sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $3 = sp + 8|0;
 $5 = sp + 77|0;
 $11 = sp;
 $14 = sp + 76|0;
 $19 = sp + 16|0;
 $20 = sp + 12|0;
 $18 = $0;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $4 = $25;
 $26 = $4;
 ;HEAP8[$3>>0]=HEAP8[$5>>0]|0;
 $2 = $26;
 $27 = $2;
 $1 = $27;
 HEAP32[$19>>2] = 357913941;
 HEAP32[$20>>2] = 2147483647;
 $12 = $19;
 $13 = $20;
 $28 = $12;
 $29 = $13;
 ;HEAP8[$11>>0]=HEAP8[$14>>0]|0;
 $9 = $28;
 $10 = $29;
 $30 = $10;
 $31 = $9;
 $6 = $11;
 $7 = $30;
 $8 = $31;
 $32 = $7;
 $33 = HEAP32[$32>>2]|0;
 $34 = $8;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $10;
 $38 = $9;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $5 = sp + 152|0;
 $9 = sp + 136|0;
 $13 = sp + 120|0;
 $19 = sp + 96|0;
 $20 = sp + 16|0;
 $23 = sp + 84|0;
 $24 = sp + 171|0;
 $25 = sp + 8|0;
 $29 = sp + 68|0;
 $30 = sp + 64|0;
 $31 = sp + 60|0;
 $32 = sp + 170|0;
 $34 = sp;
 $36 = sp + 169|0;
 $42 = sp + 168|0;
 $40 = $0;
 $41 = $1;
 $46 = $40;
 $47 = $41;
 $39 = $47;
 $48 = $39;
 $49 = ((($48)) + 8|0);
 $38 = $49;
 $50 = $38;
 $37 = $50;
 $51 = $37;
 $35 = $51;
 $52 = $35;
 ;HEAP8[$34>>0]=HEAP8[$36>>0]|0;
 $33 = $52;
 $27 = $46;
 $28 = $42;
 $53 = $27;
 $26 = $53;
 $3 = $5;
 $4 = -1;
 $54 = $3;
 HEAP32[$54>>2] = 0;
 $55 = HEAP32[$5>>2]|0;
 HEAP32[$29>>2] = $55;
 $6 = $29;
 HEAP32[$53>>2] = 0;
 $56 = ((($53)) + 4|0);
 $7 = $9;
 $8 = -1;
 $57 = $7;
 HEAP32[$57>>2] = 0;
 $58 = HEAP32[$9>>2]|0;
 HEAP32[$30>>2] = $58;
 $10 = $30;
 HEAP32[$56>>2] = 0;
 $59 = ((($53)) + 8|0);
 $11 = $13;
 $12 = -1;
 $60 = $11;
 HEAP32[$60>>2] = 0;
 $61 = HEAP32[$13>>2]|0;
 HEAP32[$31>>2] = $61;
 $14 = $31;
 ;HEAP8[$25>>0]=HEAP8[$32>>0]|0;
 $22 = $59;
 HEAP32[$23>>2] = 0;
 $62 = $22;
 $21 = $23;
 $63 = $21;
 $64 = HEAP32[$63>>2]|0;
 $15 = $25;
 ;HEAP8[$20>>0]=HEAP8[$24>>0]|0;
 $18 = $62;
 HEAP32[$19>>2] = $64;
 $65 = $18;
 $17 = $20;
 $16 = $19;
 $66 = $16;
 $67 = HEAP32[$66>>2]|0;
 HEAP32[$65>>2] = $67;
 $68 = $41;
 $2 = $68;
 $69 = $2;
 $70 = ((($69)) + 4|0);
 $71 = HEAP32[$70>>2]|0;
 $72 = HEAP32[$69>>2]|0;
 $73 = $71;
 $74 = $72;
 $75 = (($73) - ($74))|0;
 $76 = (($75|0) / 4)&-1;
 $43 = $76;
 $77 = $43;
 $78 = ($77>>>0)>(0);
 if (!($78)) {
  STACKTOP = sp;return;
 }
 $79 = $43;
 __THREW__ = 0;
 invoke_vii(94,($46|0),($79|0));
 $80 = __THREW__; __THREW__ = 0;
 $81 = $80&1;
 if (!($81)) {
  $82 = $41;
  $83 = HEAP32[$82>>2]|0;
  $84 = $41;
  $85 = ((($84)) + 4|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = $43;
  __THREW__ = 0;
  invoke_viiii(631,($46|0),($83|0),($86|0),($87|0));
  $88 = __THREW__; __THREW__ = 0;
  $89 = $88&1;
  if (!($89)) {
   STACKTOP = sp;return;
  }
 }
 $90 = ___cxa_find_matching_catch_2()|0;
 $91 = tempRet0;
 $44 = $90;
 $45 = $91;
 __THREW__ = 0;
 invoke_vi(95,($46|0));
 $92 = __THREW__; __THREW__ = 0;
 $93 = $92&1;
 if ($93) {
  $96 = ___cxa_find_matching_catch_3(0|0)|0;
  $97 = tempRet0;
  ___clang_call_terminate($96);
  // unreachable;
 } else {
  $94 = $44;
  $95 = $45;
  ___resumeException($94|0);
  // unreachable;
 }
}
function __ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8allocateEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $45 = $0;
 $46 = $1;
 $47 = $45;
 $48 = $46;
 $49 = (__ZNKSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8max_sizeEv($47)|0);
 $50 = ($48>>>0)>($49>>>0);
 if ($50) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($47);
  // unreachable;
 }
 $44 = $47;
 $51 = $44;
 $52 = ((($51)) + 8|0);
 $43 = $52;
 $53 = $43;
 $42 = $53;
 $54 = $42;
 $55 = $46;
 $12 = $54;
 $13 = $55;
 $56 = $12;
 $57 = $13;
 $9 = $56;
 $10 = $57;
 $11 = 0;
 $58 = $9;
 $59 = $10;
 $8 = $58;
 $60 = ($59>>>0)>(357913941);
 if (!($60)) {
  $71 = $10;
  $72 = ($71*12)|0;
  $7 = $72;
  $73 = $7;
  $74 = (__Znwj($73)|0);
  $75 = ((($47)) + 4|0);
  HEAP32[$75>>2] = $74;
  HEAP32[$47>>2] = $74;
  $76 = HEAP32[$47>>2]|0;
  $77 = $46;
  $78 = (($76) + (($77*12)|0)|0);
  $16 = $47;
  $79 = $16;
  $80 = ((($79)) + 8|0);
  $15 = $80;
  $81 = $15;
  $14 = $81;
  $82 = $14;
  HEAP32[$82>>2] = $78;
  $40 = $47;
  $41 = 0;
  $83 = $40;
  $39 = $83;
  $84 = $39;
  $85 = HEAP32[$84>>2]|0;
  $38 = $85;
  $86 = $38;
  $18 = $83;
  $87 = $18;
  $88 = HEAP32[$87>>2]|0;
  $17 = $88;
  $89 = $17;
  $23 = $83;
  $90 = $23;
  $22 = $90;
  $91 = $22;
  $21 = $91;
  $92 = $21;
  $93 = ((($92)) + 8|0);
  $20 = $93;
  $94 = $20;
  $19 = $94;
  $95 = $19;
  $96 = HEAP32[$95>>2]|0;
  $97 = HEAP32[$91>>2]|0;
  $98 = $96;
  $99 = $97;
  $100 = (($98) - ($99))|0;
  $101 = (($100|0) / 12)&-1;
  $102 = (($89) + (($101*12)|0)|0);
  $25 = $83;
  $103 = $25;
  $104 = HEAP32[$103>>2]|0;
  $24 = $104;
  $105 = $24;
  $30 = $83;
  $106 = $30;
  $29 = $106;
  $107 = $29;
  $28 = $107;
  $108 = $28;
  $109 = ((($108)) + 8|0);
  $27 = $109;
  $110 = $27;
  $26 = $110;
  $111 = $26;
  $112 = HEAP32[$111>>2]|0;
  $113 = HEAP32[$107>>2]|0;
  $114 = $112;
  $115 = $113;
  $116 = (($114) - ($115))|0;
  $117 = (($116|0) / 12)&-1;
  $118 = (($105) + (($117*12)|0)|0);
  $32 = $83;
  $119 = $32;
  $120 = HEAP32[$119>>2]|0;
  $31 = $120;
  $121 = $31;
  $122 = $41;
  $123 = (($121) + (($122*12)|0)|0);
  $33 = $83;
  $34 = $86;
  $35 = $102;
  $36 = $118;
  $37 = $123;
  STACKTOP = sp;return;
 }
 $4 = 1110;
 $61 = (___cxa_allocate_exception(8)|0);
 $62 = $4;
 $2 = $61;
 $3 = $62;
 $63 = $2;
 $64 = $3;
 __THREW__ = 0;
 invoke_vii(114,($63|0),($64|0));
 $65 = __THREW__; __THREW__ = 0;
 $66 = $65&1;
 if ($66) {
  $67 = ___cxa_find_matching_catch_2()|0;
  $68 = tempRet0;
  $5 = $67;
  $6 = $68;
  ___cxa_free_exception(($61|0));
  $69 = $5;
  $70 = $6;
  ___resumeException($69|0);
  // unreachable;
 } else {
  HEAP32[$63>>2] = (920);
  ___cxa_throw(($61|0),(104|0),(21|0));
  // unreachable;
 }
}
function __ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_j($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $24 = sp + 80|0;
 $19 = $0;
 $20 = $1;
 $21 = $2;
 $22 = $3;
 $25 = $19;
 $18 = $25;
 $26 = $18;
 $27 = ((($26)) + 8|0);
 $17 = $27;
 $28 = $17;
 $16 = $28;
 $29 = $16;
 $23 = $29;
 $30 = $22;
 $4 = $24;
 $5 = $25;
 $6 = $30;
 $31 = $23;
 $32 = $20;
 $33 = $21;
 $34 = ((($25)) + 4|0);
 $11 = $31;
 $12 = $32;
 $13 = $33;
 $14 = $34;
 while(1) {
  $35 = $12;
  $36 = $13;
  $37 = ($35|0)!=($36|0);
  if (!($37)) {
   break;
  }
  $38 = $11;
  $39 = $14;
  $40 = HEAP32[$39>>2]|0;
  $10 = $40;
  $41 = $10;
  $42 = $12;
  $7 = $38;
  $8 = $41;
  $9 = $42;
  $43 = $8;
  $44 = $9;
  __ZNSt3__26vectorIiNS_9allocatorIiEEEC2ERKS3_($43,$44);
  $45 = $12;
  $46 = ((($45)) + 12|0);
  $12 = $46;
  $47 = $14;
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($48)) + 12|0);
  HEAP32[$47>>2] = $49;
 }
 $15 = $24;
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6_init1IiEEviPNS_8internal9enable_ifIXaaooneLNS_9DenseBaseIS2_EUt_En1ELi1Entsr8internal14is_convertibleIT_dEE5valueoontLNS5_7is_sameINS_9MatrixXprENS_8ArrayXprEEUt_E0EeqLS9_n1EL_ZNS_L7DynamicEEESA_E4typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp + 12|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 HEAP8[$6>>0] = 1;
 __ZN5Eigen8internal22ignore_unused_variableIbEEvRKT_($6);
 $8 = $4;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEi($7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EEC2ERKS2_RKS4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen11ProductImplINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS_5DenseEEC2Ev($6);
 $7 = $4;
 HEAP32[$6>>2] = $7;
 $8 = ((($6)) + 4|0);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($10)|0);
 $12 = $5;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = ($11|0)==($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2150|0),(2290|0),97,(2323|0));
  // unreachable;
 }
}
function __ZN5Eigen11ProductImplINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal18dense_product_baseINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ELi7EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18dense_product_baseINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ELi7EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4_setINS_7ProductINS_12SparseMatrixIdLi0EiEES2_Li0EEEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_12SparseMatrixIdLi0EiEES3_Li0EEEEEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_12SparseMatrixIdLi0EiEES3_Li0EEEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_12SparseMatrixIdLi0EiEES3_Li0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_12SparseMatrixIdLi0EiEES3_Li0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp + 8|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $11 = $5;
 __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEC2INS_7ProductINS_12SparseMatrixIdLi0EiEES1_Li0EEEEERKT_($8,$11);
 $12 = $4;
 $13 = $6;
 __THREW__ = 0;
 invoke_viii(632,($12|0),($8|0),($13|0));
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 if (!($15)) {
  __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EED2Ev($8);
  STACKTOP = sp;return;
 }
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $9 = $16;
 $10 = $17;
 __THREW__ = 0;
 invoke_vi(44,($8|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $9;
  $21 = $10;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEC2INS_7ProductINS_12SparseMatrixIdLi0EiEES1_Li0EEEEERKT_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2Ev($6);
 __THREW__ = 0;
 invoke_v(99);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  $9 = $3;
  __THREW__ = 0;
  invoke_vii(633,($6|0),($9|0));
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if (!($11)) {
   STACKTOP = sp;return;
  }
 }
 $12 = ___cxa_find_matching_catch_2()|0;
 $13 = tempRet0;
 $4 = $12;
 $5 = $13;
 __THREW__ = 0;
 invoke_vi(101,($6|0));
 $14 = __THREW__; __THREW__ = 0;
 $15 = $14&1;
 if ($15) {
  $18 = ___cxa_find_matching_catch_3(0|0)|0;
  $19 = tempRet0;
  ___clang_call_terminate($18);
  // unreachable;
 } else {
  $16 = $4;
  $17 = $5;
  ___resumeException($16|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS3_RKS5_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6_init1INS_7ProductINS_12SparseMatrixIdLi0EiEES2_Li0EEES8_EEvRKNS_9DenseBaseIT0_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 (__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE12_set_noaliasINS_7ProductINS_12SparseMatrixIdLi0EiEES2_Li0EEEEERS2_RKNS_9DenseBaseIT_EE($4,$5)|0);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE12_set_noaliasINS_7ProductINS_12SparseMatrixIdLi0EiEES2_Li0EEEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EEEE7derivedEv($7)|0);
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_12SparseMatrixIdLi0EiEES3_Li0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($6,$8,$4);
 $9 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($5)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_12SparseMatrixIdLi0EiEES3_Li0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_12SparseMatrixIdLi0EiEES3_Li0EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS7_RKS9_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_12SparseMatrixIdLi0EiEES3_Li0EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS7_RKS9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = $4;
 $25 = (__ZNK5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE3lhsEv($24)|0);
 $26 = $4;
 $27 = (__ZNK5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE3rhsEv($26)|0);
 __ZN5Eigen8internal25generic_product_impl_baseINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS0_20generic_product_implIS3_S5_NS_11SparseShapeENS_10DenseShapeELi7EEEE6evalToIS5_EEvRT_RKS3_RKS5_($23,$25,$27);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal25generic_product_impl_baseINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS0_20generic_product_implIS3_S5_NS_11SparseShapeENS_10DenseShapeELi7EEEE6evalToIS5_EEvRT_RKS3_RKS5_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 (__ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7setZeroEv($7)|0);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 HEAPF64[$6>>3] = 1.0;
 __ZN5Eigen8internal25generic_product_impl_baseINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS0_20generic_product_implIS3_S5_NS_11SparseShapeENS_10DenseShapeELi7EEEE13scaleAndAddToIS5_EEvRT_RKS3_RKS5_RKd($8,$9,$10,$6);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE3lhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7setZeroEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1;
 HEAPF64[$2>>3] = 0.0;
 $4 = (__ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE11setConstantERKd($3,$2)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal25generic_product_impl_baseINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS0_20generic_product_implIS3_S5_NS_11SparseShapeENS_10DenseShapeELi7EEEE13scaleAndAddToIS5_EEvRT_RKS3_RKS5_RKd($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen8internal20generic_product_implINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_11SparseShapeENS_10DenseShapeELi7EE13scaleAndAddToIS5_EEvRT_RKS3_RKS5_RKd($8,$9,$10,$11);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE11setConstantERKd($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($5)|0);
 $7 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($5)|0);
 $8 = $3;
 __ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE8ConstantEiiRKd($4,$6,$7,$8);
 $9 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($5)|0);
 $10 = (__ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEaSINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEES1_EEEERS1_RKNS_9DenseBaseIT_EE($9,$4)|0);
 STACKTOP = sp;return ($10|0);
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEaSINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEES1_EEEERS1_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4_setINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEES2_EEEERS2_RKNS_9DenseBaseIT_EE($4,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4_setINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEES2_EEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EEEEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS7_RKS9_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS7_RKS9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EEEEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EEEEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EELb0EE3runERKS3_RKS7_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp;
 $9 = sp + 32|0;
 $10 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS7_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(634,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(432,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(635,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(636,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(637,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(419,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(419,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(263,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EELb0EE3runERKS3_RKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($23)|0);
 $25 = $6;
 $26 = ($24|0)==($25|0);
 if (!($26)) {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
 $27 = $3;
 $28 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($27)|0);
 $29 = $7;
 $30 = ($28|0)==($29|0);
 if ($30) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
}
function __ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES4_EEEENS0_9assign_opIddEELi0EEC2ERS5_RKSA_RKSC_RS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS3_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES5_EEEENS0_9assign_opIddEELi0EEELi1ELi0EE3runERSE_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES4_EEEENS0_9assign_opIddEELi0EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES4_EEEENS0_9assign_opIddEELi0EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES4_EEEENS0_9assign_opIddEELi0EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES4_EEEENS0_9assign_opIddEELi0EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$5>>2]|0;
 $9 = $3;
 $10 = (__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE8coeffRefEi($8,$9)|0);
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $3;
 $14 = (+__ZNK5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE5coeffIiEEdT_($12,$13));
 HEAPF64[$4>>3] = $14;
 __ZNK5Eigen8internal9assign_opIddE11assignCoeffERdRKd($7,$10,$4);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal20generic_product_implINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_11SparseShapeENS_10DenseShapeELi7EE13scaleAndAddToIS5_EEvRT_RKS3_RKS5_RKd($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $10 = $5;
 $8 = $10;
 $11 = $6;
 $9 = $11;
 $12 = $8;
 $13 = $9;
 $14 = $4;
 $15 = $7;
 __ZN5Eigen8internal25sparse_time_dense_productINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES5_dEEvRKT_RKT0_RT1_RKT2_($12,$13,$14,$15);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal25sparse_time_dense_productINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES5_dEEvRKT_RKT0_RT1_RKT2_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen8internal30sparse_time_dense_product_implINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES5_dLi0ELb1EE3runERKS3_RKS5_RS5_RKd($8,$9,$10,$11);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal30sparse_time_dense_product_implINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES5_dLi0ELb1EE3runERKS3_RKS5_RS5_RKd($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $8 = sp + 8|0;
 $14 = sp + 24|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $15 = $4;
 __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEEC2ERKS3_($8,$15);
 $9 = 0;
 L1: while(1) {
  $16 = $9;
  $17 = $5;
  __THREW__ = 0;
  $18 = (invoke_ii(638,($17|0))|0);
  $19 = __THREW__; __THREW__ = 0;
  $20 = $19&1;
  if ($20) {
   break;
  }
  $21 = ($16|0)<($18|0);
  if (!($21)) {
   label = 19;
   break;
  }
  $12 = 0;
  while(1) {
   $22 = $12;
   $23 = $4;
   __THREW__ = 0;
   $24 = (invoke_ii(459,($23|0))|0);
   $25 = __THREW__; __THREW__ = 0;
   $26 = $25&1;
   if ($26) {
    break L1;
   }
   $27 = ($22|0)<($24|0);
   if (!($27)) {
    break;
   }
   $28 = $7;
   $29 = +HEAPF64[$28>>3];
   $30 = $5;
   $31 = $12;
   $32 = $9;
   __THREW__ = 0;
   $33 = (invoke_iiii(639,($30|0),($31|0),($32|0))|0);
   $34 = __THREW__; __THREW__ = 0;
   $35 = $34&1;
   if ($35) {
    break L1;
   }
   $36 = +HEAPF64[$33>>3];
   $37 = $29 * $36;
   $13 = $37;
   __THREW__ = 0;
   $38 = (invoke_ii(508,($8|0))|0);
   $39 = __THREW__; __THREW__ = 0;
   $40 = $39&1;
   if ($40) {
    break L1;
   }
   $41 = $12;
   __THREW__ = 0;
   invoke_viii(509,($14|0),($38|0),($41|0));
   $42 = __THREW__; __THREW__ = 0;
   $43 = $42&1;
   if ($43) {
    break L1;
   }
   while(1) {
    __THREW__ = 0;
    $44 = (invoke_ii(510,($14|0))|0);
    $45 = __THREW__; __THREW__ = 0;
    $46 = $45&1;
    if ($46) {
     break L1;
    }
    if (!($44)) {
     break;
    }
    __THREW__ = 0;
    $47 = (invoke_ii(511,($14|0))|0);
    $48 = __THREW__; __THREW__ = 0;
    $49 = $48&1;
    if ($49) {
     break L1;
    }
    $50 = +HEAPF64[$47>>3];
    $51 = $13;
    $52 = $50 * $51;
    $53 = $6;
    __THREW__ = 0;
    $54 = (invoke_ii(512,($14|0))|0);
    $55 = __THREW__; __THREW__ = 0;
    $56 = $55&1;
    if ($56) {
     break L1;
    }
    $57 = $9;
    __THREW__ = 0;
    $58 = (invoke_iiii(640,($53|0),($54|0),($57|0))|0);
    $59 = __THREW__; __THREW__ = 0;
    $60 = $59&1;
    if ($60) {
     break L1;
    }
    $61 = +HEAPF64[$58>>3];
    $62 = $61 + $52;
    HEAPF64[$58>>3] = $62;
    __THREW__ = 0;
    (invoke_ii(514,($14|0))|0);
    $63 = __THREW__; __THREW__ = 0;
    $64 = $63&1;
    if ($64) {
     break L1;
    }
   }
   $69 = $12;
   $70 = (($69) + 1)|0;
   $12 = $70;
  }
  $71 = $9;
  $72 = (($71) + 1)|0;
  $9 = $72;
 }
 if ((label|0) == 19) {
  __ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEED2Ev($8);
  STACKTOP = sp;return;
 }
 $65 = ___cxa_find_matching_catch_2()|0;
 $66 = tempRet0;
 $10 = $65;
 $11 = $66;
 __THREW__ = 0;
 invoke_vi(517,($8|0));
 $67 = __THREW__; __THREW__ = 0;
 $68 = $67&1;
 if ($68) {
  $75 = ___cxa_find_matching_catch_3(0|0)|0;
  $76 = tempRet0;
  ___clang_call_terminate($75);
  // unreachable;
 } else {
  $73 = $10;
  $74 = $11;
  ___resumeException($73|0);
  // unreachable;
 }
}
function __ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE5coeffEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE4dataEv($6)|0);
 $8 = $4;
 $9 = $5;
 $10 = (__ZNK5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE4rowsEv($6)|0);
 $11 = Math_imul($9, $10)|0;
 $12 = (($8) + ($11))|0;
 $13 = (($7) + ($12<<3)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE8coeffRefEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE4dataEv($6)|0);
 $8 = $4;
 $9 = $5;
 $10 = (__ZNK5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE4rowsEv($6)|0);
 $11 = Math_imul($9, $10)|0;
 $12 = (($8) + ($11))|0;
 $13 = (($7) + ($12<<3)|0);
 STACKTOP = sp;return ($13|0);
}
function __ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS3_RKS5_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_EEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_EEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_Lb0EE3runERKS3_S6_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 32|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(641,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(432,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(635,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(642,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(643,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(419,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(419,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(419,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_Lb0EE3runERKS3_S6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_ddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($23)|0);
 $25 = $6;
 $26 = ($24|0)==($25|0);
 if (!($26)) {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
 $27 = $3;
 $28 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($27)|0);
 $29 = $7;
 $30 = ($28|0)==($29|0);
 if ($30) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEES5_NS0_9assign_opIddEELi0EEC2ERS5_RKS5_RKS7_RS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEES6_NS0_9assign_opIddEELi0EEELi1ELi0EE3runERS9_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEES5_NS0_9assign_opIddEELi0EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEES5_NS0_9assign_opIddEELi0EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEES5_NS0_9assign_opIddEELi0EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEES5_NS0_9assign_opIddEELi0EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$4>>2]|0;
 $8 = $3;
 $9 = (__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE8coeffRefEi($7,$8)|0);
 $10 = ((($4)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = (__ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE5coeffEi($11,$12)|0);
 __ZNK5Eigen8internal9assign_opIddE11assignCoeffERdRKd($6,$9,$13);
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(400|0);
 $8 = sp + 24|0;
 $11 = sp + 384|0;
 $55 = sp + 16|0;
 $58 = sp + 383|0;
 $65 = sp + 8|0;
 $68 = sp + 382|0;
 $76 = sp + 108|0;
 $79 = sp + 96|0;
 $89 = sp;
 $92 = sp + 381|0;
 $97 = sp + 32|0;
 $93 = $0;
 $94 = $1;
 $95 = $2;
 $100 = $93;
 $101 = $94;
 $102 = $95;
 $90 = $101;
 $91 = $102;
 $103 = $90;
 $104 = $91;
 ;HEAP8[$89>>0]=HEAP8[$92>>0]|0;
 $87 = $103;
 $88 = $104;
 $105 = $88;
 $106 = $87;
 $107 = $105;
 $108 = $106;
 $109 = (($107) - ($108))|0;
 $110 = (($109|0) / 8)&-1;
 $96 = $110;
 $111 = $96;
 $85 = $100;
 $112 = $85;
 $84 = $112;
 $113 = $84;
 $83 = $113;
 $114 = $83;
 $115 = ((($114)) + 8|0);
 $82 = $115;
 $116 = $82;
 $81 = $116;
 $117 = $81;
 $118 = HEAP32[$117>>2]|0;
 $119 = HEAP32[$113>>2]|0;
 $120 = $118;
 $121 = $119;
 $122 = (($120) - ($121))|0;
 $123 = (($122|0) / 8)&-1;
 $124 = ($111>>>0)<=($123>>>0);
 if (!($124)) {
  __ZNSt3__26vectorIdNS_9allocatorIdEEE10deallocateEv($100);
  $254 = $96;
  $75 = $100;
  HEAP32[$76>>2] = $254;
  $255 = $75;
  $256 = (__ZNKSt3__26vectorIdNS_9allocatorIdEEE8max_sizeEv($255)|0);
  $77 = $256;
  $257 = HEAP32[$76>>2]|0;
  $258 = $77;
  $259 = ($257>>>0)>($258>>>0);
  if ($259) {
   __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($255);
   // unreachable;
  }
  $73 = $255;
  $260 = $73;
  $72 = $260;
  $261 = $72;
  $71 = $261;
  $262 = $71;
  $263 = ((($262)) + 8|0);
  $70 = $263;
  $264 = $70;
  $69 = $264;
  $265 = $69;
  $266 = HEAP32[$265>>2]|0;
  $267 = HEAP32[$261>>2]|0;
  $268 = $266;
  $269 = $267;
  $270 = (($268) - ($269))|0;
  $271 = (($270|0) / 8)&-1;
  $78 = $271;
  $272 = $78;
  $273 = $77;
  $274 = (($273>>>0) / 2)&-1;
  $275 = ($272>>>0)>=($274>>>0);
  if ($275) {
   $276 = $77;
   $74 = $276;
  } else {
   $277 = $78;
   $278 = $277<<1;
   HEAP32[$79>>2] = $278;
   $66 = $79;
   $67 = $76;
   $279 = $66;
   $280 = $67;
   ;HEAP8[$65>>0]=HEAP8[$68>>0]|0;
   $63 = $279;
   $64 = $280;
   $281 = $63;
   $282 = $64;
   $60 = $65;
   $61 = $281;
   $62 = $282;
   $283 = $61;
   $284 = HEAP32[$283>>2]|0;
   $285 = $62;
   $286 = HEAP32[$285>>2]|0;
   $287 = ($284>>>0)<($286>>>0);
   $288 = $64;
   $289 = $63;
   $290 = $287 ? $288 : $289;
   $291 = HEAP32[$290>>2]|0;
   $74 = $291;
  }
  $292 = $74;
  __ZNSt3__26vectorIdNS_9allocatorIdEEE8allocateEj($100,$292);
  $293 = $94;
  $294 = $95;
  $295 = $96;
  __ZNSt3__26vectorIdNS_9allocatorIdEEE18__construct_at_endIPdEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_j($100,$293,$294,$295);
  $86 = $100;
  STACKTOP = sp;return;
 }
 $125 = $95;
 HEAP32[$97>>2] = $125;
 $98 = 0;
 $126 = $96;
 $80 = $100;
 $127 = $80;
 $128 = ((($127)) + 4|0);
 $129 = HEAP32[$128>>2]|0;
 $130 = HEAP32[$127>>2]|0;
 $131 = $129;
 $132 = $130;
 $133 = (($131) - ($132))|0;
 $134 = (($133|0) / 8)&-1;
 $135 = ($126>>>0)>($134>>>0);
 if ($135) {
  $98 = 1;
  $136 = $94;
  HEAP32[$97>>2] = $136;
  $59 = $100;
  $137 = $59;
  $138 = ((($137)) + 4|0);
  $139 = HEAP32[$138>>2]|0;
  $140 = HEAP32[$137>>2]|0;
  $141 = $139;
  $142 = $140;
  $143 = (($141) - ($142))|0;
  $144 = (($143|0) / 8)&-1;
  $56 = $97;
  $57 = $144;
  $145 = $56;
  $146 = $57;
  ;HEAP8[$55>>0]=HEAP8[$58>>0]|0;
  $53 = $145;
  $54 = $146;
  $147 = $54;
  $148 = $53;
  $149 = HEAP32[$148>>2]|0;
  $150 = (($149) + ($147<<3)|0);
  HEAP32[$148>>2] = $150;
 }
 $151 = $94;
 $152 = HEAP32[$97>>2]|0;
 $153 = HEAP32[$100>>2]|0;
 $50 = $151;
 $51 = $152;
 $52 = $153;
 $154 = $50;
 $49 = $154;
 $155 = $49;
 $156 = $51;
 $43 = $156;
 $157 = $43;
 $158 = $52;
 $44 = $158;
 $159 = $44;
 $45 = $155;
 $46 = $157;
 $47 = $159;
 $160 = $46;
 $161 = $45;
 $162 = $160;
 $163 = $161;
 $164 = (($162) - ($163))|0;
 $165 = (($164|0) / 8)&-1;
 $48 = $165;
 $166 = $48;
 $167 = ($166>>>0)>(0);
 if ($167) {
  $168 = $47;
  $169 = $45;
  $170 = $48;
  $171 = $170<<3;
  _memmove(($168|0),($169|0),($171|0))|0;
 }
 $172 = $47;
 $173 = $48;
 $174 = (($172) + ($173<<3)|0);
 $99 = $174;
 $175 = $98;
 $176 = $175&1;
 if ($176) {
  $177 = HEAP32[$97>>2]|0;
  $178 = $95;
  $179 = $96;
  $3 = $100;
  $180 = $3;
  $181 = ((($180)) + 4|0);
  $182 = HEAP32[$181>>2]|0;
  $183 = HEAP32[$180>>2]|0;
  $184 = $182;
  $185 = $183;
  $186 = (($184) - ($185))|0;
  $187 = (($186|0) / 8)&-1;
  $188 = (($179) - ($187))|0;
  __ZNSt3__26vectorIdNS_9allocatorIdEEE18__construct_at_endIPdEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_j($100,$177,$178,$188);
  $86 = $100;
  STACKTOP = sp;return;
 }
 $189 = $99;
 $40 = $100;
 $41 = $189;
 $190 = $40;
 $191 = $41;
 $38 = $190;
 $39 = $191;
 $4 = $190;
 $192 = $4;
 $193 = ((($192)) + 4|0);
 $194 = HEAP32[$193>>2]|0;
 $195 = HEAP32[$192>>2]|0;
 $196 = $194;
 $197 = $195;
 $198 = (($196) - ($197))|0;
 $199 = (($198|0) / 8)&-1;
 $42 = $199;
 $200 = $41;
 $15 = $190;
 $16 = $200;
 $201 = $15;
 while(1) {
  $202 = $16;
  $203 = ((($201)) + 4|0);
  $204 = HEAP32[$203>>2]|0;
  $205 = ($202|0)!=($204|0);
  if (!($205)) {
   break;
  }
  $14 = $201;
  $206 = $14;
  $207 = ((($206)) + 8|0);
  $13 = $207;
  $208 = $13;
  $12 = $208;
  $209 = $12;
  $210 = ((($201)) + 4|0);
  $211 = HEAP32[$210>>2]|0;
  $212 = ((($211)) + -8|0);
  HEAP32[$210>>2] = $212;
  $5 = $212;
  $213 = $5;
  $9 = $209;
  $10 = $213;
  $214 = $9;
  $215 = $10;
  ;HEAP8[$8>>0]=HEAP8[$11>>0]|0;
  $6 = $214;
  $7 = $215;
 }
 $216 = $42;
 $36 = $190;
 $37 = $216;
 $217 = $36;
 $35 = $217;
 $218 = $35;
 $219 = HEAP32[$218>>2]|0;
 $34 = $219;
 $220 = $34;
 $18 = $217;
 $221 = $18;
 $222 = HEAP32[$221>>2]|0;
 $17 = $222;
 $223 = $17;
 $23 = $217;
 $224 = $23;
 $22 = $224;
 $225 = $22;
 $21 = $225;
 $226 = $21;
 $227 = ((($226)) + 8|0);
 $20 = $227;
 $228 = $20;
 $19 = $228;
 $229 = $19;
 $230 = HEAP32[$229>>2]|0;
 $231 = HEAP32[$225>>2]|0;
 $232 = $230;
 $233 = $231;
 $234 = (($232) - ($233))|0;
 $235 = (($234|0) / 8)&-1;
 $236 = (($223) + ($235<<3)|0);
 $25 = $217;
 $237 = $25;
 $238 = HEAP32[$237>>2]|0;
 $24 = $238;
 $239 = $24;
 $240 = $37;
 $241 = (($239) + ($240<<3)|0);
 $27 = $217;
 $242 = $27;
 $243 = HEAP32[$242>>2]|0;
 $26 = $243;
 $244 = $26;
 $28 = $217;
 $245 = $28;
 $246 = ((($245)) + 4|0);
 $247 = HEAP32[$246>>2]|0;
 $248 = HEAP32[$245>>2]|0;
 $249 = $247;
 $250 = $248;
 $251 = (($249) - ($250))|0;
 $252 = (($251|0) / 8)&-1;
 $253 = (($244) + ($252<<3)|0);
 $29 = $217;
 $30 = $220;
 $31 = $236;
 $32 = $241;
 $33 = $253;
 $86 = $100;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIdNS_9allocatorIdEEE18__construct_at_endIPdEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_j($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $21 = sp + 68|0;
 $16 = $0;
 $17 = $1;
 $18 = $2;
 $19 = $3;
 $22 = $16;
 $15 = $22;
 $23 = $15;
 $24 = ((($23)) + 8|0);
 $14 = $24;
 $25 = $14;
 $13 = $25;
 $26 = $13;
 $20 = $26;
 $27 = $19;
 $4 = $21;
 $5 = $22;
 $6 = $27;
 $28 = $20;
 $29 = $17;
 $30 = $18;
 $31 = ((($22)) + 4|0);
 $7 = $28;
 $8 = $29;
 $9 = $30;
 $10 = $31;
 $32 = $9;
 $33 = $8;
 $34 = $32;
 $35 = $33;
 $36 = (($34) - ($35))|0;
 $37 = (($36|0) / 8)&-1;
 $11 = $37;
 $38 = $11;
 $39 = ($38|0)>(0);
 if (!($39)) {
  $12 = $21;
  STACKTOP = sp;return;
 }
 $40 = $10;
 $41 = HEAP32[$40>>2]|0;
 $42 = $8;
 $43 = $11;
 $44 = $43<<3;
 _memcpy(($41|0),($42|0),($44|0))|0;
 $45 = $11;
 $46 = $10;
 $47 = HEAP32[$46>>2]|0;
 $48 = (($47) + ($45<<3)|0);
 HEAP32[$46>>2] = $48;
 $12 = $21;
 STACKTOP = sp;return;
}
function __ZNSt3__26vectorIdNS_9allocatorIdEEE10deallocateEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $4 = sp;
 $7 = sp + 264|0;
 $57 = sp + 44|0;
 $64 = sp + 16|0;
 $66 = sp + 8|0;
 $67 = sp + 4|0;
 $65 = $0;
 $68 = $65;
 $69 = HEAP32[$68>>2]|0;
 $62 = $64;
 $63 = -1;
 $70 = $62;
 HEAP32[$70>>2] = 0;
 $71 = HEAP32[$64>>2]|0;
 HEAP32[$66>>2] = $71;
 $47 = $66;
 $72 = ($69|0)!=(0|0);
 if (!($72)) {
  STACKTOP = sp;return;
 }
 $37 = $68;
 $73 = $37;
 $36 = $73;
 $74 = $36;
 $75 = ((($74)) + 4|0);
 $76 = HEAP32[$75>>2]|0;
 $77 = HEAP32[$74>>2]|0;
 $78 = $76;
 $79 = $77;
 $80 = (($78) - ($79))|0;
 $81 = (($80|0) / 8)&-1;
 $38 = $81;
 $13 = $73;
 $82 = $13;
 $83 = HEAP32[$82>>2]|0;
 $11 = $82;
 $12 = $83;
 $84 = $11;
 while(1) {
  $85 = $12;
  $86 = ((($84)) + 4|0);
  $87 = HEAP32[$86>>2]|0;
  $88 = ($85|0)!=($87|0);
  if (!($88)) {
   break;
  }
  $10 = $84;
  $89 = $10;
  $90 = ((($89)) + 8|0);
  $9 = $90;
  $91 = $9;
  $8 = $91;
  $92 = $8;
  $93 = ((($84)) + 4|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = ((($94)) + -8|0);
  HEAP32[$93>>2] = $95;
  $1 = $95;
  $96 = $1;
  $5 = $92;
  $6 = $96;
  $97 = $5;
  $98 = $6;
  ;HEAP8[$4>>0]=HEAP8[$7>>0]|0;
  $2 = $97;
  $3 = $98;
 }
 $99 = $38;
 $33 = $73;
 $34 = $99;
 $100 = $33;
 $32 = $100;
 $101 = $32;
 $102 = HEAP32[$101>>2]|0;
 $31 = $102;
 $103 = $31;
 $15 = $100;
 $104 = $15;
 $105 = HEAP32[$104>>2]|0;
 $14 = $105;
 $106 = $14;
 $20 = $100;
 $107 = $20;
 $19 = $107;
 $108 = $19;
 $18 = $108;
 $109 = $18;
 $110 = ((($109)) + 8|0);
 $17 = $110;
 $111 = $17;
 $16 = $111;
 $112 = $16;
 $113 = HEAP32[$112>>2]|0;
 $114 = HEAP32[$108>>2]|0;
 $115 = $113;
 $116 = $114;
 $117 = (($115) - ($116))|0;
 $118 = (($117|0) / 8)&-1;
 $119 = (($106) + ($118<<3)|0);
 $22 = $100;
 $120 = $22;
 $121 = HEAP32[$120>>2]|0;
 $21 = $121;
 $122 = $21;
 $123 = $34;
 $124 = (($122) + ($123<<3)|0);
 $24 = $100;
 $125 = $24;
 $126 = HEAP32[$125>>2]|0;
 $23 = $126;
 $127 = $23;
 $25 = $100;
 $128 = $25;
 $129 = ((($128)) + 4|0);
 $130 = HEAP32[$129>>2]|0;
 $131 = HEAP32[$128>>2]|0;
 $132 = $130;
 $133 = $131;
 $134 = (($132) - ($133))|0;
 $135 = (($134|0) / 8)&-1;
 $136 = (($127) + ($135<<3)|0);
 $26 = $100;
 $27 = $103;
 $28 = $119;
 $29 = $124;
 $30 = $136;
 $35 = $73;
 $41 = $68;
 $137 = $41;
 $138 = ((($137)) + 8|0);
 $40 = $138;
 $139 = $40;
 $39 = $139;
 $140 = $39;
 $141 = HEAP32[$68>>2]|0;
 $46 = $68;
 $142 = $46;
 $45 = $142;
 $143 = $45;
 $44 = $143;
 $144 = $44;
 $145 = ((($144)) + 8|0);
 $43 = $145;
 $146 = $43;
 $42 = $146;
 $147 = $42;
 $148 = HEAP32[$147>>2]|0;
 $149 = HEAP32[$143>>2]|0;
 $150 = $148;
 $151 = $149;
 $152 = (($150) - ($151))|0;
 $153 = (($152|0) / 8)&-1;
 $52 = $140;
 $53 = $141;
 $54 = $153;
 $154 = $52;
 $155 = $53;
 $156 = $54;
 $49 = $154;
 $50 = $155;
 $51 = $156;
 $157 = $50;
 $48 = $157;
 $158 = $48;
 __ZdlPv($158);
 $55 = $57;
 $56 = -1;
 $159 = $55;
 HEAP32[$159>>2] = 0;
 $160 = HEAP32[$57>>2]|0;
 HEAP32[$67>>2] = $160;
 $58 = $67;
 $61 = $68;
 $161 = $61;
 $162 = ((($161)) + 8|0);
 $60 = $162;
 $163 = $60;
 $59 = $163;
 $164 = $59;
 HEAP32[$164>>2] = 0;
 $165 = ((($68)) + 4|0);
 HEAP32[$165>>2] = 0;
 HEAP32[$68>>2] = 0;
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2INS_7ProductINS_12SparseMatrixIdLi0EiEES2_Li0EEEEERKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2Ev($6);
 __ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EEC2Ev($6);
 __THREW__ = 0;
 invoke_v(99);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  $9 = $3;
  __THREW__ = 0;
  invoke_vii(644,($6|0),($9|0));
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if (!($11)) {
   $12 = $3;
   __THREW__ = 0;
   (invoke_iii(645,($6|0),($12|0))|0);
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   if (!($14)) {
    STACKTOP = sp;return;
   }
  }
 }
 $15 = ___cxa_find_matching_catch_2()|0;
 $16 = tempRet0;
 $4 = $15;
 $5 = $16;
 __THREW__ = 0;
 invoke_vi(424,($6|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $21 = ___cxa_find_matching_catch_3(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 } else {
  $19 = $4;
  $20 = $5;
  ___resumeException($19|0);
  // unreachable;
 }
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE10resizeLikeINS_7ProductINS_12SparseMatrixIdLi0EiEES2_Li0EEEEEvRKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $10 = $6;
 $11 = $7;
 $12 = (__ZNK5Eigen9EigenBaseINS_7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EEEE7derivedEv($11)|0);
 $8 = $12;
 $13 = $8;
 $14 = (__ZNK5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE4rowsEv($13)|0);
 $15 = $8;
 $16 = (__ZNK5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE4colsEv($15)|0);
 $2 = $14;
 $3 = $16;
 $4 = 2147483647;
 $17 = $2;
 $18 = ($17|0)==(0);
 $19 = $3;
 $20 = ($19|0)==(0);
 $or$cond = $18 | $20;
 if ($or$cond) {
  $27 = 0;
 } else {
  $21 = $2;
  $22 = $4;
  $23 = $3;
  $24 = (($22|0) / ($23|0))&-1;
  $25 = ($21|0)>($24|0);
  $27 = $25;
 }
 $26 = $27&1;
 $5 = $26;
 $28 = $5;
 $29 = $28&1;
 if ($29) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $30 = $8;
 $31 = (__ZNK5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE4rowsEv($30)|0);
 $32 = $8;
 $33 = (__ZNK5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE4colsEv($32)|0);
 $34 = Math_imul($31, $33)|0;
 $9 = $34;
 $35 = $8;
 $36 = (__ZNK5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE4rowsEv($35)|0);
 $37 = ($36|0)==(1);
 if ($37) {
  $41 = $9;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($10,$41,1);
  STACKTOP = sp;return;
 }
 $38 = $8;
 $39 = (__ZNK5Eigen7ProductINS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EE4colsEv($38)|0);
 $40 = ($39|0)==(1);
 if ($40) {
  $41 = $9;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($10,$41,1);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5311|0),(1577|0),374,(5350|0));
  // unreachable;
 }
}
function __ZNK5Eigen16SparseSolverBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS6_RKS8_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen9SolveImplINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5DenseEEC2Ev($6);
 $7 = $4;
 HEAP32[$6>>2] = $7;
 $8 = ((($6)) + 4|0);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 STACKTOP = sp;return;
}
function __ZN5Eigen9SolveImplINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2INS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEES2_EEEERKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2Ev($6);
 __ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EEC2Ev($6);
 __THREW__ = 0;
 invoke_v(99);
 $7 = __THREW__; __THREW__ = 0;
 $8 = $7&1;
 if (!($8)) {
  $9 = $3;
  __THREW__ = 0;
  invoke_vii(646,($6|0),($9|0));
  $10 = __THREW__; __THREW__ = 0;
  $11 = $10&1;
  if (!($11)) {
   $12 = $3;
   __THREW__ = 0;
   (invoke_iii(647,($6|0),($12|0))|0);
   $13 = __THREW__; __THREW__ = 0;
   $14 = $13&1;
   if (!($14)) {
    STACKTOP = sp;return;
   }
  }
 }
 $15 = ___cxa_find_matching_catch_2()|0;
 $16 = tempRet0;
 $4 = $15;
 $5 = $16;
 __THREW__ = 0;
 invoke_vi(424,($6|0));
 $17 = __THREW__; __THREW__ = 0;
 $18 = $17&1;
 if ($18) {
  $21 = ___cxa_find_matching_catch_3(0|0)|0;
  $22 = tempRet0;
  ___clang_call_terminate($21);
  // unreachable;
 } else {
  $19 = $4;
  $20 = $5;
  ___resumeException($19|0);
  // unreachable;
 }
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE10resizeLikeINS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEES2_EEEEvRKNS_9EigenBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $10 = $6;
 $11 = $7;
 $12 = (__ZNK5Eigen9EigenBaseINS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($11)|0);
 $8 = $12;
 $13 = $8;
 $14 = (__ZNK5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($13)|0);
 $15 = $8;
 $16 = (__ZNK5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($15)|0);
 $2 = $14;
 $3 = $16;
 $4 = 2147483647;
 $17 = $2;
 $18 = ($17|0)==(0);
 $19 = $3;
 $20 = ($19|0)==(0);
 $or$cond = $18 | $20;
 if ($or$cond) {
  $27 = 0;
 } else {
  $21 = $2;
  $22 = $4;
  $23 = $3;
  $24 = (($22|0) / ($23|0))&-1;
  $25 = ($21|0)>($24|0);
  $27 = $25;
 }
 $26 = $27&1;
 $5 = $26;
 $28 = $5;
 $29 = $28&1;
 if ($29) {
  __ZN5Eigen8internal19throw_std_bad_allocEv();
 }
 $30 = $8;
 $31 = (__ZNK5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($30)|0);
 $32 = $8;
 $33 = (__ZNK5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($32)|0);
 $34 = Math_imul($31, $33)|0;
 $9 = $34;
 $35 = $8;
 $36 = (__ZNK5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($35)|0);
 $37 = ($36|0)==(1);
 if ($37) {
  $41 = $9;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($10,$41,1);
  STACKTOP = sp;return;
 }
 $38 = $8;
 $39 = (__ZNK5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($38)|0);
 $40 = ($39|0)==(1);
 if ($40) {
  $41 = $9;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($10,$41,1);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5311|0),(1577|0),374,(5350|0));
  // unreachable;
 }
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE12_set_noaliasINS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEES2_EEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($7)|0);
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEES3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($6,$8,$4);
 $9 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($5)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNK5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEES3_EENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEES3_EENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKSB_RKSD_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEES3_EENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKSB_RKSD_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $4;
 $24 = (__ZNK5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE3decEv($23)|0);
 $25 = $4;
 $26 = (__ZNK5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE3rhsEv($25)|0);
 $27 = $3;
 __ZNK5Eigen18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEE11_solve_implINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES8_EEvRKNS_10MatrixBaseIT_EERNS9_IT0_EE($24,$26,$27);
 STACKTOP = sp;return;
}
function __ZNK5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE3decEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEE11_solve_implINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES8_EEvRKNS_10MatrixBaseIT_EERNS9_IT0_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $6 = sp + 80|0;
 $7 = sp + 72|0;
 $8 = sp + 64|0;
 $9 = sp + 48|0;
 $10 = sp + 44|0;
 $11 = sp + 32|0;
 $12 = sp + 20|0;
 $13 = sp + 8|0;
 $14 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $15 = $3;
 $16 = ((($15)) + 8|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = $17&1;
 if (!($18)) {
  ___assert_fail((7040|0),(6406|0),591,(5152|0));
  // unreachable;
 }
 $19 = ((($15)) + 12|0);
 $20 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($19)|0);
 $21 = $4;
 $22 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($21)|0);
 $23 = ($20|0)==($22|0);
 if (!($23)) {
  ___assert_fail((7187|0),(6406|0),592,(5152|0));
  // unreachable;
 }
 $24 = ((($15)) + 4|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = ($25|0)!=(0);
 if ($26) {
  STACKTOP = sp;return;
 }
 $27 = ((($15)) + 72|0);
 $28 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4sizeEv($27)|0);
 $29 = ($28|0)>(0);
 if ($29) {
  $30 = ((($15)) + 72|0);
  $31 = $4;
  __ZN5EigenmlINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_7ProductIT_T0_Li2EEERKNS_15PermutationBaseIS6_EERKNS_10MatrixBaseIS7_EE($6,$30,$31);
  $32 = $5;
  (__ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEaSINS_7ProductINS_17PermutationMatrixILin1ELin1EiEES2_Li2EEEEERS2_RKNS_9DenseBaseIT_EE($32,$6)|0);
 } else {
  $33 = $4;
  $34 = $5;
  (__ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEaSERKS3_($34,$33)|0);
 }
 $35 = ((($15)) + 12|0);
 $36 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE8nonZerosEv($35)|0);
 $37 = ($36|0)>(0);
 do {
  if ($37) {
   $38 = ((($15)) + 104|0);
   $39 = HEAP8[$38>>0]|0;
   $40 = $39&1;
   $41 = ((($15)) + 12|0);
   if ($40) {
    __ZN5Eigen8internal6traitsINS_14SimplicialLDLTINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE4getLERKS4_($7,$41);
    $42 = $5;
    __ZNK5Eigen18TriangularViewImplIKNS_12SparseMatrixIdLi0EiEELj5ENS_6SparseEE12solveInPlaceINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEvRNS_10MatrixBaseIT_EE($7,$42);
    break;
   } else {
    __ZN5Eigen8internal6traitsINS_13SimplicialLLTINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE4getLERKS4_($8,$41);
    $43 = $5;
    __ZNK5Eigen18TriangularViewImplIKNS_12SparseMatrixIdLi0EiEELj1ENS_6SparseEE12solveInPlaceINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEvRNS_10MatrixBaseIT_EE($8,$43);
    break;
   }
  }
 } while(0);
 $44 = ((($15)) + 48|0);
 $45 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($44)|0);
 $46 = ($45|0)>(0);
 if ($46) {
  $47 = ((($15)) + 48|0);
  $48 = (__ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE10asDiagonalEv($47)|0);
  HEAP32[$10>>2] = $48;
  __ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7inverseEv($11,$10);
  $49 = $5;
  __ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEEEmlIS7_EEKNS_7ProductISB_T_Li1EEERKNS_10MatrixBaseISF_EE($9,$11,$49);
  $50 = $5;
  (__ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEaSINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKS2_EEEES2_Li1EEEEERS2_RKNS_9DenseBaseIT_EE($50,$9)|0);
 }
 $51 = ((($15)) + 12|0);
 $52 = (__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE8nonZerosEv($51)|0);
 $53 = ($52|0)>(0);
 do {
  if ($53) {
   $54 = ((($15)) + 104|0);
   $55 = HEAP8[$54>>0]|0;
   $56 = $55&1;
   $57 = ((($15)) + 12|0);
   if ($56) {
    __ZN5Eigen8internal6traitsINS_14SimplicialLDLTINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE4getUERKS4_($12,$57);
    $58 = $5;
    __ZNK5Eigen18TriangularViewImplIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6ENS_6SparseEE12solveInPlaceINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEvRNS_10MatrixBaseIT_EE($12,$58);
    break;
   } else {
    __ZN5Eigen8internal6traitsINS_13SimplicialLLTINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE4getUERKS4_($13,$57);
    $59 = $5;
    __ZNK5Eigen18TriangularViewImplIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2ENS_6SparseEE12solveInPlaceINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEvRNS_10MatrixBaseIT_EE($13,$59);
    break;
   }
  }
 } while(0);
 $60 = ((($15)) + 72|0);
 $61 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4sizeEv($60)|0);
 $62 = ($61|0)>(0);
 if (!($62)) {
  STACKTOP = sp;return;
 }
 $63 = ((($15)) + 80|0);
 $64 = $5;
 __ZN5EigenmlINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_7ProductIT_T0_Li2EEERKNS_15PermutationBaseIS6_EERKNS_10MatrixBaseIS7_EE($14,$63,$64);
 $65 = $5;
 (__ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEaSINS_7ProductINS_17PermutationMatrixILin1ELin1EiEES2_Li2EEEEERS2_RKNS_9DenseBaseIT_EE($65,$14)|0);
 STACKTOP = sp;return;
}
function __ZNK5Eigen5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5EigenmlINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_7ProductIT_T0_Li2EEERKNS_15PermutationBaseIS6_EERKNS_10MatrixBaseIS7_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_17PermutationMatrixILin1ELin1EiEEE7derivedEv($5)|0);
 $7 = $4;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($7)|0);
 __ZN5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EEC2ERKS2_RKS4_($0,$6,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEaSINS_7ProductINS_17PermutationMatrixILin1ELin1EiEES2_Li2EEEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEES3_Li2EEEEEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEaSERKS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_EEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal6traitsINS_14SimplicialLDLTINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE4getLERKS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $1;
 $3 = $2;
 __ZN5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EEC2ERS3_($0,$3);
 STACKTOP = sp;return;
}
function __ZNK5Eigen18TriangularViewImplIKNS_12SparseMatrixIdLi0EiEELj5ENS_6SparseEE12solveInPlaceINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEvRNS_10MatrixBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EEEE7derivedEv($5)|0);
 $7 = (__ZNK5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EE4colsEv($6)|0);
 $8 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EEEE7derivedEv($5)|0);
 $9 = (__ZNK5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EE4rowsEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  ___assert_fail((7219|0),(7292|0),180,(4944|0));
  // unreachable;
 }
 $11 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EEEE7derivedEv($5)|0);
 $12 = (__ZNK5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EE4colsEv($11)|0);
 $13 = $3;
 $14 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($13)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  $16 = $3;
  $17 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($16)|0);
  $4 = $17;
  $18 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EEEE7derivedEv($5)|0);
  $19 = (__ZNK5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EE16nestedExpressionEv($18)|0);
  $20 = $4;
  __ZN5Eigen8internal32sparse_solve_triangular_selectorIKNS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi5ELi1ELi0EE3runERS4_RS6_($19,$20);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((7219|0),(7292|0),180,(4944|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal6traitsINS_13SimplicialLLTINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE4getLERKS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $1;
 $3 = $2;
 __ZN5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EEC2ERS3_($0,$3);
 STACKTOP = sp;return;
}
function __ZNK5Eigen18TriangularViewImplIKNS_12SparseMatrixIdLi0EiEELj1ENS_6SparseEE12solveInPlaceINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEvRNS_10MatrixBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EEEE7derivedEv($5)|0);
 $7 = (__ZNK5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EE4colsEv($6)|0);
 $8 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EEEE7derivedEv($5)|0);
 $9 = (__ZNK5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EE4rowsEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  ___assert_fail((7219|0),(7292|0),180,(4944|0));
  // unreachable;
 }
 $11 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EEEE7derivedEv($5)|0);
 $12 = (__ZNK5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EE4colsEv($11)|0);
 $13 = $3;
 $14 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($13)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  $16 = $3;
  $17 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($16)|0);
  $4 = $17;
  $18 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EEEE7derivedEv($5)|0);
  $19 = (__ZNK5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EE16nestedExpressionEv($18)|0);
  $20 = $4;
  __ZN5Eigen8internal32sparse_solve_triangular_selectorIKNS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELi0EE3runERS4_RS6_($19,$20);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((7219|0),(7292|0),180,(4944|0));
  // unreachable;
 }
}
function __ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE10asDiagonalEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp + 4|0;
 $2 = $0;
 $3 = $2;
 $4 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($3)|0);
 __ZN5Eigen15DiagonalWrapperIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERS3_($1,$4);
 $5 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7inverseEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $2 = $1;
 $4 = $2;
 $5 = (__ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE8diagonalEv($4)|0);
 __ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE12cwiseInverseEv($3,$5);
 __ZN5Eigen15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERS9_($0,$3);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEEEmlIS7_EEKNS_7ProductISB_T_Li1EEERKNS_10MatrixBaseISF_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEEE7derivedEv($5)|0);
 $7 = $4;
 $8 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($7)|0);
 __ZN5Eigen7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES7_Li1EEC2ERKSB_RS8_($0,$6,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEaSINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKS2_EEEES2_Li1EEEEERS2_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEEEEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal6traitsINS_14SimplicialLDLTINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE4getUERKS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $2 = $1;
 $4 = $2;
 __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7adjointEv($3,$4);
 __ZN5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EEC2ERS6_($0,$3);
 STACKTOP = sp;return;
}
function __ZNK5Eigen18TriangularViewImplIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6ENS_6SparseEE12solveInPlaceINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEvRNS_10MatrixBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EEEE7derivedEv($5)|0);
 $7 = (__ZNK5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EE4colsEv($6)|0);
 $8 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EEEE7derivedEv($5)|0);
 $9 = (__ZNK5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EE4rowsEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  ___assert_fail((7219|0),(7292|0),180,(4944|0));
  // unreachable;
 }
 $11 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EEEE7derivedEv($5)|0);
 $12 = (__ZNK5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EE4colsEv($11)|0);
 $13 = $3;
 $14 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($13)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  $16 = $3;
  $17 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($16)|0);
  $4 = $17;
  $18 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EEEE7derivedEv($5)|0);
  $19 = (__ZNK5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EE16nestedExpressionEv($18)|0);
  $20 = $4;
  __ZN5Eigen8internal32sparse_solve_triangular_selectorIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi6ELi2ELi1EE3runERS7_RS9_($19,$20);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((7219|0),(7292|0),180,(4944|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal6traitsINS_13SimplicialLLTINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE4getUERKS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $2 = $1;
 $4 = $2;
 __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7adjointEv($3,$4);
 __ZN5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EEC2ERS6_($0,$3);
 STACKTOP = sp;return;
}
function __ZNK5Eigen18TriangularViewImplIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2ENS_6SparseEE12solveInPlaceINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEvRNS_10MatrixBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EEEE7derivedEv($5)|0);
 $7 = (__ZNK5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EE4colsEv($6)|0);
 $8 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EEEE7derivedEv($5)|0);
 $9 = (__ZNK5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EE4rowsEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  ___assert_fail((7219|0),(7292|0),180,(4944|0));
  // unreachable;
 }
 $11 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EEEE7derivedEv($5)|0);
 $12 = (__ZNK5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EE4colsEv($11)|0);
 $13 = $3;
 $14 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($13)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  $16 = $3;
  $17 = (__ZN5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($16)|0);
  $4 = $17;
  $18 = (__ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EEEE7derivedEv($5)|0);
  $19 = (__ZNK5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EE16nestedExpressionEv($18)|0);
  $20 = $4;
  __ZN5Eigen8internal32sparse_solve_triangular_selectorIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2ELi2ELi1EE3runERS7_RS9_($19,$20);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((7219|0),(7292|0),180,(4944|0));
  // unreachable;
 }
}
function __ZN5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EEC2ERKS2_RKS4_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen11ProductImplINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2ENS_5DenseEEC2Ev($6);
 $7 = $4;
 HEAP32[$6>>2] = $7;
 $8 = ((($6)) + 4|0);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4colsEv($10)|0);
 $12 = $5;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = ($11|0)==($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2150|0),(2290|0),97,(2323|0));
  // unreachable;
 }
}
function __ZN5Eigen11ProductImplINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2ENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal18dense_product_baseINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2ELi7EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18dense_product_baseINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2ELi7EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEES3_Li2EEEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEES3_Li2EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEES3_Li2EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEES3_Li2EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEES3_Li2EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEES3_Li2EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS7_RKS9_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_17PermutationMatrixILin1ELin1EiEES3_Li2EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKS7_RKS9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = $4;
 $25 = (__ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EE3lhsEv($24)|0);
 $26 = $4;
 $27 = (__ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EE3rhsEv($26)|0);
 __ZN5Eigen8internal20generic_product_implINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_16PermutationShapeENS_10DenseShapeELi7EE6evalToIS5_EEvRT_RKS3_RKS5_($23,$25,$27);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal20generic_product_implINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_16PermutationShapeENS_10DenseShapeELi7EE6evalToIS5_EEvRT_RKS3_RKS5_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal26permutation_matrix_productINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELb0ENS_10DenseShapeEE3runIS3_NS_17PermutationMatrixILin1ELin1EiEEEEvRT_RKT0_RKS3_($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EE3lhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7ProductINS_17PermutationMatrixILin1ELin1EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2EE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal26permutation_matrix_productINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELb0ENS_10DenseShapeEE3runIS3_NS_17PermutationMatrixILin1ELin1EiEEEEvRT_RKT0_RKS3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(176|0);
 $8 = sp + 136|0;
 $9 = sp + 128|0;
 $10 = sp + 164|0;
 $17 = sp + 80|0;
 $18 = sp + 56|0;
 $20 = sp + 24|0;
 $21 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $22 = $5;
 $6 = $22;
 $23 = $6;
 $24 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($23)|0);
 $7 = $24;
 $25 = $3;
 $26 = $6;
 $27 = (__ZN5Eigen8internal13is_same_denseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_EEbRKT_RKT0_PNS0_9enable_ifIXaasr17has_direct_accessIS4_EE3retsr17has_direct_accessIS7_EE3retES4_E4typeE($25,$26,0)|0);
 if (!($27)) {
  $19 = 0;
  while(1) {
   $104 = $19;
   $105 = $7;
   $106 = ($104|0)<($105|0);
   if (!($106)) {
    break;
   }
   $107 = $6;
   $108 = $19;
   __ZN5Eigen5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEC2ERS3_i($20,$107,$108);
   $109 = $3;
   $110 = $4;
   $111 = (__ZNK5Eigen17PermutationMatrixILin1ELin1EiE7indicesEv($110)|0);
   $112 = $19;
   $113 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE5coeffEi($111,$112)|0);
   $114 = HEAP32[$113>>2]|0;
   __ZN5Eigen5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEC2ERS2_i($21,$109,$114);
   (__ZN5Eigen5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEaSINS0_IKS2_Li1ELi1ELb0EEEEERS3_RKNS_9DenseBaseIT_EE($21,$20)|0);
   $115 = $19;
   $116 = (($115) + 1)|0;
   $19 = $116;
  }
  STACKTOP = sp;return;
 }
 $28 = $4;
 $29 = (__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4sizeEv($28)|0);
 HEAP32[$9>>2] = $29;
 __ZN5Eigen6MatrixIbLin1ELi1ELi0ELin1ELi1EEC2IiEERKT_($8,$9);
 HEAP8[$10>>0] = 0;
 __THREW__ = 0;
 invoke_vii(361,($8|0),($10|0));
 $30 = __THREW__; __THREW__ = 0;
 $31 = $30&1;
 L8: do {
  if (!($31)) {
   $13 = 0;
   L10: while(1) {
    $32 = $13;
    $33 = $4;
    __THREW__ = 0;
    $34 = (invoke_ii(362,($33|0))|0);
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     break L8;
    }
    $37 = ($32|0)<($34|0);
    if (!($37)) {
     break;
    }
    while(1) {
     $38 = $13;
     $39 = $4;
     __THREW__ = 0;
     $40 = (invoke_ii(362,($39|0))|0);
     $41 = __THREW__; __THREW__ = 0;
     $42 = $41&1;
     if ($42) {
      break L8;
     }
     $43 = ($38|0)<($40|0);
     if ($43) {
      $44 = $13;
      __THREW__ = 0;
      $45 = (invoke_iii(363,($8|0),($44|0))|0);
      $46 = __THREW__; __THREW__ = 0;
      $47 = $46&1;
      if ($47) {
       break L8;
      }
      $48 = HEAP8[$45>>0]|0;
      $49 = $48&1;
      $121 = $49;
     } else {
      $121 = 0;
     }
     $50 = $13;
     if (!($121)) {
      break;
     }
     $51 = (($50) + 1)|0;
     $13 = $51;
    }
    $56 = $4;
    __THREW__ = 0;
    $57 = (invoke_ii(362,($56|0))|0);
    $58 = __THREW__; __THREW__ = 0;
    $59 = $58&1;
    if ($59) {
     break L8;
    }
    $60 = ($50|0)>=($57|0);
    if ($60) {
     break;
    }
    $61 = $13;
    $62 = (($61) + 1)|0;
    $13 = $62;
    $14 = $61;
    $63 = $14;
    $15 = $63;
    $64 = $14;
    __THREW__ = 0;
    $65 = (invoke_iii(365,($8|0),($64|0))|0);
    $66 = __THREW__; __THREW__ = 0;
    $67 = $66&1;
    if ($67) {
     break L8;
    }
    HEAP8[$65>>0] = 1;
    $68 = $4;
    __THREW__ = 0;
    $69 = (invoke_ii(366,($68|0))|0);
    $70 = __THREW__; __THREW__ = 0;
    $71 = $70&1;
    if ($71) {
     break L8;
    }
    $72 = $14;
    __THREW__ = 0;
    $73 = (invoke_iii(367,($69|0),($72|0))|0);
    $74 = __THREW__; __THREW__ = 0;
    $75 = $74&1;
    if ($75) {
     break L8;
    }
    $76 = HEAP32[$73>>2]|0;
    $16 = $76;
    while(1) {
     $77 = $16;
     $78 = $14;
     $79 = ($77|0)!=($78|0);
     if (!($79)) {
      continue L10;
     }
     $80 = $3;
     $81 = $16;
     __THREW__ = 0;
     invoke_viii(648,($17|0),($80|0),($81|0));
     $82 = __THREW__; __THREW__ = 0;
     $83 = $82&1;
     if ($83) {
      break L8;
     }
     $84 = $3;
     $85 = $14;
     __THREW__ = 0;
     invoke_viii(648,($18|0),($84|0),($85|0));
     $86 = __THREW__; __THREW__ = 0;
     $87 = $86&1;
     if ($87) {
      break L8;
     }
     __THREW__ = 0;
     invoke_vii(649,($17|0),($18|0));
     $88 = __THREW__; __THREW__ = 0;
     $89 = $88&1;
     if ($89) {
      break L8;
     }
     $90 = $16;
     __THREW__ = 0;
     $91 = (invoke_iii(365,($8|0),($90|0))|0);
     $92 = __THREW__; __THREW__ = 0;
     $93 = $92&1;
     if ($93) {
      break L8;
     }
     HEAP8[$91>>0] = 1;
     $94 = $16;
     $15 = $94;
     $95 = $4;
     __THREW__ = 0;
     $96 = (invoke_ii(366,($95|0))|0);
     $97 = __THREW__; __THREW__ = 0;
     $98 = $97&1;
     if ($98) {
      break L8;
     }
     $99 = $16;
     __THREW__ = 0;
     $100 = (invoke_iii(367,($96|0),($99|0))|0);
     $101 = __THREW__; __THREW__ = 0;
     $102 = $101&1;
     if ($102) {
      break L8;
     }
     $103 = HEAP32[$100>>2]|0;
     $16 = $103;
    }
   }
   __ZN5Eigen6MatrixIbLin1ELi1ELi0ELin1ELi1EED2Ev($8);
   STACKTOP = sp;return;
  }
 } while(0);
 $52 = ___cxa_find_matching_catch_2()|0;
 $53 = tempRet0;
 $11 = $52;
 $12 = $53;
 __THREW__ = 0;
 invoke_vi(364,($8|0));
 $54 = __THREW__; __THREW__ = 0;
 $55 = $54&1;
 if ($55) {
  $119 = ___cxa_find_matching_catch_3(0|0)|0;
  $120 = tempRet0;
  ___clang_call_terminate($119);
  // unreachable;
 } else {
  $117 = $11;
  $118 = $12;
  ___resumeException($117|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal13is_same_denseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_EEbRKT_RKT0_PNS0_9enable_ifIXaasr17has_direct_accessIS4_EE3retsr17has_direct_accessIS7_EE3retES4_E4typeE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4dataEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4dataEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  $21 = 0;
  STACKTOP = sp;return ($21|0);
 }
 $11 = $3;
 $12 = (__ZNK5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EE11innerStrideEv($11)|0);
 $13 = $4;
 $14 = (__ZNK5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EE11innerStrideEv($13)|0);
 $15 = ($12|0)==($14|0);
 if (!($15)) {
  $21 = 0;
  STACKTOP = sp;return ($21|0);
 }
 $16 = $3;
 $17 = (__ZNK5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EE11outerStrideEv($16)|0);
 $18 = $4;
 $19 = (__ZNK5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EE11outerStrideEv($18)|0);
 $20 = ($17|0)==($19|0);
 $21 = $20;
 STACKTOP = sp;return ($21|0);
}
function __ZN5Eigen5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEC2ERS2_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen9BlockImplINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ENS_5DenseEEC2ERS2_i($6,$7,$8);
 $9 = $5;
 $10 = ($9|0)>=(0);
 if (!($10)) {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
 $11 = $5;
 $12 = $4;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = ($11|0)<($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen9DenseBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE4swapIS4_EEvRKNS0_IT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE4rowsEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE4rowsEv($7)|0);
 $9 = ($6|0)==($8|0);
 if (!($9)) {
  ___assert_fail((4568|0),(4613|0),417,(4648|0));
  // unreachable;
 }
 $10 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE4colsEv($5)|0);
 $11 = $3;
 $12 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE4colsEv($11)|0);
 $13 = ($10|0)==($12|0);
 if ($13) {
  $14 = (__ZN5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE7derivedEv($5)|0);
  $15 = $3;
  $16 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE18const_cast_derivedEv($15)|0);
  __ZN5Eigen8internal14swap_assign_opIdEC2Ev($4);
  __ZN5Eigen8internal15call_assignmentINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISA_EE5valueEPvE4typeE($14,$16,$4,0);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4568|0),(4613|0),417,(4648|0));
  // unreachable;
 }
}
function __ZN5Eigen5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEC2ERS3_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen9BlockImplIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ENS_5DenseEEC2ERS3_i($6,$7,$8);
 $9 = $5;
 $10 = ($9|0)>=(0);
 if (!($10)) {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
 $11 = $5;
 $12 = $4;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = ($11|0)<($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2331|0),(2498|0),122,(2529|0));
  // unreachable;
 }
}
function __ZN5Eigen5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEaSINS0_IKS2_Li1ELi1ELb0EEEEERS3_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE7derivedEv($5)|0);
 (__ZN5Eigen9BlockImplINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ENS_5DenseEEaSINS_5BlockIKS2_Li1ELi1ELb0EEEEERS4_RKNS_9DenseBaseIT_EE($4,$6)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1;
}
function __ZNK5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE9innerSizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen9DenseBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE9innerSizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen9BlockImplINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ENS_5DenseEEC2ERS2_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EEC2ERS3_i($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EEC2ERS3_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4dataEv($7)|0);
 $9 = $5;
 $10 = $4;
 $11 = (__ZNK5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EE11innerStrideEv($10)|0);
 $12 = Math_imul($9, $11)|0;
 $13 = (($8) + ($12<<3)|0);
 __ZN5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi1EEC2EPdii($6,$13,1,1);
 $14 = ((($6)) + 8|0);
 $15 = $4;
 HEAP32[$14>>2] = $15;
 $16 = ((($6)) + 12|0);
 $17 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($16,$17);
 $18 = ((($6)) + 16|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi0EEC2Ei($18,0);
 __ZN5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EE4initEv($6);
 STACKTOP = sp;return;
}
function __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EE4dataEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi1EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 $11 = $7;
 __ZN5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EEC2EPdii($8,$9,$10,$11);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EE11outerStrideEv($4)|0);
 $6 = ((($2)) + 20|0);
 HEAP32[$6>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EEC2EPdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($10,$11);
 $12 = ((($8)) + 5|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $6;
  $19 = (1)==($18|0);
  $or$cond = $17 & $19;
  $20 = $7;
  $21 = ($20|0)>=(0);
  $or$cond3 = $or$cond & $21;
  $22 = $7;
  $23 = (1)==($22|0);
  $or$cond5 = $or$cond3 & $23;
  if (!($or$cond5)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE11checkSanityIS4_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE11checkSanityIS4_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal15call_assignmentINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISA_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE18const_cast_derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEES5_NS0_14swap_assign_opIdEENS0_11Dense2DenseEvE3runERS5_RKS5_RKS7_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEES5_NS0_14swap_assign_opIdEENS0_11Dense2DenseEvE3runERS5_RKS5_RKS7_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEES5_EEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEES5_EEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEES5_Lb0EE3runERKS5_S8_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 36|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2ERKS5_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(650,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(651,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(652,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(653,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(654,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(655,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(655,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(655,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEES5_Lb0EE3runERKS5_S8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EEC2ERKNS_5BlockIS3_Li1ELi1ELb0EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4rowsEv($6)|0);
 $8 = $4;
 $9 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4rowsEv($8)|0);
 $10 = ($7|0)==($9|0);
 if (!($10)) {
  ___assert_fail((4653|0),(2091|0),710,(2132|0));
  // unreachable;
 }
 $11 = $3;
 $12 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4colsEv($11)|0);
 $13 = $4;
 $14 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4colsEv($13)|0);
 $15 = ($12|0)==($14|0);
 if ($15) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4653|0),(2091|0),710,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEES7_NS0_14swap_assign_opIdEELi0EEC2ERS7_RKS7_RKS9_RS6_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 $12 = $7;
 $13 = $8;
 $14 = $9;
 __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEES7_NS0_14swap_assign_opIdEELi1EEC2ERS7_RKS7_RKS9_RS6_($10,$11,$12,$13,$14);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEES8_NS0_14swap_assign_opIdEELi0EEELi1ELi2EE3runERSB_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal54copy_using_evaluator_LinearTraversal_CompleteUnrollingINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEES8_NS0_14swap_assign_opIdEELi0EEELi0ELi1EE3runERSB_($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EEC2ERKNS_5BlockIS3_Li1ELi1ELb0EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEEC2ERKS5_($6,$7);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(656,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 do {
  if (!($11)) {
   $12 = $9;
   $13 = (($12>>>0) % 1)&-1;
   $14 = ($13|0)==(0);
   if ($14) {
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiii(162,(3035|0),(3198|0),1107,(3238|0));
    $15 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $4 = $16;
 $5 = $17;
 __THREW__ = 0;
 invoke_vi(657,($6|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $4;
  $21 = $5;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEEC2ERKS5_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(656,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(658,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(166,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(659,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(121,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(660,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi1EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EE11innerStrideEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEES7_NS0_14swap_assign_opIdEELi1EEC2ERS7_RKS7_RKS9_RS6_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal54copy_using_evaluator_LinearTraversal_CompleteUnrollingINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEES8_NS0_14swap_assign_opIdEELi0EEELi0ELi1EE3runERSB_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEES7_NS0_14swap_assign_opIdEELi1EE11assignCoeffEi($2,0);
 $3 = $1;
 __ZN5Eigen8internal54copy_using_evaluator_LinearTraversal_CompleteUnrollingINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEES8_NS0_14swap_assign_opIdEELi0EEELi1ELi1EE3runERSB_($3);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEES7_NS0_14swap_assign_opIdEELi1EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$4>>2]|0;
 $8 = $3;
 $9 = (__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEE8coeffRefEi($7,$8)|0);
 $10 = ((($4)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $3;
 $13 = (__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEE5coeffEi($11,$12)|0);
 __ZNK5Eigen8internal14swap_assign_opIdE11assignCoeffERdRKd($6,$9,$13);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal54copy_using_evaluator_LinearTraversal_CompleteUnrollingINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEES8_NS0_14swap_assign_opIdEELi0EEELi1ELi1EE3runERSB_($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEE8coeffRefEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 $8 = Math_imul($6, $7)|0;
 $9 = (($5) + ($8<<3)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 $8 = Math_imul($6, $7)|0;
 $9 = (($5) + ($8<<3)|0);
 STACKTOP = sp;return ($9|0);
}
function __ZN5Eigen8internal15block_evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ENS_5DenseEEC2ERS3_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = $5;
 __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EEC2ERS4_i($6,$7,$8);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EEC2ERS4_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4dataEv($7)|0);
 $9 = $5;
 $10 = $4;
 $11 = (__ZNK5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EE11innerStrideEv($10)|0);
 $12 = Math_imul($9, $11)|0;
 $13 = (($8) + ($12<<3)|0);
 __ZN5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EEC2EPKdii($6,$13,1,1);
 $14 = ((($6)) + 8|0);
 $15 = $4;
 HEAP32[$14>>2] = $15;
 $16 = ((($6)) + 12|0);
 $17 = $5;
 __ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei($16,$17);
 $18 = ((($6)) + 16|0);
 __ZN5Eigen8internal19variable_if_dynamicIiLi0EEC2Ei($18,0);
 __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EE4initEv($6);
 STACKTOP = sp;return;
}
function __ZN5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EEC2EPKdii($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 __ZN5Eigen10MatrixBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2Ev($8);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = ((($8)) + 4|0);
 $11 = $6;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($10,$11);
 $12 = ((($8)) + 5|0);
 $13 = $7;
 __ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei($12,$13);
 $14 = $5;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $16 = $6;
  $17 = ($16|0)>=(0);
  $18 = $6;
  $19 = (1)==($18|0);
  $or$cond = $17 & $19;
  $20 = $7;
  $21 = ($20|0)>=(0);
  $or$cond3 = $or$cond & $21;
  $22 = $7;
  $23 = (1)==($22|0);
  $or$cond5 = $or$cond3 & $23;
  if (!($or$cond5)) {
   ___assert_fail((2535|0),(2705|0),175,(2738|0));
   // unreachable;
  }
 }
 __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE11checkSanityIS5_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($8,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EE4initEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EE11outerStrideEv($4)|0);
 $6 = ((($2)) + 20|0);
 HEAP32[$6>>2] = $5;
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE11checkSanityIS5_EEvNS_8internal9enable_ifIXeqsr8internal6traitsIT_EE9AlignmentLi0EEPvE4typeE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen9BlockImplINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ENS_5DenseEEaSINS_5BlockIKS2_Li1ELi1ELb0EEEEERS4_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE7derivedEv($5)|0);
 (__ZN5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EEaSINS_5BlockIKS3_Li1ELi1ELb0EEEEERS4_RKNS_9DenseBaseIT_EE($4,$6)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EEaSINS_5BlockIKS3_Li1ELi1ELb0EEEEERS4_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE7derivedEv($5)|0);
 (__ZN5Eigen10MatrixBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEaSINS1_IKS3_Li1ELi1ELb0EEEEERS4_RKNS_9DenseBaseIT_EE($4,$6)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen10MatrixBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEaSINS1_IKS3_Li1ELi1ELb0EEEEERS4_RKNS_9DenseBaseIT_EE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = (__ZN5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE7derivedEv($4)|0);
 $6 = $3;
 $7 = (__ZNK5Eigen9EigenBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE7derivedEv($6)|0);
 __ZN5Eigen8internal15call_assignmentINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEEEEvRT_RKT0_($5,$7);
 $8 = (__ZN5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE7derivedEv($4)|0);
 STACKTOP = sp;return ($8|0);
}
function __ZN5Eigen8internal15call_assignmentINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15call_assignmentINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISC_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS5_RKS7_RKS9_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS5_RKS7_RKS9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEEEEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEEEEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEELb0EE3runERKS5_RKS7_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 36|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2ERKS6_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(661,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(651,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(652,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(662,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(663,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(655,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(655,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(664,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEELb0EE3runERKS5_RKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2ERKS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15block_evaluatorIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EEC2ERKNS_5BlockIS4_Li1ELi1ELb0EEE($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen9DenseBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4rowsEv($23)|0);
 $25 = $6;
 $26 = ($24|0)==($25|0);
 if (!($26)) {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
 $27 = $3;
 $28 = (__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4colsEv($27)|0);
 $29 = $7;
 $30 = ($28|0)==($29|0);
 if ($30) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEENS2_INS3_IKS5_Li1ELi1ELb0EEEEENS0_9assign_opIddEELi0EEC2ERS7_RKSA_RKSC_RS6_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEENS3_INS4_IKS6_Li1ELi1ELb0EEEEENS0_9assign_opIddEELi0EEELi1ELi2EE3runERSE_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal54copy_using_evaluator_LinearTraversal_CompleteUnrollingINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEENS3_INS4_IKS6_Li1ELi1ELb0EEEEENS0_9assign_opIddEELi0EEELi0ELi1EE3runERSE_($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15block_evaluatorIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15block_evaluatorIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EEC2ERKNS_5BlockIS4_Li1ELi1ELb0EEE($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 $7 = $3;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEEC2ERKS6_($6,$7);
 $8 = $3;
 __THREW__ = 0;
 $9 = (invoke_ii(665,($8|0))|0);
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 do {
  if (!($11)) {
   $12 = $9;
   $13 = (($12>>>0) % 1)&-1;
   $14 = ($13|0)==(0);
   if ($14) {
    STACKTOP = sp;return;
   } else {
    __THREW__ = 0;
    invoke_viiii(162,(3035|0),(3198|0),1107,(3238|0));
    $15 = __THREW__; __THREW__ = 0;
    break;
   }
  }
 } while(0);
 $16 = ___cxa_find_matching_catch_2()|0;
 $17 = tempRet0;
 $4 = $16;
 $5 = $17;
 __THREW__ = 0;
 invoke_vi(666,($6|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $4;
  $21 = $5;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEEC2ERKS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(665,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  HEAP32[$6>>2] = $8;
  $11 = ((($6)) + 4|0);
  $12 = $3;
  __THREW__ = 0;
  $13 = (invoke_ii(667,($12|0))|0);
  $14 = __THREW__; __THREW__ = 0;
  $15 = $14&1;
  if (!($15)) {
   __THREW__ = 0;
   invoke_vii(166,($11|0),($13|0));
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    $18 = ((($6)) + 8|0);
    $19 = $3;
    __THREW__ = 0;
    $20 = (invoke_ii(668,($19|0))|0);
    $21 = __THREW__; __THREW__ = 0;
    $22 = $21&1;
    if (!($22)) {
     __THREW__ = 0;
     invoke_vii(121,($18|0),($20|0));
     $23 = __THREW__; __THREW__ = 0;
     $24 = $23&1;
     if (!($24)) {
      STACKTOP = sp;return;
     }
    }
   }
  }
 }
 $25 = ___cxa_find_matching_catch_2()|0;
 $26 = tempRet0;
 $4 = $25;
 $5 = $26;
 __THREW__ = 0;
 invoke_vi(669,($6|0));
 $27 = __THREW__; __THREW__ = 0;
 $28 = $27&1;
 if ($28) {
  $31 = ___cxa_find_matching_catch_3(0|0)|0;
  $32 = tempRet0;
  ___clang_call_terminate($31);
  // unreachable;
 } else {
  $29 = $4;
  $30 = $5;
  ___resumeException($29|0);
  // unreachable;
 }
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4dataEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EE11innerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EE11innerStrideEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EE11outerStrideEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen9DenseBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE6resizeEii($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 $8 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE4rowsEv($6)|0);
 $9 = ($7|0)==($8|0);
 if (!($9)) {
  ___assert_fail((5206|0),(4613|0),257,(1618|0));
  // unreachable;
 }
 $10 = $5;
 $11 = (__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE4colsEv($6)|0);
 $12 = ($10|0)==($11|0);
 if ($12) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5206|0),(4613|0),257,(1618|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal54copy_using_evaluator_LinearTraversal_CompleteUnrollingINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEENS3_INS4_IKS6_Li1ELi1ELb0EEEEENS0_9assign_opIddEELi0EEELi0ELi1EE3runERSE_($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEENS2_INS3_IKS5_Li1ELi1ELb0EEEEENS0_9assign_opIddEELi0EE11assignCoeffEi($2,0);
 $3 = $1;
 __ZN5Eigen8internal54copy_using_evaluator_LinearTraversal_CompleteUnrollingINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEENS3_INS4_IKS6_Li1ELi1ELb0EEEEENS0_9assign_opIddEELi0EEELi1ELi1EE3runERSE_($3);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEENS2_INS3_IKS5_Li1ELi1ELb0EEEEENS0_9assign_opIddEELi0EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$5>>2]|0;
 $9 = $3;
 $10 = (__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEE8coeffRefEi($8,$9)|0);
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $3;
 $14 = (+__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEE5coeffEi($12,$13));
 HEAPF64[$4>>3] = $14;
 __ZNK5Eigen8internal9assign_opIddE11assignCoeffERdRKd($7,$10,$4);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal54copy_using_evaluator_LinearTraversal_CompleteUnrollingINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEENS3_INS4_IKS6_Li1ELi1ELb0EEEEENS0_9assign_opIddEELi0EEELi1ELi1EE3runERSE_($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 $7 = (__ZN5Eigen8internal19variable_if_dynamicIiLi1EE5valueEv()|0);
 $8 = Math_imul($6, $7)|0;
 $9 = (($5) + ($8<<3)|0);
 $10 = +HEAPF64[$9>>3];
 STACKTOP = sp;return (+$10);
}
function __ZN5Eigen8internal15block_evaluatorIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_EEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingIS8_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingIS8_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EEC2ERS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen18TriangularViewImplIKNS_12SparseMatrixIdLi0EiEELj5ENS_6SparseEEC2Ev($4);
 $5 = ((($4)) + 4|0);
 $6 = $3;
 HEAP32[$5>>2] = $6;
 STACKTOP = sp;return;
}
function __ZN5Eigen18TriangularViewImplIKNS_12SparseMatrixIdLi0EiEELj5ENS_6SparseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal32sparse_solve_triangular_selectorIKNS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi5ELi1ELi0EE3runERS4_RS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0.0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0.0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp;
 $10 = sp + 16|0;
 $2 = $0;
 $3 = $1;
 $11 = $2;
 __ZN5Eigen8internal9evaluatorIKNS_12SparseMatrixIdLi0EiEEEC2ERS4_($4,$11);
 $5 = 0;
 L1: while(1) {
  $12 = $5;
  $13 = $3;
  __THREW__ = 0;
  $14 = (invoke_ii(638,($13|0))|0);
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   break;
  }
  $17 = ($12|0)<($14|0);
  if (!($17)) {
   label = 30;
   break;
  }
  $8 = 0;
  while(1) {
   $18 = $8;
   $19 = $2;
   __THREW__ = 0;
   $20 = (invoke_ii(441,($19|0))|0);
   $21 = __THREW__; __THREW__ = 0;
   $22 = $21&1;
   if ($22) {
    break L1;
   }
   $23 = ($18|0)<($20|0);
   if (!($23)) {
    break;
   }
   $24 = $3;
   $25 = $8;
   $26 = $5;
   __THREW__ = 0;
   $27 = (invoke_iiii(640,($24|0),($25|0),($26|0))|0);
   $28 = __THREW__; __THREW__ = 0;
   $29 = $28&1;
   if ($29) {
    break L1;
   }
   $9 = $27;
   $30 = $9;
   $31 = +HEAPF64[$30>>3];
   $32 = $31 != 0.0;
   L10: do {
    if ($32) {
     __THREW__ = 0;
     $33 = (invoke_ii(508,($4|0))|0);
     $34 = __THREW__; __THREW__ = 0;
     $35 = $34&1;
     if ($35) {
      break L1;
     }
     $36 = $8;
     __THREW__ = 0;
     invoke_viii(509,($10|0),($33|0),($36|0));
     $37 = __THREW__; __THREW__ = 0;
     $38 = $37&1;
     if ($38) {
      break L1;
     }
     while(1) {
      __THREW__ = 0;
      $39 = (invoke_ii(510,($10|0))|0);
      $40 = __THREW__; __THREW__ = 0;
      $41 = $40&1;
      if ($41) {
       break L1;
      }
      if (!($39)) {
       break;
      }
      __THREW__ = 0;
      $42 = (invoke_ii(512,($10|0))|0);
      $43 = __THREW__; __THREW__ = 0;
      $44 = $43&1;
      if ($44) {
       break L1;
      }
      $45 = $8;
      $46 = ($42|0)<($45|0);
      if (!($46)) {
       break;
      }
      __THREW__ = 0;
      (invoke_ii(514,($10|0))|0);
      $47 = __THREW__; __THREW__ = 0;
      $48 = $47&1;
      if ($48) {
       break L1;
      }
     }
     __THREW__ = 0;
     $53 = (invoke_ii(510,($10|0))|0);
     $54 = __THREW__; __THREW__ = 0;
     $55 = $54&1;
     if ($55) {
      break L1;
     }
     if ($53) {
      __THREW__ = 0;
      $56 = (invoke_ii(512,($10|0))|0);
      $57 = __THREW__; __THREW__ = 0;
      $58 = $57&1;
      if ($58) {
       break L1;
      }
      $59 = $8;
      $60 = ($56|0)==($59|0);
      if ($60) {
       __THREW__ = 0;
       (invoke_ii(514,($10|0))|0);
       $61 = __THREW__; __THREW__ = 0;
       $62 = $61&1;
       if ($62) {
        break L1;
       }
      }
     }
     while(1) {
      __THREW__ = 0;
      $63 = (invoke_ii(510,($10|0))|0);
      $64 = __THREW__; __THREW__ = 0;
      $65 = $64&1;
      if ($65) {
       break L1;
      }
      if (!($63)) {
       break L10;
      }
      $66 = $9;
      $67 = +HEAPF64[$66>>3];
      __THREW__ = 0;
      $68 = (invoke_ii(511,($10|0))|0);
      $69 = __THREW__; __THREW__ = 0;
      $70 = $69&1;
      if ($70) {
       break L1;
      }
      $71 = +HEAPF64[$68>>3];
      $72 = $67 * $71;
      $73 = $3;
      __THREW__ = 0;
      $74 = (invoke_ii(512,($10|0))|0);
      $75 = __THREW__; __THREW__ = 0;
      $76 = $75&1;
      if ($76) {
       break L1;
      }
      $77 = $5;
      __THREW__ = 0;
      $78 = (invoke_iiii(640,($73|0),($74|0),($77|0))|0);
      $79 = __THREW__; __THREW__ = 0;
      $80 = $79&1;
      if ($80) {
       break L1;
      }
      $81 = +HEAPF64[$78>>3];
      $82 = $81 - $72;
      HEAPF64[$78>>3] = $82;
      __THREW__ = 0;
      (invoke_ii(514,($10|0))|0);
      $83 = __THREW__; __THREW__ = 0;
      $84 = $83&1;
      if ($84) {
       break L1;
      }
     }
    }
   } while(0);
   $85 = $8;
   $86 = (($85) + 1)|0;
   $8 = $86;
  }
  $87 = $5;
  $88 = (($87) + 1)|0;
  $5 = $88;
 }
 if ((label|0) == 30) {
  __ZN5Eigen8internal9evaluatorIKNS_12SparseMatrixIdLi0EiEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $49 = ___cxa_find_matching_catch_2()|0;
 $50 = tempRet0;
 $6 = $49;
 $7 = $50;
 __THREW__ = 0;
 invoke_vi(611,($4|0));
 $51 = __THREW__; __THREW__ = 0;
 $52 = $51&1;
 if ($52) {
  $91 = ___cxa_find_matching_catch_3(0|0)|0;
  $92 = tempRet0;
  ___clang_call_terminate($91);
  // unreachable;
 } else {
  $89 = $6;
  $90 = $7;
  ___resumeException($89|0);
  // unreachable;
 }
}
function __ZNK5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj5EE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EEC2ERS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen18TriangularViewImplIKNS_12SparseMatrixIdLi0EiEELj1ENS_6SparseEEC2Ev($4);
 $5 = ((($4)) + 4|0);
 $6 = $3;
 HEAP32[$5>>2] = $6;
 STACKTOP = sp;return;
}
function __ZN5Eigen18TriangularViewImplIKNS_12SparseMatrixIdLi0EiEELj1ENS_6SparseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal32sparse_solve_triangular_selectorIKNS_12SparseMatrixIdLi0EiEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELi0EE3runERS4_RS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0.0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp;
 $10 = sp + 16|0;
 $2 = $0;
 $3 = $1;
 $11 = $2;
 __ZN5Eigen8internal9evaluatorIKNS_12SparseMatrixIdLi0EiEEEC2ERS4_($4,$11);
 $5 = 0;
 L1: while(1) {
  $12 = $5;
  $13 = $3;
  __THREW__ = 0;
  $14 = (invoke_ii(638,($13|0))|0);
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if ($16) {
   break;
  }
  $17 = ($12|0)<($14|0);
  if (!($17)) {
   label = 36;
   break;
  }
  $8 = 0;
  while(1) {
   $18 = $8;
   $19 = $2;
   __THREW__ = 0;
   $20 = (invoke_ii(441,($19|0))|0);
   $21 = __THREW__; __THREW__ = 0;
   $22 = $21&1;
   if ($22) {
    break L1;
   }
   $23 = ($18|0)<($20|0);
   if (!($23)) {
    break;
   }
   $24 = $3;
   $25 = $8;
   $26 = $5;
   __THREW__ = 0;
   $27 = (invoke_iiii(640,($24|0),($25|0),($26|0))|0);
   $28 = __THREW__; __THREW__ = 0;
   $29 = $28&1;
   if ($29) {
    break L1;
   }
   $9 = $27;
   $30 = $9;
   $31 = +HEAPF64[$30>>3];
   $32 = $31 != 0.0;
   L10: do {
    if ($32) {
     __THREW__ = 0;
     $33 = (invoke_ii(508,($4|0))|0);
     $34 = __THREW__; __THREW__ = 0;
     $35 = $34&1;
     if ($35) {
      break L1;
     }
     $36 = $8;
     __THREW__ = 0;
     invoke_viii(509,($10|0),($33|0),($36|0));
     $37 = __THREW__; __THREW__ = 0;
     $38 = $37&1;
     if ($38) {
      break L1;
     }
     while(1) {
      __THREW__ = 0;
      $39 = (invoke_ii(510,($10|0))|0);
      $40 = __THREW__; __THREW__ = 0;
      $41 = $40&1;
      if ($41) {
       break L1;
      }
      if (!($39)) {
       break;
      }
      __THREW__ = 0;
      $42 = (invoke_ii(512,($10|0))|0);
      $43 = __THREW__; __THREW__ = 0;
      $44 = $43&1;
      if ($44) {
       break L1;
      }
      $45 = $8;
      $46 = ($42|0)<($45|0);
      if (!($46)) {
       break;
      }
      __THREW__ = 0;
      (invoke_ii(514,($10|0))|0);
      $47 = __THREW__; __THREW__ = 0;
      $48 = $47&1;
      if ($48) {
       break L1;
      }
     }
     __THREW__ = 0;
     $53 = (invoke_ii(510,($10|0))|0);
     $54 = __THREW__; __THREW__ = 0;
     $55 = $54&1;
     if ($55) {
      break L1;
     }
     if (!($53)) {
      label = 21;
      break L1;
     }
     __THREW__ = 0;
     $56 = (invoke_ii(512,($10|0))|0);
     $57 = __THREW__; __THREW__ = 0;
     $58 = $57&1;
     if ($58) {
      break L1;
     }
     $59 = $8;
     $60 = ($56|0)==($59|0);
     if (!($60)) {
      label = 21;
      break L1;
     }
     __THREW__ = 0;
     $62 = (invoke_ii(511,($10|0))|0);
     $63 = __THREW__; __THREW__ = 0;
     $64 = $63&1;
     if ($64) {
      break L1;
     }
     $65 = +HEAPF64[$62>>3];
     $66 = $9;
     $67 = +HEAPF64[$66>>3];
     $68 = $67 / $65;
     HEAPF64[$66>>3] = $68;
     __THREW__ = 0;
     $69 = (invoke_ii(510,($10|0))|0);
     $70 = __THREW__; __THREW__ = 0;
     $71 = $70&1;
     if ($71) {
      break L1;
     }
     do {
      if ($69) {
       __THREW__ = 0;
       $72 = (invoke_ii(512,($10|0))|0);
       $73 = __THREW__; __THREW__ = 0;
       $74 = $73&1;
       if ($74) {
        break L1;
       }
       $75 = $8;
       $76 = ($72|0)==($75|0);
       if (!($76)) {
        break;
       }
       __THREW__ = 0;
       (invoke_ii(514,($10|0))|0);
       $77 = __THREW__; __THREW__ = 0;
       $78 = $77&1;
       if ($78) {
        break L1;
       }
      }
     } while(0);
     while(1) {
      __THREW__ = 0;
      $79 = (invoke_ii(510,($10|0))|0);
      $80 = __THREW__; __THREW__ = 0;
      $81 = $80&1;
      if ($81) {
       break L1;
      }
      if (!($79)) {
       break L10;
      }
      $82 = $9;
      $83 = +HEAPF64[$82>>3];
      __THREW__ = 0;
      $84 = (invoke_ii(511,($10|0))|0);
      $85 = __THREW__; __THREW__ = 0;
      $86 = $85&1;
      if ($86) {
       break L1;
      }
      $87 = +HEAPF64[$84>>3];
      $88 = $83 * $87;
      $89 = $3;
      __THREW__ = 0;
      $90 = (invoke_ii(512,($10|0))|0);
      $91 = __THREW__; __THREW__ = 0;
      $92 = $91&1;
      if ($92) {
       break L1;
      }
      $93 = $5;
      __THREW__ = 0;
      $94 = (invoke_iiii(640,($89|0),($90|0),($93|0))|0);
      $95 = __THREW__; __THREW__ = 0;
      $96 = $95&1;
      if ($96) {
       break L1;
      }
      $97 = +HEAPF64[$94>>3];
      $98 = $97 - $88;
      HEAPF64[$94>>3] = $98;
      __THREW__ = 0;
      (invoke_ii(514,($10|0))|0);
      $99 = __THREW__; __THREW__ = 0;
      $100 = $99&1;
      if ($100) {
       break L1;
      }
     }
    }
   } while(0);
   $101 = $8;
   $102 = (($101) + 1)|0;
   $8 = $102;
  }
  $103 = $5;
  $104 = (($103) + 1)|0;
  $5 = $104;
 }
 if ((label|0) == 21) {
  __THREW__ = 0;
  invoke_viiii(162,(7340|0),(7292|0),124,(2040|0));
  $61 = __THREW__; __THREW__ = 0;
 }
 else if ((label|0) == 36) {
  __ZN5Eigen8internal9evaluatorIKNS_12SparseMatrixIdLi0EiEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $49 = ___cxa_find_matching_catch_2()|0;
 $50 = tempRet0;
 $6 = $49;
 $7 = $50;
 __THREW__ = 0;
 invoke_vi(611,($4|0));
 $51 = __THREW__; __THREW__ = 0;
 $52 = $51&1;
 if ($52) {
  $107 = ___cxa_find_matching_catch_3(0|0)|0;
  $108 = tempRet0;
  ___clang_call_terminate($107);
  // unreachable;
 } else {
  $105 = $6;
  $106 = $7;
  ___resumeException($105|0);
  // unreachable;
 }
}
function __ZNK5Eigen14TriangularViewIKNS_12SparseMatrixIdLi0EiEELj1EE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen15DiagonalWrapperIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERS3_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 HEAP32[$4>>2] = $5;
 STACKTOP = sp;return;
}
function __ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE8diagonalEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen15DiagonalWrapperIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE8diagonalEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE12cwiseInverseEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 4|0;
 $2 = $1;
 $4 = $2;
 $5 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7derivedEv($4)|0);
 __ZN5Eigen8internal17scalar_inverse_opIdEC2Ev($3);
 __ZN5Eigen12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERS6_RKS3_($0,$5,$3);
 STACKTOP = sp;return;
}
function __ZN5Eigen15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERS9_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 4|0);
 $6 = $3;
 __ZN5Eigen12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS7_($5,$6);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen15DiagonalWrapperIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE8diagonalEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal17scalar_inverse_opIdEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERS6_RKS3_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen16CwiseUnaryOpImplINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5DenseEEC2Ev($6);
 $7 = $4;
 HEAP32[$6>>2] = $7;
 $8 = ((($6)) + 4|0);
 $9 = $5;
 __ZN5Eigen8internal17scalar_inverse_opIdEC2ERKS2_($8,$9);
 STACKTOP = sp;return;
}
function __ZN5Eigen16CwiseUnaryOpImplINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17scalar_inverse_opIdEC2ERKS2_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZN5Eigen12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$4>>2] = $6;
 $7 = ((($4)) + 4|0);
 $8 = $3;
 $9 = ((($8)) + 4|0);
 __ZN5Eigen8internal17scalar_inverse_opIdEC2ERKS2_($7,$9);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES7_Li1EEC2ERKSB_RS8_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen11ProductImplINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES7_Li1ENS_5DenseEEC2Ev($6);
 $7 = $4;
 __ZN5Eigen15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKSA_($6,$7);
 $8 = ((($6)) + 12|0);
 $9 = $5;
 HEAP32[$8>>2] = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEEE4colsEv($10)|0);
 $12 = $5;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = ($11|0)==($13|0);
 if ($14) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2150|0),(2290|0),97,(2323|0));
  // unreachable;
 }
}
function __ZN5Eigen11ProductImplINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES7_Li1ENS_5DenseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal18dense_product_baseINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES7_Li1ELi7EEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKSA_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 4|0);
 $6 = $3;
 $7 = ((($6)) + 4|0);
 __ZN5Eigen12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS7_($5,$7);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEEE8diagonalEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE4sizeEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal18dense_product_baseINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES7_Li1ELi7EEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen10MatrixBaseINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen10MatrixBaseINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen9DenseBaseINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen9DenseBaseINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEEE8diagonalEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE8diagonalEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE4rowsEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE4colsEv($2)|0);
 $5 = Math_imul($3, $4)|0;
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE8diagonalEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($2)|0);
 $4 = (__ZNK5Eigen12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $4 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEEEEvRT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = $3;
 __ZN5Eigen8internal9assign_opIddEC2Ev($4);
 __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISI_EE5valueEPvE4typeE($5,$6,$4,0);
 STACKTOP = sp;return;
}
function __ZNK5Eigen9EigenBaseINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal15call_assignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_NS0_9enable_ifIXntsr25evaluator_assume_aliasingISI_EE5valueEPvE4typeE($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4;
 $9 = $5;
 $10 = $6;
 __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3;
 $6 = $7;
 $8 = $6;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKSD_RKSF_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal10AssignmentINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEENS0_9assign_opIddEENS0_11Dense2DenseEvE3runERS3_RKSD_RKSF_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3;
 $7 = $4;
 __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEEEEvRKT_RKT0_($6,$7);
 $8 = $3;
 $9 = $4;
 $10 = $5;
 __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($8,$9,$10);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal18check_for_aliasingINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEEEEvRKT_RKT0_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEELb0EE3runERS9_RKSD_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal26call_dense_assignment_loopINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEENS0_9assign_opIddEEEEvRT_RKT0_RKT1_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $6 = sp + 32|0;
 $9 = sp + 16|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $11 = $4;
 __ZN5Eigen8internal9evaluatorINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEEC2ERKSD_($6,$11);
 $12 = $3;
 $13 = $4;
 $14 = $5;
 __THREW__ = 0;
 invoke_viii(670,($12|0),($13|0),($14|0));
 $15 = __THREW__; __THREW__ = 0;
 $16 = $15&1;
 do {
  if ($16) {
   label = 8;
  } else {
   $17 = $3;
   __THREW__ = 0;
   invoke_vii(432,($9|0),($17|0));
   $18 = __THREW__; __THREW__ = 0;
   $19 = $18&1;
   if ($19) {
    label = 8;
   } else {
    $20 = $5;
    $21 = $3;
    __THREW__ = 0;
    $22 = (invoke_ii(635,($21|0))|0);
    $23 = __THREW__; __THREW__ = 0;
    $24 = $23&1;
    if (!($24)) {
     __THREW__ = 0;
     invoke_viiiii(671,($10|0),($9|0),($6|0),($20|0),($22|0));
     $25 = __THREW__; __THREW__ = 0;
     $26 = $25&1;
     if (!($26)) {
      __THREW__ = 0;
      invoke_vi(672,($10|0));
      $27 = __THREW__; __THREW__ = 0;
      $28 = $27&1;
      if (!($28)) {
       __THREW__ = 0;
       invoke_vi(419,($9|0));
       $29 = __THREW__; __THREW__ = 0;
       $30 = $29&1;
       if ($30) {
        label = 8;
        break;
       }
       __ZN5Eigen8internal9evaluatorINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEED2Ev($6);
       STACKTOP = sp;return;
      }
     }
    }
    $33 = ___cxa_find_matching_catch_2()|0;
    $34 = tempRet0;
    $7 = $33;
    $8 = $34;
    __THREW__ = 0;
    invoke_vi(419,($9|0));
    $35 = __THREW__; __THREW__ = 0;
    $36 = $35&1;
    if ($36) {
     $41 = ___cxa_find_matching_catch_3(0|0)|0;
     $42 = tempRet0;
     ___clang_call_terminate($41);
     // unreachable;
    }
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = ___cxa_find_matching_catch_2()|0;
  $32 = tempRet0;
  $7 = $31;
  $8 = $32;
 }
 __THREW__ = 0;
 invoke_vi(673,($6|0));
 $37 = __THREW__; __THREW__ = 0;
 $38 = $37&1;
 if ($38) {
  $41 = ___cxa_find_matching_catch_3(0|0)|0;
  $42 = tempRet0;
  ___clang_call_terminate($41);
  // unreachable;
 } else {
  $39 = $7;
  $40 = $8;
  ___resumeException($39|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal27checkTransposeAliasing_implINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEELb0EE3runERS9_RKSD_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEEC2ERKSD_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEELi7ENS_13DiagonalShapeENS_10DenseShapeEddEC2ERKSD_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17resize_if_allowedINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $4;
 $9 = (__ZNK5Eigen7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES7_Li1EE4rowsEv($8)|0);
 $6 = $9;
 $10 = $4;
 $11 = (__ZNK5Eigen7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES7_Li1EE4colsEv($10)|0);
 $7 = $11;
 $12 = $3;
 $13 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($12)|0);
 $14 = $6;
 $15 = ($13|0)!=($14|0);
 if ($15) {
  label = 3;
 } else {
  $16 = $3;
  $17 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($16)|0);
  $18 = $7;
  $19 = ($17|0)!=($18|0);
  if ($19) {
   label = 3;
  }
 }
 if ((label|0) == 3) {
  $20 = $3;
  $21 = $6;
  $22 = $7;
  __ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEii($20,$21,$22);
 }
 $23 = $3;
 $24 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4rowsEv($23)|0);
 $25 = $6;
 $26 = ($24|0)==($25|0);
 if (!($26)) {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
 $27 = $3;
 $28 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($27)|0);
 $29 = $7;
 $30 = ($28|0)==($29|0);
 if ($30) {
  STACKTOP = sp;return;
 } else {
  ___assert_fail((2044|0),(2091|0),721,(2132|0));
  // unreachable;
 }
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS4_EEEES4_Li1EEEEENS0_9assign_opIddEELi0EEC2ERS5_RKSG_RKSI_RS4_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5;
 $11 = $6;
 HEAP32[$10>>2] = $11;
 $12 = ((($10)) + 4|0);
 $13 = $7;
 HEAP32[$12>>2] = $13;
 $14 = ((($10)) + 8|0);
 $15 = $8;
 HEAP32[$14>>2] = $15;
 $16 = ((($10)) + 12|0);
 $17 = $9;
 HEAP32[$16>>2] = $17;
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS3_INS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS5_EEEES5_Li1EEEEENS0_9assign_opIddEELi0EEELi1ELi0EE3runERSK_($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = (__ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS4_EEEES4_Li1EEEEENS0_9assign_opIddEELi0EE4sizeEv($4)|0);
 $2 = $5;
 $3 = 0;
 while(1) {
  $6 = $3;
  $7 = $2;
  $8 = ($6|0)<($7|0);
  if (!($8)) {
   break;
  }
  $9 = $1;
  $10 = $3;
  __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS4_EEEES4_Li1EEEEENS0_9assign_opIddEELi0EE11assignCoeffEi($9,$10);
  $11 = $3;
  $12 = (($11) + 1)|0;
  $3 = $12;
 }
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEELi7ENS_13DiagonalShapeENS_10DenseShapeEddED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEELi7ENS_13DiagonalShapeENS_10DenseShapeEddEC2ERKSD_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 $6 = (__ZNK5Eigen7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES7_Li1EE3rhsEv($5)|0);
 $7 = $3;
 $8 = (__ZNK5Eigen7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES7_Li1EE3lhsEv($7)|0);
 $9 = (__ZNK5Eigen15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE8diagonalEv($8)|0);
 __ZN5Eigen8internal31diagonal_product_evaluator_baseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EENS_7ProductINS_15DiagonalWrapperIS9_EES3_Li1EEELi1EEC2ERS7_RS9_($4,$6,$9);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES7_Li1EE3rhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES7_Li1EE3lhsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZN5Eigen8internal31diagonal_product_evaluator_baseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EENS_7ProductINS_15DiagonalWrapperIS9_EES3_Li1EEELi1EEC2ERS7_RS9_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3;
 __ZN5Eigen8internal14evaluator_baseINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEEC2Ev($8);
 $9 = ((($8)) + 4|0);
 $10 = $5;
 __THREW__ = 0;
 invoke_vii(674,($9|0),($10|0));
 $11 = __THREW__; __THREW__ = 0;
 $12 = $11&1;
 if ($12) {
  $17 = ___cxa_find_matching_catch_2()|0;
  $18 = tempRet0;
  $6 = $17;
  $7 = $18;
 } else {
  $13 = ((($8)) + 16|0);
  $14 = $4;
  __THREW__ = 0;
  invoke_vii(432,($13|0),($14|0));
  $15 = __THREW__; __THREW__ = 0;
  $16 = $15&1;
  if (!($16)) {
   STACKTOP = sp;return;
  }
  $19 = ___cxa_find_matching_catch_2()|0;
  $20 = tempRet0;
  $6 = $19;
  $7 = $20;
  __THREW__ = 0;
  invoke_vi(675,($9|0));
  $21 = __THREW__; __THREW__ = 0;
  $22 = $21&1;
  if ($22) {
   $27 = ___cxa_find_matching_catch_3(0|0)|0;
   $28 = tempRet0;
   ___clang_call_terminate($27);
   // unreachable;
  }
 }
 __THREW__ = 0;
 invoke_vi(676,($8|0));
 $23 = __THREW__; __THREW__ = 0;
 $24 = $23&1;
 if ($24) {
  $27 = ___cxa_find_matching_catch_3(0|0)|0;
  $28 = tempRet0;
  ___clang_call_terminate($27);
  // unreachable;
 } else {
  $25 = $6;
  $26 = $7;
  ___resumeException($25|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERS9_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS8_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS0_10IndexBasedEdEC2ERKS8_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS0_10IndexBasedEdEC2ERKS8_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2;
 __ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($6);
 $7 = $3;
 __THREW__ = 0;
 $8 = (invoke_ii(677,($7|0))|0);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if (!($10)) {
  __THREW__ = 0;
  invoke_vii(678,($6|0),($8|0));
  $11 = __THREW__; __THREW__ = 0;
  $12 = $11&1;
  if (!($12)) {
   $13 = ((($6)) + 4|0);
   $14 = $3;
   __THREW__ = 0;
   $15 = (invoke_ii(679,($14|0))|0);
   $16 = __THREW__; __THREW__ = 0;
   $17 = $16&1;
   if (!($17)) {
    __THREW__ = 0;
    invoke_vii(680,($13|0),($15|0));
    $18 = __THREW__; __THREW__ = 0;
    $19 = $18&1;
    if (!($19)) {
     STACKTOP = sp;return;
    }
   }
  }
 }
 $20 = ___cxa_find_matching_catch_2()|0;
 $21 = tempRet0;
 $4 = $20;
 $5 = $21;
 __THREW__ = 0;
 invoke_vi(681,($6|0));
 $22 = __THREW__; __THREW__ = 0;
 $23 = $22&1;
 if ($23) {
  $26 = ___cxa_find_matching_catch_3(0|0)|0;
  $27 = tempRet0;
  ___clang_call_terminate($26);
  // unreachable;
 } else {
  $24 = $4;
  $25 = $5;
  ___resumeException($24|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableC2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7functorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERS4_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal11noncopyableD2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS0_10IndexBasedEdED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS0_10IndexBasedEdED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 4|0);
 __THREW__ = 0;
 invoke_vi(682,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 if (!($7)) {
  __ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $8 = ___cxa_find_matching_catch_2()|0;
 $9 = tempRet0;
 $2 = $8;
 $3 = $9;
 __THREW__ = 0;
 invoke_vi(681,($4|0));
 $10 = __THREW__; __THREW__ = 0;
 $11 = $10&1;
 if ($11) {
  $14 = ___cxa_find_matching_catch_3(0|0)|0;
  $15 = tempRet0;
  ___clang_call_terminate($14);
  // unreachable;
 } else {
  $12 = $2;
  $13 = $3;
  ___resumeException($12|0);
  // unreachable;
 }
}
function __ZN5Eigen8internal9evaluatorIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZNK5Eigen7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES7_Li1EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEEE4rowsEv($2)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNK5Eigen7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES7_Li1EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEEE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = (__ZNK5Eigen12DiagonalBaseINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEEE8diagonalEv($2)|0);
 $4 = (__ZNK5Eigen9EigenBaseINS_12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE4sizeEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS4_EEEES4_Li1EEEEENS0_9assign_opIddEELi0EE4sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4sizeEv($4)|0);
 STACKTOP = sp;return ($5|0);
}
function __ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS4_EEEES4_Li1EEEEENS0_9assign_opIddEELi0EE11assignCoeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAP32[$5>>2]|0;
 $9 = $3;
 $10 = (__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE8coeffRefEi($8,$9)|0);
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $3;
 $14 = (+__ZNK5Eigen8internal31diagonal_product_evaluator_baseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EENS_7ProductINS_15DiagonalWrapperIS9_EES3_Li1EEELi1EE5coeffEi($12,$13));
 HEAPF64[$4>>3] = $14;
 __ZNK5Eigen8internal9assign_opIddE11assignCoeffERdRKd($7,$10,$4);
 STACKTOP = sp;return;
}
function __ZNK5Eigen8internal31diagonal_product_evaluator_baseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EENS_7ProductINS_15DiagonalWrapperIS9_EES3_Li1EEELi1EE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0.0, $12 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 4|0);
 $6 = $3;
 $7 = (+__ZNK5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS0_10IndexBasedEdE5coeffEi($5,$6));
 $8 = ((($4)) + 16|0);
 $9 = $3;
 $10 = (__ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE5coeffEi($8,$9)|0);
 $11 = +HEAPF64[$10>>3];
 $12 = $7 * $11;
 STACKTOP = sp;return (+$12);
}
function __ZNK5Eigen8internal15unary_evaluatorINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS0_10IndexBasedEdE5coeffEi($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = ((($4)) + 4|0);
 $6 = $3;
 $7 = (__ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE5coeffEi($5,$6)|0);
 $8 = (+__ZNK5Eigen8internal17scalar_inverse_opIdEclERKd($4,$7));
 STACKTOP = sp;return (+$8);
}
function __ZNK5Eigen8internal17scalar_inverse_opIdEclERKd($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3;
 $5 = +HEAPF64[$4>>3];
 $6 = 1.0 / $5;
 STACKTOP = sp;return (+$6);
}
function __ZN5Eigen8internal17product_evaluatorINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEELi7ENS_13DiagonalShapeENS_10DenseShapeEddED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal31diagonal_product_evaluator_baseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EENS_7ProductINS_15DiagonalWrapperIS9_EES3_Li1EEELi1EED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal31diagonal_product_evaluator_baseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EENS_7ProductINS_15DiagonalWrapperIS9_EES3_Li1EEELi1EED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1;
 $5 = ((($4)) + 16|0);
 __THREW__ = 0;
 invoke_vi(419,($5|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = $6&1;
 do {
  if ($7) {
   $11 = ___cxa_find_matching_catch_2()|0;
   $12 = tempRet0;
   $2 = $11;
   $3 = $12;
   $13 = ((($4)) + 4|0);
   __THREW__ = 0;
   invoke_vi(675,($13|0));
   $14 = __THREW__; __THREW__ = 0;
   $15 = $14&1;
   if ($15) {
    $22 = ___cxa_find_matching_catch_3(0|0)|0;
    $23 = tempRet0;
    ___clang_call_terminate($22);
    // unreachable;
   }
  } else {
   $8 = ((($4)) + 4|0);
   __THREW__ = 0;
   invoke_vi(675,($8|0));
   $9 = __THREW__; __THREW__ = 0;
   $10 = $9&1;
   if ($10) {
    $16 = ___cxa_find_matching_catch_2()|0;
    $17 = tempRet0;
    $2 = $16;
    $3 = $17;
    break;
   } else {
    __ZN5Eigen8internal14evaluator_baseINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEED2Ev($4);
    STACKTOP = sp;return;
   }
  }
 } while(0);
 __THREW__ = 0;
 invoke_vi(676,($4|0));
 $18 = __THREW__; __THREW__ = 0;
 $19 = $18&1;
 if ($19) {
  $22 = ___cxa_find_matching_catch_3(0|0)|0;
  $23 = tempRet0;
  ___clang_call_terminate($22);
  // unreachable;
 } else {
  $20 = $2;
  $21 = $3;
  ___resumeException($20|0);
  // unreachable;
 }
}
function __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7adjointEv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $1;
 $3 = $2;
 __ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE9transposeEv($0,$3);
 STACKTOP = sp;return;
}
function __ZN5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EEC2ERS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen18TriangularViewImplIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6ENS_6SparseEEC2Ev($4);
 $5 = ((($4)) + 4|0);
 $6 = $3;
 ;HEAP32[$5>>2]=HEAP32[$6>>2]|0;HEAP32[$5+4>>2]=HEAP32[$6+4>>2]|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen18TriangularViewImplIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6ENS_6SparseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen9TransposeIKNS_12SparseMatrixIdLi0EiEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen9TransposeIKNS_12SparseMatrixIdLi0EiEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal32sparse_solve_triangular_selectorIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi6ELi2ELi1EE3runERS7_RS9_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0.0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0.0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $4 = sp + 16|0;
 $11 = sp + 40|0;
 $2 = $0;
 $3 = $1;
 $12 = $2;
 __ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEEC2ERS7_($4,$12);
 $5 = 0;
 L1: while(1) {
  $13 = $5;
  $14 = $3;
  __THREW__ = 0;
  $15 = (invoke_ii(638,($14|0))|0);
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if ($17) {
   break;
  }
  $18 = ($13|0)<($15|0);
  if (!($18)) {
   label = 30;
   break;
  }
  $19 = $2;
  __THREW__ = 0;
  $20 = (invoke_ii(683,($19|0))|0);
  $21 = __THREW__; __THREW__ = 0;
  $22 = $21&1;
  if ($22) {
   break;
  }
  $23 = (($20) - 1)|0;
  $8 = $23;
  while(1) {
   $24 = $8;
   $25 = ($24|0)>=(0);
   if (!($25)) {
    break;
   }
   $26 = $3;
   $27 = $8;
   $28 = $5;
   __THREW__ = 0;
   $29 = (invoke_iiii(639,($26|0),($27|0),($28|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    break L1;
   }
   $32 = +HEAPF64[$29>>3];
   $9 = $32;
   $10 = 0.0;
   $33 = $8;
   __THREW__ = 0;
   invoke_viii(606,($11|0),($4|0),($33|0));
   $34 = __THREW__; __THREW__ = 0;
   $35 = $34&1;
   if ($35) {
    break L1;
   }
   while(1) {
    __THREW__ = 0;
    $36 = (invoke_ii(510,($11|0))|0);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if ($38) {
     break L1;
    }
    if ($36) {
     __THREW__ = 0;
     $39 = (invoke_ii(512,($11|0))|0);
     $40 = __THREW__; __THREW__ = 0;
     $41 = $40&1;
     if ($41) {
      break L1;
     }
     $42 = $8;
     $43 = ($39|0)<($42|0);
     $96 = $43;
    } else {
     $96 = 0;
    }
    if (!($96)) {
     break;
    }
    __THREW__ = 0;
    (invoke_ii(514,($11|0))|0);
    $44 = __THREW__; __THREW__ = 0;
    $45 = $44&1;
    if ($45) {
     break L1;
    }
   }
   __THREW__ = 0;
   $50 = (invoke_ii(510,($11|0))|0);
   $51 = __THREW__; __THREW__ = 0;
   $52 = $51&1;
   if ($52) {
    break L1;
   }
   if ($50) {
    __THREW__ = 0;
    $53 = (invoke_ii(512,($11|0))|0);
    $54 = __THREW__; __THREW__ = 0;
    $55 = $54&1;
    if ($55) {
     break L1;
    }
    $56 = $8;
    $57 = ($53|0)==($56|0);
    if ($57) {
     __THREW__ = 0;
     (invoke_ii(514,($11|0))|0);
     $58 = __THREW__; __THREW__ = 0;
     $59 = $58&1;
     if ($59) {
      break L1;
     }
    }
   }
   while(1) {
    __THREW__ = 0;
    $60 = (invoke_ii(510,($11|0))|0);
    $61 = __THREW__; __THREW__ = 0;
    $62 = $61&1;
    if ($62) {
     break L1;
    }
    if (!($60)) {
     break;
    }
    __THREW__ = 0;
    $63 = (invoke_ii(511,($11|0))|0);
    $64 = __THREW__; __THREW__ = 0;
    $65 = $64&1;
    if ($65) {
     break L1;
    }
    $66 = +HEAPF64[$63>>3];
    $67 = $3;
    __THREW__ = 0;
    $68 = (invoke_ii(512,($11|0))|0);
    $69 = __THREW__; __THREW__ = 0;
    $70 = $69&1;
    if ($70) {
     break L1;
    }
    $71 = $5;
    __THREW__ = 0;
    $72 = (invoke_iiii(639,($67|0),($68|0),($71|0))|0);
    $73 = __THREW__; __THREW__ = 0;
    $74 = $73&1;
    if ($74) {
     break L1;
    }
    $75 = +HEAPF64[$72>>3];
    $76 = $66 * $75;
    $77 = $9;
    $78 = $77 - $76;
    $9 = $78;
    __THREW__ = 0;
    (invoke_ii(514,($11|0))|0);
    $79 = __THREW__; __THREW__ = 0;
    $80 = $79&1;
    if ($80) {
     break L1;
    }
   }
   $81 = $9;
   $82 = $3;
   $83 = $8;
   $84 = $5;
   __THREW__ = 0;
   $85 = (invoke_iiii(640,($82|0),($83|0),($84|0))|0);
   $86 = __THREW__; __THREW__ = 0;
   $87 = $86&1;
   if ($87) {
    break L1;
   }
   HEAPF64[$85>>3] = $81;
   $88 = $8;
   $89 = (($88) + -1)|0;
   $8 = $89;
  }
  $90 = $5;
  $91 = (($90) + 1)|0;
  $5 = $91;
 }
 if ((label|0) == 30) {
  __ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $46 = ___cxa_find_matching_catch_2()|0;
 $47 = tempRet0;
 $6 = $46;
 $7 = $47;
 __THREW__ = 0;
 invoke_vi(684,($4|0));
 $48 = __THREW__; __THREW__ = 0;
 $49 = $48&1;
 if ($49) {
  $94 = ___cxa_find_matching_catch_3(0|0)|0;
  $95 = tempRet0;
  ___clang_call_terminate($94);
  // unreachable;
 } else {
  $92 = $6;
  $93 = $7;
  ___resumeException($92|0);
  // unreachable;
 }
}
function __ZNK5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj6EE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 STACKTOP = sp;return ($3|0);
}
function __ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEEC2ERS7_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 $5 = $3;
 __ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEEC2ERKS6_($4,$5);
 STACKTOP = sp;return;
}
function __ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEED2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEED2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EEC2ERS6_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2;
 __ZN5Eigen18TriangularViewImplIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2ENS_6SparseEEC2Ev($4);
 $5 = ((($4)) + 4|0);
 $6 = $3;
 ;HEAP32[$5>>2]=HEAP32[$6>>2]|0;HEAP32[$5+4>>2]=HEAP32[$6+4>>2]|0;
 STACKTOP = sp;return;
}
function __ZN5Eigen18TriangularViewImplIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2ENS_6SparseEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 __ZN5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EEEEC2Ev($2);
 STACKTOP = sp;return;
}
function __ZN5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EEEEC2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 HEAP8[$2>>0] = 0;
 STACKTOP = sp;return;
}
function __ZNK5Eigen16SparseMatrixBaseINS_14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EEEE7derivedEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 STACKTOP = sp;return ($2|0);
}
function __ZNK5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EE4colsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen9TransposeIKNS_12SparseMatrixIdLi0EiEEE4colsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZNK5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EE4rowsEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 $4 = (__ZNK5Eigen9TransposeIKNS_12SparseMatrixIdLi0EiEEE4rowsEv($3)|0);
 STACKTOP = sp;return ($4|0);
}
function __ZN5Eigen8internal32sparse_solve_triangular_selectorIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi2ELi2ELi1EE3runERS7_RS9_($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0.0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0, $9 = 0.0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $4 = sp + 16|0;
 $11 = sp + 40|0;
 $2 = $0;
 $3 = $1;
 $12 = $2;
 __ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEEC2ERS7_($4,$12);
 $5 = 0;
 L1: while(1) {
  $13 = $5;
  $14 = $3;
  __THREW__ = 0;
  $15 = (invoke_ii(638,($14|0))|0);
  $16 = __THREW__; __THREW__ = 0;
  $17 = $16&1;
  if ($17) {
   break;
  }
  $18 = ($13|0)<($15|0);
  if (!($18)) {
   label = 32;
   break;
  }
  $19 = $2;
  __THREW__ = 0;
  $20 = (invoke_ii(683,($19|0))|0);
  $21 = __THREW__; __THREW__ = 0;
  $22 = $21&1;
  if ($22) {
   break;
  }
  $23 = (($20) - 1)|0;
  $8 = $23;
  while(1) {
   $24 = $8;
   $25 = ($24|0)>=(0);
   if (!($25)) {
    break;
   }
   $26 = $3;
   $27 = $8;
   $28 = $5;
   __THREW__ = 0;
   $29 = (invoke_iiii(639,($26|0),($27|0),($28|0))|0);
   $30 = __THREW__; __THREW__ = 0;
   $31 = $30&1;
   if ($31) {
    break L1;
   }
   $32 = +HEAPF64[$29>>3];
   $9 = $32;
   $10 = 0.0;
   $33 = $8;
   __THREW__ = 0;
   invoke_viii(606,($11|0),($4|0),($33|0));
   $34 = __THREW__; __THREW__ = 0;
   $35 = $34&1;
   if ($35) {
    break L1;
   }
   while(1) {
    __THREW__ = 0;
    $36 = (invoke_ii(510,($11|0))|0);
    $37 = __THREW__; __THREW__ = 0;
    $38 = $37&1;
    if ($38) {
     break L1;
    }
    if ($36) {
     __THREW__ = 0;
     $39 = (invoke_ii(512,($11|0))|0);
     $40 = __THREW__; __THREW__ = 0;
     $41 = $40&1;
     if ($41) {
      break L1;
     }
     $42 = $8;
     $43 = ($39|0)<($42|0);
     $103 = $43;
    } else {
     $103 = 0;
    }
    if (!($103)) {
     break;
    }
    __THREW__ = 0;
    (invoke_ii(514,($11|0))|0);
    $44 = __THREW__; __THREW__ = 0;
    $45 = $44&1;
    if ($45) {
     break L1;
    }
   }
   __THREW__ = 0;
   $50 = (invoke_ii(510,($11|0))|0);
   $51 = __THREW__; __THREW__ = 0;
   $52 = $51&1;
   if ($52) {
    break L1;
   }
   if (!($50)) {
    label = 20;
    break L1;
   }
   __THREW__ = 0;
   $53 = (invoke_ii(512,($11|0))|0);
   $54 = __THREW__; __THREW__ = 0;
   $55 = $54&1;
   if ($55) {
    break L1;
   }
   $56 = $8;
   $57 = ($53|0)==($56|0);
   if (!($57)) {
    label = 20;
    break L1;
   }
   __THREW__ = 0;
   $59 = (invoke_ii(511,($11|0))|0);
   $60 = __THREW__; __THREW__ = 0;
   $61 = $60&1;
   if ($61) {
    break L1;
   }
   $62 = +HEAPF64[$59>>3];
   $10 = $62;
   __THREW__ = 0;
   (invoke_ii(514,($11|0))|0);
   $63 = __THREW__; __THREW__ = 0;
   $64 = $63&1;
   if ($64) {
    break L1;
   }
   while(1) {
    __THREW__ = 0;
    $65 = (invoke_ii(510,($11|0))|0);
    $66 = __THREW__; __THREW__ = 0;
    $67 = $66&1;
    if ($67) {
     break L1;
    }
    if (!($65)) {
     break;
    }
    __THREW__ = 0;
    $68 = (invoke_ii(511,($11|0))|0);
    $69 = __THREW__; __THREW__ = 0;
    $70 = $69&1;
    if ($70) {
     break L1;
    }
    $71 = +HEAPF64[$68>>3];
    $72 = $3;
    __THREW__ = 0;
    $73 = (invoke_ii(512,($11|0))|0);
    $74 = __THREW__; __THREW__ = 0;
    $75 = $74&1;
    if ($75) {
     break L1;
    }
    $76 = $5;
    __THREW__ = 0;
    $77 = (invoke_iiii(639,($72|0),($73|0),($76|0))|0);
    $78 = __THREW__; __THREW__ = 0;
    $79 = $78&1;
    if ($79) {
     break L1;
    }
    $80 = +HEAPF64[$77>>3];
    $81 = $71 * $80;
    $82 = $9;
    $83 = $82 - $81;
    $9 = $83;
    __THREW__ = 0;
    (invoke_ii(514,($11|0))|0);
    $84 = __THREW__; __THREW__ = 0;
    $85 = $84&1;
    if ($85) {
     break L1;
    }
   }
   $86 = $9;
   $87 = $10;
   $88 = $86 / $87;
   $89 = $3;
   $90 = $8;
   $91 = $5;
   __THREW__ = 0;
   $92 = (invoke_iiii(640,($89|0),($90|0),($91|0))|0);
   $93 = __THREW__; __THREW__ = 0;
   $94 = $93&1;
   if ($94) {
    break L1;
   }
   HEAPF64[$92>>3] = $88;
   $95 = $8;
   $96 = (($95) + -1)|0;
   $8 = $96;
  }
  $97 = $5;
  $98 = (($97) + 1)|0;
  $5 = $98;
 }
 if ((label|0) == 20) {
  __THREW__ = 0;
  invoke_viiii(162,(7340|0),(7292|0),84,(2040|0));
  $58 = __THREW__; __THREW__ = 0;
 }
 else if ((label|0) == 32) {
  __ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEED2Ev($4);
  STACKTOP = sp;return;
 }
 $46 = ___cxa_find_matching_catch_2()|0;
 $47 = tempRet0;
 $6 = $46;
 $7 = $47;
 __THREW__ = 0;
 invoke_vi(684,($4|0));
 $48 = __THREW__; __THREW__ = 0;
 $49 = $48&1;
 if ($49) {
  $101 = ___cxa_find_matching_catch_3(0|0)|0;
  $102 = tempRet0;
  ___clang_call_terminate($101);
  // unreachable;
 } else {
  $99 = $6;
  $100 = $7;
  ___resumeException($99|0);
  // unreachable;
 }
}
function __ZNK5Eigen14TriangularViewIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEELj2EE16nestedExpressionEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1;
 $3 = ((($2)) + 4|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__26vectorI3PosNS_9allocatorIS1_EEE8allocateEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(192|0);
 $45 = $0;
 $46 = $1;
 $47 = $45;
 $48 = $46;
 $49 = (__ZNKSt3__26vectorI3PosNS_9allocatorIS1_EEE8max_sizeEv($47)|0);
 $50 = ($48>>>0)>($49>>>0);
 if ($50) {
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($47);
  // unreachable;
 }
 $44 = $47;
 $51 = $44;
 $52 = ((($51)) + 8|0);
 $43 = $52;
 $53 = $43;
 $42 = $53;
 $54 = $42;
 $55 = $46;
 $12 = $54;
 $13 = $55;
 $56 = $12;
 $57 = $13;
 $9 = $56;
 $10 = $57;
 $11 = 0;
 $58 = $9;
 $59 = $10;
 $8 = $58;
 $60 = ($59>>>0)>(178956970);
 if (!($60)) {
  $71 = $10;
  $72 = ($71*24)|0;
  $7 = $72;
  $73 = $7;
  $74 = (__Znwj($73)|0);
  $75 = ((($47)) + 4|0);
  HEAP32[$75>>2] = $74;
  HEAP32[$47>>2] = $74;
  $76 = HEAP32[$47>>2]|0;
  $77 = $46;
  $78 = (($76) + (($77*24)|0)|0);
  $16 = $47;
  $79 = $16;
  $80 = ((($79)) + 8|0);
  $15 = $80;
  $81 = $15;
  $14 = $81;
  $82 = $14;
  HEAP32[$82>>2] = $78;
  $40 = $47;
  $41 = 0;
  $83 = $40;
  $39 = $83;
  $84 = $39;
  $85 = HEAP32[$84>>2]|0;
  $38 = $85;
  $86 = $38;
  $18 = $83;
  $87 = $18;
  $88 = HEAP32[$87>>2]|0;
  $17 = $88;
  $89 = $17;
  $23 = $83;
  $90 = $23;
  $22 = $90;
  $91 = $22;
  $21 = $91;
  $92 = $21;
  $93 = ((($92)) + 8|0);
  $20 = $93;
  $94 = $20;
  $19 = $94;
  $95 = $19;
  $96 = HEAP32[$95>>2]|0;
  $97 = HEAP32[$91>>2]|0;
  $98 = $96;
  $99 = $97;
  $100 = (($98) - ($99))|0;
  $101 = (($100|0) / 24)&-1;
  $102 = (($89) + (($101*24)|0)|0);
  $25 = $83;
  $103 = $25;
  $104 = HEAP32[$103>>2]|0;
  $24 = $104;
  $105 = $24;
  $30 = $83;
  $106 = $30;
  $29 = $106;
  $107 = $29;
  $28 = $107;
  $108 = $28;
  $109 = ((($108)) + 8|0);
  $27 = $109;
  $110 = $27;
  $26 = $110;
  $111 = $26;
  $112 = HEAP32[$111>>2]|0;
  $113 = HEAP32[$107>>2]|0;
  $114 = $112;
  $115 = $113;
  $116 = (($114) - ($115))|0;
  $117 = (($116|0) / 24)&-1;
  $118 = (($105) + (($117*24)|0)|0);
  $32 = $83;
  $119 = $32;
  $120 = HEAP32[$119>>2]|0;
  $31 = $120;
  $121 = $31;
  $122 = $41;
  $123 = (($121) + (($122*24)|0)|0);
  $33 = $83;
  $34 = $86;
  $35 = $102;
  $36 = $118;
  $37 = $123;
  STACKTOP = sp;return;
 }
 $4 = 1110;
 $61 = (___cxa_allocate_exception(8)|0);
 $62 = $4;
 $2 = $61;
 $3 = $62;
 $63 = $2;
 $64 = $3;
 __THREW__ = 0;
 invoke_vii(114,($63|0),($64|0));
 $65 = __THREW__; __THREW__ = 0;
 $66 = $65&1;
 if ($66) {
  $67 = ___cxa_find_matching_catch_2()|0;
  $68 = tempRet0;
  $5 = $67;
  $6 = $68;
  ___cxa_free_exception(($61|0));
  $69 = $5;
  $70 = $6;
  ___resumeException($69|0);
  // unreachable;
 } else {
  HEAP32[$63>>2] = (920);
  ___cxa_throw(($61|0),(104|0),(21|0));
  // unreachable;
 }
}
function __ZNSt3__26vectorI3PosNS_9allocatorIS1_EEE18__construct_at_endEj($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $15 = sp + 52|0;
 $12 = $0;
 $13 = $1;
 $16 = $12;
 $11 = $16;
 $17 = $11;
 $18 = ((($17)) + 8|0);
 $10 = $18;
 $19 = $10;
 $9 = $19;
 $20 = $9;
 $14 = $20;
 while(1) {
  $2 = $15;
  $3 = $16;
  $4 = 1;
  $21 = $14;
  $22 = ((($16)) + 4|0);
  $23 = HEAP32[$22>>2]|0;
  $5 = $23;
  $24 = $5;
  $6 = $21;
  $7 = $24;
  $25 = $7;
  ;HEAP32[$25>>2]=0|0;HEAP32[$25+4>>2]=0|0;HEAP32[$25+8>>2]=0|0;HEAP32[$25+12>>2]=0|0;HEAP32[$25+16>>2]=0|0;HEAP32[$25+20>>2]=0|0;
  $26 = ((($16)) + 4|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ((($27)) + 24|0);
  HEAP32[$26>>2] = $28;
  $29 = $13;
  $30 = (($29) + -1)|0;
  $13 = $30;
  $8 = $15;
  $31 = $13;
  $32 = ($31>>>0)>(0);
  if (!($32)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __ZNKSt3__26vectorI3PosNS_9allocatorIS1_EEE8max_sizeEv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $3 = sp + 8|0;
 $5 = sp + 77|0;
 $11 = sp;
 $14 = sp + 76|0;
 $19 = sp + 16|0;
 $20 = sp + 12|0;
 $18 = $0;
 $21 = $18;
 $17 = $21;
 $22 = $17;
 $23 = ((($22)) + 8|0);
 $16 = $23;
 $24 = $16;
 $15 = $24;
 $25 = $15;
 $4 = $25;
 $26 = $4;
 ;HEAP8[$3>>0]=HEAP8[$5>>0]|0;
 $2 = $26;
 $27 = $2;
 $1 = $27;
 HEAP32[$19>>2] = 178956970;
 HEAP32[$20>>2] = 2147483647;
 $12 = $19;
 $13 = $20;
 $28 = $12;
 $29 = $13;
 ;HEAP8[$11>>0]=HEAP8[$14>>0]|0;
 $9 = $28;
 $10 = $29;
 $30 = $10;
 $31 = $9;
 $6 = $11;
 $7 = $30;
 $8 = $31;
 $32 = $7;
 $33 = HEAP32[$32>>2]|0;
 $34 = $8;
 $35 = HEAP32[$34>>2]|0;
 $36 = ($33>>>0)<($35>>>0);
 $37 = $10;
 $38 = $9;
 $39 = $36 ? $37 : $38;
 $40 = HEAP32[$39>>2]|0;
 STACKTOP = sp;return ($40|0);
}
function __GLOBAL__sub_I_deform_cpp() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___cxx_global_var_init();
 return;
}
function _malloc($0) {
 $0 = $0|0;
 var $$$0172$i = 0, $$$0173$i = 0, $$$4236$i = 0, $$$4329$i = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i20$i = 0, $$01$i$i = 0, $$0172$lcssa$i = 0, $$01726$i = 0, $$0173$lcssa$i = 0, $$01735$i = 0, $$0192 = 0, $$0194 = 0, $$0201$i$i = 0, $$0202$i$i = 0, $$0206$i$i = 0;
 var $$0207$i$i = 0, $$024370$i = 0, $$0260$i$i = 0, $$0261$i$i = 0, $$0262$i$i = 0, $$0268$i$i = 0, $$0269$i$i = 0, $$0320$i = 0, $$0322$i = 0, $$0323$i = 0, $$0325$i = 0, $$0331$i = 0, $$0336$i = 0, $$0337$$i = 0, $$0337$i = 0, $$0339$i = 0, $$0340$i = 0, $$0345$i = 0, $$1176$i = 0, $$1178$i = 0;
 var $$124469$i = 0, $$1264$i$i = 0, $$1266$i$i = 0, $$1321$i = 0, $$1326$i = 0, $$1341$i = 0, $$1347$i = 0, $$1351$i = 0, $$2234243136$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2333$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i200 = 0, $$3328$i = 0, $$3349$i = 0, $$4$lcssa$i = 0, $$4$ph$i = 0, $$411$i = 0;
 var $$4236$i = 0, $$4329$lcssa$i = 0, $$432910$i = 0, $$4335$$4$i = 0, $$4335$ph$i = 0, $$43359$i = 0, $$723947$i = 0, $$748$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i17$i = 0, $$pre$i195 = 0, $$pre$i210 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i18$iZ2D = 0, $$pre$phi$i211Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$sink1$i = 0;
 var $$sink1$i$i = 0, $$sink14$i = 0, $$sink2$i = 0, $$sink2$i204 = 0, $$sink3$i = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0;
 var $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0;
 var $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0;
 var $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0;
 var $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0;
 var $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0;
 var $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0;
 var $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0;
 var $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0;
 var $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0;
 var $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0;
 var $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0;
 var $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0;
 var $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0;
 var $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0;
 var $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0;
 var $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0;
 var $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0;
 var $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0;
 var $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0;
 var $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0;
 var $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0;
 var $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0;
 var $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0;
 var $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0;
 var $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0;
 var $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0;
 var $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0;
 var $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0;
 var $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0;
 var $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0;
 var $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0;
 var $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0;
 var $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0;
 var $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0;
 var $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0;
 var $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0;
 var $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $98 = 0, $99 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i208 = 0, $exitcond$i$i = 0, $not$$i = 0;
 var $not$$i$i = 0, $not$$i197 = 0, $not$$i209 = 0, $not$1$i = 0, $not$1$i203 = 0, $not$3$i = 0, $not$5$i = 0, $or$cond$i = 0, $or$cond$i201 = 0, $or$cond1$i = 0, $or$cond10$i = 0, $or$cond11$i = 0, $or$cond11$not$i = 0, $or$cond12$i = 0, $or$cond2$i = 0, $or$cond2$i199 = 0, $or$cond49$i = 0, $or$cond5$i = 0, $or$cond50$i = 0, $or$cond7$i = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = ($0>>>0)<(245);
 do {
  if ($2) {
   $3 = ($0>>>0)<(11);
   $4 = (($0) + 11)|0;
   $5 = $4 & -8;
   $6 = $3 ? 16 : $5;
   $7 = $6 >>> 3;
   $8 = HEAP32[2672]|0;
   $9 = $8 >>> $7;
   $10 = $9 & 3;
   $11 = ($10|0)==(0);
   if (!($11)) {
    $12 = $9 & 1;
    $13 = $12 ^ 1;
    $14 = (($13) + ($7))|0;
    $15 = $14 << 1;
    $16 = (10728 + ($15<<2)|0);
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($18)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($16|0)==($20|0);
    if ($21) {
     $22 = 1 << $14;
     $23 = $22 ^ -1;
     $24 = $8 & $23;
     HEAP32[2672] = $24;
    } else {
     $25 = ((($20)) + 12|0);
     HEAP32[$25>>2] = $16;
     HEAP32[$17>>2] = $20;
    }
    $26 = $14 << 3;
    $27 = $26 | 3;
    $28 = ((($18)) + 4|0);
    HEAP32[$28>>2] = $27;
    $29 = (($18) + ($26)|0);
    $30 = ((($29)) + 4|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = $31 | 1;
    HEAP32[$30>>2] = $32;
    $$0 = $19;
    STACKTOP = sp;return ($$0|0);
   }
   $33 = HEAP32[(10696)>>2]|0;
   $34 = ($6>>>0)>($33>>>0);
   if ($34) {
    $35 = ($9|0)==(0);
    if (!($35)) {
     $36 = $9 << $7;
     $37 = 2 << $7;
     $38 = (0 - ($37))|0;
     $39 = $37 | $38;
     $40 = $36 & $39;
     $41 = (0 - ($40))|0;
     $42 = $40 & $41;
     $43 = (($42) + -1)|0;
     $44 = $43 >>> 12;
     $45 = $44 & 16;
     $46 = $43 >>> $45;
     $47 = $46 >>> 5;
     $48 = $47 & 8;
     $49 = $48 | $45;
     $50 = $46 >>> $48;
     $51 = $50 >>> 2;
     $52 = $51 & 4;
     $53 = $49 | $52;
     $54 = $50 >>> $52;
     $55 = $54 >>> 1;
     $56 = $55 & 2;
     $57 = $53 | $56;
     $58 = $54 >>> $56;
     $59 = $58 >>> 1;
     $60 = $59 & 1;
     $61 = $57 | $60;
     $62 = $58 >>> $60;
     $63 = (($61) + ($62))|0;
     $64 = $63 << 1;
     $65 = (10728 + ($64<<2)|0);
     $66 = ((($65)) + 8|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ((($67)) + 8|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = ($65|0)==($69|0);
     if ($70) {
      $71 = 1 << $63;
      $72 = $71 ^ -1;
      $73 = $8 & $72;
      HEAP32[2672] = $73;
      $90 = $73;
     } else {
      $74 = ((($69)) + 12|0);
      HEAP32[$74>>2] = $65;
      HEAP32[$66>>2] = $69;
      $90 = $8;
     }
     $75 = $63 << 3;
     $76 = (($75) - ($6))|0;
     $77 = $6 | 3;
     $78 = ((($67)) + 4|0);
     HEAP32[$78>>2] = $77;
     $79 = (($67) + ($6)|0);
     $80 = $76 | 1;
     $81 = ((($79)) + 4|0);
     HEAP32[$81>>2] = $80;
     $82 = (($79) + ($76)|0);
     HEAP32[$82>>2] = $76;
     $83 = ($33|0)==(0);
     if (!($83)) {
      $84 = HEAP32[(10708)>>2]|0;
      $85 = $33 >>> 3;
      $86 = $85 << 1;
      $87 = (10728 + ($86<<2)|0);
      $88 = 1 << $85;
      $89 = $90 & $88;
      $91 = ($89|0)==(0);
      if ($91) {
       $92 = $90 | $88;
       HEAP32[2672] = $92;
       $$pre = ((($87)) + 8|0);
       $$0194 = $87;$$pre$phiZ2D = $$pre;
      } else {
       $93 = ((($87)) + 8|0);
       $94 = HEAP32[$93>>2]|0;
       $$0194 = $94;$$pre$phiZ2D = $93;
      }
      HEAP32[$$pre$phiZ2D>>2] = $84;
      $95 = ((($$0194)) + 12|0);
      HEAP32[$95>>2] = $84;
      $96 = ((($84)) + 8|0);
      HEAP32[$96>>2] = $$0194;
      $97 = ((($84)) + 12|0);
      HEAP32[$97>>2] = $87;
     }
     HEAP32[(10696)>>2] = $76;
     HEAP32[(10708)>>2] = $79;
     $$0 = $68;
     STACKTOP = sp;return ($$0|0);
    }
    $98 = HEAP32[(10692)>>2]|0;
    $99 = ($98|0)==(0);
    if ($99) {
     $$0192 = $6;
    } else {
     $100 = (0 - ($98))|0;
     $101 = $98 & $100;
     $102 = (($101) + -1)|0;
     $103 = $102 >>> 12;
     $104 = $103 & 16;
     $105 = $102 >>> $104;
     $106 = $105 >>> 5;
     $107 = $106 & 8;
     $108 = $107 | $104;
     $109 = $105 >>> $107;
     $110 = $109 >>> 2;
     $111 = $110 & 4;
     $112 = $108 | $111;
     $113 = $109 >>> $111;
     $114 = $113 >>> 1;
     $115 = $114 & 2;
     $116 = $112 | $115;
     $117 = $113 >>> $115;
     $118 = $117 >>> 1;
     $119 = $118 & 1;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = (($120) + ($121))|0;
     $123 = (10992 + ($122<<2)|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ((($124)) + 4|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = $126 & -8;
     $128 = (($127) - ($6))|0;
     $129 = ((($124)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $not$3$i = ($130|0)==(0|0);
     $$sink14$i = $not$3$i&1;
     $131 = (((($124)) + 16|0) + ($$sink14$i<<2)|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ($132|0)==(0|0);
     if ($133) {
      $$0172$lcssa$i = $124;$$0173$lcssa$i = $128;
     } else {
      $$01726$i = $124;$$01735$i = $128;$135 = $132;
      while(1) {
       $134 = ((($135)) + 4|0);
       $136 = HEAP32[$134>>2]|0;
       $137 = $136 & -8;
       $138 = (($137) - ($6))|0;
       $139 = ($138>>>0)<($$01735$i>>>0);
       $$$0173$i = $139 ? $138 : $$01735$i;
       $$$0172$i = $139 ? $135 : $$01726$i;
       $140 = ((($135)) + 16|0);
       $141 = HEAP32[$140>>2]|0;
       $not$$i = ($141|0)==(0|0);
       $$sink1$i = $not$$i&1;
       $142 = (((($135)) + 16|0) + ($$sink1$i<<2)|0);
       $143 = HEAP32[$142>>2]|0;
       $144 = ($143|0)==(0|0);
       if ($144) {
        $$0172$lcssa$i = $$$0172$i;$$0173$lcssa$i = $$$0173$i;
        break;
       } else {
        $$01726$i = $$$0172$i;$$01735$i = $$$0173$i;$135 = $143;
       }
      }
     }
     $145 = (($$0172$lcssa$i) + ($6)|0);
     $146 = ($$0172$lcssa$i>>>0)<($145>>>0);
     if ($146) {
      $147 = ((($$0172$lcssa$i)) + 24|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = ((($$0172$lcssa$i)) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ($150|0)==($$0172$lcssa$i|0);
      do {
       if ($151) {
        $156 = ((($$0172$lcssa$i)) + 20|0);
        $157 = HEAP32[$156>>2]|0;
        $158 = ($157|0)==(0|0);
        if ($158) {
         $159 = ((($$0172$lcssa$i)) + 16|0);
         $160 = HEAP32[$159>>2]|0;
         $161 = ($160|0)==(0|0);
         if ($161) {
          $$3$i = 0;
          break;
         } else {
          $$1176$i = $160;$$1178$i = $159;
         }
        } else {
         $$1176$i = $157;$$1178$i = $156;
        }
        while(1) {
         $162 = ((($$1176$i)) + 20|0);
         $163 = HEAP32[$162>>2]|0;
         $164 = ($163|0)==(0|0);
         if (!($164)) {
          $$1176$i = $163;$$1178$i = $162;
          continue;
         }
         $165 = ((($$1176$i)) + 16|0);
         $166 = HEAP32[$165>>2]|0;
         $167 = ($166|0)==(0|0);
         if ($167) {
          break;
         } else {
          $$1176$i = $166;$$1178$i = $165;
         }
        }
        HEAP32[$$1178$i>>2] = 0;
        $$3$i = $$1176$i;
       } else {
        $152 = ((($$0172$lcssa$i)) + 8|0);
        $153 = HEAP32[$152>>2]|0;
        $154 = ((($153)) + 12|0);
        HEAP32[$154>>2] = $150;
        $155 = ((($150)) + 8|0);
        HEAP32[$155>>2] = $153;
        $$3$i = $150;
       }
      } while(0);
      $168 = ($148|0)==(0|0);
      do {
       if (!($168)) {
        $169 = ((($$0172$lcssa$i)) + 28|0);
        $170 = HEAP32[$169>>2]|0;
        $171 = (10992 + ($170<<2)|0);
        $172 = HEAP32[$171>>2]|0;
        $173 = ($$0172$lcssa$i|0)==($172|0);
        if ($173) {
         HEAP32[$171>>2] = $$3$i;
         $cond$i = ($$3$i|0)==(0|0);
         if ($cond$i) {
          $174 = 1 << $170;
          $175 = $174 ^ -1;
          $176 = $98 & $175;
          HEAP32[(10692)>>2] = $176;
          break;
         }
        } else {
         $177 = ((($148)) + 16|0);
         $178 = HEAP32[$177>>2]|0;
         $not$1$i = ($178|0)!=($$0172$lcssa$i|0);
         $$sink2$i = $not$1$i&1;
         $179 = (((($148)) + 16|0) + ($$sink2$i<<2)|0);
         HEAP32[$179>>2] = $$3$i;
         $180 = ($$3$i|0)==(0|0);
         if ($180) {
          break;
         }
        }
        $181 = ((($$3$i)) + 24|0);
        HEAP32[$181>>2] = $148;
        $182 = ((($$0172$lcssa$i)) + 16|0);
        $183 = HEAP32[$182>>2]|0;
        $184 = ($183|0)==(0|0);
        if (!($184)) {
         $185 = ((($$3$i)) + 16|0);
         HEAP32[$185>>2] = $183;
         $186 = ((($183)) + 24|0);
         HEAP32[$186>>2] = $$3$i;
        }
        $187 = ((($$0172$lcssa$i)) + 20|0);
        $188 = HEAP32[$187>>2]|0;
        $189 = ($188|0)==(0|0);
        if (!($189)) {
         $190 = ((($$3$i)) + 20|0);
         HEAP32[$190>>2] = $188;
         $191 = ((($188)) + 24|0);
         HEAP32[$191>>2] = $$3$i;
        }
       }
      } while(0);
      $192 = ($$0173$lcssa$i>>>0)<(16);
      if ($192) {
       $193 = (($$0173$lcssa$i) + ($6))|0;
       $194 = $193 | 3;
       $195 = ((($$0172$lcssa$i)) + 4|0);
       HEAP32[$195>>2] = $194;
       $196 = (($$0172$lcssa$i) + ($193)|0);
       $197 = ((($196)) + 4|0);
       $198 = HEAP32[$197>>2]|0;
       $199 = $198 | 1;
       HEAP32[$197>>2] = $199;
      } else {
       $200 = $6 | 3;
       $201 = ((($$0172$lcssa$i)) + 4|0);
       HEAP32[$201>>2] = $200;
       $202 = $$0173$lcssa$i | 1;
       $203 = ((($145)) + 4|0);
       HEAP32[$203>>2] = $202;
       $204 = (($145) + ($$0173$lcssa$i)|0);
       HEAP32[$204>>2] = $$0173$lcssa$i;
       $205 = ($33|0)==(0);
       if (!($205)) {
        $206 = HEAP32[(10708)>>2]|0;
        $207 = $33 >>> 3;
        $208 = $207 << 1;
        $209 = (10728 + ($208<<2)|0);
        $210 = 1 << $207;
        $211 = $8 & $210;
        $212 = ($211|0)==(0);
        if ($212) {
         $213 = $8 | $210;
         HEAP32[2672] = $213;
         $$pre$i = ((($209)) + 8|0);
         $$0$i = $209;$$pre$phi$iZ2D = $$pre$i;
        } else {
         $214 = ((($209)) + 8|0);
         $215 = HEAP32[$214>>2]|0;
         $$0$i = $215;$$pre$phi$iZ2D = $214;
        }
        HEAP32[$$pre$phi$iZ2D>>2] = $206;
        $216 = ((($$0$i)) + 12|0);
        HEAP32[$216>>2] = $206;
        $217 = ((($206)) + 8|0);
        HEAP32[$217>>2] = $$0$i;
        $218 = ((($206)) + 12|0);
        HEAP32[$218>>2] = $209;
       }
       HEAP32[(10696)>>2] = $$0173$lcssa$i;
       HEAP32[(10708)>>2] = $145;
      }
      $219 = ((($$0172$lcssa$i)) + 8|0);
      $$0 = $219;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$0192 = $6;
     }
    }
   } else {
    $$0192 = $6;
   }
  } else {
   $220 = ($0>>>0)>(4294967231);
   if ($220) {
    $$0192 = -1;
   } else {
    $221 = (($0) + 11)|0;
    $222 = $221 & -8;
    $223 = HEAP32[(10692)>>2]|0;
    $224 = ($223|0)==(0);
    if ($224) {
     $$0192 = $222;
    } else {
     $225 = (0 - ($222))|0;
     $226 = $221 >>> 8;
     $227 = ($226|0)==(0);
     if ($227) {
      $$0336$i = 0;
     } else {
      $228 = ($222>>>0)>(16777215);
      if ($228) {
       $$0336$i = 31;
      } else {
       $229 = (($226) + 1048320)|0;
       $230 = $229 >>> 16;
       $231 = $230 & 8;
       $232 = $226 << $231;
       $233 = (($232) + 520192)|0;
       $234 = $233 >>> 16;
       $235 = $234 & 4;
       $236 = $235 | $231;
       $237 = $232 << $235;
       $238 = (($237) + 245760)|0;
       $239 = $238 >>> 16;
       $240 = $239 & 2;
       $241 = $236 | $240;
       $242 = (14 - ($241))|0;
       $243 = $237 << $240;
       $244 = $243 >>> 15;
       $245 = (($242) + ($244))|0;
       $246 = $245 << 1;
       $247 = (($245) + 7)|0;
       $248 = $222 >>> $247;
       $249 = $248 & 1;
       $250 = $249 | $246;
       $$0336$i = $250;
      }
     }
     $251 = (10992 + ($$0336$i<<2)|0);
     $252 = HEAP32[$251>>2]|0;
     $253 = ($252|0)==(0|0);
     L74: do {
      if ($253) {
       $$2333$i = 0;$$3$i200 = 0;$$3328$i = $225;
       label = 57;
      } else {
       $254 = ($$0336$i|0)==(31);
       $255 = $$0336$i >>> 1;
       $256 = (25 - ($255))|0;
       $257 = $254 ? 0 : $256;
       $258 = $222 << $257;
       $$0320$i = 0;$$0325$i = $225;$$0331$i = $252;$$0337$i = $258;$$0340$i = 0;
       while(1) {
        $259 = ((($$0331$i)) + 4|0);
        $260 = HEAP32[$259>>2]|0;
        $261 = $260 & -8;
        $262 = (($261) - ($222))|0;
        $263 = ($262>>>0)<($$0325$i>>>0);
        if ($263) {
         $264 = ($262|0)==(0);
         if ($264) {
          $$411$i = $$0331$i;$$432910$i = 0;$$43359$i = $$0331$i;
          label = 61;
          break L74;
         } else {
          $$1321$i = $$0331$i;$$1326$i = $262;
         }
        } else {
         $$1321$i = $$0320$i;$$1326$i = $$0325$i;
        }
        $265 = ((($$0331$i)) + 20|0);
        $266 = HEAP32[$265>>2]|0;
        $267 = $$0337$i >>> 31;
        $268 = (((($$0331$i)) + 16|0) + ($267<<2)|0);
        $269 = HEAP32[$268>>2]|0;
        $270 = ($266|0)==(0|0);
        $271 = ($266|0)==($269|0);
        $or$cond2$i199 = $270 | $271;
        $$1341$i = $or$cond2$i199 ? $$0340$i : $266;
        $272 = ($269|0)==(0|0);
        $not$5$i = $272 ^ 1;
        $273 = $not$5$i&1;
        $$0337$$i = $$0337$i << $273;
        if ($272) {
         $$2333$i = $$1341$i;$$3$i200 = $$1321$i;$$3328$i = $$1326$i;
         label = 57;
         break;
        } else {
         $$0320$i = $$1321$i;$$0325$i = $$1326$i;$$0331$i = $269;$$0337$i = $$0337$$i;$$0340$i = $$1341$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 57) {
      $274 = ($$2333$i|0)==(0|0);
      $275 = ($$3$i200|0)==(0|0);
      $or$cond$i201 = $274 & $275;
      if ($or$cond$i201) {
       $276 = 2 << $$0336$i;
       $277 = (0 - ($276))|0;
       $278 = $276 | $277;
       $279 = $223 & $278;
       $280 = ($279|0)==(0);
       if ($280) {
        $$0192 = $222;
        break;
       }
       $281 = (0 - ($279))|0;
       $282 = $279 & $281;
       $283 = (($282) + -1)|0;
       $284 = $283 >>> 12;
       $285 = $284 & 16;
       $286 = $283 >>> $285;
       $287 = $286 >>> 5;
       $288 = $287 & 8;
       $289 = $288 | $285;
       $290 = $286 >>> $288;
       $291 = $290 >>> 2;
       $292 = $291 & 4;
       $293 = $289 | $292;
       $294 = $290 >>> $292;
       $295 = $294 >>> 1;
       $296 = $295 & 2;
       $297 = $293 | $296;
       $298 = $294 >>> $296;
       $299 = $298 >>> 1;
       $300 = $299 & 1;
       $301 = $297 | $300;
       $302 = $298 >>> $300;
       $303 = (($301) + ($302))|0;
       $304 = (10992 + ($303<<2)|0);
       $305 = HEAP32[$304>>2]|0;
       $$4$ph$i = 0;$$4335$ph$i = $305;
      } else {
       $$4$ph$i = $$3$i200;$$4335$ph$i = $$2333$i;
      }
      $306 = ($$4335$ph$i|0)==(0|0);
      if ($306) {
       $$4$lcssa$i = $$4$ph$i;$$4329$lcssa$i = $$3328$i;
      } else {
       $$411$i = $$4$ph$i;$$432910$i = $$3328$i;$$43359$i = $$4335$ph$i;
       label = 61;
      }
     }
     if ((label|0) == 61) {
      while(1) {
       label = 0;
       $307 = ((($$43359$i)) + 4|0);
       $308 = HEAP32[$307>>2]|0;
       $309 = $308 & -8;
       $310 = (($309) - ($222))|0;
       $311 = ($310>>>0)<($$432910$i>>>0);
       $$$4329$i = $311 ? $310 : $$432910$i;
       $$4335$$4$i = $311 ? $$43359$i : $$411$i;
       $312 = ((($$43359$i)) + 16|0);
       $313 = HEAP32[$312>>2]|0;
       $not$1$i203 = ($313|0)==(0|0);
       $$sink2$i204 = $not$1$i203&1;
       $314 = (((($$43359$i)) + 16|0) + ($$sink2$i204<<2)|0);
       $315 = HEAP32[$314>>2]|0;
       $316 = ($315|0)==(0|0);
       if ($316) {
        $$4$lcssa$i = $$4335$$4$i;$$4329$lcssa$i = $$$4329$i;
        break;
       } else {
        $$411$i = $$4335$$4$i;$$432910$i = $$$4329$i;$$43359$i = $315;
        label = 61;
       }
      }
     }
     $317 = ($$4$lcssa$i|0)==(0|0);
     if ($317) {
      $$0192 = $222;
     } else {
      $318 = HEAP32[(10696)>>2]|0;
      $319 = (($318) - ($222))|0;
      $320 = ($$4329$lcssa$i>>>0)<($319>>>0);
      if ($320) {
       $321 = (($$4$lcssa$i) + ($222)|0);
       $322 = ($$4$lcssa$i>>>0)<($321>>>0);
       if (!($322)) {
        $$0 = 0;
        STACKTOP = sp;return ($$0|0);
       }
       $323 = ((($$4$lcssa$i)) + 24|0);
       $324 = HEAP32[$323>>2]|0;
       $325 = ((($$4$lcssa$i)) + 12|0);
       $326 = HEAP32[$325>>2]|0;
       $327 = ($326|0)==($$4$lcssa$i|0);
       do {
        if ($327) {
         $332 = ((($$4$lcssa$i)) + 20|0);
         $333 = HEAP32[$332>>2]|0;
         $334 = ($333|0)==(0|0);
         if ($334) {
          $335 = ((($$4$lcssa$i)) + 16|0);
          $336 = HEAP32[$335>>2]|0;
          $337 = ($336|0)==(0|0);
          if ($337) {
           $$3349$i = 0;
           break;
          } else {
           $$1347$i = $336;$$1351$i = $335;
          }
         } else {
          $$1347$i = $333;$$1351$i = $332;
         }
         while(1) {
          $338 = ((($$1347$i)) + 20|0);
          $339 = HEAP32[$338>>2]|0;
          $340 = ($339|0)==(0|0);
          if (!($340)) {
           $$1347$i = $339;$$1351$i = $338;
           continue;
          }
          $341 = ((($$1347$i)) + 16|0);
          $342 = HEAP32[$341>>2]|0;
          $343 = ($342|0)==(0|0);
          if ($343) {
           break;
          } else {
           $$1347$i = $342;$$1351$i = $341;
          }
         }
         HEAP32[$$1351$i>>2] = 0;
         $$3349$i = $$1347$i;
        } else {
         $328 = ((($$4$lcssa$i)) + 8|0);
         $329 = HEAP32[$328>>2]|0;
         $330 = ((($329)) + 12|0);
         HEAP32[$330>>2] = $326;
         $331 = ((($326)) + 8|0);
         HEAP32[$331>>2] = $329;
         $$3349$i = $326;
        }
       } while(0);
       $344 = ($324|0)==(0|0);
       do {
        if ($344) {
         $426 = $223;
        } else {
         $345 = ((($$4$lcssa$i)) + 28|0);
         $346 = HEAP32[$345>>2]|0;
         $347 = (10992 + ($346<<2)|0);
         $348 = HEAP32[$347>>2]|0;
         $349 = ($$4$lcssa$i|0)==($348|0);
         if ($349) {
          HEAP32[$347>>2] = $$3349$i;
          $cond$i208 = ($$3349$i|0)==(0|0);
          if ($cond$i208) {
           $350 = 1 << $346;
           $351 = $350 ^ -1;
           $352 = $223 & $351;
           HEAP32[(10692)>>2] = $352;
           $426 = $352;
           break;
          }
         } else {
          $353 = ((($324)) + 16|0);
          $354 = HEAP32[$353>>2]|0;
          $not$$i209 = ($354|0)!=($$4$lcssa$i|0);
          $$sink3$i = $not$$i209&1;
          $355 = (((($324)) + 16|0) + ($$sink3$i<<2)|0);
          HEAP32[$355>>2] = $$3349$i;
          $356 = ($$3349$i|0)==(0|0);
          if ($356) {
           $426 = $223;
           break;
          }
         }
         $357 = ((($$3349$i)) + 24|0);
         HEAP32[$357>>2] = $324;
         $358 = ((($$4$lcssa$i)) + 16|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==(0|0);
         if (!($360)) {
          $361 = ((($$3349$i)) + 16|0);
          HEAP32[$361>>2] = $359;
          $362 = ((($359)) + 24|0);
          HEAP32[$362>>2] = $$3349$i;
         }
         $363 = ((($$4$lcssa$i)) + 20|0);
         $364 = HEAP32[$363>>2]|0;
         $365 = ($364|0)==(0|0);
         if ($365) {
          $426 = $223;
         } else {
          $366 = ((($$3349$i)) + 20|0);
          HEAP32[$366>>2] = $364;
          $367 = ((($364)) + 24|0);
          HEAP32[$367>>2] = $$3349$i;
          $426 = $223;
         }
        }
       } while(0);
       $368 = ($$4329$lcssa$i>>>0)<(16);
       do {
        if ($368) {
         $369 = (($$4329$lcssa$i) + ($222))|0;
         $370 = $369 | 3;
         $371 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$371>>2] = $370;
         $372 = (($$4$lcssa$i) + ($369)|0);
         $373 = ((($372)) + 4|0);
         $374 = HEAP32[$373>>2]|0;
         $375 = $374 | 1;
         HEAP32[$373>>2] = $375;
        } else {
         $376 = $222 | 3;
         $377 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$377>>2] = $376;
         $378 = $$4329$lcssa$i | 1;
         $379 = ((($321)) + 4|0);
         HEAP32[$379>>2] = $378;
         $380 = (($321) + ($$4329$lcssa$i)|0);
         HEAP32[$380>>2] = $$4329$lcssa$i;
         $381 = $$4329$lcssa$i >>> 3;
         $382 = ($$4329$lcssa$i>>>0)<(256);
         if ($382) {
          $383 = $381 << 1;
          $384 = (10728 + ($383<<2)|0);
          $385 = HEAP32[2672]|0;
          $386 = 1 << $381;
          $387 = $385 & $386;
          $388 = ($387|0)==(0);
          if ($388) {
           $389 = $385 | $386;
           HEAP32[2672] = $389;
           $$pre$i210 = ((($384)) + 8|0);
           $$0345$i = $384;$$pre$phi$i211Z2D = $$pre$i210;
          } else {
           $390 = ((($384)) + 8|0);
           $391 = HEAP32[$390>>2]|0;
           $$0345$i = $391;$$pre$phi$i211Z2D = $390;
          }
          HEAP32[$$pre$phi$i211Z2D>>2] = $321;
          $392 = ((($$0345$i)) + 12|0);
          HEAP32[$392>>2] = $321;
          $393 = ((($321)) + 8|0);
          HEAP32[$393>>2] = $$0345$i;
          $394 = ((($321)) + 12|0);
          HEAP32[$394>>2] = $384;
          break;
         }
         $395 = $$4329$lcssa$i >>> 8;
         $396 = ($395|0)==(0);
         if ($396) {
          $$0339$i = 0;
         } else {
          $397 = ($$4329$lcssa$i>>>0)>(16777215);
          if ($397) {
           $$0339$i = 31;
          } else {
           $398 = (($395) + 1048320)|0;
           $399 = $398 >>> 16;
           $400 = $399 & 8;
           $401 = $395 << $400;
           $402 = (($401) + 520192)|0;
           $403 = $402 >>> 16;
           $404 = $403 & 4;
           $405 = $404 | $400;
           $406 = $401 << $404;
           $407 = (($406) + 245760)|0;
           $408 = $407 >>> 16;
           $409 = $408 & 2;
           $410 = $405 | $409;
           $411 = (14 - ($410))|0;
           $412 = $406 << $409;
           $413 = $412 >>> 15;
           $414 = (($411) + ($413))|0;
           $415 = $414 << 1;
           $416 = (($414) + 7)|0;
           $417 = $$4329$lcssa$i >>> $416;
           $418 = $417 & 1;
           $419 = $418 | $415;
           $$0339$i = $419;
          }
         }
         $420 = (10992 + ($$0339$i<<2)|0);
         $421 = ((($321)) + 28|0);
         HEAP32[$421>>2] = $$0339$i;
         $422 = ((($321)) + 16|0);
         $423 = ((($422)) + 4|0);
         HEAP32[$423>>2] = 0;
         HEAP32[$422>>2] = 0;
         $424 = 1 << $$0339$i;
         $425 = $426 & $424;
         $427 = ($425|0)==(0);
         if ($427) {
          $428 = $426 | $424;
          HEAP32[(10692)>>2] = $428;
          HEAP32[$420>>2] = $321;
          $429 = ((($321)) + 24|0);
          HEAP32[$429>>2] = $420;
          $430 = ((($321)) + 12|0);
          HEAP32[$430>>2] = $321;
          $431 = ((($321)) + 8|0);
          HEAP32[$431>>2] = $321;
          break;
         }
         $432 = HEAP32[$420>>2]|0;
         $433 = ($$0339$i|0)==(31);
         $434 = $$0339$i >>> 1;
         $435 = (25 - ($434))|0;
         $436 = $433 ? 0 : $435;
         $437 = $$4329$lcssa$i << $436;
         $$0322$i = $437;$$0323$i = $432;
         while(1) {
          $438 = ((($$0323$i)) + 4|0);
          $439 = HEAP32[$438>>2]|0;
          $440 = $439 & -8;
          $441 = ($440|0)==($$4329$lcssa$i|0);
          if ($441) {
           label = 97;
           break;
          }
          $442 = $$0322$i >>> 31;
          $443 = (((($$0323$i)) + 16|0) + ($442<<2)|0);
          $444 = $$0322$i << 1;
          $445 = HEAP32[$443>>2]|0;
          $446 = ($445|0)==(0|0);
          if ($446) {
           label = 96;
           break;
          } else {
           $$0322$i = $444;$$0323$i = $445;
          }
         }
         if ((label|0) == 96) {
          HEAP32[$443>>2] = $321;
          $447 = ((($321)) + 24|0);
          HEAP32[$447>>2] = $$0323$i;
          $448 = ((($321)) + 12|0);
          HEAP32[$448>>2] = $321;
          $449 = ((($321)) + 8|0);
          HEAP32[$449>>2] = $321;
          break;
         }
         else if ((label|0) == 97) {
          $450 = ((($$0323$i)) + 8|0);
          $451 = HEAP32[$450>>2]|0;
          $452 = ((($451)) + 12|0);
          HEAP32[$452>>2] = $321;
          HEAP32[$450>>2] = $321;
          $453 = ((($321)) + 8|0);
          HEAP32[$453>>2] = $451;
          $454 = ((($321)) + 12|0);
          HEAP32[$454>>2] = $$0323$i;
          $455 = ((($321)) + 24|0);
          HEAP32[$455>>2] = 0;
          break;
         }
        }
       } while(0);
       $456 = ((($$4$lcssa$i)) + 8|0);
       $$0 = $456;
       STACKTOP = sp;return ($$0|0);
      } else {
       $$0192 = $222;
      }
     }
    }
   }
  }
 } while(0);
 $457 = HEAP32[(10696)>>2]|0;
 $458 = ($457>>>0)<($$0192>>>0);
 if (!($458)) {
  $459 = (($457) - ($$0192))|0;
  $460 = HEAP32[(10708)>>2]|0;
  $461 = ($459>>>0)>(15);
  if ($461) {
   $462 = (($460) + ($$0192)|0);
   HEAP32[(10708)>>2] = $462;
   HEAP32[(10696)>>2] = $459;
   $463 = $459 | 1;
   $464 = ((($462)) + 4|0);
   HEAP32[$464>>2] = $463;
   $465 = (($462) + ($459)|0);
   HEAP32[$465>>2] = $459;
   $466 = $$0192 | 3;
   $467 = ((($460)) + 4|0);
   HEAP32[$467>>2] = $466;
  } else {
   HEAP32[(10696)>>2] = 0;
   HEAP32[(10708)>>2] = 0;
   $468 = $457 | 3;
   $469 = ((($460)) + 4|0);
   HEAP32[$469>>2] = $468;
   $470 = (($460) + ($457)|0);
   $471 = ((($470)) + 4|0);
   $472 = HEAP32[$471>>2]|0;
   $473 = $472 | 1;
   HEAP32[$471>>2] = $473;
  }
  $474 = ((($460)) + 8|0);
  $$0 = $474;
  STACKTOP = sp;return ($$0|0);
 }
 $475 = HEAP32[(10700)>>2]|0;
 $476 = ($475>>>0)>($$0192>>>0);
 if ($476) {
  $477 = (($475) - ($$0192))|0;
  HEAP32[(10700)>>2] = $477;
  $478 = HEAP32[(10712)>>2]|0;
  $479 = (($478) + ($$0192)|0);
  HEAP32[(10712)>>2] = $479;
  $480 = $477 | 1;
  $481 = ((($479)) + 4|0);
  HEAP32[$481>>2] = $480;
  $482 = $$0192 | 3;
  $483 = ((($478)) + 4|0);
  HEAP32[$483>>2] = $482;
  $484 = ((($478)) + 8|0);
  $$0 = $484;
  STACKTOP = sp;return ($$0|0);
 }
 $485 = HEAP32[2790]|0;
 $486 = ($485|0)==(0);
 if ($486) {
  HEAP32[(11168)>>2] = 4096;
  HEAP32[(11164)>>2] = 4096;
  HEAP32[(11172)>>2] = -1;
  HEAP32[(11176)>>2] = -1;
  HEAP32[(11180)>>2] = 0;
  HEAP32[(11132)>>2] = 0;
  $487 = $1;
  $488 = $487 & -16;
  $489 = $488 ^ 1431655768;
  HEAP32[$1>>2] = $489;
  HEAP32[2790] = $489;
  $493 = 4096;
 } else {
  $$pre$i195 = HEAP32[(11168)>>2]|0;
  $493 = $$pre$i195;
 }
 $490 = (($$0192) + 48)|0;
 $491 = (($$0192) + 47)|0;
 $492 = (($493) + ($491))|0;
 $494 = (0 - ($493))|0;
 $495 = $492 & $494;
 $496 = ($495>>>0)>($$0192>>>0);
 if (!($496)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $497 = HEAP32[(11128)>>2]|0;
 $498 = ($497|0)==(0);
 if (!($498)) {
  $499 = HEAP32[(11120)>>2]|0;
  $500 = (($499) + ($495))|0;
  $501 = ($500>>>0)<=($499>>>0);
  $502 = ($500>>>0)>($497>>>0);
  $or$cond1$i = $501 | $502;
  if ($or$cond1$i) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $503 = HEAP32[(11132)>>2]|0;
 $504 = $503 & 4;
 $505 = ($504|0)==(0);
 L167: do {
  if ($505) {
   $506 = HEAP32[(10712)>>2]|0;
   $507 = ($506|0)==(0|0);
   L169: do {
    if ($507) {
     label = 118;
    } else {
     $$0$i20$i = (11136);
     while(1) {
      $508 = HEAP32[$$0$i20$i>>2]|0;
      $509 = ($508>>>0)>($506>>>0);
      if (!($509)) {
       $510 = ((($$0$i20$i)) + 4|0);
       $511 = HEAP32[$510>>2]|0;
       $512 = (($508) + ($511)|0);
       $513 = ($512>>>0)>($506>>>0);
       if ($513) {
        break;
       }
      }
      $514 = ((($$0$i20$i)) + 8|0);
      $515 = HEAP32[$514>>2]|0;
      $516 = ($515|0)==(0|0);
      if ($516) {
       label = 118;
       break L169;
      } else {
       $$0$i20$i = $515;
      }
     }
     $539 = (($492) - ($475))|0;
     $540 = $539 & $494;
     $541 = ($540>>>0)<(2147483647);
     if ($541) {
      $542 = (_sbrk(($540|0))|0);
      $543 = HEAP32[$$0$i20$i>>2]|0;
      $544 = HEAP32[$510>>2]|0;
      $545 = (($543) + ($544)|0);
      $546 = ($542|0)==($545|0);
      if ($546) {
       $547 = ($542|0)==((-1)|0);
       if ($547) {
        $$2234243136$i = $540;
       } else {
        $$723947$i = $540;$$748$i = $542;
        label = 135;
        break L167;
       }
      } else {
       $$2247$ph$i = $542;$$2253$ph$i = $540;
       label = 126;
      }
     } else {
      $$2234243136$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 118) {
     $517 = (_sbrk(0)|0);
     $518 = ($517|0)==((-1)|0);
     if ($518) {
      $$2234243136$i = 0;
     } else {
      $519 = $517;
      $520 = HEAP32[(11164)>>2]|0;
      $521 = (($520) + -1)|0;
      $522 = $521 & $519;
      $523 = ($522|0)==(0);
      $524 = (($521) + ($519))|0;
      $525 = (0 - ($520))|0;
      $526 = $524 & $525;
      $527 = (($526) - ($519))|0;
      $528 = $523 ? 0 : $527;
      $$$i = (($528) + ($495))|0;
      $529 = HEAP32[(11120)>>2]|0;
      $530 = (($$$i) + ($529))|0;
      $531 = ($$$i>>>0)>($$0192>>>0);
      $532 = ($$$i>>>0)<(2147483647);
      $or$cond$i = $531 & $532;
      if ($or$cond$i) {
       $533 = HEAP32[(11128)>>2]|0;
       $534 = ($533|0)==(0);
       if (!($534)) {
        $535 = ($530>>>0)<=($529>>>0);
        $536 = ($530>>>0)>($533>>>0);
        $or$cond2$i = $535 | $536;
        if ($or$cond2$i) {
         $$2234243136$i = 0;
         break;
        }
       }
       $537 = (_sbrk(($$$i|0))|0);
       $538 = ($537|0)==($517|0);
       if ($538) {
        $$723947$i = $$$i;$$748$i = $517;
        label = 135;
        break L167;
       } else {
        $$2247$ph$i = $537;$$2253$ph$i = $$$i;
        label = 126;
       }
      } else {
       $$2234243136$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 126) {
     $548 = (0 - ($$2253$ph$i))|0;
     $549 = ($$2247$ph$i|0)!=((-1)|0);
     $550 = ($$2253$ph$i>>>0)<(2147483647);
     $or$cond7$i = $550 & $549;
     $551 = ($490>>>0)>($$2253$ph$i>>>0);
     $or$cond10$i = $551 & $or$cond7$i;
     if (!($or$cond10$i)) {
      $561 = ($$2247$ph$i|0)==((-1)|0);
      if ($561) {
       $$2234243136$i = 0;
       break;
      } else {
       $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
       label = 135;
       break L167;
      }
     }
     $552 = HEAP32[(11168)>>2]|0;
     $553 = (($491) - ($$2253$ph$i))|0;
     $554 = (($553) + ($552))|0;
     $555 = (0 - ($552))|0;
     $556 = $554 & $555;
     $557 = ($556>>>0)<(2147483647);
     if (!($557)) {
      $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
      label = 135;
      break L167;
     }
     $558 = (_sbrk(($556|0))|0);
     $559 = ($558|0)==((-1)|0);
     if ($559) {
      (_sbrk(($548|0))|0);
      $$2234243136$i = 0;
      break;
     } else {
      $560 = (($556) + ($$2253$ph$i))|0;
      $$723947$i = $560;$$748$i = $$2247$ph$i;
      label = 135;
      break L167;
     }
    }
   } while(0);
   $562 = HEAP32[(11132)>>2]|0;
   $563 = $562 | 4;
   HEAP32[(11132)>>2] = $563;
   $$4236$i = $$2234243136$i;
   label = 133;
  } else {
   $$4236$i = 0;
   label = 133;
  }
 } while(0);
 if ((label|0) == 133) {
  $564 = ($495>>>0)<(2147483647);
  if ($564) {
   $565 = (_sbrk(($495|0))|0);
   $566 = (_sbrk(0)|0);
   $567 = ($565|0)!=((-1)|0);
   $568 = ($566|0)!=((-1)|0);
   $or$cond5$i = $567 & $568;
   $569 = ($565>>>0)<($566>>>0);
   $or$cond11$i = $569 & $or$cond5$i;
   $570 = $566;
   $571 = $565;
   $572 = (($570) - ($571))|0;
   $573 = (($$0192) + 40)|0;
   $574 = ($572>>>0)>($573>>>0);
   $$$4236$i = $574 ? $572 : $$4236$i;
   $or$cond11$not$i = $or$cond11$i ^ 1;
   $575 = ($565|0)==((-1)|0);
   $not$$i197 = $574 ^ 1;
   $576 = $575 | $not$$i197;
   $or$cond49$i = $576 | $or$cond11$not$i;
   if (!($or$cond49$i)) {
    $$723947$i = $$$4236$i;$$748$i = $565;
    label = 135;
   }
  }
 }
 if ((label|0) == 135) {
  $577 = HEAP32[(11120)>>2]|0;
  $578 = (($577) + ($$723947$i))|0;
  HEAP32[(11120)>>2] = $578;
  $579 = HEAP32[(11124)>>2]|0;
  $580 = ($578>>>0)>($579>>>0);
  if ($580) {
   HEAP32[(11124)>>2] = $578;
  }
  $581 = HEAP32[(10712)>>2]|0;
  $582 = ($581|0)==(0|0);
  do {
   if ($582) {
    $583 = HEAP32[(10704)>>2]|0;
    $584 = ($583|0)==(0|0);
    $585 = ($$748$i>>>0)<($583>>>0);
    $or$cond12$i = $584 | $585;
    if ($or$cond12$i) {
     HEAP32[(10704)>>2] = $$748$i;
    }
    HEAP32[(11136)>>2] = $$748$i;
    HEAP32[(11140)>>2] = $$723947$i;
    HEAP32[(11148)>>2] = 0;
    $586 = HEAP32[2790]|0;
    HEAP32[(10724)>>2] = $586;
    HEAP32[(10720)>>2] = -1;
    $$01$i$i = 0;
    while(1) {
     $587 = $$01$i$i << 1;
     $588 = (10728 + ($587<<2)|0);
     $589 = ((($588)) + 12|0);
     HEAP32[$589>>2] = $588;
     $590 = ((($588)) + 8|0);
     HEAP32[$590>>2] = $588;
     $591 = (($$01$i$i) + 1)|0;
     $exitcond$i$i = ($591|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $$01$i$i = $591;
     }
    }
    $592 = (($$723947$i) + -40)|0;
    $593 = ((($$748$i)) + 8|0);
    $594 = $593;
    $595 = $594 & 7;
    $596 = ($595|0)==(0);
    $597 = (0 - ($594))|0;
    $598 = $597 & 7;
    $599 = $596 ? 0 : $598;
    $600 = (($$748$i) + ($599)|0);
    $601 = (($592) - ($599))|0;
    HEAP32[(10712)>>2] = $600;
    HEAP32[(10700)>>2] = $601;
    $602 = $601 | 1;
    $603 = ((($600)) + 4|0);
    HEAP32[$603>>2] = $602;
    $604 = (($600) + ($601)|0);
    $605 = ((($604)) + 4|0);
    HEAP32[$605>>2] = 40;
    $606 = HEAP32[(11176)>>2]|0;
    HEAP32[(10716)>>2] = $606;
   } else {
    $$024370$i = (11136);
    while(1) {
     $607 = HEAP32[$$024370$i>>2]|0;
     $608 = ((($$024370$i)) + 4|0);
     $609 = HEAP32[$608>>2]|0;
     $610 = (($607) + ($609)|0);
     $611 = ($$748$i|0)==($610|0);
     if ($611) {
      label = 145;
      break;
     }
     $612 = ((($$024370$i)) + 8|0);
     $613 = HEAP32[$612>>2]|0;
     $614 = ($613|0)==(0|0);
     if ($614) {
      break;
     } else {
      $$024370$i = $613;
     }
    }
    if ((label|0) == 145) {
     $615 = ((($$024370$i)) + 12|0);
     $616 = HEAP32[$615>>2]|0;
     $617 = $616 & 8;
     $618 = ($617|0)==(0);
     if ($618) {
      $619 = ($581>>>0)>=($607>>>0);
      $620 = ($581>>>0)<($$748$i>>>0);
      $or$cond50$i = $620 & $619;
      if ($or$cond50$i) {
       $621 = (($609) + ($$723947$i))|0;
       HEAP32[$608>>2] = $621;
       $622 = HEAP32[(10700)>>2]|0;
       $623 = ((($581)) + 8|0);
       $624 = $623;
       $625 = $624 & 7;
       $626 = ($625|0)==(0);
       $627 = (0 - ($624))|0;
       $628 = $627 & 7;
       $629 = $626 ? 0 : $628;
       $630 = (($581) + ($629)|0);
       $631 = (($$723947$i) - ($629))|0;
       $632 = (($622) + ($631))|0;
       HEAP32[(10712)>>2] = $630;
       HEAP32[(10700)>>2] = $632;
       $633 = $632 | 1;
       $634 = ((($630)) + 4|0);
       HEAP32[$634>>2] = $633;
       $635 = (($630) + ($632)|0);
       $636 = ((($635)) + 4|0);
       HEAP32[$636>>2] = 40;
       $637 = HEAP32[(11176)>>2]|0;
       HEAP32[(10716)>>2] = $637;
       break;
      }
     }
    }
    $638 = HEAP32[(10704)>>2]|0;
    $639 = ($$748$i>>>0)<($638>>>0);
    if ($639) {
     HEAP32[(10704)>>2] = $$748$i;
    }
    $640 = (($$748$i) + ($$723947$i)|0);
    $$124469$i = (11136);
    while(1) {
     $641 = HEAP32[$$124469$i>>2]|0;
     $642 = ($641|0)==($640|0);
     if ($642) {
      label = 153;
      break;
     }
     $643 = ((($$124469$i)) + 8|0);
     $644 = HEAP32[$643>>2]|0;
     $645 = ($644|0)==(0|0);
     if ($645) {
      break;
     } else {
      $$124469$i = $644;
     }
    }
    if ((label|0) == 153) {
     $646 = ((($$124469$i)) + 12|0);
     $647 = HEAP32[$646>>2]|0;
     $648 = $647 & 8;
     $649 = ($648|0)==(0);
     if ($649) {
      HEAP32[$$124469$i>>2] = $$748$i;
      $650 = ((($$124469$i)) + 4|0);
      $651 = HEAP32[$650>>2]|0;
      $652 = (($651) + ($$723947$i))|0;
      HEAP32[$650>>2] = $652;
      $653 = ((($$748$i)) + 8|0);
      $654 = $653;
      $655 = $654 & 7;
      $656 = ($655|0)==(0);
      $657 = (0 - ($654))|0;
      $658 = $657 & 7;
      $659 = $656 ? 0 : $658;
      $660 = (($$748$i) + ($659)|0);
      $661 = ((($640)) + 8|0);
      $662 = $661;
      $663 = $662 & 7;
      $664 = ($663|0)==(0);
      $665 = (0 - ($662))|0;
      $666 = $665 & 7;
      $667 = $664 ? 0 : $666;
      $668 = (($640) + ($667)|0);
      $669 = $668;
      $670 = $660;
      $671 = (($669) - ($670))|0;
      $672 = (($660) + ($$0192)|0);
      $673 = (($671) - ($$0192))|0;
      $674 = $$0192 | 3;
      $675 = ((($660)) + 4|0);
      HEAP32[$675>>2] = $674;
      $676 = ($668|0)==($581|0);
      do {
       if ($676) {
        $677 = HEAP32[(10700)>>2]|0;
        $678 = (($677) + ($673))|0;
        HEAP32[(10700)>>2] = $678;
        HEAP32[(10712)>>2] = $672;
        $679 = $678 | 1;
        $680 = ((($672)) + 4|0);
        HEAP32[$680>>2] = $679;
       } else {
        $681 = HEAP32[(10708)>>2]|0;
        $682 = ($668|0)==($681|0);
        if ($682) {
         $683 = HEAP32[(10696)>>2]|0;
         $684 = (($683) + ($673))|0;
         HEAP32[(10696)>>2] = $684;
         HEAP32[(10708)>>2] = $672;
         $685 = $684 | 1;
         $686 = ((($672)) + 4|0);
         HEAP32[$686>>2] = $685;
         $687 = (($672) + ($684)|0);
         HEAP32[$687>>2] = $684;
         break;
        }
        $688 = ((($668)) + 4|0);
        $689 = HEAP32[$688>>2]|0;
        $690 = $689 & 3;
        $691 = ($690|0)==(1);
        if ($691) {
         $692 = $689 & -8;
         $693 = $689 >>> 3;
         $694 = ($689>>>0)<(256);
         L237: do {
          if ($694) {
           $695 = ((($668)) + 8|0);
           $696 = HEAP32[$695>>2]|0;
           $697 = ((($668)) + 12|0);
           $698 = HEAP32[$697>>2]|0;
           $699 = ($698|0)==($696|0);
           if ($699) {
            $700 = 1 << $693;
            $701 = $700 ^ -1;
            $702 = HEAP32[2672]|0;
            $703 = $702 & $701;
            HEAP32[2672] = $703;
            break;
           } else {
            $704 = ((($696)) + 12|0);
            HEAP32[$704>>2] = $698;
            $705 = ((($698)) + 8|0);
            HEAP32[$705>>2] = $696;
            break;
           }
          } else {
           $706 = ((($668)) + 24|0);
           $707 = HEAP32[$706>>2]|0;
           $708 = ((($668)) + 12|0);
           $709 = HEAP32[$708>>2]|0;
           $710 = ($709|0)==($668|0);
           do {
            if ($710) {
             $715 = ((($668)) + 16|0);
             $716 = ((($715)) + 4|0);
             $717 = HEAP32[$716>>2]|0;
             $718 = ($717|0)==(0|0);
             if ($718) {
              $719 = HEAP32[$715>>2]|0;
              $720 = ($719|0)==(0|0);
              if ($720) {
               $$3$i$i = 0;
               break;
              } else {
               $$1264$i$i = $719;$$1266$i$i = $715;
              }
             } else {
              $$1264$i$i = $717;$$1266$i$i = $716;
             }
             while(1) {
              $721 = ((($$1264$i$i)) + 20|0);
              $722 = HEAP32[$721>>2]|0;
              $723 = ($722|0)==(0|0);
              if (!($723)) {
               $$1264$i$i = $722;$$1266$i$i = $721;
               continue;
              }
              $724 = ((($$1264$i$i)) + 16|0);
              $725 = HEAP32[$724>>2]|0;
              $726 = ($725|0)==(0|0);
              if ($726) {
               break;
              } else {
               $$1264$i$i = $725;$$1266$i$i = $724;
              }
             }
             HEAP32[$$1266$i$i>>2] = 0;
             $$3$i$i = $$1264$i$i;
            } else {
             $711 = ((($668)) + 8|0);
             $712 = HEAP32[$711>>2]|0;
             $713 = ((($712)) + 12|0);
             HEAP32[$713>>2] = $709;
             $714 = ((($709)) + 8|0);
             HEAP32[$714>>2] = $712;
             $$3$i$i = $709;
            }
           } while(0);
           $727 = ($707|0)==(0|0);
           if ($727) {
            break;
           }
           $728 = ((($668)) + 28|0);
           $729 = HEAP32[$728>>2]|0;
           $730 = (10992 + ($729<<2)|0);
           $731 = HEAP32[$730>>2]|0;
           $732 = ($668|0)==($731|0);
           do {
            if ($732) {
             HEAP32[$730>>2] = $$3$i$i;
             $cond$i$i = ($$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $733 = 1 << $729;
             $734 = $733 ^ -1;
             $735 = HEAP32[(10692)>>2]|0;
             $736 = $735 & $734;
             HEAP32[(10692)>>2] = $736;
             break L237;
            } else {
             $737 = ((($707)) + 16|0);
             $738 = HEAP32[$737>>2]|0;
             $not$$i$i = ($738|0)!=($668|0);
             $$sink1$i$i = $not$$i$i&1;
             $739 = (((($707)) + 16|0) + ($$sink1$i$i<<2)|0);
             HEAP32[$739>>2] = $$3$i$i;
             $740 = ($$3$i$i|0)==(0|0);
             if ($740) {
              break L237;
             }
            }
           } while(0);
           $741 = ((($$3$i$i)) + 24|0);
           HEAP32[$741>>2] = $707;
           $742 = ((($668)) + 16|0);
           $743 = HEAP32[$742>>2]|0;
           $744 = ($743|0)==(0|0);
           if (!($744)) {
            $745 = ((($$3$i$i)) + 16|0);
            HEAP32[$745>>2] = $743;
            $746 = ((($743)) + 24|0);
            HEAP32[$746>>2] = $$3$i$i;
           }
           $747 = ((($742)) + 4|0);
           $748 = HEAP32[$747>>2]|0;
           $749 = ($748|0)==(0|0);
           if ($749) {
            break;
           }
           $750 = ((($$3$i$i)) + 20|0);
           HEAP32[$750>>2] = $748;
           $751 = ((($748)) + 24|0);
           HEAP32[$751>>2] = $$3$i$i;
          }
         } while(0);
         $752 = (($668) + ($692)|0);
         $753 = (($692) + ($673))|0;
         $$0$i$i = $752;$$0260$i$i = $753;
        } else {
         $$0$i$i = $668;$$0260$i$i = $673;
        }
        $754 = ((($$0$i$i)) + 4|0);
        $755 = HEAP32[$754>>2]|0;
        $756 = $755 & -2;
        HEAP32[$754>>2] = $756;
        $757 = $$0260$i$i | 1;
        $758 = ((($672)) + 4|0);
        HEAP32[$758>>2] = $757;
        $759 = (($672) + ($$0260$i$i)|0);
        HEAP32[$759>>2] = $$0260$i$i;
        $760 = $$0260$i$i >>> 3;
        $761 = ($$0260$i$i>>>0)<(256);
        if ($761) {
         $762 = $760 << 1;
         $763 = (10728 + ($762<<2)|0);
         $764 = HEAP32[2672]|0;
         $765 = 1 << $760;
         $766 = $764 & $765;
         $767 = ($766|0)==(0);
         if ($767) {
          $768 = $764 | $765;
          HEAP32[2672] = $768;
          $$pre$i17$i = ((($763)) + 8|0);
          $$0268$i$i = $763;$$pre$phi$i18$iZ2D = $$pre$i17$i;
         } else {
          $769 = ((($763)) + 8|0);
          $770 = HEAP32[$769>>2]|0;
          $$0268$i$i = $770;$$pre$phi$i18$iZ2D = $769;
         }
         HEAP32[$$pre$phi$i18$iZ2D>>2] = $672;
         $771 = ((($$0268$i$i)) + 12|0);
         HEAP32[$771>>2] = $672;
         $772 = ((($672)) + 8|0);
         HEAP32[$772>>2] = $$0268$i$i;
         $773 = ((($672)) + 12|0);
         HEAP32[$773>>2] = $763;
         break;
        }
        $774 = $$0260$i$i >>> 8;
        $775 = ($774|0)==(0);
        do {
         if ($775) {
          $$0269$i$i = 0;
         } else {
          $776 = ($$0260$i$i>>>0)>(16777215);
          if ($776) {
           $$0269$i$i = 31;
           break;
          }
          $777 = (($774) + 1048320)|0;
          $778 = $777 >>> 16;
          $779 = $778 & 8;
          $780 = $774 << $779;
          $781 = (($780) + 520192)|0;
          $782 = $781 >>> 16;
          $783 = $782 & 4;
          $784 = $783 | $779;
          $785 = $780 << $783;
          $786 = (($785) + 245760)|0;
          $787 = $786 >>> 16;
          $788 = $787 & 2;
          $789 = $784 | $788;
          $790 = (14 - ($789))|0;
          $791 = $785 << $788;
          $792 = $791 >>> 15;
          $793 = (($790) + ($792))|0;
          $794 = $793 << 1;
          $795 = (($793) + 7)|0;
          $796 = $$0260$i$i >>> $795;
          $797 = $796 & 1;
          $798 = $797 | $794;
          $$0269$i$i = $798;
         }
        } while(0);
        $799 = (10992 + ($$0269$i$i<<2)|0);
        $800 = ((($672)) + 28|0);
        HEAP32[$800>>2] = $$0269$i$i;
        $801 = ((($672)) + 16|0);
        $802 = ((($801)) + 4|0);
        HEAP32[$802>>2] = 0;
        HEAP32[$801>>2] = 0;
        $803 = HEAP32[(10692)>>2]|0;
        $804 = 1 << $$0269$i$i;
        $805 = $803 & $804;
        $806 = ($805|0)==(0);
        if ($806) {
         $807 = $803 | $804;
         HEAP32[(10692)>>2] = $807;
         HEAP32[$799>>2] = $672;
         $808 = ((($672)) + 24|0);
         HEAP32[$808>>2] = $799;
         $809 = ((($672)) + 12|0);
         HEAP32[$809>>2] = $672;
         $810 = ((($672)) + 8|0);
         HEAP32[$810>>2] = $672;
         break;
        }
        $811 = HEAP32[$799>>2]|0;
        $812 = ($$0269$i$i|0)==(31);
        $813 = $$0269$i$i >>> 1;
        $814 = (25 - ($813))|0;
        $815 = $812 ? 0 : $814;
        $816 = $$0260$i$i << $815;
        $$0261$i$i = $816;$$0262$i$i = $811;
        while(1) {
         $817 = ((($$0262$i$i)) + 4|0);
         $818 = HEAP32[$817>>2]|0;
         $819 = $818 & -8;
         $820 = ($819|0)==($$0260$i$i|0);
         if ($820) {
          label = 194;
          break;
         }
         $821 = $$0261$i$i >>> 31;
         $822 = (((($$0262$i$i)) + 16|0) + ($821<<2)|0);
         $823 = $$0261$i$i << 1;
         $824 = HEAP32[$822>>2]|0;
         $825 = ($824|0)==(0|0);
         if ($825) {
          label = 193;
          break;
         } else {
          $$0261$i$i = $823;$$0262$i$i = $824;
         }
        }
        if ((label|0) == 193) {
         HEAP32[$822>>2] = $672;
         $826 = ((($672)) + 24|0);
         HEAP32[$826>>2] = $$0262$i$i;
         $827 = ((($672)) + 12|0);
         HEAP32[$827>>2] = $672;
         $828 = ((($672)) + 8|0);
         HEAP32[$828>>2] = $672;
         break;
        }
        else if ((label|0) == 194) {
         $829 = ((($$0262$i$i)) + 8|0);
         $830 = HEAP32[$829>>2]|0;
         $831 = ((($830)) + 12|0);
         HEAP32[$831>>2] = $672;
         HEAP32[$829>>2] = $672;
         $832 = ((($672)) + 8|0);
         HEAP32[$832>>2] = $830;
         $833 = ((($672)) + 12|0);
         HEAP32[$833>>2] = $$0262$i$i;
         $834 = ((($672)) + 24|0);
         HEAP32[$834>>2] = 0;
         break;
        }
       }
      } while(0);
      $959 = ((($660)) + 8|0);
      $$0 = $959;
      STACKTOP = sp;return ($$0|0);
     }
    }
    $$0$i$i$i = (11136);
    while(1) {
     $835 = HEAP32[$$0$i$i$i>>2]|0;
     $836 = ($835>>>0)>($581>>>0);
     if (!($836)) {
      $837 = ((($$0$i$i$i)) + 4|0);
      $838 = HEAP32[$837>>2]|0;
      $839 = (($835) + ($838)|0);
      $840 = ($839>>>0)>($581>>>0);
      if ($840) {
       break;
      }
     }
     $841 = ((($$0$i$i$i)) + 8|0);
     $842 = HEAP32[$841>>2]|0;
     $$0$i$i$i = $842;
    }
    $843 = ((($839)) + -47|0);
    $844 = ((($843)) + 8|0);
    $845 = $844;
    $846 = $845 & 7;
    $847 = ($846|0)==(0);
    $848 = (0 - ($845))|0;
    $849 = $848 & 7;
    $850 = $847 ? 0 : $849;
    $851 = (($843) + ($850)|0);
    $852 = ((($581)) + 16|0);
    $853 = ($851>>>0)<($852>>>0);
    $854 = $853 ? $581 : $851;
    $855 = ((($854)) + 8|0);
    $856 = ((($854)) + 24|0);
    $857 = (($$723947$i) + -40)|0;
    $858 = ((($$748$i)) + 8|0);
    $859 = $858;
    $860 = $859 & 7;
    $861 = ($860|0)==(0);
    $862 = (0 - ($859))|0;
    $863 = $862 & 7;
    $864 = $861 ? 0 : $863;
    $865 = (($$748$i) + ($864)|0);
    $866 = (($857) - ($864))|0;
    HEAP32[(10712)>>2] = $865;
    HEAP32[(10700)>>2] = $866;
    $867 = $866 | 1;
    $868 = ((($865)) + 4|0);
    HEAP32[$868>>2] = $867;
    $869 = (($865) + ($866)|0);
    $870 = ((($869)) + 4|0);
    HEAP32[$870>>2] = 40;
    $871 = HEAP32[(11176)>>2]|0;
    HEAP32[(10716)>>2] = $871;
    $872 = ((($854)) + 4|0);
    HEAP32[$872>>2] = 27;
    ;HEAP32[$855>>2]=HEAP32[(11136)>>2]|0;HEAP32[$855+4>>2]=HEAP32[(11136)+4>>2]|0;HEAP32[$855+8>>2]=HEAP32[(11136)+8>>2]|0;HEAP32[$855+12>>2]=HEAP32[(11136)+12>>2]|0;
    HEAP32[(11136)>>2] = $$748$i;
    HEAP32[(11140)>>2] = $$723947$i;
    HEAP32[(11148)>>2] = 0;
    HEAP32[(11144)>>2] = $855;
    $874 = $856;
    while(1) {
     $873 = ((($874)) + 4|0);
     HEAP32[$873>>2] = 7;
     $875 = ((($874)) + 8|0);
     $876 = ($875>>>0)<($839>>>0);
     if ($876) {
      $874 = $873;
     } else {
      break;
     }
    }
    $877 = ($854|0)==($581|0);
    if (!($877)) {
     $878 = $854;
     $879 = $581;
     $880 = (($878) - ($879))|0;
     $881 = HEAP32[$872>>2]|0;
     $882 = $881 & -2;
     HEAP32[$872>>2] = $882;
     $883 = $880 | 1;
     $884 = ((($581)) + 4|0);
     HEAP32[$884>>2] = $883;
     HEAP32[$854>>2] = $880;
     $885 = $880 >>> 3;
     $886 = ($880>>>0)<(256);
     if ($886) {
      $887 = $885 << 1;
      $888 = (10728 + ($887<<2)|0);
      $889 = HEAP32[2672]|0;
      $890 = 1 << $885;
      $891 = $889 & $890;
      $892 = ($891|0)==(0);
      if ($892) {
       $893 = $889 | $890;
       HEAP32[2672] = $893;
       $$pre$i$i = ((($888)) + 8|0);
       $$0206$i$i = $888;$$pre$phi$i$iZ2D = $$pre$i$i;
      } else {
       $894 = ((($888)) + 8|0);
       $895 = HEAP32[$894>>2]|0;
       $$0206$i$i = $895;$$pre$phi$i$iZ2D = $894;
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $581;
      $896 = ((($$0206$i$i)) + 12|0);
      HEAP32[$896>>2] = $581;
      $897 = ((($581)) + 8|0);
      HEAP32[$897>>2] = $$0206$i$i;
      $898 = ((($581)) + 12|0);
      HEAP32[$898>>2] = $888;
      break;
     }
     $899 = $880 >>> 8;
     $900 = ($899|0)==(0);
     if ($900) {
      $$0207$i$i = 0;
     } else {
      $901 = ($880>>>0)>(16777215);
      if ($901) {
       $$0207$i$i = 31;
      } else {
       $902 = (($899) + 1048320)|0;
       $903 = $902 >>> 16;
       $904 = $903 & 8;
       $905 = $899 << $904;
       $906 = (($905) + 520192)|0;
       $907 = $906 >>> 16;
       $908 = $907 & 4;
       $909 = $908 | $904;
       $910 = $905 << $908;
       $911 = (($910) + 245760)|0;
       $912 = $911 >>> 16;
       $913 = $912 & 2;
       $914 = $909 | $913;
       $915 = (14 - ($914))|0;
       $916 = $910 << $913;
       $917 = $916 >>> 15;
       $918 = (($915) + ($917))|0;
       $919 = $918 << 1;
       $920 = (($918) + 7)|0;
       $921 = $880 >>> $920;
       $922 = $921 & 1;
       $923 = $922 | $919;
       $$0207$i$i = $923;
      }
     }
     $924 = (10992 + ($$0207$i$i<<2)|0);
     $925 = ((($581)) + 28|0);
     HEAP32[$925>>2] = $$0207$i$i;
     $926 = ((($581)) + 20|0);
     HEAP32[$926>>2] = 0;
     HEAP32[$852>>2] = 0;
     $927 = HEAP32[(10692)>>2]|0;
     $928 = 1 << $$0207$i$i;
     $929 = $927 & $928;
     $930 = ($929|0)==(0);
     if ($930) {
      $931 = $927 | $928;
      HEAP32[(10692)>>2] = $931;
      HEAP32[$924>>2] = $581;
      $932 = ((($581)) + 24|0);
      HEAP32[$932>>2] = $924;
      $933 = ((($581)) + 12|0);
      HEAP32[$933>>2] = $581;
      $934 = ((($581)) + 8|0);
      HEAP32[$934>>2] = $581;
      break;
     }
     $935 = HEAP32[$924>>2]|0;
     $936 = ($$0207$i$i|0)==(31);
     $937 = $$0207$i$i >>> 1;
     $938 = (25 - ($937))|0;
     $939 = $936 ? 0 : $938;
     $940 = $880 << $939;
     $$0201$i$i = $940;$$0202$i$i = $935;
     while(1) {
      $941 = ((($$0202$i$i)) + 4|0);
      $942 = HEAP32[$941>>2]|0;
      $943 = $942 & -8;
      $944 = ($943|0)==($880|0);
      if ($944) {
       label = 216;
       break;
      }
      $945 = $$0201$i$i >>> 31;
      $946 = (((($$0202$i$i)) + 16|0) + ($945<<2)|0);
      $947 = $$0201$i$i << 1;
      $948 = HEAP32[$946>>2]|0;
      $949 = ($948|0)==(0|0);
      if ($949) {
       label = 215;
       break;
      } else {
       $$0201$i$i = $947;$$0202$i$i = $948;
      }
     }
     if ((label|0) == 215) {
      HEAP32[$946>>2] = $581;
      $950 = ((($581)) + 24|0);
      HEAP32[$950>>2] = $$0202$i$i;
      $951 = ((($581)) + 12|0);
      HEAP32[$951>>2] = $581;
      $952 = ((($581)) + 8|0);
      HEAP32[$952>>2] = $581;
      break;
     }
     else if ((label|0) == 216) {
      $953 = ((($$0202$i$i)) + 8|0);
      $954 = HEAP32[$953>>2]|0;
      $955 = ((($954)) + 12|0);
      HEAP32[$955>>2] = $581;
      HEAP32[$953>>2] = $581;
      $956 = ((($581)) + 8|0);
      HEAP32[$956>>2] = $954;
      $957 = ((($581)) + 12|0);
      HEAP32[$957>>2] = $$0202$i$i;
      $958 = ((($581)) + 24|0);
      HEAP32[$958>>2] = 0;
      break;
     }
    }
   }
  } while(0);
  $960 = HEAP32[(10700)>>2]|0;
  $961 = ($960>>>0)>($$0192>>>0);
  if ($961) {
   $962 = (($960) - ($$0192))|0;
   HEAP32[(10700)>>2] = $962;
   $963 = HEAP32[(10712)>>2]|0;
   $964 = (($963) + ($$0192)|0);
   HEAP32[(10712)>>2] = $964;
   $965 = $962 | 1;
   $966 = ((($964)) + 4|0);
   HEAP32[$966>>2] = $965;
   $967 = $$0192 | 3;
   $968 = ((($963)) + 4|0);
   HEAP32[$968>>2] = $967;
   $969 = ((($963)) + 8|0);
   $$0 = $969;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $970 = (___errno_location()|0);
 HEAP32[$970>>2] = 12;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _free($0) {
 $0 = $0|0;
 var $$0195$i = 0, $$0195$in$i = 0, $$0348 = 0, $$0349 = 0, $$0361 = 0, $$0368 = 0, $$1 = 0, $$1347 = 0, $$1352 = 0, $$1355 = 0, $$1363 = 0, $$1367 = 0, $$2 = 0, $$3 = 0, $$3365 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink3 = 0, $$sink5 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond374 = 0, $cond375 = 0, $not$ = 0, $not$370 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + -8|0);
 $3 = HEAP32[(10704)>>2]|0;
 $4 = ((($0)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & -8;
 $7 = (($2) + ($6)|0);
 $8 = $5 & 1;
 $9 = ($8|0)==(0);
 do {
  if ($9) {
   $10 = HEAP32[$2>>2]|0;
   $11 = $5 & 3;
   $12 = ($11|0)==(0);
   if ($12) {
    return;
   }
   $13 = (0 - ($10))|0;
   $14 = (($2) + ($13)|0);
   $15 = (($10) + ($6))|0;
   $16 = ($14>>>0)<($3>>>0);
   if ($16) {
    return;
   }
   $17 = HEAP32[(10708)>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $78 = ((($7)) + 4|0);
    $79 = HEAP32[$78>>2]|0;
    $80 = $79 & 3;
    $81 = ($80|0)==(3);
    if (!($81)) {
     $$1 = $14;$$1347 = $15;$87 = $14;
     break;
    }
    $82 = (($14) + ($15)|0);
    $83 = ((($14)) + 4|0);
    $84 = $15 | 1;
    $85 = $79 & -2;
    HEAP32[(10696)>>2] = $15;
    HEAP32[$78>>2] = $85;
    HEAP32[$83>>2] = $84;
    HEAP32[$82>>2] = $15;
    return;
   }
   $19 = $10 >>> 3;
   $20 = ($10>>>0)<(256);
   if ($20) {
    $21 = ((($14)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = ((($14)) + 12|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ($24|0)==($22|0);
    if ($25) {
     $26 = 1 << $19;
     $27 = $26 ^ -1;
     $28 = HEAP32[2672]|0;
     $29 = $28 & $27;
     HEAP32[2672] = $29;
     $$1 = $14;$$1347 = $15;$87 = $14;
     break;
    } else {
     $30 = ((($22)) + 12|0);
     HEAP32[$30>>2] = $24;
     $31 = ((($24)) + 8|0);
     HEAP32[$31>>2] = $22;
     $$1 = $14;$$1347 = $15;$87 = $14;
     break;
    }
   }
   $32 = ((($14)) + 24|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($14)) + 12|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($35|0)==($14|0);
   do {
    if ($36) {
     $41 = ((($14)) + 16|0);
     $42 = ((($41)) + 4|0);
     $43 = HEAP32[$42>>2]|0;
     $44 = ($43|0)==(0|0);
     if ($44) {
      $45 = HEAP32[$41>>2]|0;
      $46 = ($45|0)==(0|0);
      if ($46) {
       $$3 = 0;
       break;
      } else {
       $$1352 = $45;$$1355 = $41;
      }
     } else {
      $$1352 = $43;$$1355 = $42;
     }
     while(1) {
      $47 = ((($$1352)) + 20|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = ($48|0)==(0|0);
      if (!($49)) {
       $$1352 = $48;$$1355 = $47;
       continue;
      }
      $50 = ((($$1352)) + 16|0);
      $51 = HEAP32[$50>>2]|0;
      $52 = ($51|0)==(0|0);
      if ($52) {
       break;
      } else {
       $$1352 = $51;$$1355 = $50;
      }
     }
     HEAP32[$$1355>>2] = 0;
     $$3 = $$1352;
    } else {
     $37 = ((($14)) + 8|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ((($38)) + 12|0);
     HEAP32[$39>>2] = $35;
     $40 = ((($35)) + 8|0);
     HEAP32[$40>>2] = $38;
     $$3 = $35;
    }
   } while(0);
   $53 = ($33|0)==(0|0);
   if ($53) {
    $$1 = $14;$$1347 = $15;$87 = $14;
   } else {
    $54 = ((($14)) + 28|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (10992 + ($55<<2)|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = ($14|0)==($57|0);
    if ($58) {
     HEAP32[$56>>2] = $$3;
     $cond374 = ($$3|0)==(0|0);
     if ($cond374) {
      $59 = 1 << $55;
      $60 = $59 ^ -1;
      $61 = HEAP32[(10692)>>2]|0;
      $62 = $61 & $60;
      HEAP32[(10692)>>2] = $62;
      $$1 = $14;$$1347 = $15;$87 = $14;
      break;
     }
    } else {
     $63 = ((($33)) + 16|0);
     $64 = HEAP32[$63>>2]|0;
     $not$370 = ($64|0)!=($14|0);
     $$sink3 = $not$370&1;
     $65 = (((($33)) + 16|0) + ($$sink3<<2)|0);
     HEAP32[$65>>2] = $$3;
     $66 = ($$3|0)==(0|0);
     if ($66) {
      $$1 = $14;$$1347 = $15;$87 = $14;
      break;
     }
    }
    $67 = ((($$3)) + 24|0);
    HEAP32[$67>>2] = $33;
    $68 = ((($14)) + 16|0);
    $69 = HEAP32[$68>>2]|0;
    $70 = ($69|0)==(0|0);
    if (!($70)) {
     $71 = ((($$3)) + 16|0);
     HEAP32[$71>>2] = $69;
     $72 = ((($69)) + 24|0);
     HEAP32[$72>>2] = $$3;
    }
    $73 = ((($68)) + 4|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($74|0)==(0|0);
    if ($75) {
     $$1 = $14;$$1347 = $15;$87 = $14;
    } else {
     $76 = ((($$3)) + 20|0);
     HEAP32[$76>>2] = $74;
     $77 = ((($74)) + 24|0);
     HEAP32[$77>>2] = $$3;
     $$1 = $14;$$1347 = $15;$87 = $14;
    }
   }
  } else {
   $$1 = $2;$$1347 = $6;$87 = $2;
  }
 } while(0);
 $86 = ($87>>>0)<($7>>>0);
 if (!($86)) {
  return;
 }
 $88 = ((($7)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $89 & 1;
 $91 = ($90|0)==(0);
 if ($91) {
  return;
 }
 $92 = $89 & 2;
 $93 = ($92|0)==(0);
 if ($93) {
  $94 = HEAP32[(10712)>>2]|0;
  $95 = ($7|0)==($94|0);
  $96 = HEAP32[(10708)>>2]|0;
  if ($95) {
   $97 = HEAP32[(10700)>>2]|0;
   $98 = (($97) + ($$1347))|0;
   HEAP32[(10700)>>2] = $98;
   HEAP32[(10712)>>2] = $$1;
   $99 = $98 | 1;
   $100 = ((($$1)) + 4|0);
   HEAP32[$100>>2] = $99;
   $101 = ($$1|0)==($96|0);
   if (!($101)) {
    return;
   }
   HEAP32[(10708)>>2] = 0;
   HEAP32[(10696)>>2] = 0;
   return;
  }
  $102 = ($7|0)==($96|0);
  if ($102) {
   $103 = HEAP32[(10696)>>2]|0;
   $104 = (($103) + ($$1347))|0;
   HEAP32[(10696)>>2] = $104;
   HEAP32[(10708)>>2] = $87;
   $105 = $104 | 1;
   $106 = ((($$1)) + 4|0);
   HEAP32[$106>>2] = $105;
   $107 = (($87) + ($104)|0);
   HEAP32[$107>>2] = $104;
   return;
  }
  $108 = $89 & -8;
  $109 = (($108) + ($$1347))|0;
  $110 = $89 >>> 3;
  $111 = ($89>>>0)<(256);
  do {
   if ($111) {
    $112 = ((($7)) + 8|0);
    $113 = HEAP32[$112>>2]|0;
    $114 = ((($7)) + 12|0);
    $115 = HEAP32[$114>>2]|0;
    $116 = ($115|0)==($113|0);
    if ($116) {
     $117 = 1 << $110;
     $118 = $117 ^ -1;
     $119 = HEAP32[2672]|0;
     $120 = $119 & $118;
     HEAP32[2672] = $120;
     break;
    } else {
     $121 = ((($113)) + 12|0);
     HEAP32[$121>>2] = $115;
     $122 = ((($115)) + 8|0);
     HEAP32[$122>>2] = $113;
     break;
    }
   } else {
    $123 = ((($7)) + 24|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = ((($7)) + 12|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($126|0)==($7|0);
    do {
     if ($127) {
      $132 = ((($7)) + 16|0);
      $133 = ((($132)) + 4|0);
      $134 = HEAP32[$133>>2]|0;
      $135 = ($134|0)==(0|0);
      if ($135) {
       $136 = HEAP32[$132>>2]|0;
       $137 = ($136|0)==(0|0);
       if ($137) {
        $$3365 = 0;
        break;
       } else {
        $$1363 = $136;$$1367 = $132;
       }
      } else {
       $$1363 = $134;$$1367 = $133;
      }
      while(1) {
       $138 = ((($$1363)) + 20|0);
       $139 = HEAP32[$138>>2]|0;
       $140 = ($139|0)==(0|0);
       if (!($140)) {
        $$1363 = $139;$$1367 = $138;
        continue;
       }
       $141 = ((($$1363)) + 16|0);
       $142 = HEAP32[$141>>2]|0;
       $143 = ($142|0)==(0|0);
       if ($143) {
        break;
       } else {
        $$1363 = $142;$$1367 = $141;
       }
      }
      HEAP32[$$1367>>2] = 0;
      $$3365 = $$1363;
     } else {
      $128 = ((($7)) + 8|0);
      $129 = HEAP32[$128>>2]|0;
      $130 = ((($129)) + 12|0);
      HEAP32[$130>>2] = $126;
      $131 = ((($126)) + 8|0);
      HEAP32[$131>>2] = $129;
      $$3365 = $126;
     }
    } while(0);
    $144 = ($124|0)==(0|0);
    if (!($144)) {
     $145 = ((($7)) + 28|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = (10992 + ($146<<2)|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = ($7|0)==($148|0);
     if ($149) {
      HEAP32[$147>>2] = $$3365;
      $cond375 = ($$3365|0)==(0|0);
      if ($cond375) {
       $150 = 1 << $146;
       $151 = $150 ^ -1;
       $152 = HEAP32[(10692)>>2]|0;
       $153 = $152 & $151;
       HEAP32[(10692)>>2] = $153;
       break;
      }
     } else {
      $154 = ((($124)) + 16|0);
      $155 = HEAP32[$154>>2]|0;
      $not$ = ($155|0)!=($7|0);
      $$sink5 = $not$&1;
      $156 = (((($124)) + 16|0) + ($$sink5<<2)|0);
      HEAP32[$156>>2] = $$3365;
      $157 = ($$3365|0)==(0|0);
      if ($157) {
       break;
      }
     }
     $158 = ((($$3365)) + 24|0);
     HEAP32[$158>>2] = $124;
     $159 = ((($7)) + 16|0);
     $160 = HEAP32[$159>>2]|0;
     $161 = ($160|0)==(0|0);
     if (!($161)) {
      $162 = ((($$3365)) + 16|0);
      HEAP32[$162>>2] = $160;
      $163 = ((($160)) + 24|0);
      HEAP32[$163>>2] = $$3365;
     }
     $164 = ((($159)) + 4|0);
     $165 = HEAP32[$164>>2]|0;
     $166 = ($165|0)==(0|0);
     if (!($166)) {
      $167 = ((($$3365)) + 20|0);
      HEAP32[$167>>2] = $165;
      $168 = ((($165)) + 24|0);
      HEAP32[$168>>2] = $$3365;
     }
    }
   }
  } while(0);
  $169 = $109 | 1;
  $170 = ((($$1)) + 4|0);
  HEAP32[$170>>2] = $169;
  $171 = (($87) + ($109)|0);
  HEAP32[$171>>2] = $109;
  $172 = HEAP32[(10708)>>2]|0;
  $173 = ($$1|0)==($172|0);
  if ($173) {
   HEAP32[(10696)>>2] = $109;
   return;
  } else {
   $$2 = $109;
  }
 } else {
  $174 = $89 & -2;
  HEAP32[$88>>2] = $174;
  $175 = $$1347 | 1;
  $176 = ((($$1)) + 4|0);
  HEAP32[$176>>2] = $175;
  $177 = (($87) + ($$1347)|0);
  HEAP32[$177>>2] = $$1347;
  $$2 = $$1347;
 }
 $178 = $$2 >>> 3;
 $179 = ($$2>>>0)<(256);
 if ($179) {
  $180 = $178 << 1;
  $181 = (10728 + ($180<<2)|0);
  $182 = HEAP32[2672]|0;
  $183 = 1 << $178;
  $184 = $182 & $183;
  $185 = ($184|0)==(0);
  if ($185) {
   $186 = $182 | $183;
   HEAP32[2672] = $186;
   $$pre = ((($181)) + 8|0);
   $$0368 = $181;$$pre$phiZ2D = $$pre;
  } else {
   $187 = ((($181)) + 8|0);
   $188 = HEAP32[$187>>2]|0;
   $$0368 = $188;$$pre$phiZ2D = $187;
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $189 = ((($$0368)) + 12|0);
  HEAP32[$189>>2] = $$1;
  $190 = ((($$1)) + 8|0);
  HEAP32[$190>>2] = $$0368;
  $191 = ((($$1)) + 12|0);
  HEAP32[$191>>2] = $181;
  return;
 }
 $192 = $$2 >>> 8;
 $193 = ($192|0)==(0);
 if ($193) {
  $$0361 = 0;
 } else {
  $194 = ($$2>>>0)>(16777215);
  if ($194) {
   $$0361 = 31;
  } else {
   $195 = (($192) + 1048320)|0;
   $196 = $195 >>> 16;
   $197 = $196 & 8;
   $198 = $192 << $197;
   $199 = (($198) + 520192)|0;
   $200 = $199 >>> 16;
   $201 = $200 & 4;
   $202 = $201 | $197;
   $203 = $198 << $201;
   $204 = (($203) + 245760)|0;
   $205 = $204 >>> 16;
   $206 = $205 & 2;
   $207 = $202 | $206;
   $208 = (14 - ($207))|0;
   $209 = $203 << $206;
   $210 = $209 >>> 15;
   $211 = (($208) + ($210))|0;
   $212 = $211 << 1;
   $213 = (($211) + 7)|0;
   $214 = $$2 >>> $213;
   $215 = $214 & 1;
   $216 = $215 | $212;
   $$0361 = $216;
  }
 }
 $217 = (10992 + ($$0361<<2)|0);
 $218 = ((($$1)) + 28|0);
 HEAP32[$218>>2] = $$0361;
 $219 = ((($$1)) + 16|0);
 $220 = ((($$1)) + 20|0);
 HEAP32[$220>>2] = 0;
 HEAP32[$219>>2] = 0;
 $221 = HEAP32[(10692)>>2]|0;
 $222 = 1 << $$0361;
 $223 = $221 & $222;
 $224 = ($223|0)==(0);
 do {
  if ($224) {
   $225 = $221 | $222;
   HEAP32[(10692)>>2] = $225;
   HEAP32[$217>>2] = $$1;
   $226 = ((($$1)) + 24|0);
   HEAP32[$226>>2] = $217;
   $227 = ((($$1)) + 12|0);
   HEAP32[$227>>2] = $$1;
   $228 = ((($$1)) + 8|0);
   HEAP32[$228>>2] = $$1;
  } else {
   $229 = HEAP32[$217>>2]|0;
   $230 = ($$0361|0)==(31);
   $231 = $$0361 >>> 1;
   $232 = (25 - ($231))|0;
   $233 = $230 ? 0 : $232;
   $234 = $$2 << $233;
   $$0348 = $234;$$0349 = $229;
   while(1) {
    $235 = ((($$0349)) + 4|0);
    $236 = HEAP32[$235>>2]|0;
    $237 = $236 & -8;
    $238 = ($237|0)==($$2|0);
    if ($238) {
     label = 73;
     break;
    }
    $239 = $$0348 >>> 31;
    $240 = (((($$0349)) + 16|0) + ($239<<2)|0);
    $241 = $$0348 << 1;
    $242 = HEAP32[$240>>2]|0;
    $243 = ($242|0)==(0|0);
    if ($243) {
     label = 72;
     break;
    } else {
     $$0348 = $241;$$0349 = $242;
    }
   }
   if ((label|0) == 72) {
    HEAP32[$240>>2] = $$1;
    $244 = ((($$1)) + 24|0);
    HEAP32[$244>>2] = $$0349;
    $245 = ((($$1)) + 12|0);
    HEAP32[$245>>2] = $$1;
    $246 = ((($$1)) + 8|0);
    HEAP32[$246>>2] = $$1;
    break;
   }
   else if ((label|0) == 73) {
    $247 = ((($$0349)) + 8|0);
    $248 = HEAP32[$247>>2]|0;
    $249 = ((($248)) + 12|0);
    HEAP32[$249>>2] = $$1;
    HEAP32[$247>>2] = $$1;
    $250 = ((($$1)) + 8|0);
    HEAP32[$250>>2] = $248;
    $251 = ((($$1)) + 12|0);
    HEAP32[$251>>2] = $$0349;
    $252 = ((($$1)) + 24|0);
    HEAP32[$252>>2] = 0;
    break;
   }
  }
 } while(0);
 $253 = HEAP32[(10720)>>2]|0;
 $254 = (($253) + -1)|0;
 HEAP32[(10720)>>2] = $254;
 $255 = ($254|0)==(0);
 if ($255) {
  $$0195$in$i = (11144);
 } else {
  return;
 }
 while(1) {
  $$0195$i = HEAP32[$$0195$in$i>>2]|0;
  $256 = ($$0195$i|0)==(0|0);
  $257 = ((($$0195$i)) + 8|0);
  if ($256) {
   break;
  } else {
   $$0195$in$i = $257;
  }
 }
 HEAP32[(10720)>>2] = -1;
 return;
}
function _realloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = (_malloc($1)|0);
  $$1 = $3;
  return ($$1|0);
 }
 $4 = ($1>>>0)>(4294967231);
 if ($4) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 12;
  $$1 = 0;
  return ($$1|0);
 }
 $6 = ($1>>>0)<(11);
 $7 = (($1) + 11)|0;
 $8 = $7 & -8;
 $9 = $6 ? 16 : $8;
 $10 = ((($0)) + -8|0);
 $11 = (_try_realloc_chunk($10,$9)|0);
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  $13 = ((($11)) + 8|0);
  $$1 = $13;
  return ($$1|0);
 }
 $14 = (_malloc($1)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$1 = 0;
  return ($$1|0);
 }
 $16 = ((($0)) + -4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $17 & -8;
 $19 = $17 & 3;
 $20 = ($19|0)==(0);
 $21 = $20 ? 8 : 4;
 $22 = (($18) - ($21))|0;
 $23 = ($22>>>0)<($1>>>0);
 $24 = $23 ? $22 : $1;
 _memcpy(($14|0),($0|0),($24|0))|0;
 _free($0);
 $$1 = $14;
 return ($$1|0);
}
function _try_realloc_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1246 = 0, $$1249 = 0, $$2 = 0, $$3 = 0, $$sink1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $not$ = 0, $storemerge = 0, $storemerge1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & -8;
 $5 = (($0) + ($4)|0);
 $6 = $3 & 3;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ($1>>>0)<(256);
  if ($8) {
   $$2 = 0;
   return ($$2|0);
  }
  $9 = (($1) + 4)|0;
  $10 = ($4>>>0)<($9>>>0);
  if (!($10)) {
   $11 = (($4) - ($1))|0;
   $12 = HEAP32[(11168)>>2]|0;
   $13 = $12 << 1;
   $14 = ($11>>>0)>($13>>>0);
   if (!($14)) {
    $$2 = $0;
    return ($$2|0);
   }
  }
  $$2 = 0;
  return ($$2|0);
 }
 $15 = ($4>>>0)<($1>>>0);
 if (!($15)) {
  $16 = (($4) - ($1))|0;
  $17 = ($16>>>0)>(15);
  if (!($17)) {
   $$2 = $0;
   return ($$2|0);
  }
  $18 = (($0) + ($1)|0);
  $19 = $3 & 1;
  $20 = $19 | $1;
  $21 = $20 | 2;
  HEAP32[$2>>2] = $21;
  $22 = ((($18)) + 4|0);
  $23 = $16 | 3;
  HEAP32[$22>>2] = $23;
  $24 = (($18) + ($16)|0);
  $25 = ((($24)) + 4|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = $26 | 1;
  HEAP32[$25>>2] = $27;
  _dispose_chunk($18,$16);
  $$2 = $0;
  return ($$2|0);
 }
 $28 = HEAP32[(10712)>>2]|0;
 $29 = ($5|0)==($28|0);
 if ($29) {
  $30 = HEAP32[(10700)>>2]|0;
  $31 = (($30) + ($4))|0;
  $32 = ($31>>>0)>($1>>>0);
  $33 = (($31) - ($1))|0;
  $34 = (($0) + ($1)|0);
  if (!($32)) {
   $$2 = 0;
   return ($$2|0);
  }
  $35 = $33 | 1;
  $36 = ((($34)) + 4|0);
  $37 = $3 & 1;
  $38 = $37 | $1;
  $39 = $38 | 2;
  HEAP32[$2>>2] = $39;
  HEAP32[$36>>2] = $35;
  HEAP32[(10712)>>2] = $34;
  HEAP32[(10700)>>2] = $33;
  $$2 = $0;
  return ($$2|0);
 }
 $40 = HEAP32[(10708)>>2]|0;
 $41 = ($5|0)==($40|0);
 if ($41) {
  $42 = HEAP32[(10696)>>2]|0;
  $43 = (($42) + ($4))|0;
  $44 = ($43>>>0)<($1>>>0);
  if ($44) {
   $$2 = 0;
   return ($$2|0);
  }
  $45 = (($43) - ($1))|0;
  $46 = ($45>>>0)>(15);
  $47 = $3 & 1;
  if ($46) {
   $48 = (($0) + ($1)|0);
   $49 = (($48) + ($45)|0);
   $50 = $47 | $1;
   $51 = $50 | 2;
   HEAP32[$2>>2] = $51;
   $52 = ((($48)) + 4|0);
   $53 = $45 | 1;
   HEAP32[$52>>2] = $53;
   HEAP32[$49>>2] = $45;
   $54 = ((($49)) + 4|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = $55 & -2;
   HEAP32[$54>>2] = $56;
   $storemerge = $48;$storemerge1 = $45;
  } else {
   $57 = $47 | $43;
   $58 = $57 | 2;
   HEAP32[$2>>2] = $58;
   $59 = (($0) + ($43)|0);
   $60 = ((($59)) + 4|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = $61 | 1;
   HEAP32[$60>>2] = $62;
   $storemerge = 0;$storemerge1 = 0;
  }
  HEAP32[(10696)>>2] = $storemerge1;
  HEAP32[(10708)>>2] = $storemerge;
  $$2 = $0;
  return ($$2|0);
 }
 $63 = ((($5)) + 4|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = $64 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $$2 = 0;
  return ($$2|0);
 }
 $67 = $64 & -8;
 $68 = (($67) + ($4))|0;
 $69 = ($68>>>0)<($1>>>0);
 if ($69) {
  $$2 = 0;
  return ($$2|0);
 }
 $70 = (($68) - ($1))|0;
 $71 = $64 >>> 3;
 $72 = ($64>>>0)<(256);
 do {
  if ($72) {
   $73 = ((($5)) + 8|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ((($5)) + 12|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = ($76|0)==($74|0);
   if ($77) {
    $78 = 1 << $71;
    $79 = $78 ^ -1;
    $80 = HEAP32[2672]|0;
    $81 = $80 & $79;
    HEAP32[2672] = $81;
    break;
   } else {
    $82 = ((($74)) + 12|0);
    HEAP32[$82>>2] = $76;
    $83 = ((($76)) + 8|0);
    HEAP32[$83>>2] = $74;
    break;
   }
  } else {
   $84 = ((($5)) + 24|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = ((($5)) + 12|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = ($87|0)==($5|0);
   do {
    if ($88) {
     $93 = ((($5)) + 16|0);
     $94 = ((($93)) + 4|0);
     $95 = HEAP32[$94>>2]|0;
     $96 = ($95|0)==(0|0);
     if ($96) {
      $97 = HEAP32[$93>>2]|0;
      $98 = ($97|0)==(0|0);
      if ($98) {
       $$3 = 0;
       break;
      } else {
       $$1246 = $97;$$1249 = $93;
      }
     } else {
      $$1246 = $95;$$1249 = $94;
     }
     while(1) {
      $99 = ((($$1246)) + 20|0);
      $100 = HEAP32[$99>>2]|0;
      $101 = ($100|0)==(0|0);
      if (!($101)) {
       $$1246 = $100;$$1249 = $99;
       continue;
      }
      $102 = ((($$1246)) + 16|0);
      $103 = HEAP32[$102>>2]|0;
      $104 = ($103|0)==(0|0);
      if ($104) {
       break;
      } else {
       $$1246 = $103;$$1249 = $102;
      }
     }
     HEAP32[$$1249>>2] = 0;
     $$3 = $$1246;
    } else {
     $89 = ((($5)) + 8|0);
     $90 = HEAP32[$89>>2]|0;
     $91 = ((($90)) + 12|0);
     HEAP32[$91>>2] = $87;
     $92 = ((($87)) + 8|0);
     HEAP32[$92>>2] = $90;
     $$3 = $87;
    }
   } while(0);
   $105 = ($85|0)==(0|0);
   if (!($105)) {
    $106 = ((($5)) + 28|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = (10992 + ($107<<2)|0);
    $109 = HEAP32[$108>>2]|0;
    $110 = ($5|0)==($109|0);
    if ($110) {
     HEAP32[$108>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $111 = 1 << $107;
      $112 = $111 ^ -1;
      $113 = HEAP32[(10692)>>2]|0;
      $114 = $113 & $112;
      HEAP32[(10692)>>2] = $114;
      break;
     }
    } else {
     $115 = ((($85)) + 16|0);
     $116 = HEAP32[$115>>2]|0;
     $not$ = ($116|0)!=($5|0);
     $$sink1 = $not$&1;
     $117 = (((($85)) + 16|0) + ($$sink1<<2)|0);
     HEAP32[$117>>2] = $$3;
     $118 = ($$3|0)==(0|0);
     if ($118) {
      break;
     }
    }
    $119 = ((($$3)) + 24|0);
    HEAP32[$119>>2] = $85;
    $120 = ((($5)) + 16|0);
    $121 = HEAP32[$120>>2]|0;
    $122 = ($121|0)==(0|0);
    if (!($122)) {
     $123 = ((($$3)) + 16|0);
     HEAP32[$123>>2] = $121;
     $124 = ((($121)) + 24|0);
     HEAP32[$124>>2] = $$3;
    }
    $125 = ((($120)) + 4|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($126|0)==(0|0);
    if (!($127)) {
     $128 = ((($$3)) + 20|0);
     HEAP32[$128>>2] = $126;
     $129 = ((($126)) + 24|0);
     HEAP32[$129>>2] = $$3;
    }
   }
  }
 } while(0);
 $130 = ($70>>>0)<(16);
 $131 = $3 & 1;
 if ($130) {
  $132 = $68 | $131;
  $133 = $132 | 2;
  HEAP32[$2>>2] = $133;
  $134 = (($0) + ($68)|0);
  $135 = ((($134)) + 4|0);
  $136 = HEAP32[$135>>2]|0;
  $137 = $136 | 1;
  HEAP32[$135>>2] = $137;
  $$2 = $0;
  return ($$2|0);
 } else {
  $138 = (($0) + ($1)|0);
  $139 = $131 | $1;
  $140 = $139 | 2;
  HEAP32[$2>>2] = $140;
  $141 = ((($138)) + 4|0);
  $142 = $70 | 3;
  HEAP32[$141>>2] = $142;
  $143 = (($138) + ($70)|0);
  $144 = ((($143)) + 4|0);
  $145 = HEAP32[$144>>2]|0;
  $146 = $145 | 1;
  HEAP32[$144>>2] = $146;
  _dispose_chunk($138,$70);
  $$2 = $0;
  return ($$2|0);
 }
 return (0)|0;
}
function _dispose_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0366 = 0, $$0367 = 0, $$0378 = 0, $$0385 = 0, $$1 = 0, $$1365 = 0, $$1373 = 0, $$1376 = 0, $$1380 = 0, $$1384 = 0, $$2 = 0, $$3 = 0, $$3382 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink2 = 0, $$sink4 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $cond = 0, $cond5 = 0, $not$ = 0, $not$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($0) + ($1)|0);
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 do {
  if ($6) {
   $7 = HEAP32[$0>>2]|0;
   $8 = $4 & 3;
   $9 = ($8|0)==(0);
   if ($9) {
    return;
   }
   $10 = (0 - ($7))|0;
   $11 = (($0) + ($10)|0);
   $12 = (($7) + ($1))|0;
   $13 = HEAP32[(10708)>>2]|0;
   $14 = ($11|0)==($13|0);
   if ($14) {
    $74 = ((($2)) + 4|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = $75 & 3;
    $77 = ($76|0)==(3);
    if (!($77)) {
     $$1 = $11;$$1365 = $12;
     break;
    }
    $78 = (($11) + ($12)|0);
    $79 = ((($11)) + 4|0);
    $80 = $12 | 1;
    $81 = $75 & -2;
    HEAP32[(10696)>>2] = $12;
    HEAP32[$74>>2] = $81;
    HEAP32[$79>>2] = $80;
    HEAP32[$78>>2] = $12;
    return;
   }
   $15 = $7 >>> 3;
   $16 = ($7>>>0)<(256);
   if ($16) {
    $17 = ((($11)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($11)) + 12|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($20|0)==($18|0);
    if ($21) {
     $22 = 1 << $15;
     $23 = $22 ^ -1;
     $24 = HEAP32[2672]|0;
     $25 = $24 & $23;
     HEAP32[2672] = $25;
     $$1 = $11;$$1365 = $12;
     break;
    } else {
     $26 = ((($18)) + 12|0);
     HEAP32[$26>>2] = $20;
     $27 = ((($20)) + 8|0);
     HEAP32[$27>>2] = $18;
     $$1 = $11;$$1365 = $12;
     break;
    }
   }
   $28 = ((($11)) + 24|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = ((($11)) + 12|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ($31|0)==($11|0);
   do {
    if ($32) {
     $37 = ((($11)) + 16|0);
     $38 = ((($37)) + 4|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = ($39|0)==(0|0);
     if ($40) {
      $41 = HEAP32[$37>>2]|0;
      $42 = ($41|0)==(0|0);
      if ($42) {
       $$3 = 0;
       break;
      } else {
       $$1373 = $41;$$1376 = $37;
      }
     } else {
      $$1373 = $39;$$1376 = $38;
     }
     while(1) {
      $43 = ((($$1373)) + 20|0);
      $44 = HEAP32[$43>>2]|0;
      $45 = ($44|0)==(0|0);
      if (!($45)) {
       $$1373 = $44;$$1376 = $43;
       continue;
      }
      $46 = ((($$1373)) + 16|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = ($47|0)==(0|0);
      if ($48) {
       break;
      } else {
       $$1373 = $47;$$1376 = $46;
      }
     }
     HEAP32[$$1376>>2] = 0;
     $$3 = $$1373;
    } else {
     $33 = ((($11)) + 8|0);
     $34 = HEAP32[$33>>2]|0;
     $35 = ((($34)) + 12|0);
     HEAP32[$35>>2] = $31;
     $36 = ((($31)) + 8|0);
     HEAP32[$36>>2] = $34;
     $$3 = $31;
    }
   } while(0);
   $49 = ($29|0)==(0|0);
   if ($49) {
    $$1 = $11;$$1365 = $12;
   } else {
    $50 = ((($11)) + 28|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = (10992 + ($51<<2)|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = ($11|0)==($53|0);
    if ($54) {
     HEAP32[$52>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $55 = 1 << $51;
      $56 = $55 ^ -1;
      $57 = HEAP32[(10692)>>2]|0;
      $58 = $57 & $56;
      HEAP32[(10692)>>2] = $58;
      $$1 = $11;$$1365 = $12;
      break;
     }
    } else {
     $59 = ((($29)) + 16|0);
     $60 = HEAP32[$59>>2]|0;
     $not$1 = ($60|0)!=($11|0);
     $$sink2 = $not$1&1;
     $61 = (((($29)) + 16|0) + ($$sink2<<2)|0);
     HEAP32[$61>>2] = $$3;
     $62 = ($$3|0)==(0|0);
     if ($62) {
      $$1 = $11;$$1365 = $12;
      break;
     }
    }
    $63 = ((($$3)) + 24|0);
    HEAP32[$63>>2] = $29;
    $64 = ((($11)) + 16|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = ($65|0)==(0|0);
    if (!($66)) {
     $67 = ((($$3)) + 16|0);
     HEAP32[$67>>2] = $65;
     $68 = ((($65)) + 24|0);
     HEAP32[$68>>2] = $$3;
    }
    $69 = ((($64)) + 4|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($70|0)==(0|0);
    if ($71) {
     $$1 = $11;$$1365 = $12;
    } else {
     $72 = ((($$3)) + 20|0);
     HEAP32[$72>>2] = $70;
     $73 = ((($70)) + 24|0);
     HEAP32[$73>>2] = $$3;
     $$1 = $11;$$1365 = $12;
    }
   }
  } else {
   $$1 = $0;$$1365 = $1;
  }
 } while(0);
 $82 = ((($2)) + 4|0);
 $83 = HEAP32[$82>>2]|0;
 $84 = $83 & 2;
 $85 = ($84|0)==(0);
 if ($85) {
  $86 = HEAP32[(10712)>>2]|0;
  $87 = ($2|0)==($86|0);
  $88 = HEAP32[(10708)>>2]|0;
  if ($87) {
   $89 = HEAP32[(10700)>>2]|0;
   $90 = (($89) + ($$1365))|0;
   HEAP32[(10700)>>2] = $90;
   HEAP32[(10712)>>2] = $$1;
   $91 = $90 | 1;
   $92 = ((($$1)) + 4|0);
   HEAP32[$92>>2] = $91;
   $93 = ($$1|0)==($88|0);
   if (!($93)) {
    return;
   }
   HEAP32[(10708)>>2] = 0;
   HEAP32[(10696)>>2] = 0;
   return;
  }
  $94 = ($2|0)==($88|0);
  if ($94) {
   $95 = HEAP32[(10696)>>2]|0;
   $96 = (($95) + ($$1365))|0;
   HEAP32[(10696)>>2] = $96;
   HEAP32[(10708)>>2] = $$1;
   $97 = $96 | 1;
   $98 = ((($$1)) + 4|0);
   HEAP32[$98>>2] = $97;
   $99 = (($$1) + ($96)|0);
   HEAP32[$99>>2] = $96;
   return;
  }
  $100 = $83 & -8;
  $101 = (($100) + ($$1365))|0;
  $102 = $83 >>> 3;
  $103 = ($83>>>0)<(256);
  do {
   if ($103) {
    $104 = ((($2)) + 8|0);
    $105 = HEAP32[$104>>2]|0;
    $106 = ((($2)) + 12|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = ($107|0)==($105|0);
    if ($108) {
     $109 = 1 << $102;
     $110 = $109 ^ -1;
     $111 = HEAP32[2672]|0;
     $112 = $111 & $110;
     HEAP32[2672] = $112;
     break;
    } else {
     $113 = ((($105)) + 12|0);
     HEAP32[$113>>2] = $107;
     $114 = ((($107)) + 8|0);
     HEAP32[$114>>2] = $105;
     break;
    }
   } else {
    $115 = ((($2)) + 24|0);
    $116 = HEAP32[$115>>2]|0;
    $117 = ((($2)) + 12|0);
    $118 = HEAP32[$117>>2]|0;
    $119 = ($118|0)==($2|0);
    do {
     if ($119) {
      $124 = ((($2)) + 16|0);
      $125 = ((($124)) + 4|0);
      $126 = HEAP32[$125>>2]|0;
      $127 = ($126|0)==(0|0);
      if ($127) {
       $128 = HEAP32[$124>>2]|0;
       $129 = ($128|0)==(0|0);
       if ($129) {
        $$3382 = 0;
        break;
       } else {
        $$1380 = $128;$$1384 = $124;
       }
      } else {
       $$1380 = $126;$$1384 = $125;
      }
      while(1) {
       $130 = ((($$1380)) + 20|0);
       $131 = HEAP32[$130>>2]|0;
       $132 = ($131|0)==(0|0);
       if (!($132)) {
        $$1380 = $131;$$1384 = $130;
        continue;
       }
       $133 = ((($$1380)) + 16|0);
       $134 = HEAP32[$133>>2]|0;
       $135 = ($134|0)==(0|0);
       if ($135) {
        break;
       } else {
        $$1380 = $134;$$1384 = $133;
       }
      }
      HEAP32[$$1384>>2] = 0;
      $$3382 = $$1380;
     } else {
      $120 = ((($2)) + 8|0);
      $121 = HEAP32[$120>>2]|0;
      $122 = ((($121)) + 12|0);
      HEAP32[$122>>2] = $118;
      $123 = ((($118)) + 8|0);
      HEAP32[$123>>2] = $121;
      $$3382 = $118;
     }
    } while(0);
    $136 = ($116|0)==(0|0);
    if (!($136)) {
     $137 = ((($2)) + 28|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = (10992 + ($138<<2)|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($2|0)==($140|0);
     if ($141) {
      HEAP32[$139>>2] = $$3382;
      $cond5 = ($$3382|0)==(0|0);
      if ($cond5) {
       $142 = 1 << $138;
       $143 = $142 ^ -1;
       $144 = HEAP32[(10692)>>2]|0;
       $145 = $144 & $143;
       HEAP32[(10692)>>2] = $145;
       break;
      }
     } else {
      $146 = ((($116)) + 16|0);
      $147 = HEAP32[$146>>2]|0;
      $not$ = ($147|0)!=($2|0);
      $$sink4 = $not$&1;
      $148 = (((($116)) + 16|0) + ($$sink4<<2)|0);
      HEAP32[$148>>2] = $$3382;
      $149 = ($$3382|0)==(0|0);
      if ($149) {
       break;
      }
     }
     $150 = ((($$3382)) + 24|0);
     HEAP32[$150>>2] = $116;
     $151 = ((($2)) + 16|0);
     $152 = HEAP32[$151>>2]|0;
     $153 = ($152|0)==(0|0);
     if (!($153)) {
      $154 = ((($$3382)) + 16|0);
      HEAP32[$154>>2] = $152;
      $155 = ((($152)) + 24|0);
      HEAP32[$155>>2] = $$3382;
     }
     $156 = ((($151)) + 4|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==(0|0);
     if (!($158)) {
      $159 = ((($$3382)) + 20|0);
      HEAP32[$159>>2] = $157;
      $160 = ((($157)) + 24|0);
      HEAP32[$160>>2] = $$3382;
     }
    }
   }
  } while(0);
  $161 = $101 | 1;
  $162 = ((($$1)) + 4|0);
  HEAP32[$162>>2] = $161;
  $163 = (($$1) + ($101)|0);
  HEAP32[$163>>2] = $101;
  $164 = HEAP32[(10708)>>2]|0;
  $165 = ($$1|0)==($164|0);
  if ($165) {
   HEAP32[(10696)>>2] = $101;
   return;
  } else {
   $$2 = $101;
  }
 } else {
  $166 = $83 & -2;
  HEAP32[$82>>2] = $166;
  $167 = $$1365 | 1;
  $168 = ((($$1)) + 4|0);
  HEAP32[$168>>2] = $167;
  $169 = (($$1) + ($$1365)|0);
  HEAP32[$169>>2] = $$1365;
  $$2 = $$1365;
 }
 $170 = $$2 >>> 3;
 $171 = ($$2>>>0)<(256);
 if ($171) {
  $172 = $170 << 1;
  $173 = (10728 + ($172<<2)|0);
  $174 = HEAP32[2672]|0;
  $175 = 1 << $170;
  $176 = $174 & $175;
  $177 = ($176|0)==(0);
  if ($177) {
   $178 = $174 | $175;
   HEAP32[2672] = $178;
   $$pre = ((($173)) + 8|0);
   $$0385 = $173;$$pre$phiZ2D = $$pre;
  } else {
   $179 = ((($173)) + 8|0);
   $180 = HEAP32[$179>>2]|0;
   $$0385 = $180;$$pre$phiZ2D = $179;
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $181 = ((($$0385)) + 12|0);
  HEAP32[$181>>2] = $$1;
  $182 = ((($$1)) + 8|0);
  HEAP32[$182>>2] = $$0385;
  $183 = ((($$1)) + 12|0);
  HEAP32[$183>>2] = $173;
  return;
 }
 $184 = $$2 >>> 8;
 $185 = ($184|0)==(0);
 if ($185) {
  $$0378 = 0;
 } else {
  $186 = ($$2>>>0)>(16777215);
  if ($186) {
   $$0378 = 31;
  } else {
   $187 = (($184) + 1048320)|0;
   $188 = $187 >>> 16;
   $189 = $188 & 8;
   $190 = $184 << $189;
   $191 = (($190) + 520192)|0;
   $192 = $191 >>> 16;
   $193 = $192 & 4;
   $194 = $193 | $189;
   $195 = $190 << $193;
   $196 = (($195) + 245760)|0;
   $197 = $196 >>> 16;
   $198 = $197 & 2;
   $199 = $194 | $198;
   $200 = (14 - ($199))|0;
   $201 = $195 << $198;
   $202 = $201 >>> 15;
   $203 = (($200) + ($202))|0;
   $204 = $203 << 1;
   $205 = (($203) + 7)|0;
   $206 = $$2 >>> $205;
   $207 = $206 & 1;
   $208 = $207 | $204;
   $$0378 = $208;
  }
 }
 $209 = (10992 + ($$0378<<2)|0);
 $210 = ((($$1)) + 28|0);
 HEAP32[$210>>2] = $$0378;
 $211 = ((($$1)) + 16|0);
 $212 = ((($$1)) + 20|0);
 HEAP32[$212>>2] = 0;
 HEAP32[$211>>2] = 0;
 $213 = HEAP32[(10692)>>2]|0;
 $214 = 1 << $$0378;
 $215 = $213 & $214;
 $216 = ($215|0)==(0);
 if ($216) {
  $217 = $213 | $214;
  HEAP32[(10692)>>2] = $217;
  HEAP32[$209>>2] = $$1;
  $218 = ((($$1)) + 24|0);
  HEAP32[$218>>2] = $209;
  $219 = ((($$1)) + 12|0);
  HEAP32[$219>>2] = $$1;
  $220 = ((($$1)) + 8|0);
  HEAP32[$220>>2] = $$1;
  return;
 }
 $221 = HEAP32[$209>>2]|0;
 $222 = ($$0378|0)==(31);
 $223 = $$0378 >>> 1;
 $224 = (25 - ($223))|0;
 $225 = $222 ? 0 : $224;
 $226 = $$2 << $225;
 $$0366 = $226;$$0367 = $221;
 while(1) {
  $227 = ((($$0367)) + 4|0);
  $228 = HEAP32[$227>>2]|0;
  $229 = $228 & -8;
  $230 = ($229|0)==($$2|0);
  if ($230) {
   label = 69;
   break;
  }
  $231 = $$0366 >>> 31;
  $232 = (((($$0367)) + 16|0) + ($231<<2)|0);
  $233 = $$0366 << 1;
  $234 = HEAP32[$232>>2]|0;
  $235 = ($234|0)==(0|0);
  if ($235) {
   label = 68;
   break;
  } else {
   $$0366 = $233;$$0367 = $234;
  }
 }
 if ((label|0) == 68) {
  HEAP32[$232>>2] = $$1;
  $236 = ((($$1)) + 24|0);
  HEAP32[$236>>2] = $$0367;
  $237 = ((($$1)) + 12|0);
  HEAP32[$237>>2] = $$1;
  $238 = ((($$1)) + 8|0);
  HEAP32[$238>>2] = $$1;
  return;
 }
 else if ((label|0) == 69) {
  $239 = ((($$0367)) + 8|0);
  $240 = HEAP32[$239>>2]|0;
  $241 = ((($240)) + 12|0);
  HEAP32[$241>>2] = $$1;
  HEAP32[$239>>2] = $$1;
  $242 = ((($$1)) + 8|0);
  HEAP32[$242>>2] = $240;
  $243 = ((($$1)) + 12|0);
  HEAP32[$243>>2] = $$0367;
  $244 = ((($$1)) + 24|0);
  HEAP32[$244>>2] = 0;
  return;
 }
}
function _emscripten_get_global_libc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (11184|0);
}
function ___stdio_close($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $1 = ((($0)) + 60|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (_dummy_738($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 $4 = (___syscall6(6,($vararg_buffer|0))|0);
 $5 = (___syscall_ret($4)|0);
 STACKTOP = sp;return ($5|0);
}
function ___stdio_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$04756 = 0, $$04855 = 0, $$04954 = 0, $$051 = 0, $$1 = 0, $$150 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0;
 var $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $3 = sp + 32|0;
 $4 = ((($0)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 4|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) - ($5))|0;
 HEAP32[$6>>2] = $9;
 $10 = ((($3)) + 8|0);
 HEAP32[$10>>2] = $1;
 $11 = ((($3)) + 12|0);
 HEAP32[$11>>2] = $2;
 $12 = (($9) + ($2))|0;
 $13 = ((($0)) + 60|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $3;
 HEAP32[$vararg_buffer>>2] = $14;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $15;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $16 = (___syscall146(146,($vararg_buffer|0))|0);
 $17 = (___syscall_ret($16)|0);
 $18 = ($12|0)==($17|0);
 L1: do {
  if ($18) {
   label = 3;
  } else {
   $$04756 = 2;$$04855 = $12;$$04954 = $3;$26 = $17;
   while(1) {
    $25 = ($26|0)<(0);
    if ($25) {
     break;
    }
    $34 = (($$04855) - ($26))|0;
    $35 = ((($$04954)) + 4|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = ($26>>>0)>($36>>>0);
    $38 = ((($$04954)) + 8|0);
    $$150 = $37 ? $38 : $$04954;
    $39 = $37 << 31 >> 31;
    $$1 = (($39) + ($$04756))|0;
    $40 = $37 ? $36 : 0;
    $$0 = (($26) - ($40))|0;
    $41 = HEAP32[$$150>>2]|0;
    $42 = (($41) + ($$0)|0);
    HEAP32[$$150>>2] = $42;
    $43 = ((($$150)) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = (($44) - ($$0))|0;
    HEAP32[$43>>2] = $45;
    $46 = HEAP32[$13>>2]|0;
    $47 = $$150;
    HEAP32[$vararg_buffer3>>2] = $46;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $47;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = $$1;
    $48 = (___syscall146(146,($vararg_buffer3|0))|0);
    $49 = (___syscall_ret($48)|0);
    $50 = ($34|0)==($49|0);
    if ($50) {
     label = 3;
     break L1;
    } else {
     $$04756 = $$1;$$04855 = $34;$$04954 = $$150;$26 = $49;
    }
   }
   $27 = ((($0)) + 16|0);
   HEAP32[$27>>2] = 0;
   HEAP32[$4>>2] = 0;
   HEAP32[$7>>2] = 0;
   $28 = HEAP32[$0>>2]|0;
   $29 = $28 | 32;
   HEAP32[$0>>2] = $29;
   $30 = ($$04756|0)==(2);
   if ($30) {
    $$051 = 0;
   } else {
    $31 = ((($$04954)) + 4|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (($2) - ($32))|0;
    $$051 = $33;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $19 = ((($0)) + 44|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($0)) + 48|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (($20) + ($22)|0);
  $24 = ((($0)) + 16|0);
  HEAP32[$24>>2] = $23;
  HEAP32[$4>>2] = $20;
  HEAP32[$7>>2] = $20;
  $$051 = $2;
 }
 STACKTOP = sp;return ($$051|0);
}
function ___stdio_seek($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 $4 = ((($0)) + 60|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 HEAP32[$vararg_buffer>>2] = $5;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $1;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $6;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $2;
 $7 = (___syscall140(140,($vararg_buffer|0))|0);
 $8 = (___syscall_ret($7)|0);
 $9 = ($8|0)<(0);
 if ($9) {
  HEAP32[$3>>2] = -1;
  $10 = -1;
 } else {
  $$pre = HEAP32[$3>>2]|0;
  $10 = $$pre;
 }
 STACKTOP = sp;return ($10|0);
}
function ___syscall_ret($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(4294963200);
 if ($1) {
  $2 = (0 - ($0))|0;
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = $2;
  $$0 = -1;
 } else {
  $$0 = $0;
 }
 return ($$0|0);
}
function ___errno_location() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___pthread_self_108()|0);
 $1 = ((($0)) + 64|0);
 return ($1|0);
}
function ___pthread_self_108() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _pthread_self() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (408|0);
}
function _dummy_738($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function ___stdout_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = sp + 16|0;
 $4 = ((($0)) + 36|0);
 HEAP32[$4>>2] = 2;
 $5 = HEAP32[$0>>2]|0;
 $6 = $5 & 64;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ((($0)) + 60|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $3;
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21523;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $10;
  $11 = (___syscall54(54,($vararg_buffer|0))|0);
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = ((($0)) + 75|0);
   HEAP8[$13>>0] = -1;
  }
 }
 $14 = (___stdio_write($0,$1,$2)|0);
 STACKTOP = sp;return ($14|0);
}
function _strcmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$011 = 0, $$0710 = 0, $$lcssa = 0, $$lcssa8 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = HEAP8[$0>>0]|0;
 $3 = HEAP8[$1>>0]|0;
 $4 = ($2<<24>>24)!=($3<<24>>24);
 $5 = ($2<<24>>24)==(0);
 $or$cond9 = $5 | $4;
 if ($or$cond9) {
  $$lcssa = $3;$$lcssa8 = $2;
 } else {
  $$011 = $1;$$0710 = $0;
  while(1) {
   $6 = ((($$0710)) + 1|0);
   $7 = ((($$011)) + 1|0);
   $8 = HEAP8[$6>>0]|0;
   $9 = HEAP8[$7>>0]|0;
   $10 = ($8<<24>>24)!=($9<<24>>24);
   $11 = ($8<<24>>24)==(0);
   $or$cond = $11 | $10;
   if ($or$cond) {
    $$lcssa = $9;$$lcssa8 = $8;
    break;
   } else {
    $$011 = $7;$$0710 = $6;
   }
  }
 }
 $12 = $$lcssa8&255;
 $13 = $$lcssa&255;
 $14 = (($12) - ($13))|0;
 return ($14|0);
}
function _vfprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $$1$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $3 = sp + 120|0;
 $4 = sp + 80|0;
 $5 = sp;
 $6 = sp + 136|0;
 dest=$4; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $vacopy_currentptr;
 $7 = (_printf_core(0,$1,$3,$5,$4)|0);
 $8 = ($7|0)<(0);
 if ($8) {
  $$0 = -1;
 } else {
  $9 = ((($0)) + 76|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)>(-1);
  if ($11) {
   $12 = (___lockfile($0)|0);
   $40 = $12;
  } else {
   $40 = 0;
  }
  $13 = HEAP32[$0>>2]|0;
  $14 = $13 & 32;
  $15 = ((($0)) + 74|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = ($16<<24>>24)<(1);
  if ($17) {
   $18 = $13 & -33;
   HEAP32[$0>>2] = $18;
  }
  $19 = ((($0)) + 48|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($20|0)==(0);
  if ($21) {
   $23 = ((($0)) + 44|0);
   $24 = HEAP32[$23>>2]|0;
   HEAP32[$23>>2] = $6;
   $25 = ((($0)) + 28|0);
   HEAP32[$25>>2] = $6;
   $26 = ((($0)) + 20|0);
   HEAP32[$26>>2] = $6;
   HEAP32[$19>>2] = 80;
   $27 = ((($6)) + 80|0);
   $28 = ((($0)) + 16|0);
   HEAP32[$28>>2] = $27;
   $29 = (_printf_core($0,$1,$3,$5,$4)|0);
   $30 = ($24|0)==(0|0);
   if ($30) {
    $$1 = $29;
   } else {
    $31 = ((($0)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    (FUNCTION_TABLE_iiii[$32 & 1023]($0,0,0)|0);
    $33 = HEAP32[$26>>2]|0;
    $34 = ($33|0)==(0|0);
    $$ = $34 ? -1 : $29;
    HEAP32[$23>>2] = $24;
    HEAP32[$19>>2] = 0;
    HEAP32[$28>>2] = 0;
    HEAP32[$25>>2] = 0;
    HEAP32[$26>>2] = 0;
    $$1 = $$;
   }
  } else {
   $22 = (_printf_core($0,$1,$3,$5,$4)|0);
   $$1 = $22;
  }
  $35 = HEAP32[$0>>2]|0;
  $36 = $35 & 32;
  $37 = ($36|0)==(0);
  $$1$ = $37 ? $$1 : -1;
  $38 = $35 | $14;
  HEAP32[$0>>2] = $38;
  $39 = ($40|0)==(0);
  if (!($39)) {
   ___unlockfile($0);
  }
  $$0 = $$1$;
 }
 STACKTOP = sp;return ($$0|0);
}
function _printf_core($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$$ = 0, $$$0259 = 0, $$$0262 = 0, $$$0269 = 0, $$$4266 = 0, $$$5 = 0, $$0 = 0, $$0228 = 0, $$0228$ = 0, $$0229322 = 0, $$0232 = 0, $$0235 = 0, $$0237 = 0, $$0240$lcssa = 0, $$0240$lcssa357 = 0, $$0240321 = 0, $$0243 = 0, $$0247 = 0, $$0249$lcssa = 0;
 var $$0249306 = 0, $$0252 = 0, $$0253 = 0, $$0254 = 0, $$0254$$0254$ = 0, $$0259 = 0, $$0262$lcssa = 0, $$0262311 = 0, $$0269 = 0, $$0269$phi = 0, $$1 = 0, $$1230333 = 0, $$1233 = 0, $$1236 = 0, $$1238 = 0, $$1241332 = 0, $$1244320 = 0, $$1248 = 0, $$1250 = 0, $$1255 = 0;
 var $$1260 = 0, $$1263 = 0, $$1263$ = 0, $$1270 = 0, $$2 = 0, $$2234 = 0, $$2239 = 0, $$2242305 = 0, $$2245 = 0, $$2251 = 0, $$2256 = 0, $$2256$ = 0, $$2256$$$2256 = 0, $$2261 = 0, $$2271 = 0, $$284$ = 0, $$289 = 0, $$290 = 0, $$3257 = 0, $$3265 = 0;
 var $$3272 = 0, $$3303 = 0, $$377 = 0, $$4258355 = 0, $$4266 = 0, $$5 = 0, $$6268 = 0, $$lcssa295 = 0, $$pre = 0, $$pre346 = 0, $$pre347 = 0, $$pre347$pre = 0, $$pre349 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0;
 var $306 = 0.0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0;
 var $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $isdigit = 0, $isdigit275 = 0, $isdigit277 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp274 = 0;
 var $isdigittmp276 = 0, $narrow = 0, $or$cond = 0, $or$cond281 = 0, $or$cond283 = 0, $or$cond286 = 0, $storemerge = 0, $storemerge273310 = 0, $storemerge278 = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $5 = sp + 16|0;
 $6 = sp;
 $7 = sp + 24|0;
 $8 = sp + 8|0;
 $9 = sp + 20|0;
 HEAP32[$5>>2] = $1;
 $10 = ($0|0)!=(0|0);
 $11 = ((($7)) + 40|0);
 $12 = $11;
 $13 = ((($7)) + 39|0);
 $14 = ((($8)) + 4|0);
 $$0243 = 0;$$0247 = 0;$$0269 = 0;$21 = $1;
 L1: while(1) {
  $15 = ($$0247|0)>(-1);
  do {
   if ($15) {
    $16 = (2147483647 - ($$0247))|0;
    $17 = ($$0243|0)>($16|0);
    if ($17) {
     $18 = (___errno_location()|0);
     HEAP32[$18>>2] = 75;
     $$1248 = -1;
     break;
    } else {
     $19 = (($$0243) + ($$0247))|0;
     $$1248 = $19;
     break;
    }
   } else {
    $$1248 = $$0247;
   }
  } while(0);
  $20 = HEAP8[$21>>0]|0;
  $22 = ($20<<24>>24)==(0);
  if ($22) {
   label = 87;
   break;
  } else {
   $23 = $20;$25 = $21;
  }
  L9: while(1) {
   switch ($23<<24>>24) {
   case 37:  {
    $$0249306 = $25;$27 = $25;
    label = 9;
    break L9;
    break;
   }
   case 0:  {
    $$0249$lcssa = $25;$39 = $25;
    break L9;
    break;
   }
   default: {
   }
   }
   $24 = ((($25)) + 1|0);
   HEAP32[$5>>2] = $24;
   $$pre = HEAP8[$24>>0]|0;
   $23 = $$pre;$25 = $24;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $26 = ((($27)) + 1|0);
     $28 = HEAP8[$26>>0]|0;
     $29 = ($28<<24>>24)==(37);
     if (!($29)) {
      $$0249$lcssa = $$0249306;$39 = $27;
      break L12;
     }
     $30 = ((($$0249306)) + 1|0);
     $31 = ((($27)) + 2|0);
     HEAP32[$5>>2] = $31;
     $32 = HEAP8[$31>>0]|0;
     $33 = ($32<<24>>24)==(37);
     if ($33) {
      $$0249306 = $30;$27 = $31;
      label = 9;
     } else {
      $$0249$lcssa = $30;$39 = $31;
      break;
     }
    }
   }
  } while(0);
  $34 = $$0249$lcssa;
  $35 = $21;
  $36 = (($34) - ($35))|0;
  if ($10) {
   _out($0,$21,$36);
  }
  $37 = ($36|0)==(0);
  if (!($37)) {
   $$0269$phi = $$0269;$$0243 = $36;$$0247 = $$1248;$21 = $39;$$0269 = $$0269$phi;
   continue;
  }
  $38 = ((($39)) + 1|0);
  $40 = HEAP8[$38>>0]|0;
  $41 = $40 << 24 >> 24;
  $isdigittmp = (($41) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $42 = ((($39)) + 2|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = ($43<<24>>24)==(36);
   $45 = ((($39)) + 3|0);
   $$377 = $44 ? $45 : $38;
   $$$0269 = $44 ? 1 : $$0269;
   $isdigittmp$ = $44 ? $isdigittmp : -1;
   $$0253 = $isdigittmp$;$$1270 = $$$0269;$storemerge = $$377;
  } else {
   $$0253 = -1;$$1270 = $$0269;$storemerge = $38;
  }
  HEAP32[$5>>2] = $storemerge;
  $46 = HEAP8[$storemerge>>0]|0;
  $47 = $46 << 24 >> 24;
  $48 = (($47) + -32)|0;
  $49 = ($48>>>0)<(32);
  L24: do {
   if ($49) {
    $$0262311 = 0;$329 = $46;$51 = $48;$storemerge273310 = $storemerge;
    while(1) {
     $50 = 1 << $51;
     $52 = $50 & 75913;
     $53 = ($52|0)==(0);
     if ($53) {
      $$0262$lcssa = $$0262311;$$lcssa295 = $329;$62 = $storemerge273310;
      break L24;
     }
     $54 = $50 | $$0262311;
     $55 = ((($storemerge273310)) + 1|0);
     HEAP32[$5>>2] = $55;
     $56 = HEAP8[$55>>0]|0;
     $57 = $56 << 24 >> 24;
     $58 = (($57) + -32)|0;
     $59 = ($58>>>0)<(32);
     if ($59) {
      $$0262311 = $54;$329 = $56;$51 = $58;$storemerge273310 = $55;
     } else {
      $$0262$lcssa = $54;$$lcssa295 = $56;$62 = $55;
      break;
     }
    }
   } else {
    $$0262$lcssa = 0;$$lcssa295 = $46;$62 = $storemerge;
   }
  } while(0);
  $60 = ($$lcssa295<<24>>24)==(42);
  if ($60) {
   $61 = ((($62)) + 1|0);
   $63 = HEAP8[$61>>0]|0;
   $64 = $63 << 24 >> 24;
   $isdigittmp276 = (($64) + -48)|0;
   $isdigit277 = ($isdigittmp276>>>0)<(10);
   if ($isdigit277) {
    $65 = ((($62)) + 2|0);
    $66 = HEAP8[$65>>0]|0;
    $67 = ($66<<24>>24)==(36);
    if ($67) {
     $68 = (($4) + ($isdigittmp276<<2)|0);
     HEAP32[$68>>2] = 10;
     $69 = HEAP8[$61>>0]|0;
     $70 = $69 << 24 >> 24;
     $71 = (($70) + -48)|0;
     $72 = (($3) + ($71<<3)|0);
     $73 = $72;
     $74 = $73;
     $75 = HEAP32[$74>>2]|0;
     $76 = (($73) + 4)|0;
     $77 = $76;
     $78 = HEAP32[$77>>2]|0;
     $79 = ((($62)) + 3|0);
     $$0259 = $75;$$2271 = 1;$storemerge278 = $79;
    } else {
     label = 23;
    }
   } else {
    label = 23;
   }
   if ((label|0) == 23) {
    label = 0;
    $80 = ($$1270|0)==(0);
    if (!($80)) {
     $$0 = -1;
     break;
    }
    if ($10) {
     $arglist_current = HEAP32[$2>>2]|0;
     $81 = $arglist_current;
     $82 = ((0) + 4|0);
     $expanded4 = $82;
     $expanded = (($expanded4) - 1)|0;
     $83 = (($81) + ($expanded))|0;
     $84 = ((0) + 4|0);
     $expanded8 = $84;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $85 = $83 & $expanded6;
     $86 = $85;
     $87 = HEAP32[$86>>2]|0;
     $arglist_next = ((($86)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     $$0259 = $87;$$2271 = 0;$storemerge278 = $61;
    } else {
     $$0259 = 0;$$2271 = 0;$storemerge278 = $61;
    }
   }
   HEAP32[$5>>2] = $storemerge278;
   $88 = ($$0259|0)<(0);
   $89 = $$0262$lcssa | 8192;
   $90 = (0 - ($$0259))|0;
   $$$0262 = $88 ? $89 : $$0262$lcssa;
   $$$0259 = $88 ? $90 : $$0259;
   $$1260 = $$$0259;$$1263 = $$$0262;$$3272 = $$2271;$94 = $storemerge278;
  } else {
   $91 = (_getint($5)|0);
   $92 = ($91|0)<(0);
   if ($92) {
    $$0 = -1;
    break;
   }
   $$pre346 = HEAP32[$5>>2]|0;
   $$1260 = $91;$$1263 = $$0262$lcssa;$$3272 = $$1270;$94 = $$pre346;
  }
  $93 = HEAP8[$94>>0]|0;
  $95 = ($93<<24>>24)==(46);
  do {
   if ($95) {
    $96 = ((($94)) + 1|0);
    $97 = HEAP8[$96>>0]|0;
    $98 = ($97<<24>>24)==(42);
    if (!($98)) {
     $125 = ((($94)) + 1|0);
     HEAP32[$5>>2] = $125;
     $126 = (_getint($5)|0);
     $$pre347$pre = HEAP32[$5>>2]|0;
     $$0254 = $126;$$pre347 = $$pre347$pre;
     break;
    }
    $99 = ((($94)) + 2|0);
    $100 = HEAP8[$99>>0]|0;
    $101 = $100 << 24 >> 24;
    $isdigittmp274 = (($101) + -48)|0;
    $isdigit275 = ($isdigittmp274>>>0)<(10);
    if ($isdigit275) {
     $102 = ((($94)) + 3|0);
     $103 = HEAP8[$102>>0]|0;
     $104 = ($103<<24>>24)==(36);
     if ($104) {
      $105 = (($4) + ($isdigittmp274<<2)|0);
      HEAP32[$105>>2] = 10;
      $106 = HEAP8[$99>>0]|0;
      $107 = $106 << 24 >> 24;
      $108 = (($107) + -48)|0;
      $109 = (($3) + ($108<<3)|0);
      $110 = $109;
      $111 = $110;
      $112 = HEAP32[$111>>2]|0;
      $113 = (($110) + 4)|0;
      $114 = $113;
      $115 = HEAP32[$114>>2]|0;
      $116 = ((($94)) + 4|0);
      HEAP32[$5>>2] = $116;
      $$0254 = $112;$$pre347 = $116;
      break;
     }
    }
    $117 = ($$3272|0)==(0);
    if (!($117)) {
     $$0 = -1;
     break L1;
    }
    if ($10) {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $118 = $arglist_current2;
     $119 = ((0) + 4|0);
     $expanded11 = $119;
     $expanded10 = (($expanded11) - 1)|0;
     $120 = (($118) + ($expanded10))|0;
     $121 = ((0) + 4|0);
     $expanded15 = $121;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $122 = $120 & $expanded13;
     $123 = $122;
     $124 = HEAP32[$123>>2]|0;
     $arglist_next3 = ((($123)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $330 = $124;
    } else {
     $330 = 0;
    }
    HEAP32[$5>>2] = $99;
    $$0254 = $330;$$pre347 = $99;
   } else {
    $$0254 = -1;$$pre347 = $94;
   }
  } while(0);
  $$0252 = 0;$128 = $$pre347;
  while(1) {
   $127 = HEAP8[$128>>0]|0;
   $129 = $127 << 24 >> 24;
   $130 = (($129) + -65)|0;
   $131 = ($130>>>0)>(57);
   if ($131) {
    $$0 = -1;
    break L1;
   }
   $132 = ((($128)) + 1|0);
   HEAP32[$5>>2] = $132;
   $133 = HEAP8[$128>>0]|0;
   $134 = $133 << 24 >> 24;
   $135 = (($134) + -65)|0;
   $136 = ((7360 + (($$0252*58)|0)|0) + ($135)|0);
   $137 = HEAP8[$136>>0]|0;
   $138 = $137&255;
   $139 = (($138) + -1)|0;
   $140 = ($139>>>0)<(8);
   if ($140) {
    $$0252 = $138;$128 = $132;
   } else {
    break;
   }
  }
  $141 = ($137<<24>>24)==(0);
  if ($141) {
   $$0 = -1;
   break;
  }
  $142 = ($137<<24>>24)==(19);
  $143 = ($$0253|0)>(-1);
  do {
   if ($142) {
    if ($143) {
     $$0 = -1;
     break L1;
    } else {
     label = 49;
    }
   } else {
    if ($143) {
     $144 = (($4) + ($$0253<<2)|0);
     HEAP32[$144>>2] = $138;
     $145 = (($3) + ($$0253<<3)|0);
     $146 = $145;
     $147 = $146;
     $148 = HEAP32[$147>>2]|0;
     $149 = (($146) + 4)|0;
     $150 = $149;
     $151 = HEAP32[$150>>2]|0;
     $152 = $6;
     $153 = $152;
     HEAP32[$153>>2] = $148;
     $154 = (($152) + 4)|0;
     $155 = $154;
     HEAP32[$155>>2] = $151;
     label = 49;
     break;
    }
    if (!($10)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg($6,$138,$2);
   }
  } while(0);
  if ((label|0) == 49) {
   label = 0;
   if (!($10)) {
    $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
    continue;
   }
  }
  $156 = HEAP8[$128>>0]|0;
  $157 = $156 << 24 >> 24;
  $158 = ($$0252|0)!=(0);
  $159 = $157 & 15;
  $160 = ($159|0)==(3);
  $or$cond281 = $158 & $160;
  $161 = $157 & -33;
  $$0235 = $or$cond281 ? $161 : $157;
  $162 = $$1263 & 8192;
  $163 = ($162|0)==(0);
  $164 = $$1263 & -65537;
  $$1263$ = $163 ? $$1263 : $164;
  L71: do {
   switch ($$0235|0) {
   case 110:  {
    $trunc = $$0252&255;
    switch ($trunc<<24>>24) {
    case 0:  {
     $171 = HEAP32[$6>>2]|0;
     HEAP32[$171>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
     break;
    }
    case 1:  {
     $172 = HEAP32[$6>>2]|0;
     HEAP32[$172>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
     break;
    }
    case 2:  {
     $173 = ($$1248|0)<(0);
     $174 = $173 << 31 >> 31;
     $175 = HEAP32[$6>>2]|0;
     $176 = $175;
     $177 = $176;
     HEAP32[$177>>2] = $$1248;
     $178 = (($176) + 4)|0;
     $179 = $178;
     HEAP32[$179>>2] = $174;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
     break;
    }
    case 3:  {
     $180 = $$1248&65535;
     $181 = HEAP32[$6>>2]|0;
     HEAP16[$181>>1] = $180;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
     break;
    }
    case 4:  {
     $182 = $$1248&255;
     $183 = HEAP32[$6>>2]|0;
     HEAP8[$183>>0] = $182;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
     break;
    }
    case 6:  {
     $184 = HEAP32[$6>>2]|0;
     HEAP32[$184>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
     break;
    }
    case 7:  {
     $185 = ($$1248|0)<(0);
     $186 = $185 << 31 >> 31;
     $187 = HEAP32[$6>>2]|0;
     $188 = $187;
     $189 = $188;
     HEAP32[$189>>2] = $$1248;
     $190 = (($188) + 4)|0;
     $191 = $190;
     HEAP32[$191>>2] = $186;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
     break;
    }
    default: {
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $192 = ($$0254>>>0)>(8);
    $193 = $192 ? $$0254 : 8;
    $194 = $$1263$ | 8;
    $$1236 = 120;$$1255 = $193;$$3265 = $194;
    label = 61;
    break;
   }
   case 88: case 120:  {
    $$1236 = $$0235;$$1255 = $$0254;$$3265 = $$1263$;
    label = 61;
    break;
   }
   case 111:  {
    $210 = $6;
    $211 = $210;
    $212 = HEAP32[$211>>2]|0;
    $213 = (($210) + 4)|0;
    $214 = $213;
    $215 = HEAP32[$214>>2]|0;
    $216 = (_fmt_o($212,$215,$11)|0);
    $217 = $$1263$ & 8;
    $218 = ($217|0)==(0);
    $219 = $216;
    $220 = (($12) - ($219))|0;
    $221 = ($$0254|0)>($220|0);
    $222 = (($220) + 1)|0;
    $223 = $218 | $221;
    $$0254$$0254$ = $223 ? $$0254 : $222;
    $$0228 = $216;$$1233 = 0;$$1238 = 7824;$$2256 = $$0254$$0254$;$$4266 = $$1263$;$248 = $212;$250 = $215;
    label = 67;
    break;
   }
   case 105: case 100:  {
    $224 = $6;
    $225 = $224;
    $226 = HEAP32[$225>>2]|0;
    $227 = (($224) + 4)|0;
    $228 = $227;
    $229 = HEAP32[$228>>2]|0;
    $230 = ($229|0)<(0);
    if ($230) {
     $231 = (_i64Subtract(0,0,($226|0),($229|0))|0);
     $232 = tempRet0;
     $233 = $6;
     $234 = $233;
     HEAP32[$234>>2] = $231;
     $235 = (($233) + 4)|0;
     $236 = $235;
     HEAP32[$236>>2] = $232;
     $$0232 = 1;$$0237 = 7824;$242 = $231;$243 = $232;
     label = 66;
     break L71;
    } else {
     $237 = $$1263$ & 2048;
     $238 = ($237|0)==(0);
     $239 = $$1263$ & 1;
     $240 = ($239|0)==(0);
     $$ = $240 ? 7824 : (7826);
     $$$ = $238 ? $$ : (7825);
     $241 = $$1263$ & 2049;
     $narrow = ($241|0)!=(0);
     $$284$ = $narrow&1;
     $$0232 = $$284$;$$0237 = $$$;$242 = $226;$243 = $229;
     label = 66;
     break L71;
    }
    break;
   }
   case 117:  {
    $165 = $6;
    $166 = $165;
    $167 = HEAP32[$166>>2]|0;
    $168 = (($165) + 4)|0;
    $169 = $168;
    $170 = HEAP32[$169>>2]|0;
    $$0232 = 0;$$0237 = 7824;$242 = $167;$243 = $170;
    label = 66;
    break;
   }
   case 99:  {
    $259 = $6;
    $260 = $259;
    $261 = HEAP32[$260>>2]|0;
    $262 = (($259) + 4)|0;
    $263 = $262;
    $264 = HEAP32[$263>>2]|0;
    $265 = $261&255;
    HEAP8[$13>>0] = $265;
    $$2 = $13;$$2234 = 0;$$2239 = 7824;$$2251 = $11;$$5 = 1;$$6268 = $164;
    break;
   }
   case 109:  {
    $266 = (___errno_location()|0);
    $267 = HEAP32[$266>>2]|0;
    $268 = (_strerror($267)|0);
    $$1 = $268;
    label = 71;
    break;
   }
   case 115:  {
    $269 = HEAP32[$6>>2]|0;
    $270 = ($269|0)!=(0|0);
    $271 = $270 ? $269 : 7834;
    $$1 = $271;
    label = 71;
    break;
   }
   case 67:  {
    $278 = $6;
    $279 = $278;
    $280 = HEAP32[$279>>2]|0;
    $281 = (($278) + 4)|0;
    $282 = $281;
    $283 = HEAP32[$282>>2]|0;
    HEAP32[$8>>2] = $280;
    HEAP32[$14>>2] = 0;
    HEAP32[$6>>2] = $8;
    $$4258355 = -1;$331 = $8;
    label = 75;
    break;
   }
   case 83:  {
    $$pre349 = HEAP32[$6>>2]|0;
    $284 = ($$0254|0)==(0);
    if ($284) {
     _pad_674($0,32,$$1260,0,$$1263$);
     $$0240$lcssa357 = 0;
     label = 84;
    } else {
     $$4258355 = $$0254;$331 = $$pre349;
     label = 75;
    }
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    $306 = +HEAPF64[$6>>3];
    $307 = (_fmt_fp($0,$306,$$1260,$$0254,$$1263$,$$0235)|0);
    $$0243 = $307;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
    continue L1;
    break;
   }
   default: {
    $$2 = $21;$$2234 = 0;$$2239 = 7824;$$2251 = $11;$$5 = $$0254;$$6268 = $$1263$;
   }
   }
  } while(0);
  L95: do {
   if ((label|0) == 61) {
    label = 0;
    $195 = $6;
    $196 = $195;
    $197 = HEAP32[$196>>2]|0;
    $198 = (($195) + 4)|0;
    $199 = $198;
    $200 = HEAP32[$199>>2]|0;
    $201 = $$1236 & 32;
    $202 = (_fmt_x($197,$200,$11,$201)|0);
    $203 = ($197|0)==(0);
    $204 = ($200|0)==(0);
    $205 = $203 & $204;
    $206 = $$3265 & 8;
    $207 = ($206|0)==(0);
    $or$cond283 = $207 | $205;
    $208 = $$1236 >> 4;
    $209 = (7824 + ($208)|0);
    $$289 = $or$cond283 ? 7824 : $209;
    $$290 = $or$cond283 ? 0 : 2;
    $$0228 = $202;$$1233 = $$290;$$1238 = $$289;$$2256 = $$1255;$$4266 = $$3265;$248 = $197;$250 = $200;
    label = 67;
   }
   else if ((label|0) == 66) {
    label = 0;
    $244 = (_fmt_u($242,$243,$11)|0);
    $$0228 = $244;$$1233 = $$0232;$$1238 = $$0237;$$2256 = $$0254;$$4266 = $$1263$;$248 = $242;$250 = $243;
    label = 67;
   }
   else if ((label|0) == 71) {
    label = 0;
    $272 = (_memchr($$1,0,$$0254)|0);
    $273 = ($272|0)==(0|0);
    $274 = $272;
    $275 = $$1;
    $276 = (($274) - ($275))|0;
    $277 = (($$1) + ($$0254)|0);
    $$3257 = $273 ? $$0254 : $276;
    $$1250 = $273 ? $277 : $272;
    $$2 = $$1;$$2234 = 0;$$2239 = 7824;$$2251 = $$1250;$$5 = $$3257;$$6268 = $164;
   }
   else if ((label|0) == 75) {
    label = 0;
    $$0229322 = $331;$$0240321 = 0;$$1244320 = 0;
    while(1) {
     $285 = HEAP32[$$0229322>>2]|0;
     $286 = ($285|0)==(0);
     if ($286) {
      $$0240$lcssa = $$0240321;$$2245 = $$1244320;
      break;
     }
     $287 = (_wctomb($9,$285)|0);
     $288 = ($287|0)<(0);
     $289 = (($$4258355) - ($$0240321))|0;
     $290 = ($287>>>0)>($289>>>0);
     $or$cond286 = $288 | $290;
     if ($or$cond286) {
      $$0240$lcssa = $$0240321;$$2245 = $287;
      break;
     }
     $291 = ((($$0229322)) + 4|0);
     $292 = (($287) + ($$0240321))|0;
     $293 = ($$4258355>>>0)>($292>>>0);
     if ($293) {
      $$0229322 = $291;$$0240321 = $292;$$1244320 = $287;
     } else {
      $$0240$lcssa = $292;$$2245 = $287;
      break;
     }
    }
    $294 = ($$2245|0)<(0);
    if ($294) {
     $$0 = -1;
     break L1;
    }
    _pad_674($0,32,$$1260,$$0240$lcssa,$$1263$);
    $295 = ($$0240$lcssa|0)==(0);
    if ($295) {
     $$0240$lcssa357 = 0;
     label = 84;
    } else {
     $$1230333 = $331;$$1241332 = 0;
     while(1) {
      $296 = HEAP32[$$1230333>>2]|0;
      $297 = ($296|0)==(0);
      if ($297) {
       $$0240$lcssa357 = $$0240$lcssa;
       label = 84;
       break L95;
      }
      $298 = (_wctomb($9,$296)|0);
      $299 = (($298) + ($$1241332))|0;
      $300 = ($299|0)>($$0240$lcssa|0);
      if ($300) {
       $$0240$lcssa357 = $$0240$lcssa;
       label = 84;
       break L95;
      }
      $301 = ((($$1230333)) + 4|0);
      _out($0,$9,$298);
      $302 = ($299>>>0)<($$0240$lcssa>>>0);
      if ($302) {
       $$1230333 = $301;$$1241332 = $299;
      } else {
       $$0240$lcssa357 = $$0240$lcssa;
       label = 84;
       break;
      }
     }
    }
   }
  } while(0);
  if ((label|0) == 67) {
   label = 0;
   $245 = ($$2256|0)>(-1);
   $246 = $$4266 & -65537;
   $$$4266 = $245 ? $246 : $$4266;
   $247 = ($248|0)!=(0);
   $249 = ($250|0)!=(0);
   $251 = $247 | $249;
   $252 = ($$2256|0)!=(0);
   $or$cond = $252 | $251;
   $253 = $$0228;
   $254 = (($12) - ($253))|0;
   $255 = $251 ^ 1;
   $256 = $255&1;
   $257 = (($256) + ($254))|0;
   $258 = ($$2256|0)>($257|0);
   $$2256$ = $258 ? $$2256 : $257;
   $$2256$$$2256 = $or$cond ? $$2256$ : $$2256;
   $$0228$ = $or$cond ? $$0228 : $11;
   $$2 = $$0228$;$$2234 = $$1233;$$2239 = $$1238;$$2251 = $11;$$5 = $$2256$$$2256;$$6268 = $$$4266;
  }
  else if ((label|0) == 84) {
   label = 0;
   $303 = $$1263$ ^ 8192;
   _pad_674($0,32,$$1260,$$0240$lcssa357,$303);
   $304 = ($$1260|0)>($$0240$lcssa357|0);
   $305 = $304 ? $$1260 : $$0240$lcssa357;
   $$0243 = $305;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
   continue;
  }
  $308 = $$2251;
  $309 = $$2;
  $310 = (($308) - ($309))|0;
  $311 = ($$5|0)<($310|0);
  $$$5 = $311 ? $310 : $$5;
  $312 = (($$$5) + ($$2234))|0;
  $313 = ($$1260|0)<($312|0);
  $$2261 = $313 ? $312 : $$1260;
  _pad_674($0,32,$$2261,$312,$$6268);
  _out($0,$$2239,$$2234);
  $314 = $$6268 ^ 65536;
  _pad_674($0,48,$$2261,$312,$314);
  _pad_674($0,48,$$$5,$310,0);
  _out($0,$$2,$310);
  $315 = $$6268 ^ 8192;
  _pad_674($0,32,$$2261,$312,$315);
  $$0243 = $$2261;$$0247 = $$1248;$$0269 = $$3272;$21 = $132;
 }
 L114: do {
  if ((label|0) == 87) {
   $316 = ($0|0)==(0|0);
   if ($316) {
    $317 = ($$0269|0)==(0);
    if ($317) {
     $$0 = 0;
    } else {
     $$2242305 = 1;
     while(1) {
      $318 = (($4) + ($$2242305<<2)|0);
      $319 = HEAP32[$318>>2]|0;
      $320 = ($319|0)==(0);
      if ($320) {
       $$3303 = $$2242305;
       break;
      }
      $321 = (($3) + ($$2242305<<3)|0);
      _pop_arg($321,$319,$2);
      $322 = (($$2242305) + 1)|0;
      $323 = ($322|0)<(10);
      if ($323) {
       $$2242305 = $322;
      } else {
       $$0 = 1;
       break L114;
      }
     }
     while(1) {
      $326 = (($4) + ($$3303<<2)|0);
      $327 = HEAP32[$326>>2]|0;
      $328 = ($327|0)==(0);
      $325 = (($$3303) + 1)|0;
      if (!($328)) {
       $$0 = -1;
       break L114;
      }
      $324 = ($325|0)<(10);
      if ($324) {
       $$3303 = $325;
      } else {
       $$0 = 1;
       break;
      }
     }
    }
   } else {
    $$0 = $$1248;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___lockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___unlockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _out($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = $3 & 32;
 $5 = ($4|0)==(0);
 if ($5) {
  (___fwritex($1,$2,$0)|0);
 }
 return;
}
function _getint($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$06 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $isdigit = 0, $isdigit5 = 0, $isdigittmp = 0, $isdigittmp4 = 0, $isdigittmp7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $isdigittmp4 = (($3) + -48)|0;
 $isdigit5 = ($isdigittmp4>>>0)<(10);
 if ($isdigit5) {
  $$06 = 0;$7 = $1;$isdigittmp7 = $isdigittmp4;
  while(1) {
   $4 = ($$06*10)|0;
   $5 = (($isdigittmp7) + ($4))|0;
   $6 = ((($7)) + 1|0);
   HEAP32[$0>>2] = $6;
   $8 = HEAP8[$6>>0]|0;
   $9 = $8 << 24 >> 24;
   $isdigittmp = (($9) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   if ($isdigit) {
    $$06 = $5;$7 = $6;$isdigittmp7 = $isdigittmp;
   } else {
    $$0$lcssa = $5;
    break;
   }
  }
 } else {
  $$0$lcssa = 0;
 }
 return ($$0$lcssa|0);
}
function _pop_arg($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$mask = 0, $$mask31 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(20);
 L1: do {
  if (!($3)) {
   do {
    switch ($1|0) {
    case 9:  {
     $arglist_current = HEAP32[$2>>2]|0;
     $4 = $arglist_current;
     $5 = ((0) + 4|0);
     $expanded28 = $5;
     $expanded = (($expanded28) - 1)|0;
     $6 = (($4) + ($expanded))|0;
     $7 = ((0) + 4|0);
     $expanded32 = $7;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $8 = $6 & $expanded30;
     $9 = $8;
     $10 = HEAP32[$9>>2]|0;
     $arglist_next = ((($9)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     HEAP32[$0>>2] = $10;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $11 = $arglist_current2;
     $12 = ((0) + 4|0);
     $expanded35 = $12;
     $expanded34 = (($expanded35) - 1)|0;
     $13 = (($11) + ($expanded34))|0;
     $14 = ((0) + 4|0);
     $expanded39 = $14;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $15 = $13 & $expanded37;
     $16 = $15;
     $17 = HEAP32[$16>>2]|0;
     $arglist_next3 = ((($16)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $18 = ($17|0)<(0);
     $19 = $18 << 31 >> 31;
     $20 = $0;
     $21 = $20;
     HEAP32[$21>>2] = $17;
     $22 = (($20) + 4)|0;
     $23 = $22;
     HEAP32[$23>>2] = $19;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$2>>2]|0;
     $24 = $arglist_current5;
     $25 = ((0) + 4|0);
     $expanded42 = $25;
     $expanded41 = (($expanded42) - 1)|0;
     $26 = (($24) + ($expanded41))|0;
     $27 = ((0) + 4|0);
     $expanded46 = $27;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $28 = $26 & $expanded44;
     $29 = $28;
     $30 = HEAP32[$29>>2]|0;
     $arglist_next6 = ((($29)) + 4|0);
     HEAP32[$2>>2] = $arglist_next6;
     $31 = $0;
     $32 = $31;
     HEAP32[$32>>2] = $30;
     $33 = (($31) + 4)|0;
     $34 = $33;
     HEAP32[$34>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$2>>2]|0;
     $35 = $arglist_current8;
     $36 = ((0) + 8|0);
     $expanded49 = $36;
     $expanded48 = (($expanded49) - 1)|0;
     $37 = (($35) + ($expanded48))|0;
     $38 = ((0) + 8|0);
     $expanded53 = $38;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $39 = $37 & $expanded51;
     $40 = $39;
     $41 = $40;
     $42 = $41;
     $43 = HEAP32[$42>>2]|0;
     $44 = (($41) + 4)|0;
     $45 = $44;
     $46 = HEAP32[$45>>2]|0;
     $arglist_next9 = ((($40)) + 8|0);
     HEAP32[$2>>2] = $arglist_next9;
     $47 = $0;
     $48 = $47;
     HEAP32[$48>>2] = $43;
     $49 = (($47) + 4)|0;
     $50 = $49;
     HEAP32[$50>>2] = $46;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$2>>2]|0;
     $51 = $arglist_current11;
     $52 = ((0) + 4|0);
     $expanded56 = $52;
     $expanded55 = (($expanded56) - 1)|0;
     $53 = (($51) + ($expanded55))|0;
     $54 = ((0) + 4|0);
     $expanded60 = $54;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $55 = $53 & $expanded58;
     $56 = $55;
     $57 = HEAP32[$56>>2]|0;
     $arglist_next12 = ((($56)) + 4|0);
     HEAP32[$2>>2] = $arglist_next12;
     $58 = $57&65535;
     $59 = $58 << 16 >> 16;
     $60 = ($59|0)<(0);
     $61 = $60 << 31 >> 31;
     $62 = $0;
     $63 = $62;
     HEAP32[$63>>2] = $59;
     $64 = (($62) + 4)|0;
     $65 = $64;
     HEAP32[$65>>2] = $61;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$2>>2]|0;
     $66 = $arglist_current14;
     $67 = ((0) + 4|0);
     $expanded63 = $67;
     $expanded62 = (($expanded63) - 1)|0;
     $68 = (($66) + ($expanded62))|0;
     $69 = ((0) + 4|0);
     $expanded67 = $69;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $70 = $68 & $expanded65;
     $71 = $70;
     $72 = HEAP32[$71>>2]|0;
     $arglist_next15 = ((($71)) + 4|0);
     HEAP32[$2>>2] = $arglist_next15;
     $$mask31 = $72 & 65535;
     $73 = $0;
     $74 = $73;
     HEAP32[$74>>2] = $$mask31;
     $75 = (($73) + 4)|0;
     $76 = $75;
     HEAP32[$76>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$2>>2]|0;
     $77 = $arglist_current17;
     $78 = ((0) + 4|0);
     $expanded70 = $78;
     $expanded69 = (($expanded70) - 1)|0;
     $79 = (($77) + ($expanded69))|0;
     $80 = ((0) + 4|0);
     $expanded74 = $80;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $81 = $79 & $expanded72;
     $82 = $81;
     $83 = HEAP32[$82>>2]|0;
     $arglist_next18 = ((($82)) + 4|0);
     HEAP32[$2>>2] = $arglist_next18;
     $84 = $83&255;
     $85 = $84 << 24 >> 24;
     $86 = ($85|0)<(0);
     $87 = $86 << 31 >> 31;
     $88 = $0;
     $89 = $88;
     HEAP32[$89>>2] = $85;
     $90 = (($88) + 4)|0;
     $91 = $90;
     HEAP32[$91>>2] = $87;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$2>>2]|0;
     $92 = $arglist_current20;
     $93 = ((0) + 4|0);
     $expanded77 = $93;
     $expanded76 = (($expanded77) - 1)|0;
     $94 = (($92) + ($expanded76))|0;
     $95 = ((0) + 4|0);
     $expanded81 = $95;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $96 = $94 & $expanded79;
     $97 = $96;
     $98 = HEAP32[$97>>2]|0;
     $arglist_next21 = ((($97)) + 4|0);
     HEAP32[$2>>2] = $arglist_next21;
     $$mask = $98 & 255;
     $99 = $0;
     $100 = $99;
     HEAP32[$100>>2] = $$mask;
     $101 = (($99) + 4)|0;
     $102 = $101;
     HEAP32[$102>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$2>>2]|0;
     $103 = $arglist_current23;
     $104 = ((0) + 8|0);
     $expanded84 = $104;
     $expanded83 = (($expanded84) - 1)|0;
     $105 = (($103) + ($expanded83))|0;
     $106 = ((0) + 8|0);
     $expanded88 = $106;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $107 = $105 & $expanded86;
     $108 = $107;
     $109 = +HEAPF64[$108>>3];
     $arglist_next24 = ((($108)) + 8|0);
     HEAP32[$2>>2] = $arglist_next24;
     HEAPF64[$0>>3] = $109;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$2>>2]|0;
     $110 = $arglist_current26;
     $111 = ((0) + 8|0);
     $expanded91 = $111;
     $expanded90 = (($expanded91) - 1)|0;
     $112 = (($110) + ($expanded90))|0;
     $113 = ((0) + 8|0);
     $expanded95 = $113;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $114 = $112 & $expanded93;
     $115 = $114;
     $116 = +HEAPF64[$115>>3];
     $arglist_next27 = ((($115)) + 8|0);
     HEAP32[$2>>2] = $arglist_next27;
     HEAPF64[$0>>3] = $116;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_x($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$05$lcssa = 0, $$056 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0);
 $5 = ($1|0)==(0);
 $6 = $4 & $5;
 if ($6) {
  $$05$lcssa = $2;
 } else {
  $$056 = $2;$15 = $1;$8 = $0;
  while(1) {
   $7 = $8 & 15;
   $9 = (7876 + ($7)|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10&255;
   $12 = $11 | $3;
   $13 = $12&255;
   $14 = ((($$056)) + -1|0);
   HEAP8[$14>>0] = $13;
   $16 = (_bitshift64Lshr(($8|0),($15|0),4)|0);
   $17 = tempRet0;
   $18 = ($16|0)==(0);
   $19 = ($17|0)==(0);
   $20 = $18 & $19;
   if ($20) {
    $$05$lcssa = $14;
    break;
   } else {
    $$056 = $14;$15 = $17;$8 = $16;
   }
  }
 }
 return ($$05$lcssa|0);
}
function _fmt_o($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$06 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0);
 $4 = ($1|0)==(0);
 $5 = $3 & $4;
 if ($5) {
  $$0$lcssa = $2;
 } else {
  $$06 = $2;$11 = $1;$7 = $0;
  while(1) {
   $6 = $7&255;
   $8 = $6 & 7;
   $9 = $8 | 48;
   $10 = ((($$06)) + -1|0);
   HEAP8[$10>>0] = $9;
   $12 = (_bitshift64Lshr(($7|0),($11|0),3)|0);
   $13 = tempRet0;
   $14 = ($12|0)==(0);
   $15 = ($13|0)==(0);
   $16 = $14 & $15;
   if ($16) {
    $$0$lcssa = $10;
    break;
   } else {
    $$06 = $10;$11 = $13;$7 = $12;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _fmt_u($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$010$lcssa$off0 = 0, $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(0);
 $4 = ($0>>>0)>(4294967295);
 $5 = ($1|0)==(0);
 $6 = $5 & $4;
 $7 = $3 | $6;
 if ($7) {
  $$0914 = $2;$8 = $0;$9 = $1;
  while(1) {
   $10 = (___uremdi3(($8|0),($9|0),10,0)|0);
   $11 = tempRet0;
   $12 = $10&255;
   $13 = $12 | 48;
   $14 = ((($$0914)) + -1|0);
   HEAP8[$14>>0] = $13;
   $15 = (___udivdi3(($8|0),($9|0),10,0)|0);
   $16 = tempRet0;
   $17 = ($9>>>0)>(9);
   $18 = ($8>>>0)>(4294967295);
   $19 = ($9|0)==(9);
   $20 = $19 & $18;
   $21 = $17 | $20;
   if ($21) {
    $$0914 = $14;$8 = $15;$9 = $16;
   } else {
    break;
   }
  }
  $$010$lcssa$off0 = $15;$$09$lcssa = $14;
 } else {
  $$010$lcssa$off0 = $0;$$09$lcssa = $2;
 }
 $22 = ($$010$lcssa$off0|0)==(0);
 if ($22) {
  $$1$lcssa = $$09$lcssa;
 } else {
  $$012 = $$010$lcssa$off0;$$111 = $$09$lcssa;
  while(1) {
   $23 = (($$012>>>0) % 10)&-1;
   $24 = $23 | 48;
   $25 = $24&255;
   $26 = ((($$111)) + -1|0);
   HEAP8[$26>>0] = $25;
   $27 = (($$012>>>0) / 10)&-1;
   $28 = ($$012>>>0)<(10);
   if ($28) {
    $$1$lcssa = $26;
    break;
   } else {
    $$012 = $27;$$111 = $26;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _strerror($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___pthread_self_105()|0);
 $2 = ((($1)) + 188|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (___strerror_l($0,$3)|0);
 return ($4|0);
}
function _memchr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$13745 = 0, $$140 = 0, $$2 = 0, $$23839 = 0, $$3 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 & 255;
 $4 = $0;
 $5 = $4 & 3;
 $6 = ($5|0)!=(0);
 $7 = ($2|0)!=(0);
 $or$cond53 = $7 & $6;
 L1: do {
  if ($or$cond53) {
   $8 = $1&255;
   $$03555 = $0;$$03654 = $2;
   while(1) {
    $9 = HEAP8[$$03555>>0]|0;
    $10 = ($9<<24>>24)==($8<<24>>24);
    if ($10) {
     $$035$lcssa65 = $$03555;$$036$lcssa64 = $$03654;
     label = 6;
     break L1;
    }
    $11 = ((($$03555)) + 1|0);
    $12 = (($$03654) + -1)|0;
    $13 = $11;
    $14 = $13 & 3;
    $15 = ($14|0)!=(0);
    $16 = ($12|0)!=(0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$03555 = $11;$$03654 = $12;
    } else {
     $$035$lcssa = $11;$$036$lcssa = $12;$$lcssa = $16;
     label = 5;
     break;
    }
   }
  } else {
   $$035$lcssa = $0;$$036$lcssa = $2;$$lcssa = $7;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$035$lcssa65 = $$035$lcssa;$$036$lcssa64 = $$036$lcssa;
   label = 6;
  } else {
   $$2 = $$035$lcssa;$$3 = 0;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $17 = HEAP8[$$035$lcssa65>>0]|0;
   $18 = $1&255;
   $19 = ($17<<24>>24)==($18<<24>>24);
   if ($19) {
    $$2 = $$035$lcssa65;$$3 = $$036$lcssa64;
   } else {
    $20 = Math_imul($3, 16843009)|0;
    $21 = ($$036$lcssa64>>>0)>(3);
    L11: do {
     if ($21) {
      $$046 = $$035$lcssa65;$$13745 = $$036$lcssa64;
      while(1) {
       $22 = HEAP32[$$046>>2]|0;
       $23 = $22 ^ $20;
       $24 = (($23) + -16843009)|0;
       $25 = $23 & -2139062144;
       $26 = $25 ^ -2139062144;
       $27 = $26 & $24;
       $28 = ($27|0)==(0);
       if (!($28)) {
        break;
       }
       $29 = ((($$046)) + 4|0);
       $30 = (($$13745) + -4)|0;
       $31 = ($30>>>0)>(3);
       if ($31) {
        $$046 = $29;$$13745 = $30;
       } else {
        $$0$lcssa = $29;$$137$lcssa = $30;
        label = 11;
        break L11;
       }
      }
      $$140 = $$046;$$23839 = $$13745;
     } else {
      $$0$lcssa = $$035$lcssa65;$$137$lcssa = $$036$lcssa64;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $32 = ($$137$lcssa|0)==(0);
     if ($32) {
      $$2 = $$0$lcssa;$$3 = 0;
      break;
     } else {
      $$140 = $$0$lcssa;$$23839 = $$137$lcssa;
     }
    }
    while(1) {
     $33 = HEAP8[$$140>>0]|0;
     $34 = ($33<<24>>24)==($18<<24>>24);
     if ($34) {
      $$2 = $$140;$$3 = $$23839;
      break L8;
     }
     $35 = ((($$140)) + 1|0);
     $36 = (($$23839) + -1)|0;
     $37 = ($36|0)==(0);
     if ($37) {
      $$2 = $35;$$3 = 0;
      break;
     } else {
      $$140 = $35;$$23839 = $36;
     }
    }
   }
  }
 } while(0);
 $38 = ($$3|0)!=(0);
 $39 = $38 ? $$2 : 0;
 return ($39|0);
}
function _pad_674($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0, $$011 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $5 = sp;
 $6 = $4 & 73728;
 $7 = ($6|0)==(0);
 $8 = ($2|0)>($3|0);
 $or$cond = $8 & $7;
 if ($or$cond) {
  $9 = (($2) - ($3))|0;
  $10 = ($9>>>0)<(256);
  $11 = $10 ? $9 : 256;
  _memset(($5|0),($1|0),($11|0))|0;
  $12 = ($9>>>0)>(255);
  if ($12) {
   $13 = (($2) - ($3))|0;
   $$011 = $9;
   while(1) {
    _out($0,$5,256);
    $14 = (($$011) + -256)|0;
    $15 = ($14>>>0)>(255);
    if ($15) {
     $$011 = $14;
    } else {
     break;
    }
   }
   $16 = $13 & 255;
   $$0$lcssa = $16;
  } else {
   $$0$lcssa = $9;
  }
  _out($0,$5,$$0$lcssa);
 }
 STACKTOP = sp;return;
}
function _wctomb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = (_wcrtomb($0,$1,0)|0);
  $$0 = $3;
 }
 return ($$0|0);
}
function _fmt_fp($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = +$1;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$$ = 0, $$$$559 = 0.0, $$$3484 = 0, $$$3484691 = 0, $$$3484692 = 0, $$$3501 = 0, $$$4502 = 0, $$$542 = 0.0, $$$559 = 0.0, $$0 = 0, $$0463$lcssa = 0, $$0463584 = 0, $$0464594 = 0, $$0471 = 0.0, $$0479 = 0, $$0487642 = 0, $$0488 = 0, $$0488653 = 0, $$0488655 = 0;
 var $$0496$$9 = 0, $$0497654 = 0, $$0498 = 0, $$0509582 = 0.0, $$0510 = 0, $$0511 = 0, $$0514637 = 0, $$0520 = 0, $$0521 = 0, $$0521$ = 0, $$0523 = 0, $$0525 = 0, $$0527 = 0, $$0527629 = 0, $$0527631 = 0, $$0530636 = 0, $$1465 = 0, $$1467 = 0.0, $$1469 = 0.0, $$1472 = 0.0;
 var $$1480 = 0, $$1482$lcssa = 0, $$1482661 = 0, $$1489641 = 0, $$1499$lcssa = 0, $$1499660 = 0, $$1508583 = 0, $$1512$lcssa = 0, $$1512607 = 0, $$1515 = 0, $$1524 = 0, $$1526 = 0, $$1528614 = 0, $$1531$lcssa = 0, $$1531630 = 0, $$1598 = 0, $$2 = 0, $$2473 = 0.0, $$2476 = 0, $$2476$$547 = 0;
 var $$2476$$549 = 0, $$2483$ph = 0, $$2500 = 0, $$2513 = 0, $$2516618 = 0, $$2529 = 0, $$2532617 = 0, $$3 = 0.0, $$3477 = 0, $$3484$lcssa = 0, $$3484648 = 0, $$3501$lcssa = 0, $$3501647 = 0, $$3533613 = 0, $$4 = 0.0, $$4478$lcssa = 0, $$4478590 = 0, $$4492 = 0, $$4502 = 0, $$4518 = 0;
 var $$5$lcssa = 0, $$534$ = 0, $$539 = 0, $$539$ = 0, $$542 = 0.0, $$546 = 0, $$548 = 0, $$5486$lcssa = 0, $$5486623 = 0, $$5493597 = 0, $$5519$ph = 0, $$555 = 0, $$556 = 0, $$559 = 0.0, $$5602 = 0, $$6 = 0, $$6494589 = 0, $$7495601 = 0, $$7505 = 0, $$7505$ = 0;
 var $$7505$ph = 0, $$8 = 0, $$9$ph = 0, $$lcssa673 = 0, $$neg = 0, $$neg567 = 0, $$pn = 0, $$pn566 = 0, $$pr = 0, $$pr564 = 0, $$pre = 0, $$pre$phi690Z2D = 0, $$pre689 = 0, $$sink545$lcssa = 0, $$sink545622 = 0, $$sink562 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0.0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0;
 var $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0.0, $229 = 0.0, $23 = 0;
 var $230 = 0, $231 = 0.0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0;
 var $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0;
 var $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0;
 var $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0.0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0.0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0;
 var $narrow = 0, $not$ = 0, $notlhs = 0, $notrhs = 0, $or$cond = 0, $or$cond3$not = 0, $or$cond537 = 0, $or$cond541 = 0, $or$cond544 = 0, $or$cond554 = 0, $or$cond6 = 0, $scevgep684 = 0, $scevgep684685 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(560|0);
 $6 = sp + 8|0;
 $7 = sp;
 $8 = sp + 524|0;
 $9 = $8;
 $10 = sp + 512|0;
 HEAP32[$7>>2] = 0;
 $11 = ((($10)) + 12|0);
 (___DOUBLE_BITS_675($1)|0);
 $12 = tempRet0;
 $13 = ($12|0)<(0);
 if ($13) {
  $14 = -$1;
  $$0471 = $14;$$0520 = 1;$$0521 = 7841;
 } else {
  $15 = $4 & 2048;
  $16 = ($15|0)==(0);
  $17 = $4 & 1;
  $18 = ($17|0)==(0);
  $$ = $18 ? (7842) : (7847);
  $$$ = $16 ? $$ : (7844);
  $19 = $4 & 2049;
  $narrow = ($19|0)!=(0);
  $$534$ = $narrow&1;
  $$0471 = $1;$$0520 = $$534$;$$0521 = $$$;
 }
 (___DOUBLE_BITS_675($$0471)|0);
 $20 = tempRet0;
 $21 = $20 & 2146435072;
 $22 = ($21>>>0)<(2146435072);
 $23 = (0)<(0);
 $24 = ($21|0)==(2146435072);
 $25 = $24 & $23;
 $26 = $22 | $25;
 do {
  if ($26) {
   $35 = (+_frexpl($$0471,$7));
   $36 = $35 * 2.0;
   $37 = $36 != 0.0;
   if ($37) {
    $38 = HEAP32[$7>>2]|0;
    $39 = (($38) + -1)|0;
    HEAP32[$7>>2] = $39;
   }
   $40 = $5 | 32;
   $41 = ($40|0)==(97);
   if ($41) {
    $42 = $5 & 32;
    $43 = ($42|0)==(0);
    $44 = ((($$0521)) + 9|0);
    $$0521$ = $43 ? $$0521 : $44;
    $45 = $$0520 | 2;
    $46 = ($3>>>0)>(11);
    $47 = (12 - ($3))|0;
    $48 = ($47|0)==(0);
    $49 = $46 | $48;
    do {
     if ($49) {
      $$1472 = $36;
     } else {
      $$0509582 = 8.0;$$1508583 = $47;
      while(1) {
       $50 = (($$1508583) + -1)|0;
       $51 = $$0509582 * 16.0;
       $52 = ($50|0)==(0);
       if ($52) {
        break;
       } else {
        $$0509582 = $51;$$1508583 = $50;
       }
      }
      $53 = HEAP8[$$0521$>>0]|0;
      $54 = ($53<<24>>24)==(45);
      if ($54) {
       $55 = -$36;
       $56 = $55 - $51;
       $57 = $51 + $56;
       $58 = -$57;
       $$1472 = $58;
       break;
      } else {
       $59 = $36 + $51;
       $60 = $59 - $51;
       $$1472 = $60;
       break;
      }
     }
    } while(0);
    $61 = HEAP32[$7>>2]|0;
    $62 = ($61|0)<(0);
    $63 = (0 - ($61))|0;
    $64 = $62 ? $63 : $61;
    $65 = ($64|0)<(0);
    $66 = $65 << 31 >> 31;
    $67 = (_fmt_u($64,$66,$11)|0);
    $68 = ($67|0)==($11|0);
    if ($68) {
     $69 = ((($10)) + 11|0);
     HEAP8[$69>>0] = 48;
     $$0511 = $69;
    } else {
     $$0511 = $67;
    }
    $70 = $61 >> 31;
    $71 = $70 & 2;
    $72 = (($71) + 43)|0;
    $73 = $72&255;
    $74 = ((($$0511)) + -1|0);
    HEAP8[$74>>0] = $73;
    $75 = (($5) + 15)|0;
    $76 = $75&255;
    $77 = ((($$0511)) + -2|0);
    HEAP8[$77>>0] = $76;
    $notrhs = ($3|0)<(1);
    $78 = $4 & 8;
    $79 = ($78|0)==(0);
    $$0523 = $8;$$2473 = $$1472;
    while(1) {
     $80 = (~~(($$2473)));
     $81 = (7876 + ($80)|0);
     $82 = HEAP8[$81>>0]|0;
     $83 = $82&255;
     $84 = $83 | $42;
     $85 = $84&255;
     $86 = ((($$0523)) + 1|0);
     HEAP8[$$0523>>0] = $85;
     $87 = (+($80|0));
     $88 = $$2473 - $87;
     $89 = $88 * 16.0;
     $90 = $86;
     $91 = (($90) - ($9))|0;
     $92 = ($91|0)==(1);
     if ($92) {
      $notlhs = $89 == 0.0;
      $or$cond3$not = $notrhs & $notlhs;
      $or$cond = $79 & $or$cond3$not;
      if ($or$cond) {
       $$1524 = $86;
      } else {
       $93 = ((($$0523)) + 2|0);
       HEAP8[$86>>0] = 46;
       $$1524 = $93;
      }
     } else {
      $$1524 = $86;
     }
     $94 = $89 != 0.0;
     if ($94) {
      $$0523 = $$1524;$$2473 = $89;
     } else {
      break;
     }
    }
    $95 = ($3|0)!=(0);
    $96 = $77;
    $97 = $11;
    $98 = $$1524;
    $99 = (($98) - ($9))|0;
    $100 = (($97) - ($96))|0;
    $101 = (($99) + -2)|0;
    $102 = ($101|0)<($3|0);
    $or$cond537 = $95 & $102;
    $103 = (($3) + 2)|0;
    $$pn = $or$cond537 ? $103 : $99;
    $$0525 = (($100) + ($45))|0;
    $104 = (($$0525) + ($$pn))|0;
    _pad_674($0,32,$2,$104,$4);
    _out($0,$$0521$,$45);
    $105 = $4 ^ 65536;
    _pad_674($0,48,$2,$104,$105);
    _out($0,$8,$99);
    $106 = (($$pn) - ($99))|0;
    _pad_674($0,48,$106,0,0);
    _out($0,$77,$100);
    $107 = $4 ^ 8192;
    _pad_674($0,32,$2,$104,$107);
    $$sink562 = $104;
    break;
   }
   $108 = ($3|0)<(0);
   $$539 = $108 ? 6 : $3;
   if ($37) {
    $109 = $36 * 268435456.0;
    $110 = HEAP32[$7>>2]|0;
    $111 = (($110) + -28)|0;
    HEAP32[$7>>2] = $111;
    $$3 = $109;$$pr = $111;
   } else {
    $$pre = HEAP32[$7>>2]|0;
    $$3 = $36;$$pr = $$pre;
   }
   $112 = ($$pr|0)<(0);
   $113 = ((($6)) + 288|0);
   $$556 = $112 ? $6 : $113;
   $$0498 = $$556;$$4 = $$3;
   while(1) {
    $114 = (~~(($$4))>>>0);
    HEAP32[$$0498>>2] = $114;
    $115 = ((($$0498)) + 4|0);
    $116 = (+($114>>>0));
    $117 = $$4 - $116;
    $118 = $117 * 1.0E+9;
    $119 = $118 != 0.0;
    if ($119) {
     $$0498 = $115;$$4 = $118;
    } else {
     break;
    }
   }
   $120 = ($$pr|0)>(0);
   if ($120) {
    $$1482661 = $$556;$$1499660 = $115;$122 = $$pr;
    while(1) {
     $121 = ($122|0)<(29);
     $123 = $121 ? $122 : 29;
     $$0488653 = ((($$1499660)) + -4|0);
     $124 = ($$0488653>>>0)<($$1482661>>>0);
     if ($124) {
      $$2483$ph = $$1482661;
     } else {
      $$0488655 = $$0488653;$$0497654 = 0;
      while(1) {
       $125 = HEAP32[$$0488655>>2]|0;
       $126 = (_bitshift64Shl(($125|0),0,($123|0))|0);
       $127 = tempRet0;
       $128 = (_i64Add(($126|0),($127|0),($$0497654|0),0)|0);
       $129 = tempRet0;
       $130 = (___uremdi3(($128|0),($129|0),1000000000,0)|0);
       $131 = tempRet0;
       HEAP32[$$0488655>>2] = $130;
       $132 = (___udivdi3(($128|0),($129|0),1000000000,0)|0);
       $133 = tempRet0;
       $$0488 = ((($$0488655)) + -4|0);
       $134 = ($$0488>>>0)<($$1482661>>>0);
       if ($134) {
        break;
       } else {
        $$0488655 = $$0488;$$0497654 = $132;
       }
      }
      $135 = ($132|0)==(0);
      if ($135) {
       $$2483$ph = $$1482661;
      } else {
       $136 = ((($$1482661)) + -4|0);
       HEAP32[$136>>2] = $132;
       $$2483$ph = $136;
      }
     }
     $$2500 = $$1499660;
     while(1) {
      $137 = ($$2500>>>0)>($$2483$ph>>>0);
      if (!($137)) {
       break;
      }
      $138 = ((($$2500)) + -4|0);
      $139 = HEAP32[$138>>2]|0;
      $140 = ($139|0)==(0);
      if ($140) {
       $$2500 = $138;
      } else {
       break;
      }
     }
     $141 = HEAP32[$7>>2]|0;
     $142 = (($141) - ($123))|0;
     HEAP32[$7>>2] = $142;
     $143 = ($142|0)>(0);
     if ($143) {
      $$1482661 = $$2483$ph;$$1499660 = $$2500;$122 = $142;
     } else {
      $$1482$lcssa = $$2483$ph;$$1499$lcssa = $$2500;$$pr564 = $142;
      break;
     }
    }
   } else {
    $$1482$lcssa = $$556;$$1499$lcssa = $115;$$pr564 = $$pr;
   }
   $144 = ($$pr564|0)<(0);
   if ($144) {
    $145 = (($$539) + 25)|0;
    $146 = (($145|0) / 9)&-1;
    $147 = (($146) + 1)|0;
    $148 = ($40|0)==(102);
    $$3484648 = $$1482$lcssa;$$3501647 = $$1499$lcssa;$150 = $$pr564;
    while(1) {
     $149 = (0 - ($150))|0;
     $151 = ($149|0)<(9);
     $152 = $151 ? $149 : 9;
     $153 = ($$3484648>>>0)<($$3501647>>>0);
     if ($153) {
      $157 = 1 << $152;
      $158 = (($157) + -1)|0;
      $159 = 1000000000 >>> $152;
      $$0487642 = 0;$$1489641 = $$3484648;
      while(1) {
       $160 = HEAP32[$$1489641>>2]|0;
       $161 = $160 & $158;
       $162 = $160 >>> $152;
       $163 = (($162) + ($$0487642))|0;
       HEAP32[$$1489641>>2] = $163;
       $164 = Math_imul($161, $159)|0;
       $165 = ((($$1489641)) + 4|0);
       $166 = ($165>>>0)<($$3501647>>>0);
       if ($166) {
        $$0487642 = $164;$$1489641 = $165;
       } else {
        break;
       }
      }
      $167 = HEAP32[$$3484648>>2]|0;
      $168 = ($167|0)==(0);
      $169 = ((($$3484648)) + 4|0);
      $$$3484 = $168 ? $169 : $$3484648;
      $170 = ($164|0)==(0);
      if ($170) {
       $$$3484692 = $$$3484;$$4502 = $$3501647;
      } else {
       $171 = ((($$3501647)) + 4|0);
       HEAP32[$$3501647>>2] = $164;
       $$$3484692 = $$$3484;$$4502 = $171;
      }
     } else {
      $154 = HEAP32[$$3484648>>2]|0;
      $155 = ($154|0)==(0);
      $156 = ((($$3484648)) + 4|0);
      $$$3484691 = $155 ? $156 : $$3484648;
      $$$3484692 = $$$3484691;$$4502 = $$3501647;
     }
     $172 = $148 ? $$556 : $$$3484692;
     $173 = $$4502;
     $174 = $172;
     $175 = (($173) - ($174))|0;
     $176 = $175 >> 2;
     $177 = ($176|0)>($147|0);
     $178 = (($172) + ($147<<2)|0);
     $$$4502 = $177 ? $178 : $$4502;
     $179 = HEAP32[$7>>2]|0;
     $180 = (($179) + ($152))|0;
     HEAP32[$7>>2] = $180;
     $181 = ($180|0)<(0);
     if ($181) {
      $$3484648 = $$$3484692;$$3501647 = $$$4502;$150 = $180;
     } else {
      $$3484$lcssa = $$$3484692;$$3501$lcssa = $$$4502;
      break;
     }
    }
   } else {
    $$3484$lcssa = $$1482$lcssa;$$3501$lcssa = $$1499$lcssa;
   }
   $182 = ($$3484$lcssa>>>0)<($$3501$lcssa>>>0);
   $183 = $$556;
   if ($182) {
    $184 = $$3484$lcssa;
    $185 = (($183) - ($184))|0;
    $186 = $185 >> 2;
    $187 = ($186*9)|0;
    $188 = HEAP32[$$3484$lcssa>>2]|0;
    $189 = ($188>>>0)<(10);
    if ($189) {
     $$1515 = $187;
    } else {
     $$0514637 = $187;$$0530636 = 10;
     while(1) {
      $190 = ($$0530636*10)|0;
      $191 = (($$0514637) + 1)|0;
      $192 = ($188>>>0)<($190>>>0);
      if ($192) {
       $$1515 = $191;
       break;
      } else {
       $$0514637 = $191;$$0530636 = $190;
      }
     }
    }
   } else {
    $$1515 = 0;
   }
   $193 = ($40|0)!=(102);
   $194 = $193 ? $$1515 : 0;
   $195 = (($$539) - ($194))|0;
   $196 = ($40|0)==(103);
   $197 = ($$539|0)!=(0);
   $198 = $197 & $196;
   $$neg = $198 << 31 >> 31;
   $199 = (($195) + ($$neg))|0;
   $200 = $$3501$lcssa;
   $201 = (($200) - ($183))|0;
   $202 = $201 >> 2;
   $203 = ($202*9)|0;
   $204 = (($203) + -9)|0;
   $205 = ($199|0)<($204|0);
   if ($205) {
    $206 = ((($$556)) + 4|0);
    $207 = (($199) + 9216)|0;
    $208 = (($207|0) / 9)&-1;
    $209 = (($208) + -1024)|0;
    $210 = (($206) + ($209<<2)|0);
    $211 = (($207|0) % 9)&-1;
    $$0527629 = (($211) + 1)|0;
    $212 = ($$0527629|0)<(9);
    if ($212) {
     $$0527631 = $$0527629;$$1531630 = 10;
     while(1) {
      $213 = ($$1531630*10)|0;
      $$0527 = (($$0527631) + 1)|0;
      $exitcond = ($$0527|0)==(9);
      if ($exitcond) {
       $$1531$lcssa = $213;
       break;
      } else {
       $$0527631 = $$0527;$$1531630 = $213;
      }
     }
    } else {
     $$1531$lcssa = 10;
    }
    $214 = HEAP32[$210>>2]|0;
    $215 = (($214>>>0) % ($$1531$lcssa>>>0))&-1;
    $216 = ($215|0)==(0);
    $217 = ((($210)) + 4|0);
    $218 = ($217|0)==($$3501$lcssa|0);
    $or$cond541 = $218 & $216;
    if ($or$cond541) {
     $$4492 = $210;$$4518 = $$1515;$$8 = $$3484$lcssa;
    } else {
     $219 = (($214>>>0) / ($$1531$lcssa>>>0))&-1;
     $220 = $219 & 1;
     $221 = ($220|0)==(0);
     $$542 = $221 ? 9007199254740992.0 : 9007199254740994.0;
     $222 = (($$1531$lcssa|0) / 2)&-1;
     $223 = ($215>>>0)<($222>>>0);
     $224 = ($215|0)==($222|0);
     $or$cond544 = $218 & $224;
     $$559 = $or$cond544 ? 1.0 : 1.5;
     $$$559 = $223 ? 0.5 : $$559;
     $225 = ($$0520|0)==(0);
     if ($225) {
      $$1467 = $$$559;$$1469 = $$542;
     } else {
      $226 = HEAP8[$$0521>>0]|0;
      $227 = ($226<<24>>24)==(45);
      $228 = -$$542;
      $229 = -$$$559;
      $$$542 = $227 ? $228 : $$542;
      $$$$559 = $227 ? $229 : $$$559;
      $$1467 = $$$$559;$$1469 = $$$542;
     }
     $230 = (($214) - ($215))|0;
     HEAP32[$210>>2] = $230;
     $231 = $$1469 + $$1467;
     $232 = $231 != $$1469;
     if ($232) {
      $233 = (($230) + ($$1531$lcssa))|0;
      HEAP32[$210>>2] = $233;
      $234 = ($233>>>0)>(999999999);
      if ($234) {
       $$5486623 = $$3484$lcssa;$$sink545622 = $210;
       while(1) {
        $235 = ((($$sink545622)) + -4|0);
        HEAP32[$$sink545622>>2] = 0;
        $236 = ($235>>>0)<($$5486623>>>0);
        if ($236) {
         $237 = ((($$5486623)) + -4|0);
         HEAP32[$237>>2] = 0;
         $$6 = $237;
        } else {
         $$6 = $$5486623;
        }
        $238 = HEAP32[$235>>2]|0;
        $239 = (($238) + 1)|0;
        HEAP32[$235>>2] = $239;
        $240 = ($239>>>0)>(999999999);
        if ($240) {
         $$5486623 = $$6;$$sink545622 = $235;
        } else {
         $$5486$lcssa = $$6;$$sink545$lcssa = $235;
         break;
        }
       }
      } else {
       $$5486$lcssa = $$3484$lcssa;$$sink545$lcssa = $210;
      }
      $241 = $$5486$lcssa;
      $242 = (($183) - ($241))|0;
      $243 = $242 >> 2;
      $244 = ($243*9)|0;
      $245 = HEAP32[$$5486$lcssa>>2]|0;
      $246 = ($245>>>0)<(10);
      if ($246) {
       $$4492 = $$sink545$lcssa;$$4518 = $244;$$8 = $$5486$lcssa;
      } else {
       $$2516618 = $244;$$2532617 = 10;
       while(1) {
        $247 = ($$2532617*10)|0;
        $248 = (($$2516618) + 1)|0;
        $249 = ($245>>>0)<($247>>>0);
        if ($249) {
         $$4492 = $$sink545$lcssa;$$4518 = $248;$$8 = $$5486$lcssa;
         break;
        } else {
         $$2516618 = $248;$$2532617 = $247;
        }
       }
      }
     } else {
      $$4492 = $210;$$4518 = $$1515;$$8 = $$3484$lcssa;
     }
    }
    $250 = ((($$4492)) + 4|0);
    $251 = ($$3501$lcssa>>>0)>($250>>>0);
    $$$3501 = $251 ? $250 : $$3501$lcssa;
    $$5519$ph = $$4518;$$7505$ph = $$$3501;$$9$ph = $$8;
   } else {
    $$5519$ph = $$1515;$$7505$ph = $$3501$lcssa;$$9$ph = $$3484$lcssa;
   }
   $$7505 = $$7505$ph;
   while(1) {
    $252 = ($$7505>>>0)>($$9$ph>>>0);
    if (!($252)) {
     $$lcssa673 = 0;
     break;
    }
    $253 = ((($$7505)) + -4|0);
    $254 = HEAP32[$253>>2]|0;
    $255 = ($254|0)==(0);
    if ($255) {
     $$7505 = $253;
    } else {
     $$lcssa673 = 1;
     break;
    }
   }
   $256 = (0 - ($$5519$ph))|0;
   do {
    if ($196) {
     $not$ = $197 ^ 1;
     $257 = $not$&1;
     $$539$ = (($257) + ($$539))|0;
     $258 = ($$539$|0)>($$5519$ph|0);
     $259 = ($$5519$ph|0)>(-5);
     $or$cond6 = $258 & $259;
     if ($or$cond6) {
      $260 = (($5) + -1)|0;
      $$neg567 = (($$539$) + -1)|0;
      $261 = (($$neg567) - ($$5519$ph))|0;
      $$0479 = $260;$$2476 = $261;
     } else {
      $262 = (($5) + -2)|0;
      $263 = (($$539$) + -1)|0;
      $$0479 = $262;$$2476 = $263;
     }
     $264 = $4 & 8;
     $265 = ($264|0)==(0);
     if ($265) {
      if ($$lcssa673) {
       $266 = ((($$7505)) + -4|0);
       $267 = HEAP32[$266>>2]|0;
       $268 = ($267|0)==(0);
       if ($268) {
        $$2529 = 9;
       } else {
        $269 = (($267>>>0) % 10)&-1;
        $270 = ($269|0)==(0);
        if ($270) {
         $$1528614 = 0;$$3533613 = 10;
         while(1) {
          $271 = ($$3533613*10)|0;
          $272 = (($$1528614) + 1)|0;
          $273 = (($267>>>0) % ($271>>>0))&-1;
          $274 = ($273|0)==(0);
          if ($274) {
           $$1528614 = $272;$$3533613 = $271;
          } else {
           $$2529 = $272;
           break;
          }
         }
        } else {
         $$2529 = 0;
        }
       }
      } else {
       $$2529 = 9;
      }
      $275 = $$0479 | 32;
      $276 = ($275|0)==(102);
      $277 = $$7505;
      $278 = (($277) - ($183))|0;
      $279 = $278 >> 2;
      $280 = ($279*9)|0;
      $281 = (($280) + -9)|0;
      if ($276) {
       $282 = (($281) - ($$2529))|0;
       $283 = ($282|0)>(0);
       $$546 = $283 ? $282 : 0;
       $284 = ($$2476|0)<($$546|0);
       $$2476$$547 = $284 ? $$2476 : $$546;
       $$1480 = $$0479;$$3477 = $$2476$$547;$$pre$phi690Z2D = 0;
       break;
      } else {
       $285 = (($281) + ($$5519$ph))|0;
       $286 = (($285) - ($$2529))|0;
       $287 = ($286|0)>(0);
       $$548 = $287 ? $286 : 0;
       $288 = ($$2476|0)<($$548|0);
       $$2476$$549 = $288 ? $$2476 : $$548;
       $$1480 = $$0479;$$3477 = $$2476$$549;$$pre$phi690Z2D = 0;
       break;
      }
     } else {
      $$1480 = $$0479;$$3477 = $$2476;$$pre$phi690Z2D = $264;
     }
    } else {
     $$pre689 = $4 & 8;
     $$1480 = $5;$$3477 = $$539;$$pre$phi690Z2D = $$pre689;
    }
   } while(0);
   $289 = $$3477 | $$pre$phi690Z2D;
   $290 = ($289|0)!=(0);
   $291 = $290&1;
   $292 = $$1480 | 32;
   $293 = ($292|0)==(102);
   if ($293) {
    $294 = ($$5519$ph|0)>(0);
    $295 = $294 ? $$5519$ph : 0;
    $$2513 = 0;$$pn566 = $295;
   } else {
    $296 = ($$5519$ph|0)<(0);
    $297 = $296 ? $256 : $$5519$ph;
    $298 = ($297|0)<(0);
    $299 = $298 << 31 >> 31;
    $300 = (_fmt_u($297,$299,$11)|0);
    $301 = $11;
    $302 = $300;
    $303 = (($301) - ($302))|0;
    $304 = ($303|0)<(2);
    if ($304) {
     $$1512607 = $300;
     while(1) {
      $305 = ((($$1512607)) + -1|0);
      HEAP8[$305>>0] = 48;
      $306 = $305;
      $307 = (($301) - ($306))|0;
      $308 = ($307|0)<(2);
      if ($308) {
       $$1512607 = $305;
      } else {
       $$1512$lcssa = $305;
       break;
      }
     }
    } else {
     $$1512$lcssa = $300;
    }
    $309 = $$5519$ph >> 31;
    $310 = $309 & 2;
    $311 = (($310) + 43)|0;
    $312 = $311&255;
    $313 = ((($$1512$lcssa)) + -1|0);
    HEAP8[$313>>0] = $312;
    $314 = $$1480&255;
    $315 = ((($$1512$lcssa)) + -2|0);
    HEAP8[$315>>0] = $314;
    $316 = $315;
    $317 = (($301) - ($316))|0;
    $$2513 = $315;$$pn566 = $317;
   }
   $318 = (($$0520) + 1)|0;
   $319 = (($318) + ($$3477))|0;
   $$1526 = (($319) + ($291))|0;
   $320 = (($$1526) + ($$pn566))|0;
   _pad_674($0,32,$2,$320,$4);
   _out($0,$$0521,$$0520);
   $321 = $4 ^ 65536;
   _pad_674($0,48,$2,$320,$321);
   if ($293) {
    $322 = ($$9$ph>>>0)>($$556>>>0);
    $$0496$$9 = $322 ? $$556 : $$9$ph;
    $323 = ((($8)) + 9|0);
    $324 = $323;
    $325 = ((($8)) + 8|0);
    $$5493597 = $$0496$$9;
    while(1) {
     $326 = HEAP32[$$5493597>>2]|0;
     $327 = (_fmt_u($326,0,$323)|0);
     $328 = ($$5493597|0)==($$0496$$9|0);
     if ($328) {
      $334 = ($327|0)==($323|0);
      if ($334) {
       HEAP8[$325>>0] = 48;
       $$1465 = $325;
      } else {
       $$1465 = $327;
      }
     } else {
      $329 = ($327>>>0)>($8>>>0);
      if ($329) {
       $330 = $327;
       $331 = (($330) - ($9))|0;
       _memset(($8|0),48,($331|0))|0;
       $$0464594 = $327;
       while(1) {
        $332 = ((($$0464594)) + -1|0);
        $333 = ($332>>>0)>($8>>>0);
        if ($333) {
         $$0464594 = $332;
        } else {
         $$1465 = $332;
         break;
        }
       }
      } else {
       $$1465 = $327;
      }
     }
     $335 = $$1465;
     $336 = (($324) - ($335))|0;
     _out($0,$$1465,$336);
     $337 = ((($$5493597)) + 4|0);
     $338 = ($337>>>0)>($$556>>>0);
     if ($338) {
      break;
     } else {
      $$5493597 = $337;
     }
    }
    $339 = ($289|0)==(0);
    if (!($339)) {
     _out($0,7892,1);
    }
    $340 = ($337>>>0)<($$7505>>>0);
    $341 = ($$3477|0)>(0);
    $342 = $340 & $341;
    if ($342) {
     $$4478590 = $$3477;$$6494589 = $337;
     while(1) {
      $343 = HEAP32[$$6494589>>2]|0;
      $344 = (_fmt_u($343,0,$323)|0);
      $345 = ($344>>>0)>($8>>>0);
      if ($345) {
       $346 = $344;
       $347 = (($346) - ($9))|0;
       _memset(($8|0),48,($347|0))|0;
       $$0463584 = $344;
       while(1) {
        $348 = ((($$0463584)) + -1|0);
        $349 = ($348>>>0)>($8>>>0);
        if ($349) {
         $$0463584 = $348;
        } else {
         $$0463$lcssa = $348;
         break;
        }
       }
      } else {
       $$0463$lcssa = $344;
      }
      $350 = ($$4478590|0)<(9);
      $351 = $350 ? $$4478590 : 9;
      _out($0,$$0463$lcssa,$351);
      $352 = ((($$6494589)) + 4|0);
      $353 = (($$4478590) + -9)|0;
      $354 = ($352>>>0)<($$7505>>>0);
      $355 = ($$4478590|0)>(9);
      $356 = $354 & $355;
      if ($356) {
       $$4478590 = $353;$$6494589 = $352;
      } else {
       $$4478$lcssa = $353;
       break;
      }
     }
    } else {
     $$4478$lcssa = $$3477;
    }
    $357 = (($$4478$lcssa) + 9)|0;
    _pad_674($0,48,$357,9,0);
   } else {
    $358 = ((($$9$ph)) + 4|0);
    $$7505$ = $$lcssa673 ? $$7505 : $358;
    $359 = ($$3477|0)>(-1);
    if ($359) {
     $360 = ((($8)) + 9|0);
     $361 = ($$pre$phi690Z2D|0)==(0);
     $362 = $360;
     $363 = (0 - ($9))|0;
     $364 = ((($8)) + 8|0);
     $$5602 = $$3477;$$7495601 = $$9$ph;
     while(1) {
      $365 = HEAP32[$$7495601>>2]|0;
      $366 = (_fmt_u($365,0,$360)|0);
      $367 = ($366|0)==($360|0);
      if ($367) {
       HEAP8[$364>>0] = 48;
       $$0 = $364;
      } else {
       $$0 = $366;
      }
      $368 = ($$7495601|0)==($$9$ph|0);
      do {
       if ($368) {
        $372 = ((($$0)) + 1|0);
        _out($0,$$0,1);
        $373 = ($$5602|0)<(1);
        $or$cond554 = $361 & $373;
        if ($or$cond554) {
         $$2 = $372;
         break;
        }
        _out($0,7892,1);
        $$2 = $372;
       } else {
        $369 = ($$0>>>0)>($8>>>0);
        if (!($369)) {
         $$2 = $$0;
         break;
        }
        $scevgep684 = (($$0) + ($363)|0);
        $scevgep684685 = $scevgep684;
        _memset(($8|0),48,($scevgep684685|0))|0;
        $$1598 = $$0;
        while(1) {
         $370 = ((($$1598)) + -1|0);
         $371 = ($370>>>0)>($8>>>0);
         if ($371) {
          $$1598 = $370;
         } else {
          $$2 = $370;
          break;
         }
        }
       }
      } while(0);
      $374 = $$2;
      $375 = (($362) - ($374))|0;
      $376 = ($$5602|0)>($375|0);
      $377 = $376 ? $375 : $$5602;
      _out($0,$$2,$377);
      $378 = (($$5602) - ($375))|0;
      $379 = ((($$7495601)) + 4|0);
      $380 = ($379>>>0)<($$7505$>>>0);
      $381 = ($378|0)>(-1);
      $382 = $380 & $381;
      if ($382) {
       $$5602 = $378;$$7495601 = $379;
      } else {
       $$5$lcssa = $378;
       break;
      }
     }
    } else {
     $$5$lcssa = $$3477;
    }
    $383 = (($$5$lcssa) + 18)|0;
    _pad_674($0,48,$383,18,0);
    $384 = $11;
    $385 = $$2513;
    $386 = (($384) - ($385))|0;
    _out($0,$$2513,$386);
   }
   $387 = $4 ^ 8192;
   _pad_674($0,32,$2,$320,$387);
   $$sink562 = $320;
  } else {
   $27 = $5 & 32;
   $28 = ($27|0)!=(0);
   $29 = $28 ? 7860 : 7864;
   $30 = ($$0471 != $$0471) | (0.0 != 0.0);
   $31 = $28 ? 7868 : 7872;
   $$0510 = $30 ? $31 : $29;
   $32 = (($$0520) + 3)|0;
   $33 = $4 & -65537;
   _pad_674($0,32,$2,$32,$33);
   _out($0,$$0521,$$0520);
   _out($0,$$0510,3);
   $34 = $4 ^ 8192;
   _pad_674($0,32,$2,$32,$34);
   $$sink562 = $32;
  }
 } while(0);
 $388 = ($$sink562|0)<($2|0);
 $$555 = $388 ? $2 : $$sink562;
 STACKTOP = sp;return ($$555|0);
}
function ___DOUBLE_BITS_675($0) {
 $0 = +$0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$1 = HEAP32[tempDoublePtr>>2]|0;
 $2 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($2);
 return ($1|0);
}
function _frexpl($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_frexp($0,$1));
 return (+$2);
}
function _frexp($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$016 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, $storemerge = 0, $trunc$clear = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $5 = tempRet0;
 $6 = $4&65535;
 $trunc$clear = $6 & 2047;
 switch ($trunc$clear<<16>>16) {
 case 0:  {
  $7 = $0 != 0.0;
  if ($7) {
   $8 = $0 * 1.8446744073709552E+19;
   $9 = (+_frexp($8,$1));
   $10 = HEAP32[$1>>2]|0;
   $11 = (($10) + -64)|0;
   $$016 = $9;$storemerge = $11;
  } else {
   $$016 = $0;$storemerge = 0;
  }
  HEAP32[$1>>2] = $storemerge;
  $$0 = $$016;
  break;
 }
 case 2047:  {
  $$0 = $0;
  break;
 }
 default: {
  $12 = $4 & 2047;
  $13 = (($12) + -1022)|0;
  HEAP32[$1>>2] = $13;
  $14 = $3 & -2146435073;
  $15 = $14 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $15;$16 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $16;
 }
 }
 return (+$$0);
}
function _wcrtomb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $not$ = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 do {
  if ($3) {
   $$0 = 1;
  } else {
   $4 = ($1>>>0)<(128);
   if ($4) {
    $5 = $1&255;
    HEAP8[$0>>0] = $5;
    $$0 = 1;
    break;
   }
   $6 = (___pthread_self_448()|0);
   $7 = ((($6)) + 188|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$8>>2]|0;
   $not$ = ($9|0)==(0|0);
   if ($not$) {
    $10 = $1 & -128;
    $11 = ($10|0)==(57216);
    if ($11) {
     $13 = $1&255;
     HEAP8[$0>>0] = $13;
     $$0 = 1;
     break;
    } else {
     $12 = (___errno_location()|0);
     HEAP32[$12>>2] = 84;
     $$0 = -1;
     break;
    }
   }
   $14 = ($1>>>0)<(2048);
   if ($14) {
    $15 = $1 >>> 6;
    $16 = $15 | 192;
    $17 = $16&255;
    $18 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $17;
    $19 = $1 & 63;
    $20 = $19 | 128;
    $21 = $20&255;
    HEAP8[$18>>0] = $21;
    $$0 = 2;
    break;
   }
   $22 = ($1>>>0)<(55296);
   $23 = $1 & -8192;
   $24 = ($23|0)==(57344);
   $or$cond = $22 | $24;
   if ($or$cond) {
    $25 = $1 >>> 12;
    $26 = $25 | 224;
    $27 = $26&255;
    $28 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $27;
    $29 = $1 >>> 6;
    $30 = $29 & 63;
    $31 = $30 | 128;
    $32 = $31&255;
    $33 = ((($0)) + 2|0);
    HEAP8[$28>>0] = $32;
    $34 = $1 & 63;
    $35 = $34 | 128;
    $36 = $35&255;
    HEAP8[$33>>0] = $36;
    $$0 = 3;
    break;
   }
   $37 = (($1) + -65536)|0;
   $38 = ($37>>>0)<(1048576);
   if ($38) {
    $39 = $1 >>> 18;
    $40 = $39 | 240;
    $41 = $40&255;
    $42 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $41;
    $43 = $1 >>> 12;
    $44 = $43 & 63;
    $45 = $44 | 128;
    $46 = $45&255;
    $47 = ((($0)) + 2|0);
    HEAP8[$42>>0] = $46;
    $48 = $1 >>> 6;
    $49 = $48 & 63;
    $50 = $49 | 128;
    $51 = $50&255;
    $52 = ((($0)) + 3|0);
    HEAP8[$47>>0] = $51;
    $53 = $1 & 63;
    $54 = $53 | 128;
    $55 = $54&255;
    HEAP8[$52>>0] = $55;
    $$0 = 4;
    break;
   } else {
    $56 = (___errno_location()|0);
    HEAP32[$56>>2] = 84;
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___pthread_self_448() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___pthread_self_105() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___strerror_l($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$012$lcssa = 0, $$01214 = 0, $$016 = 0, $$113 = 0, $$115 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $$016 = 0;
 while(1) {
  $3 = (7894 + ($$016)|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = $4&255;
  $6 = ($5|0)==($0|0);
  if ($6) {
   label = 2;
   break;
  }
  $7 = (($$016) + 1)|0;
  $8 = ($7|0)==(87);
  if ($8) {
   $$01214 = 7982;$$115 = 87;
   label = 5;
   break;
  } else {
   $$016 = $7;
  }
 }
 if ((label|0) == 2) {
  $2 = ($$016|0)==(0);
  if ($2) {
   $$012$lcssa = 7982;
  } else {
   $$01214 = 7982;$$115 = $$016;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  while(1) {
   label = 0;
   $$113 = $$01214;
   while(1) {
    $9 = HEAP8[$$113>>0]|0;
    $10 = ($9<<24>>24)==(0);
    $11 = ((($$113)) + 1|0);
    if ($10) {
     break;
    } else {
     $$113 = $11;
    }
   }
   $12 = (($$115) + -1)|0;
   $13 = ($12|0)==(0);
   if ($13) {
    $$012$lcssa = $11;
    break;
   } else {
    $$01214 = $11;$$115 = $12;
    label = 5;
   }
  }
 }
 $14 = ((($1)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (___lctrans($$012$lcssa,$15)|0);
 return ($16|0);
}
function ___lctrans($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (___lctrans_impl($0,$1)|0);
 return ($2|0);
}
function ___lctrans_impl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = HEAP32[$1>>2]|0;
  $4 = ((($1)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (___mo_lookup($3,$5,$0)|0);
  $$0 = $6;
 }
 $7 = ($$0|0)!=(0|0);
 $8 = $7 ? $$0 : $0;
 return ($8|0);
}
function ___mo_lookup($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$090 = 0, $$094 = 0, $$191 = 0, $$195 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond102 = 0, $or$cond104 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($3) + 1794895138)|0;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (_swapc($6,$4)|0);
 $8 = ((($0)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_swapc($9,$4)|0);
 $11 = ((($0)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (_swapc($12,$4)|0);
 $14 = $1 >>> 2;
 $15 = ($7>>>0)<($14>>>0);
 L1: do {
  if ($15) {
   $16 = $7 << 2;
   $17 = (($1) - ($16))|0;
   $18 = ($10>>>0)<($17>>>0);
   $19 = ($13>>>0)<($17>>>0);
   $or$cond = $18 & $19;
   if ($or$cond) {
    $20 = $13 | $10;
    $21 = $20 & 3;
    $22 = ($21|0)==(0);
    if ($22) {
     $23 = $10 >>> 2;
     $24 = $13 >>> 2;
     $$090 = 0;$$094 = $7;
     while(1) {
      $25 = $$094 >>> 1;
      $26 = (($$090) + ($25))|0;
      $27 = $26 << 1;
      $28 = (($27) + ($23))|0;
      $29 = (($0) + ($28<<2)|0);
      $30 = HEAP32[$29>>2]|0;
      $31 = (_swapc($30,$4)|0);
      $32 = (($28) + 1)|0;
      $33 = (($0) + ($32<<2)|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = (_swapc($34,$4)|0);
      $36 = ($35>>>0)<($1>>>0);
      $37 = (($1) - ($35))|0;
      $38 = ($31>>>0)<($37>>>0);
      $or$cond102 = $36 & $38;
      if (!($or$cond102)) {
       $$4 = 0;
       break L1;
      }
      $39 = (($35) + ($31))|0;
      $40 = (($0) + ($39)|0);
      $41 = HEAP8[$40>>0]|0;
      $42 = ($41<<24>>24)==(0);
      if (!($42)) {
       $$4 = 0;
       break L1;
      }
      $43 = (($0) + ($35)|0);
      $44 = (_strcmp($2,$43)|0);
      $45 = ($44|0)==(0);
      if ($45) {
       break;
      }
      $62 = ($$094|0)==(1);
      $63 = ($44|0)<(0);
      $64 = (($$094) - ($25))|0;
      $$195 = $63 ? $25 : $64;
      $$191 = $63 ? $$090 : $26;
      if ($62) {
       $$4 = 0;
       break L1;
      } else {
       $$090 = $$191;$$094 = $$195;
      }
     }
     $46 = (($27) + ($24))|0;
     $47 = (($0) + ($46<<2)|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = (_swapc($48,$4)|0);
     $50 = (($46) + 1)|0;
     $51 = (($0) + ($50<<2)|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (_swapc($52,$4)|0);
     $54 = ($53>>>0)<($1>>>0);
     $55 = (($1) - ($53))|0;
     $56 = ($49>>>0)<($55>>>0);
     $or$cond104 = $54 & $56;
     if ($or$cond104) {
      $57 = (($0) + ($53)|0);
      $58 = (($53) + ($49))|0;
      $59 = (($0) + ($58)|0);
      $60 = HEAP8[$59>>0]|0;
      $61 = ($60<<24>>24)==(0);
      $$ = $61 ? $57 : 0;
      $$4 = $$;
     } else {
      $$4 = 0;
     }
    } else {
     $$4 = 0;
    }
   } else {
    $$4 = 0;
   }
  } else {
   $$4 = 0;
  }
 } while(0);
 return ($$4|0);
}
function _swapc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0);
 $3 = (_llvm_bswap_i32(($0|0))|0);
 $$ = $2 ? $0 : $3;
 return ($$|0);
}
function ___fwritex($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$038 = 0, $$042 = 0, $$1 = 0, $$139 = 0, $$141 = 0, $$143 = 0, $$pre = 0, $$pre47 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $7 = (___towrite($2)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = HEAP32[$3>>2]|0;
   $12 = $$pre;
   label = 5;
  } else {
   $$1 = 0;
  }
 } else {
  $6 = $4;
  $12 = $6;
  label = 5;
 }
 L5: do {
  if ((label|0) == 5) {
   $9 = ((($2)) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($12) - ($10))|0;
   $13 = ($11>>>0)<($1>>>0);
   $14 = $10;
   if ($13) {
    $15 = ((($2)) + 36|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 1023]($2,$0,$1)|0);
    $$1 = $17;
    break;
   }
   $18 = ((($2)) + 75|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = ($19<<24>>24)>(-1);
   L10: do {
    if ($20) {
     $$038 = $1;
     while(1) {
      $21 = ($$038|0)==(0);
      if ($21) {
       $$139 = 0;$$141 = $0;$$143 = $1;$31 = $14;
       break L10;
      }
      $22 = (($$038) + -1)|0;
      $23 = (($0) + ($22)|0);
      $24 = HEAP8[$23>>0]|0;
      $25 = ($24<<24>>24)==(10);
      if ($25) {
       break;
      } else {
       $$038 = $22;
      }
     }
     $26 = ((($2)) + 36|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = (FUNCTION_TABLE_iiii[$27 & 1023]($2,$0,$$038)|0);
     $29 = ($28>>>0)<($$038>>>0);
     if ($29) {
      $$1 = $28;
      break L5;
     }
     $30 = (($0) + ($$038)|0);
     $$042 = (($1) - ($$038))|0;
     $$pre47 = HEAP32[$9>>2]|0;
     $$139 = $$038;$$141 = $30;$$143 = $$042;$31 = $$pre47;
    } else {
     $$139 = 0;$$141 = $0;$$143 = $1;$31 = $14;
    }
   } while(0);
   _memcpy(($31|0),($$141|0),($$143|0))|0;
   $32 = HEAP32[$9>>2]|0;
   $33 = (($32) + ($$143)|0);
   HEAP32[$9>>2] = $33;
   $34 = (($$139) + ($$143))|0;
   $$1 = $34;
  }
 } while(0);
 return ($$1|0);
}
function ___towrite($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 HEAP8[$1>>0] = $6;
 $7 = HEAP32[$0>>2]|0;
 $8 = $7 & 8;
 $9 = ($8|0)==(0);
 if ($9) {
  $11 = ((($0)) + 8|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($0)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = ((($0)) + 44|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($0)) + 28|0);
  HEAP32[$15>>2] = $14;
  $16 = ((($0)) + 20|0);
  HEAP32[$16>>2] = $14;
  $17 = ((($0)) + 48|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($14) + ($18)|0);
  $20 = ((($0)) + 16|0);
  HEAP32[$20>>2] = $19;
  $$0 = 0;
 } else {
  $10 = $7 | 32;
  HEAP32[$0>>2] = $10;
  $$0 = -1;
 }
 return ($$0|0);
}
function _strlen($0) {
 $0 = $0|0;
 var $$0 = 0, $$015$lcssa = 0, $$01519 = 0, $$1$lcssa = 0, $$pn = 0, $$pre = 0, $$sink = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 $2 = $1 & 3;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $$015$lcssa = $0;
   label = 4;
  } else {
   $$01519 = $0;$23 = $1;
   while(1) {
    $4 = HEAP8[$$01519>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $$sink = $23;
     break L1;
    }
    $6 = ((($$01519)) + 1|0);
    $7 = $6;
    $8 = $7 & 3;
    $9 = ($8|0)==(0);
    if ($9) {
     $$015$lcssa = $6;
     label = 4;
     break;
    } else {
     $$01519 = $6;$23 = $7;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $$0 = $$015$lcssa;
  while(1) {
   $10 = HEAP32[$$0>>2]|0;
   $11 = (($10) + -16843009)|0;
   $12 = $10 & -2139062144;
   $13 = $12 ^ -2139062144;
   $14 = $13 & $11;
   $15 = ($14|0)==(0);
   $16 = ((($$0)) + 4|0);
   if ($15) {
    $$0 = $16;
   } else {
    break;
   }
  }
  $17 = $10&255;
  $18 = ($17<<24>>24)==(0);
  if ($18) {
   $$1$lcssa = $$0;
  } else {
   $$pn = $$0;
   while(1) {
    $19 = ((($$pn)) + 1|0);
    $$pre = HEAP8[$19>>0]|0;
    $20 = ($$pre<<24>>24)==(0);
    if ($20) {
     $$1$lcssa = $19;
     break;
    } else {
     $$pn = $19;
    }
   }
  }
  $21 = $$1$lcssa;
  $$sink = $21;
 }
 $22 = (($$sink) - ($1))|0;
 return ($22|0);
}
function ___overflow($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $3 = $1&255;
 HEAP8[$2>>0] = $3;
 $4 = ((($0)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (___towrite($0)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = HEAP32[$4>>2]|0;
   $12 = $$pre;
   label = 4;
  } else {
   $$0 = -1;
  }
 } else {
  $12 = $5;
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $9 = ((($0)) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10>>>0)<($12>>>0);
   if ($11) {
    $13 = $1 & 255;
    $14 = ((($0)) + 75|0);
    $15 = HEAP8[$14>>0]|0;
    $16 = $15 << 24 >> 24;
    $17 = ($13|0)==($16|0);
    if (!($17)) {
     $18 = ((($10)) + 1|0);
     HEAP32[$9>>2] = $18;
     HEAP8[$10>>0] = $3;
     $$0 = $13;
     break;
    }
   }
   $19 = ((($0)) + 36|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (FUNCTION_TABLE_iiii[$20 & 1023]($0,$2,1)|0);
   $22 = ($21|0)==(1);
   if ($22) {
    $23 = HEAP8[$2>>0]|0;
    $24 = $23&255;
    $$0 = $24;
   } else {
    $$0 = -1;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___ofl_lock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___lock((11248|0));
 return (11256|0);
}
function ___ofl_unlock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___unlock((11248|0));
 return;
}
function _fflush($0) {
 $0 = $0|0;
 var $$0 = 0, $$023 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $8 = HEAP32[195]|0;
   $9 = ($8|0)==(0|0);
   if ($9) {
    $29 = 0;
   } else {
    $10 = HEAP32[195]|0;
    $11 = (_fflush($10)|0);
    $29 = $11;
   }
   $12 = (___ofl_lock()|0);
   $$02325 = HEAP32[$12>>2]|0;
   $13 = ($$02325|0)==(0|0);
   if ($13) {
    $$024$lcssa = $29;
   } else {
    $$02327 = $$02325;$$02426 = $29;
    while(1) {
     $14 = ((($$02327)) + 76|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)>(-1);
     if ($16) {
      $17 = (___lockfile($$02327)|0);
      $26 = $17;
     } else {
      $26 = 0;
     }
     $18 = ((($$02327)) + 20|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ((($$02327)) + 28|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($19>>>0)>($21>>>0);
     if ($22) {
      $23 = (___fflush_unlocked($$02327)|0);
      $24 = $23 | $$02426;
      $$1 = $24;
     } else {
      $$1 = $$02426;
     }
     $25 = ($26|0)==(0);
     if (!($25)) {
      ___unlockfile($$02327);
     }
     $27 = ((($$02327)) + 56|0);
     $$023 = HEAP32[$27>>2]|0;
     $28 = ($$023|0)==(0|0);
     if ($28) {
      $$024$lcssa = $$1;
      break;
     } else {
      $$02327 = $$023;$$02426 = $$1;
     }
    }
   }
   ___ofl_unlock();
   $$0 = $$024$lcssa;
  } else {
   $2 = ((($0)) + 76|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)>(-1);
   if (!($4)) {
    $5 = (___fflush_unlocked($0)|0);
    $$0 = $5;
    break;
   }
   $6 = (___lockfile($0)|0);
   $phitmp = ($6|0)==(0);
   $7 = (___fflush_unlocked($0)|0);
   if ($phitmp) {
    $$0 = $7;
   } else {
    ___unlockfile($0);
    $$0 = $7;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___fflush_unlocked($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($2>>>0)>($4>>>0);
 if ($5) {
  $6 = ((($0)) + 36|0);
  $7 = HEAP32[$6>>2]|0;
  (FUNCTION_TABLE_iiii[$7 & 1023]($0,0,0)|0);
  $8 = HEAP32[$1>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($0)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($11>>>0)<($13>>>0);
  if ($14) {
   $15 = $11;
   $16 = $13;
   $17 = (($15) - ($16))|0;
   $18 = ((($0)) + 40|0);
   $19 = HEAP32[$18>>2]|0;
   (FUNCTION_TABLE_iiii[$19 & 1023]($0,$17,1)|0);
  }
  $20 = ((($0)) + 16|0);
  HEAP32[$20>>2] = 0;
  HEAP32[$3>>2] = 0;
  HEAP32[$1>>2] = 0;
  HEAP32[$12>>2] = 0;
  HEAP32[$10>>2] = 0;
  $$0 = 0;
 }
 return ($$0|0);
}
function _fputc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 76|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)<(0);
 $5 = $0&255;
 $6 = $0 & 255;
 if ($4) {
  label = 3;
 } else {
  $7 = (___lockfile($1)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   label = 3;
  } else {
   $20 = ((($1)) + 75|0);
   $21 = HEAP8[$20>>0]|0;
   $22 = $21 << 24 >> 24;
   $23 = ($6|0)==($22|0);
   if ($23) {
    label = 10;
   } else {
    $24 = ((($1)) + 20|0);
    $25 = HEAP32[$24>>2]|0;
    $26 = ((($1)) + 16|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ($25>>>0)<($27>>>0);
    if ($28) {
     $29 = ((($25)) + 1|0);
     HEAP32[$24>>2] = $29;
     HEAP8[$25>>0] = $5;
     $31 = $6;
    } else {
     label = 10;
    }
   }
   if ((label|0) == 10) {
    $30 = (___overflow($1,$0)|0);
    $31 = $30;
   }
   ___unlockfile($1);
   $$0 = $31;
  }
 }
 do {
  if ((label|0) == 3) {
   $9 = ((($1)) + 75|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10 << 24 >> 24;
   $12 = ($6|0)==($11|0);
   if (!($12)) {
    $13 = ((($1)) + 20|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ((($1)) + 16|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($14>>>0)<($16>>>0);
    if ($17) {
     $18 = ((($14)) + 1|0);
     HEAP32[$13>>2] = $18;
     HEAP8[$14>>0] = $5;
     $$0 = $6;
     break;
    }
   }
   $19 = (___overflow($1,$0)|0);
   $$0 = $19;
  }
 } while(0);
 return ($$0|0);
}
function _printf($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 HEAP32[$1>>2] = $varargs;
 $2 = HEAP32[163]|0;
 $3 = (_vfprintf($2,$0,$1)|0);
 STACKTOP = sp;return ($3|0);
}
function __ZNSt3__26__sortIRNS_6__lessIiiEEPiEEvT0_S5_T_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$0174 = 0, $$0 = 0, $$0$ph = 0, $$0154 = 0, $$0160 = 0, $$0167 = 0, $$0174 = 0, $$0180$ph = 0, $$1 = 0, $$1155 = 0, $$1161 = 0, $$2156 = 0, $$2162 = 0, $$2176 = 0, $$3157 = 0, $$3163 = 0, $$3170 = 0, $$4158 = 0, $$4164 = 0, $$4171 = 0;
 var $$5159 = 0, $$5165 = 0, $$5172 = 0, $$6166 = 0, $$6173 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0$ph = $0;$$0180$ph = $1;
 L1: while(1) {
  $3 = $$0180$ph;
  $4 = ((($$0180$ph)) + -4|0);
  $$0 = $$0$ph;
  while(1) {
   $$1 = $$0;
   L5: while(1) {
    $5 = $$1;
    $6 = (($3) - ($5))|0;
    $7 = $6 >> 2;
    $8 = ((($$1)) + 4|0);
    switch ($7|0) {
    case 1: case 0:  {
     break L1;
     break;
    }
    case 2:  {
     label = 5;
     break L1;
     break;
    }
    case 3:  {
     label = 7;
     break L1;
     break;
    }
    case 4:  {
     label = 8;
     break L1;
     break;
    }
    case 5:  {
     label = 9;
     break L1;
     break;
    }
    default: {
    }
    }
    $15 = ($6|0)<(124);
    if ($15) {
     label = 11;
     break L1;
    }
    $16 = ($6|0)>(3996);
    $17 = (($7|0) / 2)&-1;
    $18 = (($$1) + ($17<<2)|0);
    if ($16) {
     $19 = (($7|0) / 4)&-1;
     $20 = (($$1) + ($19<<2)|0);
     $21 = (($18) + ($19<<2)|0);
     $22 = (__ZNSt3__27__sort5IRNS_6__lessIiiEEPiEEjT0_S5_S5_S5_S5_T_($$1,$20,$18,$21,$4,$2)|0);
     $$0167 = $22;
    } else {
     $23 = (__ZNSt3__27__sort3IRNS_6__lessIiiEEPiEEjT0_S5_S5_T_($$1,$18,$4,$2)|0);
     $$0167 = $23;
    }
    $24 = HEAP32[$$1>>2]|0;
    $25 = HEAP32[$18>>2]|0;
    $26 = ($24|0)<($25|0);
    if ($26) {
     $$3157 = $4;$$3170 = $$0167;
     break;
    } else {
     $$0154 = $4;
    }
    while(1) {
     $27 = ((($$0154)) + -4|0);
     $28 = ($$1|0)==($27|0);
     if ($28) {
      break;
     }
     $44 = HEAP32[$27>>2]|0;
     $45 = ($44|0)<($25|0);
     if ($45) {
      label = 28;
      break L5;
     } else {
      $$0154 = $27;
     }
    }
    $29 = HEAP32[$4>>2]|0;
    $30 = ($24|0)<($29|0);
    if ($30) {
     $$1161 = $8;
    } else {
     $$0160 = $8;
     while(1) {
      $31 = ($$0160|0)==($4|0);
      if ($31) {
       break L1;
      }
      $32 = HEAP32[$$0160>>2]|0;
      $33 = ($24|0)<($32|0);
      $34 = ((($$0160)) + 4|0);
      if ($33) {
       break;
      } else {
       $$0160 = $34;
      }
     }
     HEAP32[$$0160>>2] = $29;
     HEAP32[$4>>2] = $32;
     $$1161 = $34;
    }
    $35 = ($$1161|0)==($4|0);
    if ($35) {
     break L1;
    } else {
     $$1155 = $4;$$2162 = $$1161;
    }
    while(1) {
     $36 = HEAP32[$$1>>2]|0;
     $$3163 = $$2162;
     while(1) {
      $37 = HEAP32[$$3163>>2]|0;
      $38 = ($36|0)<($37|0);
      $39 = ((($$3163)) + 4|0);
      if ($38) {
       $$2156 = $$1155;
       break;
      } else {
       $$3163 = $39;
      }
     }
     while(1) {
      $40 = ((($$2156)) + -4|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = ($36|0)<($41|0);
      if ($42) {
       $$2156 = $40;
      } else {
       break;
      }
     }
     $43 = ($$3163>>>0)<($40>>>0);
     if (!($43)) {
      $$1 = $$3163;
      continue L5;
     }
     HEAP32[$$3163>>2] = $41;
     HEAP32[$40>>2] = $37;
     $$1155 = $40;$$2162 = $39;
    }
   }
   if ((label|0) == 28) {
    label = 0;
    $46 = (($$0167) + 1)|0;
    HEAP32[$$1>>2] = $44;
    HEAP32[$27>>2] = $24;
    $$3157 = $27;$$3170 = $46;
   }
   $47 = ($8>>>0)<($$3157>>>0);
   L34: do {
    if ($47) {
     $$0174 = $18;$$4158 = $$3157;$$4164 = $8;$$4171 = $$3170;
     while(1) {
      $48 = HEAP32[$$0174>>2]|0;
      $$5165 = $$4164;
      while(1) {
       $49 = HEAP32[$$5165>>2]|0;
       $50 = ($49|0)<($48|0);
       $51 = ((($$5165)) + 4|0);
       if ($50) {
        $$5165 = $51;
       } else {
        $$5159 = $$4158;
        break;
       }
      }
      while(1) {
       $52 = ((($$5159)) + -4|0);
       $53 = HEAP32[$52>>2]|0;
       $54 = ($53|0)<($48|0);
       if ($54) {
        break;
       } else {
        $$5159 = $52;
       }
      }
      $55 = ($$5165>>>0)>($52>>>0);
      if ($55) {
       $$2176 = $$0174;$$5172 = $$4171;$$6166 = $$5165;
       break L34;
      }
      HEAP32[$$5165>>2] = $53;
      HEAP32[$52>>2] = $49;
      $56 = (($$4171) + 1)|0;
      $57 = ($$0174|0)==($$5165|0);
      $$$0174 = $57 ? $52 : $$0174;
      $$0174 = $$$0174;$$4158 = $52;$$4164 = $51;$$4171 = $56;
     }
    } else {
     $$2176 = $18;$$5172 = $$3170;$$6166 = $8;
    }
   } while(0);
   $58 = ($$6166|0)==($$2176|0);
   if ($58) {
    $$6173 = $$5172;
   } else {
    $59 = HEAP32[$$2176>>2]|0;
    $60 = HEAP32[$$6166>>2]|0;
    $61 = ($59|0)<($60|0);
    if ($61) {
     $62 = (($$5172) + 1)|0;
     HEAP32[$$6166>>2] = $59;
     HEAP32[$$2176>>2] = $60;
     $$6173 = $62;
    } else {
     $$6173 = $$5172;
    }
   }
   $63 = ($$6173|0)==(0);
   if ($63) {
    $64 = (__ZNSt3__227__insertion_sort_incompleteIRNS_6__lessIiiEEPiEEbT0_S5_T_($$1,$$6166,$2)|0);
    $65 = ((($$6166)) + 4|0);
    $66 = (__ZNSt3__227__insertion_sort_incompleteIRNS_6__lessIiiEEPiEEbT0_S5_T_($65,$$0180$ph,$2)|0);
    if ($66) {
     label = 44;
     break;
    }
    if ($64) {
     $$0 = $65;
     continue;
    }
   }
   $67 = $$6166;
   $68 = (($67) - ($5))|0;
   $69 = (($3) - ($67))|0;
   $70 = ($68|0)<($69|0);
   if (!($70)) {
    label = 43;
    break;
   }
   __ZNSt3__26__sortIRNS_6__lessIiiEEPiEEvT0_S5_T_($$1,$$6166,$2);
   $71 = ((($$6166)) + 4|0);
   $$0 = $71;
  }
  if ((label|0) == 43) {
   label = 0;
   $72 = ((($$6166)) + 4|0);
   __ZNSt3__26__sortIRNS_6__lessIiiEEPiEEvT0_S5_T_($72,$$0180$ph,$2);
   $$0$ph = $$1;$$0180$ph = $$6166;
   continue;
  }
  else if ((label|0) == 44) {
   label = 0;
   if ($64) {
    break;
   } else {
    $$0$ph = $$1;$$0180$ph = $$6166;
    continue;
   }
  }
 }
 if ((label|0) == 5) {
  $9 = HEAP32[$4>>2]|0;
  $10 = HEAP32[$$1>>2]|0;
  $11 = ($9|0)<($10|0);
  if ($11) {
   HEAP32[$$1>>2] = $9;
   HEAP32[$4>>2] = $10;
  }
 }
 else if ((label|0) == 7) {
  (__ZNSt3__27__sort3IRNS_6__lessIiiEEPiEEjT0_S5_S5_T_($$1,$8,$4,$2)|0);
 }
 else if ((label|0) == 8) {
  $12 = ((($$1)) + 8|0);
  (__ZNSt3__27__sort4IRNS_6__lessIiiEEPiEEjT0_S5_S5_S5_T_($$1,$8,$12,$4,$2)|0);
 }
 else if ((label|0) == 9) {
  $13 = ((($$1)) + 8|0);
  $14 = ((($$1)) + 12|0);
  (__ZNSt3__27__sort5IRNS_6__lessIiiEEPiEEjT0_S5_S5_S5_S5_T_($$1,$8,$13,$14,$4,$2)|0);
 }
 else if ((label|0) == 11) {
  __ZNSt3__218__insertion_sort_3IRNS_6__lessIiiEEPiEEvT0_S5_T_($$1,$$0180$ph,$2);
 }
 return;
}
function __ZNSt3__27__sort3IRNS_6__lessIiiEEPiEEjT0_S5_S5_T_($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$026 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAP32[$0>>2]|0;
 $6 = ($4|0)<($5|0);
 $7 = HEAP32[$2>>2]|0;
 $8 = ($7|0)<($4|0);
 do {
  if ($6) {
   if ($8) {
    HEAP32[$0>>2] = $7;
    HEAP32[$2>>2] = $5;
    $$026 = 1;
    break;
   }
   HEAP32[$0>>2] = $4;
   HEAP32[$1>>2] = $5;
   $12 = HEAP32[$2>>2]|0;
   $13 = ($12|0)<($5|0);
   if ($13) {
    HEAP32[$1>>2] = $12;
    HEAP32[$2>>2] = $5;
    $$026 = 2;
   } else {
    $$026 = 1;
   }
  } else {
   if ($8) {
    HEAP32[$1>>2] = $7;
    HEAP32[$2>>2] = $4;
    $9 = HEAP32[$1>>2]|0;
    $10 = HEAP32[$0>>2]|0;
    $11 = ($9|0)<($10|0);
    if ($11) {
     HEAP32[$0>>2] = $9;
     HEAP32[$1>>2] = $10;
     $$026 = 2;
    } else {
     $$026 = 1;
    }
   } else {
    $$026 = 0;
   }
  }
 } while(0);
 return ($$026|0);
}
function __ZNSt3__27__sort4IRNS_6__lessIiiEEPiEEjT0_S5_S5_S5_T_($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = (__ZNSt3__27__sort3IRNS_6__lessIiiEEPiEEjT0_S5_S5_T_($0,$1,$2,$4)|0);
 $6 = HEAP32[$3>>2]|0;
 $7 = HEAP32[$2>>2]|0;
 $8 = ($6|0)<($7|0);
 if ($8) {
  HEAP32[$2>>2] = $6;
  HEAP32[$3>>2] = $7;
  $9 = (($5) + 1)|0;
  $10 = HEAP32[$2>>2]|0;
  $11 = HEAP32[$1>>2]|0;
  $12 = ($10|0)<($11|0);
  if ($12) {
   HEAP32[$1>>2] = $10;
   HEAP32[$2>>2] = $11;
   $13 = (($5) + 2)|0;
   $14 = HEAP32[$1>>2]|0;
   $15 = HEAP32[$0>>2]|0;
   $16 = ($14|0)<($15|0);
   if ($16) {
    $17 = (($5) + 3)|0;
    HEAP32[$0>>2] = $14;
    HEAP32[$1>>2] = $15;
    $$0 = $17;
   } else {
    $$0 = $13;
   }
  } else {
   $$0 = $9;
  }
 } else {
  $$0 = $5;
 }
 return ($$0|0);
}
function __ZNSt3__27__sort5IRNS_6__lessIiiEEPiEEjT0_S5_S5_S5_S5_T_($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = (__ZNSt3__27__sort4IRNS_6__lessIiiEEPiEEjT0_S5_S5_S5_T_($0,$1,$2,$3,$5)|0);
 $7 = HEAP32[$4>>2]|0;
 $8 = HEAP32[$3>>2]|0;
 $9 = ($7|0)<($8|0);
 if ($9) {
  HEAP32[$3>>2] = $7;
  HEAP32[$4>>2] = $8;
  $10 = (($6) + 1)|0;
  $11 = HEAP32[$3>>2]|0;
  $12 = HEAP32[$2>>2]|0;
  $13 = ($11|0)<($12|0);
  if ($13) {
   HEAP32[$2>>2] = $11;
   HEAP32[$3>>2] = $12;
   $14 = (($6) + 2)|0;
   $15 = HEAP32[$2>>2]|0;
   $16 = HEAP32[$1>>2]|0;
   $17 = ($15|0)<($16|0);
   if ($17) {
    HEAP32[$1>>2] = $15;
    HEAP32[$2>>2] = $16;
    $18 = (($6) + 3)|0;
    $19 = HEAP32[$1>>2]|0;
    $20 = HEAP32[$0>>2]|0;
    $21 = ($19|0)<($20|0);
    if ($21) {
     $22 = (($6) + 4)|0;
     HEAP32[$0>>2] = $19;
     HEAP32[$1>>2] = $20;
     $$0 = $22;
    } else {
     $$0 = $18;
    }
   } else {
    $$0 = $14;
   }
  } else {
   $$0 = $10;
  }
 } else {
  $$0 = $6;
 }
 return ($$0|0);
}
function __ZNSt3__218__insertion_sort_3IRNS_6__lessIiiEEPiEEvT0_S5_T_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$lcssa = 0, $$029 = 0, $$030 = 0, $$030$phi = 0, $$1 = 0, $$1$phi = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 8|0);
 $4 = ((($0)) + 4|0);
 (__ZNSt3__27__sort3IRNS_6__lessIiiEEPiEEjT0_S5_S5_T_($0,$4,$3,$2)|0);
 $5 = ((($0)) + 12|0);
 $$029 = $5;$$030 = $3;
 while(1) {
  $6 = ($$029|0)==($1|0);
  if ($6) {
   break;
  }
  $7 = HEAP32[$$029>>2]|0;
  $8 = HEAP32[$$030>>2]|0;
  $9 = ($7|0)<($8|0);
  if ($9) {
   $$0 = $$030;$$1 = $$029;$10 = $8;
   while(1) {
    HEAP32[$$1>>2] = $10;
    $11 = ($$0|0)==($0|0);
    if ($11) {
     $$0$lcssa = $0;
     break;
    }
    $12 = ((($$0)) + -4|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ($7|0)<($13|0);
    if ($14) {
     $$1$phi = $$0;$$0 = $12;$10 = $13;$$1 = $$1$phi;
    } else {
     $$0$lcssa = $$0;
     break;
    }
   }
   HEAP32[$$0$lcssa>>2] = $7;
  }
  $15 = ((($$029)) + 4|0);
  $$030$phi = $$029;$$029 = $15;$$030 = $$030$phi;
 }
 return;
}
function __ZNSt3__227__insertion_sort_incompleteIRNS_6__lessIiiEEPiEEbT0_S5_T_($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$3 = 0, $$0 = 0, $$0$lcssa = 0, $$062 = 0, $$064 = 0, $$069 = 0, $$069$phi = 0, $$1 = 0, $$165 = 0, $$170 = 0, $$170$phi = 0, $$3 = 0, $$5 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $3 = $1;
 $4 = $0;
 $5 = (($3) - ($4))|0;
 $6 = $5 >> 2;
 $7 = ((($0)) + 4|0);
 $8 = ((($1)) + -4|0);
 $9 = ((($0)) + 8|0);
 switch ($6|0) {
 case 1: case 0:  {
  $$5 = 1;
  break;
 }
 case 2:  {
  $10 = HEAP32[$8>>2]|0;
  $11 = HEAP32[$0>>2]|0;
  $12 = ($10|0)<($11|0);
  if ($12) {
   HEAP32[$0>>2] = $10;
   HEAP32[$8>>2] = $11;
   $$5 = 1;
  } else {
   $$5 = 1;
  }
  break;
 }
 case 3:  {
  (__ZNSt3__27__sort3IRNS_6__lessIiiEEPiEEjT0_S5_S5_T_($0,$7,$8,$2)|0);
  $$5 = 1;
  break;
 }
 case 4:  {
  (__ZNSt3__27__sort4IRNS_6__lessIiiEEPiEEjT0_S5_S5_S5_T_($0,$7,$9,$8,$2)|0);
  $$5 = 1;
  break;
 }
 case 5:  {
  $13 = ((($0)) + 12|0);
  (__ZNSt3__27__sort5IRNS_6__lessIiiEEPiEEjT0_S5_S5_S5_S5_T_($0,$7,$9,$13,$8,$2)|0);
  $$5 = 1;
  break;
 }
 default: {
  (__ZNSt3__27__sort3IRNS_6__lessIiiEEPiEEjT0_S5_S5_T_($0,$7,$9,$2)|0);
  $14 = ((($0)) + 12|0);
  $$062 = $14;$$064 = 0;$$069 = $9;
  while(1) {
   $15 = ($$062|0)==($1|0);
   if ($15) {
    $$1 = 1;$$3 = 0;
    break;
   }
   $16 = HEAP32[$$062>>2]|0;
   $17 = HEAP32[$$069>>2]|0;
   $18 = ($16|0)<($17|0);
   if ($18) {
    $$0 = $$069;$$170 = $$062;$19 = $17;
    while(1) {
     HEAP32[$$170>>2] = $19;
     $20 = ($$0|0)==($0|0);
     if ($20) {
      $$0$lcssa = $0;
      break;
     }
     $21 = ((($$0)) + -4|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ($16|0)<($22|0);
     if ($23) {
      $$170$phi = $$0;$$0 = $21;$19 = $22;$$170 = $$170$phi;
     } else {
      $$0$lcssa = $$0;
      break;
     }
    }
    HEAP32[$$0$lcssa>>2] = $16;
    $24 = (($$064) + 1)|0;
    $25 = ($24|0)==(8);
    $26 = ((($$062)) + 4|0);
    $27 = ($26|0)==($1|0);
    if ($25) {
     $$1 = 0;$$3 = $27;
     break;
    } else {
     $$165 = $24;
    }
   } else {
    $$165 = $$064;
   }
   $28 = ((($$062)) + 4|0);
   $$069$phi = $$062;$$062 = $28;$$064 = $$165;$$069 = $$069$phi;
  }
  $$$3 = $$3 | $$1;
  $$5 = $$$3;
 }
 }
 return ($$5|0);
}
function __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___cxa_allocate_exception(8)|0);
 __THREW__ = 0;
 invoke_vii(114,($1|0),(9786|0));
 $2 = __THREW__; __THREW__ = 0;
 $3 = $2&1;
 if ($3) {
  $4 = ___cxa_find_matching_catch_2()|0;
  $5 = tempRet0;
  ___cxa_free_exception(($1|0));
  ___resumeException($4|0);
  // unreachable;
 } else {
  HEAP32[$1>>2] = (920);
  ___cxa_throw(($1|0),(104|0),(21|0));
  // unreachable;
 }
}
function __Znwj($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0);
 $$ = $1 ? 1 : $0;
 while(1) {
  $2 = (_malloc($$)|0);
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   label = 6;
   break;
  }
  $4 = (__ZSt15get_new_handlerv()|0);
  $5 = ($4|0)==(0|0);
  if ($5) {
   label = 5;
   break;
  }
  FUNCTION_TABLE_v[$4 & 1023]();
 }
 if ((label|0) == 5) {
  $6 = (___cxa_allocate_exception(4)|0);
  __ZNSt9bad_allocC2Ev($6);
  ___cxa_throw(($6|0),(72|0),(18|0));
  // unreachable;
 }
 else if ((label|0) == 6) {
  return ($2|0);
 }
 return (0)|0;
}
function __Znaj($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__Znwj($0)|0);
 return ($1|0);
}
function __ZdlPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($0);
 return;
}
function __ZdaPv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZdlPv($0);
 return;
}
function __ZNSt3__218__libcpp_refstringC2EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($1)|0);
 $3 = (($2) + 13)|0;
 $4 = (__Znwj($3)|0);
 HEAP32[$4>>2] = $2;
 $5 = ((($4)) + 4|0);
 HEAP32[$5>>2] = $2;
 $6 = ((($4)) + 8|0);
 HEAP32[$6>>2] = 0;
 $7 = (__ZNSt3__215__refstring_imp12_GLOBAL__N_113data_from_repEPNS1_9_Rep_baseE($4)|0);
 $8 = (($2) + 1)|0;
 _memcpy(($7|0),($1|0),($8|0))|0;
 HEAP32[$0>>2] = $7;
 return;
}
function __ZNSt3__215__refstring_imp12_GLOBAL__N_113data_from_repEPNS1_9_Rep_baseE($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 12|0);
 return ($1|0);
}
function __ZNSt11logic_errorC2EPKc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (900);
 $2 = ((($0)) + 4|0);
 __THREW__ = 0;
 invoke_vii(685,($2|0),($1|0));
 $3 = __THREW__; __THREW__ = 0;
 $4 = $3&1;
 if ($4) {
  $5 = ___cxa_find_matching_catch_2()|0;
  $6 = tempRet0;
  ___resumeException($5|0);
  // unreachable;
 } else {
  return;
 }
}
function __ZNKSt3__218__libcpp_refstring15__uses_refcountEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0;
 var $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $0 = sp + 36|0;
 $1 = (___cxa_get_globals_fast()|0);
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = HEAP32[$1>>2]|0;
  $4 = ($3|0)==(0|0);
  if (!($4)) {
   $5 = ((($3)) + 80|0);
   $6 = ((($3)) + 48|0);
   $7 = $6;
   $8 = $7;
   $9 = HEAP32[$8>>2]|0;
   $10 = (($7) + 4)|0;
   $11 = $10;
   $12 = HEAP32[$11>>2]|0;
   $13 = $9 & -256;
   $14 = ($13|0)==(1126902528);
   $15 = ($12|0)==(1129074247);
   $16 = $14 & $15;
   if (!($16)) {
    $36 = HEAP32[197]|0;
    HEAP32[$vararg_buffer7>>2] = $36;
    _abort_message(9879,$vararg_buffer7);
    // unreachable;
   }
   $17 = ($9|0)==(1126902529);
   $18 = ($12|0)==(1129074247);
   $19 = $17 & $18;
   if ($19) {
    $20 = ((($3)) + 44|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = $21;
   } else {
    $22 = $5;
   }
   HEAP32[$0>>2] = $22;
   $23 = HEAP32[$3>>2]|0;
   $24 = ((($23)) + 4|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = HEAP32[2]|0;
   $27 = ((($26)) + 16|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (FUNCTION_TABLE_iiii[$28 & 1023](8,$23,$0)|0);
   $30 = HEAP32[197]|0;
   if ($29) {
    $31 = HEAP32[$0>>2]|0;
    $32 = HEAP32[$31>>2]|0;
    $33 = ((($32)) + 8|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = (FUNCTION_TABLE_ii[$34 & 1023]($31)|0);
    HEAP32[$vararg_buffer>>2] = $30;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $25;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = $35;
    _abort_message(9793,$vararg_buffer);
    // unreachable;
   } else {
    HEAP32[$vararg_buffer3>>2] = $30;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $25;
    _abort_message(9838,$vararg_buffer3);
    // unreachable;
   }
  }
 }
 _abort_message(9917,$vararg_buffer10);
 // unreachable;
}
function ___cxa_get_globals_fast() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $0 = (_pthread_once((11260|0),(686|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $2 = HEAP32[2816]|0;
  $3 = (_pthread_getspecific(($2|0))|0);
  STACKTOP = sp;return ($3|0);
 } else {
  _abort_message(10068,$vararg_buffer);
  // unreachable;
 }
 return (0)|0;
}
function _abort_message($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 HEAP32[$1>>2] = $varargs;
 $2 = HEAP32[70]|0;
 (_vfprintf($2,$0,$1)|0);
 (_fputc(10,$2)|0);
 _abort();
 // unreachable;
}
function __ZN10__cxxabiv116__shim_type_infoD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv117__class_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $3 = sp;
 $4 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$1,0)|0);
 if ($4) {
  $$2 = 1;
 } else {
  $5 = ($1|0)==(0|0);
  if ($5) {
   $$2 = 0;
  } else {
   $6 = (___dynamic_cast($1,32,16,0)|0);
   $7 = ($6|0)==(0|0);
   if ($7) {
    $$2 = 0;
   } else {
    $8 = ((($3)) + 4|0);
    dest=$8; stop=dest+52|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    HEAP32[$3>>2] = $6;
    $9 = ((($3)) + 8|0);
    HEAP32[$9>>2] = $0;
    $10 = ((($3)) + 12|0);
    HEAP32[$10>>2] = -1;
    $11 = ((($3)) + 48|0);
    HEAP32[$11>>2] = 1;
    $12 = HEAP32[$6>>2]|0;
    $13 = ((($12)) + 28|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = HEAP32[$2>>2]|0;
    FUNCTION_TABLE_viiii[$14 & 1023]($6,$3,$15,1);
    $16 = ((($3)) + 24|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($17|0)==(1);
    if ($18) {
     $19 = ((($3)) + 16|0);
     $20 = HEAP32[$19>>2]|0;
     HEAP32[$2>>2] = $20;
     $$0 = 1;
    } else {
     $$0 = 0;
    }
    $$2 = $$0;
   }
  }
 }
 STACKTOP = sp;return ($$2|0);
}
function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$7,$5)|0);
 if ($8) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$1,$2,$3,$4);
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$6,$4)|0);
 do {
  if ($7) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$1,$2,$3);
  } else {
   $8 = HEAP32[$1>>2]|0;
   $9 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$8,$4)|0);
   if ($9) {
    $10 = ((($1)) + 16|0);
    $11 = HEAP32[$10>>2]|0;
    $12 = ($11|0)==($2|0);
    $13 = ((($1)) + 32|0);
    if (!($12)) {
     $14 = ((($1)) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)==($2|0);
     if (!($16)) {
      HEAP32[$13>>2] = $3;
      HEAP32[$14>>2] = $2;
      $18 = ((($1)) + 40|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = (($19) + 1)|0;
      HEAP32[$18>>2] = $20;
      $21 = ((($1)) + 36|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = ($22|0)==(1);
      if ($23) {
       $24 = ((($1)) + 24|0);
       $25 = HEAP32[$24>>2]|0;
       $26 = ($25|0)==(2);
       if ($26) {
        $27 = ((($1)) + 54|0);
        HEAP8[$27>>0] = 1;
       }
      }
      $28 = ((($1)) + 44|0);
      HEAP32[$28>>2] = 4;
      break;
     }
    }
    $17 = ($3|0)==(1);
    if ($17) {
     HEAP32[$13>>2] = 1;
    }
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$5,0)|0);
 if ($6) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$1,$2,$3);
 }
 return;
}
function __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==($1|0);
 return ($3|0);
}
function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 $7 = ((($1)) + 36|0);
 $8 = ((($1)) + 24|0);
 do {
  if ($6) {
   HEAP32[$4>>2] = $2;
   HEAP32[$8>>2] = $3;
   HEAP32[$7>>2] = 1;
  } else {
   $9 = ($5|0)==($2|0);
   if (!($9)) {
    $12 = HEAP32[$7>>2]|0;
    $13 = (($12) + 1)|0;
    HEAP32[$7>>2] = $13;
    HEAP32[$8>>2] = 2;
    $14 = ((($1)) + 54|0);
    HEAP8[$14>>0] = 1;
    break;
   }
   $10 = HEAP32[$8>>2]|0;
   $11 = ($10|0)==(2);
   if ($11) {
    HEAP32[$8>>2] = $3;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==($2|0);
 if ($6) {
  $7 = ((($1)) + 28|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(1);
  if (!($9)) {
   HEAP32[$7>>2] = $3;
  }
 }
 return;
}
function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond22 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 53|0);
 HEAP8[$5>>0] = 1;
 $6 = ((($1)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==($3|0);
 do {
  if ($8) {
   $9 = ((($1)) + 52|0);
   HEAP8[$9>>0] = 1;
   $10 = ((($1)) + 16|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ($11|0)==(0|0);
   $13 = ((($1)) + 54|0);
   $14 = ((($1)) + 48|0);
   $15 = ((($1)) + 24|0);
   $16 = ((($1)) + 36|0);
   if ($12) {
    HEAP32[$10>>2] = $2;
    HEAP32[$15>>2] = $4;
    HEAP32[$16>>2] = 1;
    $17 = HEAP32[$14>>2]|0;
    $18 = ($17|0)==(1);
    $19 = ($4|0)==(1);
    $or$cond = $18 & $19;
    if (!($or$cond)) {
     break;
    }
    HEAP8[$13>>0] = 1;
    break;
   }
   $20 = ($11|0)==($2|0);
   if (!($20)) {
    $27 = HEAP32[$16>>2]|0;
    $28 = (($27) + 1)|0;
    HEAP32[$16>>2] = $28;
    HEAP8[$13>>0] = 1;
    break;
   }
   $21 = HEAP32[$15>>2]|0;
   $22 = ($21|0)==(2);
   if ($22) {
    HEAP32[$15>>2] = $4;
    $26 = $4;
   } else {
    $26 = $21;
   }
   $23 = HEAP32[$14>>2]|0;
   $24 = ($23|0)==(1);
   $25 = ($26|0)==(1);
   $or$cond22 = $24 & $25;
   if ($or$cond22) {
    HEAP8[$13>>0] = 1;
   }
  }
 } while(0);
 return;
}
function ___dynamic_cast($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0 = 0, $$33 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond28 = 0, $or$cond30 = 0, $or$cond32 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp;
 $5 = HEAP32[$0>>2]|0;
 $6 = ((($5)) + -8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($0) + ($7)|0);
 $9 = ((($5)) + -4|0);
 $10 = HEAP32[$9>>2]|0;
 HEAP32[$4>>2] = $2;
 $11 = ((($4)) + 4|0);
 HEAP32[$11>>2] = $0;
 $12 = ((($4)) + 8|0);
 HEAP32[$12>>2] = $1;
 $13 = ((($4)) + 12|0);
 HEAP32[$13>>2] = $3;
 $14 = ((($4)) + 16|0);
 $15 = ((($4)) + 20|0);
 $16 = ((($4)) + 24|0);
 $17 = ((($4)) + 28|0);
 $18 = ((($4)) + 32|0);
 $19 = ((($4)) + 40|0);
 dest=$14; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));HEAP16[$14+36>>1]=0|0;HEAP8[$14+38>>0]=0|0;
 $20 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($10,$2,0)|0);
 L1: do {
  if ($20) {
   $21 = ((($4)) + 48|0);
   HEAP32[$21>>2] = 1;
   $22 = HEAP32[$10>>2]|0;
   $23 = ((($22)) + 20|0);
   $24 = HEAP32[$23>>2]|0;
   FUNCTION_TABLE_viiiiii[$24 & 511]($10,$4,$8,$8,1,0);
   $25 = HEAP32[$16>>2]|0;
   $26 = ($25|0)==(1);
   $$ = $26 ? $8 : 0;
   $$0 = $$;
  } else {
   $27 = ((($4)) + 36|0);
   $28 = HEAP32[$10>>2]|0;
   $29 = ((($28)) + 24|0);
   $30 = HEAP32[$29>>2]|0;
   FUNCTION_TABLE_viiiii[$30 & 1023]($10,$4,$8,1,0);
   $31 = HEAP32[$27>>2]|0;
   switch ($31|0) {
   case 0:  {
    $32 = HEAP32[$19>>2]|0;
    $33 = ($32|0)==(1);
    $34 = HEAP32[$17>>2]|0;
    $35 = ($34|0)==(1);
    $or$cond = $33 & $35;
    $36 = HEAP32[$18>>2]|0;
    $37 = ($36|0)==(1);
    $or$cond28 = $or$cond & $37;
    $38 = HEAP32[$15>>2]|0;
    $$33 = $or$cond28 ? $38 : 0;
    $$0 = $$33;
    break L1;
    break;
   }
   case 1:  {
    break;
   }
   default: {
    $$0 = 0;
    break L1;
   }
   }
   $39 = HEAP32[$16>>2]|0;
   $40 = ($39|0)==(1);
   if (!($40)) {
    $41 = HEAP32[$19>>2]|0;
    $42 = ($41|0)==(0);
    $43 = HEAP32[$17>>2]|0;
    $44 = ($43|0)==(1);
    $or$cond30 = $42 & $44;
    $45 = HEAP32[$18>>2]|0;
    $46 = ($45|0)==(1);
    $or$cond32 = $or$cond30 & $46;
    if (!($or$cond32)) {
     $$0 = 0;
     break;
    }
   }
   $47 = HEAP32[$14>>2]|0;
   $$0 = $47;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function __ZN10__cxxabiv120__si_class_type_infoD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$7,$5)|0);
 if ($8) {
  __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0,$1,$2,$3,$4);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 20|0);
  $13 = HEAP32[$12>>2]|0;
  FUNCTION_TABLE_viiiiii[$13 & 511]($10,$1,$2,$3,$4,$5);
 }
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$037$off038 = 0, $$037$off039 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($1)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$6,$4)|0);
 do {
  if ($7) {
   __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0,$1,$2,$3);
  } else {
   $8 = HEAP32[$1>>2]|0;
   $9 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$8,$4)|0);
   $10 = ((($0)) + 8|0);
   if (!($9)) {
    $41 = HEAP32[$10>>2]|0;
    $42 = HEAP32[$41>>2]|0;
    $43 = ((($42)) + 24|0);
    $44 = HEAP32[$43>>2]|0;
    FUNCTION_TABLE_viiiii[$44 & 1023]($41,$1,$2,$3,$4);
    break;
   }
   $11 = ((($1)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==($2|0);
   $14 = ((($1)) + 32|0);
   if (!($13)) {
    $15 = ((($1)) + 20|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($16|0)==($2|0);
    if (!($17)) {
     HEAP32[$14>>2] = $3;
     $19 = ((($1)) + 44|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = ($20|0)==(4);
     if ($21) {
      break;
     }
     $22 = ((($1)) + 52|0);
     HEAP8[$22>>0] = 0;
     $23 = ((($1)) + 53|0);
     HEAP8[$23>>0] = 0;
     $24 = HEAP32[$10>>2]|0;
     $25 = HEAP32[$24>>2]|0;
     $26 = ((($25)) + 20|0);
     $27 = HEAP32[$26>>2]|0;
     FUNCTION_TABLE_viiiiii[$27 & 511]($24,$1,$2,$2,1,$4);
     $28 = HEAP8[$23>>0]|0;
     $29 = ($28<<24>>24)==(0);
     if ($29) {
      $$037$off038 = 4;
      label = 11;
     } else {
      $30 = HEAP8[$22>>0]|0;
      $not$ = ($30<<24>>24)==(0);
      if ($not$) {
       $$037$off038 = 3;
       label = 11;
      } else {
       $$037$off039 = 3;
      }
     }
     if ((label|0) == 11) {
      HEAP32[$15>>2] = $2;
      $31 = ((($1)) + 40|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = (($32) + 1)|0;
      HEAP32[$31>>2] = $33;
      $34 = ((($1)) + 36|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = ($35|0)==(1);
      if ($36) {
       $37 = ((($1)) + 24|0);
       $38 = HEAP32[$37>>2]|0;
       $39 = ($38|0)==(2);
       if ($39) {
        $40 = ((($1)) + 54|0);
        HEAP8[$40>>0] = 1;
        $$037$off039 = $$037$off038;
       } else {
        $$037$off039 = $$037$off038;
       }
      } else {
       $$037$off039 = $$037$off038;
      }
     }
     HEAP32[$19>>2] = $$037$off039;
     break;
    }
   }
   $18 = ($3|0)==(1);
   if ($18) {
    HEAP32[$14>>2] = 1;
   }
  }
 } while(0);
 return;
}
function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0,$5,0)|0);
 if ($6) {
  __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0,$1,$2,$3);
 } else {
  $7 = ((($0)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($9)) + 28|0);
  $11 = HEAP32[$10>>2]|0;
  FUNCTION_TABLE_viiii[$11 & 1023]($8,$1,$2,$3);
 }
 return;
}
function __ZNSt9type_infoD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $0 = (_pthread_key_create((11264|0),(687|0))|0);
 $1 = ($0|0)==(0);
 if ($1) {
  STACKTOP = sp;return;
 } else {
  _abort_message(10117,$vararg_buffer);
  // unreachable;
 }
}
function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 _free($0);
 $1 = HEAP32[2816]|0;
 $2 = (_pthread_setspecific(($1|0),(0|0))|0);
 $3 = ($2|0)==(0);
 if ($3) {
  STACKTOP = sp;return;
 } else {
  _abort_message(10167,$vararg_buffer);
  // unreachable;
 }
}
function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __THREW__ = 0;
 $0 = (invoke_i(688)|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if ($2) {
  $20 = ___cxa_find_matching_catch_3(0|0)|0;
  $21 = tempRet0;
  ___clang_call_terminate($20);
  // unreachable;
 }
 $3 = ($0|0)==(0|0);
 if (!($3)) {
  $4 = HEAP32[$0>>2]|0;
  $5 = ($4|0)==(0|0);
  if (!($5)) {
   $6 = ((($4)) + 48|0);
   $7 = $6;
   $8 = $7;
   $9 = HEAP32[$8>>2]|0;
   $10 = (($7) + 4)|0;
   $11 = $10;
   $12 = HEAP32[$11>>2]|0;
   $13 = $9 & -256;
   $14 = ($13|0)==(1126902528);
   $15 = ($12|0)==(1129074247);
   $16 = $14 & $15;
   if ($16) {
    $17 = ((($4)) + 12|0);
    $18 = HEAP32[$17>>2]|0;
    __ZSt11__terminatePFvvE($18);
    // unreachable;
   }
  }
 }
 $19 = (__ZSt13get_terminatev()|0);
 __ZSt11__terminatePFvvE($19);
 // unreachable;
}
function __ZSt11__terminatePFvvE($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 __THREW__ = 0;
 invoke_v($0|0);
 $1 = __THREW__; __THREW__ = 0;
 $2 = $1&1;
 if (!($2)) {
  __THREW__ = 0;
  invoke_vii(689,(10220|0),($vararg_buffer|0));
  $3 = __THREW__; __THREW__ = 0;
 }
 $4 = ___cxa_find_matching_catch_3(0|0)|0;
 $5 = tempRet0;
 (___cxa_begin_catch(($4|0))|0);
 __THREW__ = 0;
 invoke_vii(689,(10260|0),($vararg_buffer1|0));
 $6 = __THREW__; __THREW__ = 0;
 $7 = ___cxa_find_matching_catch_3(0|0)|0;
 $8 = tempRet0;
 __THREW__ = 0;
 invoke_v(690);
 $9 = __THREW__; __THREW__ = 0;
 $10 = $9&1;
 if ($10) {
  $11 = ___cxa_find_matching_catch_3(0|0)|0;
  $12 = tempRet0;
  ___clang_call_terminate($11);
  // unreachable;
 } else {
  ___clang_call_terminate($7);
  // unreachable;
 }
}
function __ZSt13get_terminatev() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[196]|0;HEAP32[196] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function __ZNSt9bad_allocD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt9bad_allocD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt9bad_alloc4whatEv($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (10310|0);
}
function __ZNSt9exceptionD2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt11logic_errorD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (900);
 $1 = ((($0)) + 4|0);
 __ZNSt3__218__libcpp_refstringD2Ev($1);
 return;
}
function __ZNSt11logic_errorD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($0);
 __ZdlPv($0);
 return;
}
function __ZNKSt11logic_error4whatEv($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = (__ZNKSt3__218__libcpp_refstring5c_strEv($1)|0);
 return ($2|0);
}
function __ZNKSt3__218__libcpp_refstring5c_strEv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function __ZNSt3__218__libcpp_refstringD2Ev($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (__ZNKSt3__218__libcpp_refstring15__uses_refcountEv($0)|0);
 if ($1) {
  $2 = HEAP32[$0>>2]|0;
  $3 = (__ZNSt3__215__refstring_imp12_GLOBAL__N_113rep_from_dataEPKc_428($2)|0);
  $4 = ((($3)) + 8|0);
  $5 = HEAP32[$4>>2]|0;HEAP32[$4>>2] = (($5+-1)|0);
  $6 = (($5) + -1)|0;
  $7 = ($6|0)<(0);
  if ($7) {
   __ZdlPv($3);
  }
 }
 return;
}
function __ZNSt3__215__refstring_imp12_GLOBAL__N_113rep_from_dataEPKc_428($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + -12|0);
 return ($1|0);
}
function __ZNSt12length_errorD0Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 __ZNSt11logic_errorD2Ev($0);
 __ZdlPv($0);
 return;
}
function ___cxa_guard_acquire($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(1);
 if ($2) {
  $$0 = 0;
 } else {
  HEAP8[$0>>0] = 1;
  $$0 = 1;
 }
 return ($$0|0);
}
function ___cxa_guard_release($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function ___cxa_guard_abort($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __ZNSt9bad_allocC2Ev($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = (880);
 return;
}
function __ZSt15get_new_handlerv() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[2817]|0;HEAP32[2817] = (($0+0)|0);
 $1 = $0;
 return ($1|0);
}
function ___cxa_can_catch($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 $4 = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $4;
 $5 = HEAP32[$0>>2]|0;
 $6 = ((($5)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (FUNCTION_TABLE_iiii[$7 & 1023]($0,$1,$3)|0);
 $9 = $8&1;
 if ($8) {
  $10 = HEAP32[$3>>2]|0;
  HEAP32[$2>>2] = $10;
 }
 STACKTOP = sp;return ($9|0);
}
function ___cxa_is_pointer_type($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $4 = 0;
 } else {
  $2 = (___dynamic_cast($0,32,136,0)|0);
  $phitmp = ($2|0)!=(0|0);
  $4 = $phitmp;
 }
 $3 = $4&1;
 return ($3|0);
}
function runPostSets() {
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
    end = (ptr + num)|0;

    value = value & 0xff;
    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {
      while ((ptr&3) != 0) {
        HEAP8[((ptr)>>0)]=value;
        ptr = (ptr+1)|0;
      }

      aligned_end = (end & -4)|0;
      block_aligned_end = (aligned_end - 64)|0;
      value4 = value | (value << 8) | (value << 16) | (value << 24);

      while((ptr|0) <= (block_aligned_end|0)) {
        HEAP32[((ptr)>>2)]=value4;
        HEAP32[(((ptr)+(4))>>2)]=value4;
        HEAP32[(((ptr)+(8))>>2)]=value4;
        HEAP32[(((ptr)+(12))>>2)]=value4;
        HEAP32[(((ptr)+(16))>>2)]=value4;
        HEAP32[(((ptr)+(20))>>2)]=value4;
        HEAP32[(((ptr)+(24))>>2)]=value4;
        HEAP32[(((ptr)+(28))>>2)]=value4;
        HEAP32[(((ptr)+(32))>>2)]=value4;
        HEAP32[(((ptr)+(36))>>2)]=value4;
        HEAP32[(((ptr)+(40))>>2)]=value4;
        HEAP32[(((ptr)+(44))>>2)]=value4;
        HEAP32[(((ptr)+(48))>>2)]=value4;
        HEAP32[(((ptr)+(52))>>2)]=value4;
        HEAP32[(((ptr)+(56))>>2)]=value4;
        HEAP32[(((ptr)+(60))>>2)]=value4;
        ptr = (ptr + 64)|0;
      }

      while ((ptr|0) < (aligned_end|0) ) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    // The remaining bytes.
    while ((ptr|0) < (end|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (end-num)|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    var aligned_dest_end = 0;
    var block_aligned_dest_end = 0;
    var dest_end = 0;
    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.
    if ((num|0) >=
      8192
    ) {
      return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    }

    ret = dest|0;
    dest_end = (dest + num)|0;
    if ((dest&3) == (src&3)) {
      // The initial unaligned < 4-byte front.
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      aligned_dest_end = (dest_end & -4)|0;
      block_aligned_dest_end = (aligned_dest_end - 64)|0;
      while ((dest|0) <= (block_aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);
        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);
        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);
        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);
        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);
        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);
        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);
        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);
        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);
        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);
        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);
        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);
        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);
        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);
        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);
        dest = (dest+64)|0;
        src = (src+64)|0;
      }
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    } else {
      // In the unaligned copy case, unroll a bit as well.
      aligned_dest_end = (dest_end - 4)|0;
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);
        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);
        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    }
    // The remaining unaligned < 4 byte tail.
    while ((dest|0) < (dest_end|0)) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
    }
    return ret|0;
}
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    $rem = $rem | 0;
    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
    $n_sroa_0_0_extract_trunc = $a$0;
    $n_sroa_1_4_extract_shift$0 = $a$1;
    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
    $d_sroa_0_0_extract_trunc = $b$0;
    $d_sroa_1_4_extract_shift$0 = $b$1;
    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
    if (($n_sroa_1_4_extract_trunc | 0) == 0) {
      $4 = ($rem | 0) != 0;
      if (($d_sroa_1_4_extract_trunc | 0) == 0) {
        if ($4) {
          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$4) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
    do {
      if (($d_sroa_0_0_extract_trunc | 0) == 0) {
        if ($17) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
            HEAP32[$rem + 4 >> 2] = 0;
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        if (($n_sroa_0_0_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0;
            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0 | $a$0 & -1;
            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
          }
          $_0$1 = 0;
          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($51 >>> 0 <= 30) {
          $57 = $51 + 1 | 0;
          $58 = 31 - $51 | 0;
          $sr_1_ph = $57;
          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$17) {
          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          if ($119 >>> 0 <= 31) {
            $125 = $119 + 1 | 0;
            $126 = 31 - $119 | 0;
            $130 = $119 - 31 >> 31;
            $sr_1_ph = $125;
            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
            $q_sroa_0_1_ph = 0;
            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
            break;
          }
          if (($rem | 0) == 0) {
            $_0$1 = 0;
            $_0$0 = 0;
            return (tempRet0 = $_0$1, $_0$0) | 0;
          }
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          $89 = 64 - $88 | 0;
          $91 = 32 - $88 | 0;
          $92 = $91 >> 31;
          $95 = $88 - 32 | 0;
          $105 = $95 >> 31;
          $sr_1_ph = $88;
          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
          break;
        }
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
          HEAP32[$rem + 4 >> 2] = 0;
        }
        if (($d_sroa_0_0_extract_trunc | 0) == 1) {
          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$0 = 0 | $a$0 & -1;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        } else {
          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
      }
    } while (0);
    if (($sr_1_ph | 0) == 0) {
      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = 0;
    } else {
      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
      $137$1 = tempRet0;
      $q_sroa_1_1198 = $q_sroa_1_1_ph;
      $q_sroa_0_1199 = $q_sroa_0_1_ph;
      $r_sroa_1_1200 = $r_sroa_1_1_ph;
      $r_sroa_0_1201 = $r_sroa_0_1_ph;
      $sr_1202 = $sr_1_ph;
      $carry_0203 = 0;
      while (1) {
        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
        $149 = $carry_0203 | $q_sroa_0_1199 << 1;
        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
        $150$1 = tempRet0;
        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
        $152 = $151$0 & 1;
        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
        $r_sroa_0_0_extract_trunc = $154$0;
        $r_sroa_1_4_extract_trunc = tempRet0;
        $155 = $sr_1202 - 1 | 0;
        if (($155 | 0) == 0) {
          break;
        } else {
          $q_sroa_1_1198 = $147;
          $q_sroa_0_1199 = $149;
          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
          $sr_1202 = $155;
          $carry_0203 = $152;
        }
      }
      $q_sroa_1_1_lcssa = $147;
      $q_sroa_0_1_lcssa = $149;
      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = $152;
    }
    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
    $q_sroa_0_0_insert_ext75$1 = 0;
    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
    if (($rem | 0) != 0) {
      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
    }
    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $1$0 = 0;
    $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
    return $1$0 | 0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    increment = ((increment + 15) & -16)|0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        ___setErrNo(12);
        return -1;
      }
    }
    return oldDynamicTop|0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $rem = 0, __stackBase__ = 0;
    __stackBase__ = STACKTOP;
    STACKTOP = STACKTOP + 16 | 0;
    $rem = __stackBase__ | 0;
    ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
    STACKTOP = __stackBase__;
    return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function _llvm_bswap_i32(x) {
    x = x|0;
    return (((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24))|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&1023](a1|0);
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&1023](a1|0,a2|0,a3|0)|0;
}


function dynCall_viiiiiiidiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=+a8; a9=a9|0; a10=a10|0; a11=a11|0; a12=a12|0;
  FUNCTION_TABLE_viiiiiiidiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,+a8,a9|0,a10|0,a11|0,a12|0);
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_viiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  FUNCTION_TABLE_viiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0);
}


function dynCall_dii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return +FUNCTION_TABLE_dii[index&511](a1|0,a2|0);
}


function dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  FUNCTION_TABLE_viiiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0);
}


function dynCall_di(index,a1) {
  index = index|0;
  a1=a1|0;
  return +FUNCTION_TABLE_di[index&1023](a1|0);
}


function dynCall_i(index) {
  index = index|0;

  return FUNCTION_TABLE_i[index&1023]()|0;
}


function dynCall_iiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0;
  return FUNCTION_TABLE_iiiiiiiiiii[index&127](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0)|0;
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&1023](a1|0,a2|0);
}


function dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iiiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&1023](a1|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0; a9=a9|0; a10=a10|0;
  FUNCTION_TABLE_viiiiiiiiii[index&127](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0);
}


function dynCall_v(index) {
  index = index|0;

  FUNCTION_TABLE_v[index&1023]();
}


function dynCall_viid(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=+a3;
  FUNCTION_TABLE_viid[index&511](a1|0,a2|0,+a3);
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&1023](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&1023](a1|0,a2|0,a3|0,a4|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&1023](a1|0,a2|0)|0;
}


function dynCall_diii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return +FUNCTION_TABLE_diii[index&511](a1|0,a2|0,a3|0);
}

function b0(p0) {
 p0 = p0|0; nullFunc_vi(0);
}
function b1(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(1);return 0;
}
function b2(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = +p7;p8 = p8|0;p9 = p9|0;p10 = p10|0;p11 = p11|0; nullFunc_viiiiiiidiiii(2);
}
function b3(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(3);
}
function b4(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_viiiii(4);
}
function b5(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_dii(5);return +0;
}
function b6(p0,p1,p2,p3,p4,p5,p6) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_viiiiiii(6);
}
function b7(p0) {
 p0 = p0|0; nullFunc_di(7);return +0;
}
function b8() {
 ; nullFunc_i(8);return 0;
}
function b9(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0; nullFunc_iiiiiiiiiii(9);return 0;
}
function b10(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_vii(10);
}
function b11(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_iiiiiii(11);return 0;
}
function b12(p0) {
 p0 = p0|0; nullFunc_ii(12);return 0;
}
function b13(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(13);
}
function b14(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0;p8 = p8|0;p9 = p9|0; nullFunc_viiiiiiiiii(14);
}
function b15() {
 ; nullFunc_v(15);
}
function ___cxa_end_catch__wrapper() {
 ; ___cxa_end_catch();
}
function b16(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = +p2; nullFunc_viid(16);
}
function b17(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(17);return 0;
}
function b18(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(18);
}
function ___assert_fail__wrapper(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; ___assert_fail(p0|0,p1|0,p2|0,p3|0);
}
function b19(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(19);return 0;
}
function b20(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_diii(20);return +0;
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_vi = [b0,b0,b0,b0,b0,b0,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b0,b0,b0,b0,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b0,b0,b0,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,b0,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,b0,__ZNSt12length_errorD0Ev,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,__ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EED2Ev,__ZNSt3__26vectorIiNS_9allocatorIiEEED2Ev,b0,b0,b0,b0,b0,b0,__ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EED2Ev,b0,b0,b0,__ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEED2Ev,__ZNSt3__26vectorIdNS_9allocatorIdEEED2Ev,b0,b0,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev,b0,__ZNSt3__213__vector_baseIdNS_9allocatorIdEEED2Ev,b0,b0,b0,b0
,b0,b0,b0,b0,__ZN5Eigen12SparseMatrixIdLi0EiED2Ev,b0,b0,b0,b0,b0,b0,b0,__ZN5Eigen8internal17CompressedStorageIdiED2Ev,_free,b0,b0,b0,__ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEED2Ev,__ZN5StateD2Ev,__ZN5Eigen12SparseMatrixIdLi0EiEC2Ev,b0,b0,b0,b0,b0,__ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEED2Ev,b0,b0,b0,b0
,b0,b0,b0,b0,__ZNSt3__26vectorIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9allocatorIS3_EEED2Ev,b0,__ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev,b0,b0,__ZNSt3__213__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEED2Ev,b0,b0,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEED2Ev,b0,b0,b0,b0,b0,__ZNSt3__26vectorI3PosNS_9allocatorIS1_EEED2Ev,b0,b0,__ZNSt3__213__vector_baseI3PosNS_9allocatorIS1_EEED2Ev,b0,b0,__ZNSt3__214__split_bufferIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEERNS_9allocatorIS3_EEED2Ev,b0,b0,__ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev,b0,__ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev
,b0,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev,b0,b0,__ZN5Eigen12DenseStorageIdLin1ELin1ELin1ELi0EED2Ev,b0,b0,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_INS_9TransposeIS5_EEEENS0_9assign_opIddEELi0EEELi0ELi0EE3runERSC_,__ZN5Eigen8internal9evaluatorINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev,b0,__ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev,b0,b0,b0,b0,b0,b0,__ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EED2Ev,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_INS_7ProductIS5_S5_Li1EEEEENS0_9assign_opIddEELi0EEELi0ELi0EE3runERSC_,__ZN5Eigen8internal9evaluatorINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES4_Li1EEEED2Ev,b0
,__ZN5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEED2Ev,b0,b0,b0,b0,b0,b0,__ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEED2Ev,__ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS6_IS9_Lin1ELi1ELb1EEEEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEED2Ev,b0,b0,__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev,b0,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEED2Ev,b0,__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEENS3_IdLin1ELi1ELi0ELin1ELi1EEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEED2Ev,__ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEED2Ev,__ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEED2Ev,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS3_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES5_EEEENS0_9assign_opIddEELi0EEELi1ELi0EE3runERSE_,__ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev
,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev,__ZN5Eigen8internal10CacheSizesC2Ev,b0,b0,b0,b0,b0,b0,__ZN5Eigen8internal28aligned_stack_memory_handlerIdED2Ev,b0,__ZN5Eigen8internal12aligned_freeEPv,__ZN5Eigen8internal11noncopyableD2Ev,b0,b0,b0,b0,__ZN5Eigen7InverseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev,__ZN5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev,__ZN5Eigen14TranspositionsILin1ELin1EiED2Ev,__ZN5Eigen17PermutationMatrixILin1ELin1EiED2Ev,__ZN5Eigen10SolverBaseINS_12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,__ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev,b0,__ZN5Eigen8internal15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEED2Ev,b0,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEED2Ev,b0,__ZN5Eigen8internal15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEED2Ev,b0,b0,b0,b0,__ZN5Eigen8internal9evaluatorIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev,__ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEED2Ev,b0,b0,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev,__ZN5Eigen8internal9evaluatorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEED2Ev,b0,__ZN5Eigen8internal17visitor_evaluatorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEED2Ev,b0,b0,b0,b0
,__ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEED2Ev,b0,__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEED2Ev,__ZN5Eigen8internal9evaluatorIKNS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEED2Ev,b0,b0,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESD_NS0_14swap_assign_opIdEELi0EEELi1ELi0EE3runERSG_,__ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev,b0,__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev,b0,b0,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS3_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS6_IdLin1ELi1ELi0ELin1ELi1EEEEEEENS0_13div_assign_opIddEELi0EEELi1ELi0EE3runERSN_,__ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEED2Ev,__ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev,b0,__ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev,b0,b0,b0
,b0,b0,b0,__ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev,b0,__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev,b0,b0,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEENS3_INS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS6_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS4_INS4_ISB_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEEEENS0_13sub_assign_opIddEELi0EEELi1ELi0EE3runERSW_,__ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEED2Ev,__ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEED2Ev,b0,b0,b0,b0,__ZN5Eigen8internal9evaluatorIKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev,__ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSD_INSD_INS_3MapINS8_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEED2Ev,b0,__ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev,b0,__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEED2Ev,b0
,b0,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESE_NS0_14swap_assign_opIdEELi0EEELi1ELi0EE3runERSH_,__ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev,b0,__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev,b0,b0,b0,b0,__ZN5Eigen8internal19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi4ELb0EED2Ev,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS3_INS_7ProductISC_SC_Li1EEEEENS0_13sub_assign_opIddEELi0EEELi0ELi0EE3runERSJ_,__ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEED2Ev,__ZN5Eigen8internal9evaluatorINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEEED2Ev,b0,b0
,b0,__ZN5Eigen8internal14evaluator_baseINS_7ProductINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESB_Li1EEEED2Ev,b0,__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES5_ED2Ev,b0,__ZN5Eigen8internal14evaluator_baseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEED2Ev,b0,__ZN5Eigen8internal15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEED2Ev,b0,b0,b0,b0,b0,__ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEED2Ev,__ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS6_ISF_Lin1ELi1ELb1EEEEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEED2Ev,b0,__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev,b0,__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS4_IdLin1ELi1ELi0ELin1ELi1EEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEED2Ev,__ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEED2Ev,__ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEED2Ev
,b0,b0,b0,b0,b0,__ZN5Eigen6MatrixIbLin1ELi1ELi0ELin1ELi1EED2Ev,b0,b0,b0,b0,b0,b0,b0,__ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEED2Ev,b0,b0,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEENS3_INS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES5_EEEENS0_9assign_opIbbEELi0EEELi1ELi0EE3runERSE_,__ZN5Eigen8internal9evaluatorINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEED2Ev,__ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEED2Ev,b0,b0,b0
,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEES8_NS0_14swap_assign_opIdEELi0EEELi1ELi0EE3runERSB_,__ZN5Eigen8internal9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEED2Ev,b0,__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS3_IdLi1ELin1ELi1ELi1ELin1EEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEED2Ev,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS3_INS4_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES6_EELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EEELi1ELi0EE3runERSI_,__ZN5Eigen8internal9evaluatorINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEED2Ev,b0,b0,b0,b0,__ZN5Eigen8internal9evaluatorIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev,__ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0EEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEED2Ev,b0,b0,b0,b0,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEES6_NS0_9assign_opIddEELi0EEELi1ELi0EE3runERS9_,b0
,__ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEED2Ev,b0,__ZN5Eigen8internal14evaluator_baseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEED2Ev,b0,b0,__ZN5Eigen12DenseStorageIdLin1ELin1ELi1ELi0EED2Ev,b0,b0,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEENS3_INS_5BlockINS5_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EEELi1ELi0EE3runERSF_,__ZN5Eigen8internal9evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev,b0,b0,__ZNSt3__214__split_bufferIN5Eigen7TripletIdiEERNS_9allocatorIS3_EEED2Ev,b0,b0,b0,b0,b0,__ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EED2Ev,b0,b0,b0,b0,b0,b0
,__ZN5Eigen12SparseMatrixIdLi1EiED2Ev,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN5Eigen6StrideILi0ELi0EEC2Ev,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi1EiEEED2Ev,b0,b0,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEENS3_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES5_EEEENS0_9assign_opIiiEELi0EEELi1ELi0EE3runERSE_,__ZN5Eigen8internal9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev,__ZN5Eigen8internal9evaluatorINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEED2Ev
,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_14CwiseNullaryOpINS0_18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEED2Ev,b0,__ZN5Eigen8internal14evaluator_baseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev,b0,b0,b0,b0,b0,b0,b0,__ZN5Eigen8internal12scoped_arrayIiED2Ev,__ZN5Eigen8internal12scoped_arrayIdED2Ev,b0,b0,b0,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEENS3_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES6_EEEENS0_9assign_opIiiEELi0EEELi1ELi0EE3runERSI_,__ZN5Eigen8internal9evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEED2Ev,b0,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEED2Ev,b0,__ZN5Eigen12SparseMatrixIdLi0EiE7setZeroEv,b0,b0,b0
,b0,b0,b0,b0,b0,b0,__ZN5Eigen12SparseMatrixIdLi0EiE8finalizeEv,b0,__ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEED2Ev,b0,b0,b0,__ZN5Eigen8internal9evaluatorINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES5_Li2EEEED2Ev,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN5Eigen12SparseMatrixIdLi1EiE7setZeroEv,b0,b0
,b0,__ZN5Eigen8internal9evaluatorINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEED2Ev,b0,b0,b0,b0,__ZN5Eigen12SparseMatrixIdLi1EiE8finalizeEv,__ZN5Eigen8internal28aligned_stack_memory_handlerIiED2Ev,__ZN5Eigen8internal28aligned_stack_memory_handlerIbED2Ev,b0,b0,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEED2Ev,b0,__ZN5Eigen8internal15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEED2Ev,b0,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEED2Ev,__ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEC2Ev,__ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEC2Ev,__ZN5Eigen17PermutationMatrixILin1ELin1EiEC2Ev,__ZN5Eigen16SparseSolverBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEED2Ev,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN5Eigen8internal15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEED2Ev,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,__ZN5Eigen8internal9evaluatorINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEED2Ev,__ZN5Eigen8internal9evaluatorIKNS_12SparseMatrixIdLi0EiEEED2Ev,b0,b0,b0,b0,b0,b0,b0,b0,__ZN5Eigen8internal9evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEED2Ev,b0,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEED2Ev,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEES6_NS0_9assign_opIiiEELi0EEELi1ELi0EE3runERS9_,b0
,b0,__ZNSt3__214__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEED2Ev,b0,b0,b0,b0,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS3_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES5_EEEENS0_9assign_opIddEELi0EEELi1ELi0EE3runERSE_,b0,b0,b0,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEES6_NS0_9assign_opIddEELi0EEELi1ELi0EE3runERS9_,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEES8_NS0_14swap_assign_opIdEELi0EEELi1ELi2EE3runERSB_,__ZN5Eigen8internal9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEED2Ev,b0,__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEED2Ev,b0
,b0,__ZN5Eigen8internal14evaluator_baseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEED2Ev,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEENS3_INS4_IKS6_Li1ELi1ELb0EEEEENS0_9assign_opIddEELi0EEELi1ELi2EE3runERSE_,__ZN5Eigen8internal9evaluatorINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEED2Ev,b0,__ZN5Eigen8internal17mapbase_evaluatorINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS3_IdLi1ELi1ELi0ELi1ELi1EEEED2Ev,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEED2Ev,b0,b0,__ZN5Eigen8internal21dense_assignment_loopINS0_31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS3_INS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS5_EEEES5_Li1EEEEENS0_9assign_opIddEELi0EEELi1ELi0EE3runERSK_,__ZN5Eigen8internal9evaluatorINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEED2Ev,b0,__ZN5Eigen8internal9evaluatorIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev,__ZN5Eigen8internal14evaluator_baseINS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEES8_Li1EEEED2Ev,b0,b0,b0,b0,__ZN5Eigen8internal14evaluator_baseINS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEED2Ev,__ZN5Eigen8internal9evaluatorIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEED2Ev,b0,__ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEED2Ev,b0,b0,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0];
var FUNCTION_TABLE_iiii = [b1,b1,___stdio_write,___stdio_seek,___stdout_write,b1,b1,b1,b1,b1,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1EEclEii,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEE8coeffRefEii,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,__ZNK5Eigen8internal17mapbase_evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEENS4_IdLi1ELin1ELi1ELi1ELin1EEEE5coeffEii,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE8coeffRefEii,b1,__ZN5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1EE8coeffRefEii,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE8coeffRefEii,b1,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE8coeffRefEii,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZN5Eigen12SparseMatrixIdLi1EiE22insertBackUncompressedEii,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,__ZN5Eigen12SparseMatrixIdLi0EiE22insertBackByOuterInnerEii,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,__ZN5Eigen12SparseMatrixIdLi1EiE31insertBackByOuterInnerUnorderedEii,b1,b1,__ZN5Eigen12SparseMatrixIdLi1EiE22insertBackByOuterInnerEii,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE5coeffEii,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE8coeffRefEii,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_viiiiiiidiiii = [b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZN5Eigen8internal11gebp_kernelIddiNS0_16blas_data_mapperIdiLi0ELi0EEELi1ELi4ELb0ELb0EEclERKS3_PKdS8_iiidiiii,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2];
var FUNCTION_TABLE_viiiiii = [b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b3,b3,b3,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZN5Eigen8internal12gemm_functorIdiNS0_29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES5_S5_NS0_19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEEEC2ERKS5_SA_RS5_RKdRS7_,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,__ZN5Eigen8internal12gemm_functorIdiNS0_29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EEENS_5BlockINS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESC_SC_NS0_19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEEEC2ERKSC_SH_RSC_RKdRSE_,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3];
var FUNCTION_TABLE_viiiii = [b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b4,b4,b4,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__Z13calcLaplacianPiiRKNSt3__26vectorIiNS0_9allocatorIiEEEENS1_IS4_NS2_IS4_EEEE,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_9TransposeIS4_EEEENS0_9assign_opIddEELi0EEC2ERS5_RKS8_RKSA_RS4_,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal16parallelize_gemmILb1ENS0_12gemm_functorIdiNS0_29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES6_S6_NS0_19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEEEEiEEvRKT0_T1_SD_SD_b,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_7ProductIS4_S4_Li1EEEEENS0_9assign_opIddEELi0EEC2ERS5_RKS8_RKSA_RS4_,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES4_EEEENS0_9assign_opIddEELi0EEC2ERS5_RKSA_RKSC_RS4_,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESC_NS0_14swap_assign_opIdEELi0EEC2ERSC_RKSC_RKSE_RSB_,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS5_IdLin1ELi1ELi0ELin1ELi1EEEEEEENS0_13div_assign_opIddEELi0EEC2ERSD_RKSJ_RKSL_RSC_,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEENS2_INS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS5_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS3_INS3_ISA_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEEEENS0_13sub_assign_opIddEELi0EEC2ERSD_RKSS_RKSU_RSC_,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEESD_NS0_14swap_assign_opIdEELi0EEC2ERSD_RKSD_RKSF_RSC_,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal16parallelize_gemmILb1ENS0_12gemm_functorIdiNS0_29general_matrix_matrix_productIidLi0ELb0EdLi0ELb0ELi0EEENS_5BlockINS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEESD_SD_NS0_19gemm_blocking_spaceILi0EddLin1ELin1ELin1ELi1ELb0EEEEEiEEvRKT0_T1_SK_SK_b,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEENS2_INS_7ProductISB_SB_Li1EEEEENS0_13sub_assign_opIddEELi0EEC2ERSC_RKSF_RKSH_RSB_,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES4_EEEENS0_9assign_opIbbEELi0EEC2ERS5_RKSA_RKSC_RS4_,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEES7_NS0_14swap_assign_opIdEELi0EEC2ERS7_RKS7_RKS9_RS6_,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS2_INS3_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES5_EELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EEC2ERS7_RKSE_RKSG_RS6_,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEES5_NS0_9assign_opIddEELi0EEC2ERS5_RKS5_RKS7_RS4_,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEENS2_INS_5BlockINS4_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEENS0_9assign_opIddEELi0EEC2ERS7_RKSB_RKSD_RS6_,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EEEENS0_9assign_opIiiEELi0EEC2ERS5_RKSA_RKSC_RS4_,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES5_EEEENS0_9assign_opIiiEELi0EEC2ERS9_RKSE_RKSG_RS8_,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEES5_NS0_9assign_opIiiEELi0EEC2ERS5_RKS5_RKS7_RS4_,b4,b4
,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES4_EEEENS0_9assign_opIddEELi0EEC2ERS5_RKSA_RKSC_RS4_,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEES5_NS0_9assign_opIddEELi0EEC2ERS5_RKS5_RKS7_RS4_,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEES7_NS0_14swap_assign_opIdEELi0EEC2ERS7_RKS7_RKS9_RS6_,b4,b4,b4,b4,b4
,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEENS2_INS3_IKS5_Li1ELi1ELb0EEEEENS0_9assign_opIddEELi0EEC2ERS7_RKSA_RKSC_RS6_,b4,b4,b4,b4,b4,b4,b4,b4,__ZN5Eigen8internal31generic_dense_assignment_kernelINS0_9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS2_INS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS4_EEEES4_Li1EEEEENS0_9assign_opIddEELi0EEC2ERS5_RKSG_RKSI_RS4_,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_dii = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZN5Eigen8internal10redux_implINS0_13scalar_sum_opIddEENS0_15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS9_ISC_Lin1ELi1ELb1EEEEEEELi0ELi0EE3runERKSK_RKS3_
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,__ZN5Eigen8internal10redux_implINS0_13scalar_max_opIddEENS0_15redux_evaluatorINS_16PartialReduxExprIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS0_10member_sumIdEELi0EEEEELi0ELi0EE3runERKSH_RKS3_,b5,b5,b5,b5,b5,__ZN5Eigen8internal10redux_implINS0_13scalar_sum_opIddEENS0_15redux_evaluatorINS_5BlockIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1EEEEELi0ELi0EE3runERKSF_RKS3_,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,__ZN5Eigen8internal10redux_implINS0_13scalar_sum_opIddEENS0_15redux_evaluatorINS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS9_INS9_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS9_ISI_Lin1ELi1ELb1EEEEEEELi0ELi0EE3runERKSQ_RKS3_,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5];
var FUNCTION_TABLE_viiiiiii = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,__ZN5Eigen8internal13gemm_pack_lhsIdiNS0_22const_blas_data_mapperIdiLi0EEELi1ELi1ELi0ELb0ELb0EEclEPdRKS3_iiii,__ZN5Eigen8internal13gemm_pack_rhsIdiNS0_22const_blas_data_mapperIdiLi0EEELi4ELi0ELb0ELb0EEclEPdRKS3_iiii,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZN5Eigen8internal23triangular_solve_matrixIdiLi1ELi5ELb0ELi0ELi0EE3runEiiPKdiPdiRNS0_15level3_blockingIddEE,b6,b6,b6,__ZN5Eigen8internal13gemm_pack_rhsIdiNS0_16blas_data_mapperIdiLi0ELi0EEELi4ELi0ELb0ELb1EEclEPdRKS3_iiii,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZN5Eigen8internal23triangular_solve_matrixIdiLi1ELi2ELb0ELi0ELi0EE3runEiiPKdiPdiRNS0_15level3_blockingIddEE,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6];
var FUNCTION_TABLE_di = [b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,__ZN5Eigen6numext4conjIdEENS_8internal11conj_retvalINS2_36global_math_functions_filtering_baseIT_vE4typeEE4typeERKS5_,__ZN5Eigen6numext4realIdEENS_8internal11real_retvalINS2_36global_math_functions_filtering_baseIT_vE4typeEE4typeERKS5_,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZNK5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddE13InnerIterator5valueEv,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_i = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,___cxa_get_globals_fast
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_iiiiiiiiiii = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,__Z13augmentMatrixRNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEEEPiiiiiiRKNS0_IiNS4_IiEEEEbRNS1_12SparseMatrixIdLi0EiEE,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9];
var FUNCTION_TABLE_vii = [b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIKiEEvRT_,b10,b10,b10
,b10,__ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2INS_9TransposeIS1_EEEERKNS_9EigenBaseIT_EE,b10,__ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2INS_7ProductIS1_S1_Li0EEEEERKNS_9EigenBaseIT_EE,b10,__ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2INS_7InverseIS1_EEEERKNS_9EigenBaseIT_EE,b10,b10,b10,b10,__ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2ERKS1_,b10,__ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEC2INS_5BlockINS0_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEERKNS_9EigenBaseIT_EE,b10,b10,b10,b10,__ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE21__push_back_slow_pathIKS3_EEvRT_,b10,b10,b10,b10,b10,b10,__ZNSt3__26vectorIdNS_9allocatorIdEEE8allocateEj,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE9transposeEv,b10,__ZN5Eigen12SparseMatrixIdLi0EiEC2INS_7ProductINS_9TransposeIS1_EES1_Li2EEEEERKNS_16SparseMatrixBaseIT_EE,b10,__ZN5Eigen18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEC2ERKS2_,b10,b10,b10,b10,b10,__ZN5Eigen8internal24call_assignment_no_aliasINS_12SparseMatrixIdLi0EiEENS_7ProductINS_9TransposeIS3_EES3_Li2EEEEEvRT_RKT0_,b10,b10,b10,b10,b10,b10,__ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE6resizeEj,__ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEC2ERKS5_,b10,b10,__ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEC2IiEERKT_,b10,b10,b10
,b10,b10,b10,b10,b10,__ZNSt3__26vectorIiNS_9allocatorIiEEE8allocateEj,b10,__ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8allocateEj,b10,b10,b10,b10,b10,b10,__ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEC2INS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEES1_EEEERKNS_9EigenBaseIT_EE,b10,__ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEC2INS_7ProductINS_12SparseMatrixIdLi0EiEES1_Li0EEEEERKNS_9EigenBaseIT_EE,__ZNSt3__26vectorI3PosNS_9allocatorIS1_EEEC2Ej,b10,__ZNSt3__26vectorI3PosNS_9allocatorIS1_EEE8allocateEj,__ZNSt3__26vectorI3PosNS_9allocatorIS1_EEE18__construct_at_endEj,b10,__ZNSt3__214__split_bufferIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEERNS_9allocatorIS3_EEE18__construct_at_endEj,__ZNSt3__26vectorIN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE,b10,__ZNSt11logic_errorC2EPKc,__ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE,b10,b10,b10
,b10,b10,__ZN5Eigen8internal19variable_if_dynamicIiLin1EEC2Ei,b10,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE10resizeLikeINS_9TransposeIS2_EEEEvRKNS_9EigenBaseIT_EE,b10,b10,b10,__ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERKS3_,b10,b10,b10,b10,b10,b10,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE10resizeLikeINS_7ProductIS2_S2_Li0EEEEEvRKNS_9EigenBaseIT_EE,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,__ZN5Eigen8internal17scalar_product_opIddEC2ERKS2_,b10,__ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEEC2ERSA_,b10,__ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEEEC2ERS7_,b10,b10,b10,__ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2ERS7_,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal19variable_if_dynamicIiLi1EEC2Ei,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,__ZN5Eigen8internal18scalar_constant_opIdEC2ERKS2_,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE10resizeLikeINS_7InverseIS2_EEEEvRKNS_9EigenBaseIT_EE,b10,__ZNK5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7inverseEv,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen17PermutationMatrixILin1ELin1EiEC2Ei,__ZN5Eigen14TranspositionsILin1ELin1EiEC2Ei,b10,b10
,b10,b10,b10,b10,b10,b10,__ZNK5Eigen16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_10member_sumIdEELi0EE16nestedExpressionEv,b10,__ZN5Eigen8internal10member_sumIdEC2ERKS2_,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERS9_,b10,b10,b10,b10,b10,__ZN5Eigen8internal13scalar_abs_opIdEC2ERKS2_,b10,__ZN5Eigen8internal9evaluatorIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEC2ERS4_,b10,b10,__ZN5Eigen8internal12visitor_implINS0_17max_coeff_visitorINS_12CwiseUnaryOpINS0_21scalar_score_coeff_opIdEEKNS_5BlockINS6_INS6_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEEEENS0_17visitor_evaluatorISH_EELin1EE3runERKSK_RSI_,b10,b10,__ZN5Eigen8internal21scalar_score_coeff_opIdEC2ERKS2_,b10,__ZN5Eigen8internal9evaluatorIKNS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2ERSC_
,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERKSA_,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEEC2ERKSB_,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen5BlockINS0_INS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEC2ERKS9_,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2ERKSB_,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorIKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERS9_,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,__ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERKSB_,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEEC2ERKSA_,b10,b10,b10,b10,b10,b10,__ZN5Eigen5BlockINS0_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEC2ERKS8_
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorIKNS_9TransposeIKNS_5BlockIKNS3_INS3_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEEC2ERSG_,b10,__ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEEC2ERSD_,b10,b10,b10,__ZN5Eigen8internal9evaluatorIKNS_5BlockIKNS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEC2ERSD_,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,__ZN5Eigen17PermutationMatrixILin1ELin1EiEC2ERKS1_,__ZN5Eigen14TranspositionsILin1ELin1EiEC2ERKS1_,__ZN5Eigen9DenseBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4fillERKb,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen9DenseBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4swapIS4_EEvRKNS0_IT_EE,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal18scalar_constant_opIbEC2ERKS2_,b10,b10,__ZN5Eigen8internal19variable_if_dynamicIiLi0EEC2Ei,b10,b10,b10,__ZN5Eigen8internal9evaluatorINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEC2ERKS5_
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEEEC2ERS8_,b10,b10,b10,b10,b10,__ZN5Eigen8internal18scalar_identity_opIdEC2ERKS2_,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE10resizeLikeINS_5BlockINS1_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEvRKNS_9EigenBaseIT_EE,b10,b10,b10,__ZN5Eigen8internal9evaluatorINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERKS5_,b10,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_,b10,b10,__ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE,b10,b10,__ZN5Eigen6MatrixIiLin1ELi1ELi0ELin1ELi1EEC2IiEERKT_,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal13scalar_sum_opIddEC2ERKS2_,__ZN5Eigen12SparseMatrixIdLi1EiE18collapseDuplicatesINS_8internal13scalar_sum_opIddEEEEvT_,b10
,b10,b10,b10,__ZN5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4fillERKi,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen12SparseMatrixIdLi0EiE4swapERS1_,b10,b10,__ZN5Eigen8internal9evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEC2ERKS3_,b10,b10,b10,b10,b10
,b10,__ZN5Eigen8internal18scalar_constant_opIiEC2ERKS2_,b10,b10,b10,b10,b10,__ZN5Eigen8internal12scoped_arrayIiEC2Ei,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEC2ERKS7_,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen12SparseMatrixIdLi0EiE7reserveEi,__ZN5Eigen12SparseMatrixIdLi0EiE8startVecEi,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi0EiEEEC2ERKS3_,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorINS_12SparseMatrixIdLi1EiEEEC2ERKS3_,__ZN5Eigen8internal9evaluatorINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEEC2ERKS5_,b10,b10,b10,__ZN5Eigen12SparseMatrixIdLi1EiE7reserveEi,__ZN5Eigen12SparseMatrixIdLi1EiE8startVecEi
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen12SparseMatrixIdLi1EiE4swapERS1_,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE20factorize_preorderedILb1EEEvRKS3_,__ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE20factorize_preorderedILb0EEEvRKS3_,b10,b10
,b10,b10,b10,__ZN5Eigen12SparseMatrixIdLi0EiE14resizeNonZerosEi,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6resizeEi,b10,b10,__ZN5Eigen8internal25ordering_helper_at_plus_aINS_12SparseMatrixIdLi0EiEEEEvRKT_RS4_,__ZN5Eigen8internal23minimum_degree_orderingIdiEEvRNS_12SparseMatrixIT_Li0ET0_EERNS_17PermutationMatrixILin1ELin1ES4_EE,b10,b10,b10,b10,b10,__ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE6resizeEi,b10,b10,b10,b10,b10,b10,b10,b10,__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE9transposeEv,b10,b10,b10,b10,b10,b10
,b10,b10,b10,__ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE18conservativeResizeEi,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorIKNS_12SparseMatrixIdLi0EiEEEC2ERS4_,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNSt3__214__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE18__construct_at_endEj
,__ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS4_EE,b10,b10,b10,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6_init1INS_7ProductINS_12SparseMatrixIdLi0EiEES2_Li0EEES8_EEvRKNS_9DenseBaseIT0_EE,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE10resizeLikeINS_7ProductINS_12SparseMatrixIdLi0EiEES2_Li0EEEEEvRKNS_9EigenBaseIT_EE,b10,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE10resizeLikeINS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEES2_EEEEvRKNS_9EigenBaseIT_EE,b10,b10,__ZN5Eigen9DenseBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE4swapIS4_EEvRKNS0_IT_EE,b10,__ZN5Eigen8internal9evaluatorINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEEC2ERKS5_,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZN5Eigen8internal9evaluatorIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEEC2ERS9_,b10,b10,b10,__ZN5Eigen8internal17scalar_inverse_opIdEC2ERKS2_,b10,__ZN5Eigen8internal9evaluatorIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEC2ERS4_,b10,b10,b10,b10,__ZNSt3__218__libcpp_refstringC2EPKc,b10,b10,b10
,_abort_message,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10];
var FUNCTION_TABLE_iiiiiii = [b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,__ZN5Eigen8internal7cs_tdfsIiEET_S2_S2_PS2_PKS2_S3_S3_,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11];
var FUNCTION_TABLE_ii = [b12,___stdio_close,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,__ZNKSt9bad_alloc4whatEv,b12,b12,__ZNKSt11logic_error4whatEv,b12,b12,b12,b12,b12
,__ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE9transposeEv,b12,b12,b12,__ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7inverseEv,b12,b12,b12,b12,b12,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE4sizeEv,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,__ZNK5Eigen7TripletIdiE3rowEv,__ZNK5Eigen7TripletIdiE3colEv,__ZNK5Eigen7TripletIdiE5valueEv
,b12,b12,b12,b12,b12,b12,b12,b12,__Znwj,b12,b12,b12,b12,b12,__ZNK5Eigen16SparseMatrixBaseINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES4_Li2EEEE7derivedEv,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4sizeEv
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4dataEv,__ZNK5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi3EE11outerStrideEv,b12,b12,b12,b12,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE18const_cast_derivedEv,b12,b12,b12,__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE16nestedExpressionEv,b12,b12,b12,b12,__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv,__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv,b12,b12,b12,b12,b12,b12,__ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li1EE3lhsEv,__ZNK5Eigen7ProductINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES2_Li1EE3rhsEv,b12,b12
,b12,__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEEE7functorEv,b12,__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEEE3lhsEv,b12,__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEEKNS5_IS8_Lin1ELi1ELb1EEEE3rhsEv,b12,b12,b12,__ZNK5Eigen9TransposeIKNS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE16nestedExpressionEv,b12,b12,__ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi0EE4dataEv,b12,b12,__ZNK5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EE11innerStrideEv,__ZNK5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EE11outerStrideEv,b12,b12,__ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1EEELi0EE4dataEv,b12,__ZNK5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ELb1EE11innerStrideEv,__ZNK5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELin1ELi1ELb1ELb1EE11outerStrideEv,b12,b12,b12,b12,b12,b12,b12
,__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7functorEv,b12,b12,b12,b12,__ZN5Eigen8internal15level3_blockingIddE6blockBEv,__ZN5Eigen8internal14aligned_mallocEj,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4rowsEv,__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE4colsEv,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7derivedEv,b12
,b12,b12,b12,b12,b12,b12,b12,__ZNK5Eigen16PartialReduxExprIKNS_12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEENS2_10member_sumIdEELi0EE7functorEv,b12,b12,b12,b12,__ZNK5Eigen8internal15BlockImpl_denseIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EE16nestedExpressionEv,b12,__ZNK5Eigen8internal15BlockImpl_denseIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EE8startRowEv,__ZNK5Eigen8internal15BlockImpl_denseIKNS_12CwiseUnaryOpINS0_13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELin1ELi1ELb1ELb0EE8startColEv,b12,b12,__ZNK5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7functorEv,b12,__ZNK5Eigen12CwiseUnaryOpINS_8internal13scalar_abs_opIdEEKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE16nestedExpressionEv,b12,b12,b12,b12,b12,__ZNK5Eigen12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7functorEv,b12,__ZNK5Eigen12CwiseUnaryOpINS_8internal21scalar_score_coeff_opIdEEKNS_5BlockINS4_INS4_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE16nestedExpressionEv,b12
,b12,__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEELi1EE4dataEv,b12,__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ELb1EE11innerStrideEv,__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0ELb1EE11outerStrideEv,b12,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEEE18const_cast_derivedEv,b12,b12,b12,__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1EE4dataEv,b12,__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11innerStrideEv,__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11outerStrideEv,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE18const_cast_derivedEv,b12,b12,b12,b12,__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEENS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7functorEv,b12,b12,__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4colsEv,b12
,b12,b12,b12,b12,__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0EEELi1EE4dataEv,b12,__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ELb1EE11innerStrideEv,__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1ELin1ELb0ELb1EE11outerStrideEv,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEEE18const_cast_derivedEv,b12,b12,b12,b12,__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS1_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSC_INSC_INS_3MapINS7_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE7functorEv,__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS1_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSC_INSC_INS_3MapINS7_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE3lhsEv,b12,__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_14CwiseNullaryOpINS1_18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5BlockINSC_INSC_INS_3MapINS7_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEEE3rhsEv,b12,b12,__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7functorEv,b12,__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi1EE4dataEv,b12,__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE11innerStrideEv,__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE11outerStrideEv,b12,b12
,b12,__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE18const_cast_derivedEv,b12,b12,b12,__ZNK5Eigen7MapBaseINS_5BlockINS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi1EE4dataEv,b12,__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11innerStrideEv,__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11outerStrideEv,b12,b12,__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11outerStrideEv,b12,b12,b12,b12,b12,b12,b12,__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi0EE4rowsEv,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE18const_cast_derivedEv,b12,b12,b12,b12,__ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li1EE3lhsEv,b12
,__ZNK5Eigen7ProductINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEES9_Li1EE3rhsEv,b12,__ZNK5Eigen7MapBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1EE4dataEv,b12,__ZNK5Eigen8internal15BlockImpl_denseINS_5BlockINS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0ELb1EE11innerStrideEv,b12,b12,b12,__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEEE7functorEv,__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEEE3lhsEv,b12,__ZNK5Eigen13CwiseBinaryOpINS_8internal17scalar_product_opIddEEKNS_9TransposeIKNS_5BlockIKNS5_INS5_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEEEKNS5_ISE_Lin1ELi1ELb1EEEE3rhsEv,b12,b12,b12,__ZNK5Eigen9TransposeIKNS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEEE16nestedExpressionEv,b12,b12,__ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEELi0EE4dataEv,b12,__ZNK5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11innerStrideEv,__ZNK5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0ELb1EE11outerStrideEv,b12,__ZNK5Eigen7MapBaseINS_5BlockIKNS1_INS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEELi0EE4dataEv,b12,__ZNK5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE11innerStrideEv,__ZNK5Eigen8internal15BlockImpl_denseIKNS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1ELb1EE11outerStrideEv,b12,b12,b12
,b12,b12,b12,__ZNK5Eigen15PermutationBaseINS_17PermutationMatrixILin1ELin1EiEEE4sizeEv,b12,b12,b12,__ZNK5Eigen17PermutationMatrixILin1ELin1EiE7indicesEv,b12,b12,b12,b12,b12,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE18const_cast_derivedEv,b12,b12,b12,b12,__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIbEENS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE7functorEv,b12,b12,__ZNK5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE4dataEv,b12,b12,b12,b12,b12
,__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEE18const_cast_derivedEv,b12,b12,b12,__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEELi1EE4dataEv,b12,__ZNK5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EE11innerStrideEv,__ZNK5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0ELb1EE11outerStrideEv,b12,b12,b12,b12,b12,__ZNK5Eigen8internal15BlockImpl_denseIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EE16nestedExpressionEv,b12,__ZNK5Eigen8internal15BlockImpl_denseIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EE8startRowEv,__ZNK5Eigen8internal15BlockImpl_denseIKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEELi1ELin1ELb0ELb0EE8startColEv,b12,b12,__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_identity_opIdEENS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7functorEv,b12,b12,b12,__ZNK5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EE11outerStrideEv,b12,b12,b12,b12,b12,b12
,b12,__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4dataEv,b12,b12,b12,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE18const_cast_derivedEv,b12,b12,b12,__ZNK5Eigen9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE16nestedExpressionEv,b12,b12,b12,b12,b12,__ZNK5Eigen12SparseMatrixIdLi1EiE9outerSizeEv,b12,__ZN5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7setZeroEv,__ZNK5Eigen12SparseMatrixIdLi0EiE4rowsEv,__ZNK5Eigen12SparseMatrixIdLi0EiE4colsEv,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE4rowsEv,__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi1EiEEE4colsEv,__ZNK5Eigen12SparseMatrixIdLi0EiE9outerSizeEv,b12,b12,__ZN5Eigen9DenseBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE7setZeroEv,__ZN5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEEEEcvRS4_Ev,b12,__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13InnerIteratorcvbEv,__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13InnerIterator5indexEv,__ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13InnerIteratorppEv,b12,__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13InnerIterator5valueEv,b12,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE18const_cast_derivedEv,b12,b12,b12,b12
,__ZNK5Eigen14CwiseNullaryOpINS_8internal18scalar_constant_opIiEENS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE7functorEv,b12,b12,__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4dataEv,b12,b12,b12,b12,__ZN5Eigen8internal12scoped_arrayIdE3ptrEv,b12,__ZN5Eigen8internal12scoped_arrayIiE3ptrEv,b12,b12,b12,__Znaj,b12,b12,__ZNK5Eigen9EigenBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEE18const_cast_derivedEv,b12,b12,b12,__ZNK5Eigen7MapBaseINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi1EE4dataEv,__ZNK5Eigen3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEE11innerStrideEv,__ZNK5Eigen3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEE11outerStrideEv,b12,__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE8isRValueEv,b12,b12,b12,__ZN5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEEEEcvRS4_Ev
,b12,__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorcvbEv,__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5valueEv,__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator5indexEv,b12,__ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorppEv,b12,__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE12markAsRValueEv,b12,__ZNK5Eigen7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES3_Li2EE4colsEv,__ZNK5Eigen16SparseMatrixBaseINS_7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES4_Li2EEEE8isRValueEv,__ZNK5Eigen7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES3_Li2EE4rowsEv,b12,b12,__ZNK5Eigen7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES3_Li2EE3lhsEv,__ZNK5Eigen7ProductINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES3_Li2EE3rhsEv,b12,__ZNK5Eigen9TransposeINS_12SparseMatrixIdLi0EiEEE4rowsEv,b12,b12,__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv,b12,b12,b12,b12,__ZNK5Eigen8internal9evaluatorINS_20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEEEE16nonZerosEstimateEv,__ZNK5Eigen8internal15unary_evaluatorINS_9TransposeINS_12SparseMatrixIdLi0EiEEEENS0_13IteratorBasedEdE16nonZerosEstimateEv,b12,b12,b12
,b12,b12,b12,__ZN5Eigen6numext4log2Ei,b12,b12,b12,b12,b12,__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE4rowsEv,__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE4colsEv,b12,__ZNK5Eigen9TransposeINS_12SparseMatrixIdLi0EiEEE16nestedExpressionEv,b12,b12,b12,__ZNK5Eigen7MapBaseINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEELi0EE4dataEv,__ZNK5Eigen3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEE11innerStrideEv,__ZNK5Eigen3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEE11outerStrideEv,b12,b12,b12,b12,b12,b12,b12,b12,b12,__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE15selfadjointViewILj1EEENS3_30ConstSelfAdjointViewReturnTypeIXT_EE4TypeEv,b12
,b12,b12,__ZN5Eigen12SparseMatrixIdLi0EiE13outerIndexPtrEv,b12,b12,b12,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4sizeEv,__ZNK5Eigen9EigenBaseINS_7InverseINS_17PermutationMatrixILin1ELin1EiEEEEE7derivedEv,__ZNK5Eigen7InverseINS_17PermutationMatrixILin1ELin1EiEEE16nestedExpressionEv,b12,__ZN5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEE7derivedEv,b12,__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator3rowEv,__ZNK5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator3colEv,__ZNK5Eigen9DenseBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE3sumEv,__ZN5Eigen8internal13convert_indexIiiEET_RKT0_,__ZN5Eigen12SparseMatrixIdLi0EiE13innerIndexPtrEv,__ZN5Eigen12SparseMatrixIdLi0EiE8valuePtrEv,b12,b12,b12,b12,__ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIterator8valueRefEv,b12,b12,__ZN5Eigen17PermutationMatrixILin1ELin1EiE7indicesEv,__ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE4dataEv
,b12,__ZN5Eigen8internal8amd_flipIiEET_RKS2_,b12,b12,__ZNK5Eigen16SparseMatrixBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEE4rowsEv,__ZNK5Eigen16SparseMatrixBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEE4colsEv,__ZNK5Eigen16SparseMatrixBaseINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEEE9outerSizeEv,b12,b12,__ZNK5Eigen9TransposeIKNS_12SparseMatrixIdLi0EiEEE16nestedExpressionEv,b12,b12,b12,__ZNK5Eigen13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_E4colsEv,__ZNK5Eigen16SparseMatrixBaseINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EEE8isRValueEv,__ZNK5Eigen13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_E4rowsEv,b12,__ZNK5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddE13InnerIteratorcvbEv,b12,__ZNK5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddE13InnerIterator5indexEv,__ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddE13InnerIteratorppEv,b12,__ZNK5Eigen13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_E7functorEv,__ZNK5Eigen13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_E3lhsEv,__ZNK5Eigen13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES6_E3rhsEv,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE18const_cast_derivedEv,b12,b12,__ZNK5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE4colsEv,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,__ZNK5Eigen9EigenBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEEE18const_cast_derivedEv,b12,b12,b12,__ZNK5Eigen7MapBaseINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi1EE4dataEv,b12,__ZNK5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EE11innerStrideEv
,__ZNK5Eigen8internal15BlockImpl_denseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EE11outerStrideEv,b12,b12,b12,b12,b12,__ZNK5Eigen7MapBaseINS_5BlockIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEELi0EE4dataEv,b12,__ZNK5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EE11innerStrideEv,__ZNK5Eigen8internal15BlockImpl_denseIKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0ELb1EE11outerStrideEv,b12,b12,b12,b12,b12,b12,b12,b12,__ZNK5Eigen12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE7functorEv,b12,__ZNK5Eigen12CwiseUnaryOpINS_8internal17scalar_inverse_opIdEEKNS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE16nestedExpressionEv,b12,b12,b12,__ZNK5Eigen9TransposeIKNS_12SparseMatrixIdLi0EiEEE4rowsEv,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12];
var FUNCTION_TABLE_viii = [b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2IijEERKT_RKT0_,b13,b13
,b13,b13,__ZNK5Eigen10MatrixBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEmlIS2_EEKNS_7ProductIS2_T_Li0EEERKNS0_IS6_EE,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen9DenseBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE3rowEi,b13,b13,b13,b13,b13,b13,__ZNSt3__26__sortIR6SorterPN5Eigen7TripletIdiEEEEvT0_S7_T_,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,__ZNSt3__26vectorIN5Eigen7TripletIdiEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_,__ZN5Eigen12SparseMatrixIdLi0EiE15setFromTripletsINSt3__211__wrap_iterIPNS_7TripletIdiEEEEEEvRKT_SB_,__ZN5Eigen12SparseMatrixIdLi0EiEC2Eii,b13,b13,b13,__ZNK5Eigen16SparseMatrixBaseINS_9TransposeINS_12SparseMatrixIdLi0EiEEEEEmlIS3_EEKNS_7ProductIS4_T_Li2EEERKNS0_IS8_EE,b13,b13,b13,b13,__ZN5Eigen12SparseMatrixIdLi0EiE6resizeEii,b13,b13,b13,b13,b13,b13,b13,b13,__ZNSt3__26vectorIiNS_9allocatorIiEEEC2EjRKi,__ZNSt3__26vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_,b13,b13,b13,b13,b13,__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEEmlINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_7ProductIS2_T_Li0EEERKNS_10MatrixBaseIS8_EE,b13,b13
,__ZNSt3__26vectorIdNS_9allocatorIdEEEC2EjRKd,__ZNSt3__26vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE6_init1IiEEviPNS_8internal9enable_ifIXaaooneLNS_9DenseBaseIS2_EUt_En1ELi1Entsr8internal14is_convertibleIT_dEE5valueoontLNS5_7is_sameINS_9MatrixXprENS_8ArrayXprEEUt_E0EeqLS9_n1EL_ZNS_L7DynamicEEESA_E4typeE,b13,__ZNK5Eigen16SparseSolverBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE5solveINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEKNS_5SolveIS6_T_EERKNS_10MatrixBaseISC_EE,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_9TransposeIS3_EEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_7ProductIS3_S3_Li1EEEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEC2IiiEERKT_RKT0_,b13,b13,b13,b13
,b13,b13,__ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE6_init1IiEEviPNS_8internal9enable_ifIXaaooneLNS_9DenseBaseIS2_EUt_En1ELi1Entsr8internal14is_convertibleIT_iEE5valueoontLNS5_7is_sameINS_9MatrixXprENS_8ArrayXprEEUt_E0EeqLS9_n1EL_ZNS_L7DynamicEEESA_E4typeE,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELi1ELin1ELb0EEESA_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEENS4_IdLin1ELi1ELi0ELin1ELi1EEEEENS0_13div_assign_opIddEEEEvRT_RKT0_RKT1_,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen9DenseBaseINS_5BlockINS1_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEEE3colEi
,b13,__ZN5EigenmlIdEENS_8internal9enable_ifILb1EKNS_13CwiseBinaryOpINS1_17scalar_product_opINS1_18promote_scalar_argIdT_Xsr5Eigen8internal14has_ReturnTypeINS_20ScalarBinaryOpTraitsIS6_dNS4_IS6_dEEEEEE5valueEE4typeEdEEKNS1_19plain_constant_typeINS_5BlockINSE_INSE_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEESB_E4typeEKSN_EEE4typeERKS6_RKNS_10MatrixBaseISN_EE,__ZNK5Eigen8internal20generic_product_implINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELi1ELb1EEELin1ELi1ELb0EEENS2_INS2_IS9_Li1ELin1ELb0EEELi1ELin1ELb0EEENS_10DenseShapeESE_Li5EE3subclINS2_INS2_IS9_Lin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKSB_EEEEvRKT_RKT0_,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELin1ELi1ELb1EEENS_13CwiseBinaryOpINS0_17scalar_product_opIddEEKNS_14CwiseNullaryOpINS0_18scalar_constant_opIdEEKNS4_IdLin1ELi1ELi0ELin1ELi1EEEEEKNS2_INS2_IS9_Lin1ELi1ELb1EEELin1ELi1ELb0EEEEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_5BlockINS2_INS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEELi1ELin1ELb0EEESB_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_5BlockINS2_INS_3MapINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS_6StrideILi0ELi0EEEEELin1ELin1ELb0EEELin1ELin1ELb0EEENS_7ProductISA_SA_Li1EEENS0_13sub_assign_opIddEEEEvRT_RKT0_RKT1_,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEC2ERS2_i,b13,b13,__ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE6_init1IiEEviPNS_8internal9enable_ifIXaaooneLNS_9DenseBaseIS2_EUt_En1ELi1Entsr8internal14is_convertibleIT_bEE5valueoontLNS5_7is_sameINS_9MatrixXprENS_8ArrayXprEEUt_E0EeqLS9_n1EL_ZNS_L7DynamicEEESA_E4typeE,b13,__ZN5Eigen8internal17resize_if_allowedINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIbEES3_EEbbEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_5BlockINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEENS2_IKNS_14CwiseNullaryOpINS0_18scalar_identity_opIdEES4_EELi1ELin1ELb0EEEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEES3_ddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE,b13,b13,b13
,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_9TransposeINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEENS_5BlockINS3_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen12SparseMatrixIdLi1EiE7reserveINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEvRKT_RKNS5_10value_typeE,b13,b13,b13,b13
,b13,b13,__ZN5Eigen12SparseMatrixIdLi1EiE6resizeEii,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi1EiEEE13InnerIteratorC2ERKS3_i,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES3_EEiiEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal10smart_copyIdEEvPKT_S4_PS2_,b13,__ZN5Eigen8internal10smart_copyIiEEvPKT_S4_PS2_,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEENS_14CwiseNullaryOpINS0_18scalar_constant_opIiEES4_EEiiEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,__ZN5Eigen20SparseCompressedBaseINS_12SparseMatrixIdLi0EiEEE13InnerIteratorC2ERKS3_i,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal20generic_product_implINS_9TransposeINS_12SparseMatrixIdLi0EiEEEES4_NS_11SparseShapeES6_Li8EE6evalToIS4_EEvRT_RKS5_RKS4_,b13,__ZN5Eigen12SparseMatrixIdLi1EiEC2Eii,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,__ZN5Eigen8internal15unary_evaluatorINS_9TransposeINS_12SparseMatrixIdLi0EiEEEENS0_13IteratorBasedEdE13InnerIteratorC2ERKS7_i,b13,b13,b13,__ZNSt3__26__sortIRNS_6__lessIiiEEPiEEvT0_S5_T_,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE25analyzePattern_preorderedERKS3_b,b13,b13,b13,b13
,__ZN5Eigen11AMDOrderingIiEclINS_12SparseMatrixIdLi0EiEEEEvRKT_RNS_17PermutationMatrixILin1ELin1EiEE,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZNK5Eigen16SparseMatrixBaseINS_12SparseMatrixIdLi0EiEEEplIS2_EEKNS_13CwiseBinaryOpINS_8internal13scalar_sum_opIdNS6_6traitsIT_E6ScalarEEEKS2_KS9_EERKNS0_IS9_EE,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal15unary_evaluatorINS_9TransposeIKNS_12SparseMatrixIdLi0EiEEEENS0_13IteratorBasedEdE13InnerIteratorC2ERKS8_i,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal16binary_evaluatorINS_13CwiseBinaryOpINS0_13scalar_sum_opIddEEKNS_12SparseMatrixIdLi0EiEES7_EENS0_13IteratorBasedES9_ddE13InnerIteratorC2ERKSA_i,b13,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEES3_iiEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE,b13,b13,b13
,b13,b13,b13,__ZN5Eigen8internal24call_assignment_no_aliasINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_NS0_9assign_opIddEEEEvRT_RKT0_RKT1_,b13,__ZN5Eigen8internal17resize_if_allowedINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_14CwiseNullaryOpINS0_18scalar_constant_opIdEES3_EEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEES3_ddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE,b13,b13,b13,b13,b13,b13,__ZN5Eigen5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEC2ERS2_i,b13,__ZN5Eigen8internal17resize_if_allowedINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEES5_NS0_14swap_assign_opIdEEEEvRT_RKT0_RKT1_,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_5BlockINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1ELi1ELb0EEENS2_IKS4_Li1ELi1ELb0EEEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE,b13,b13,b13,b13,b13,b13,b13,b13,__ZN5Eigen8internal17resize_if_allowedINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEENS_7ProductINS_15DiagonalWrapperIKNS_12CwiseUnaryOpINS0_17scalar_inverse_opIdEEKS3_EEEES3_Li1EEEddEEvRT_RKT0_RKNS0_9assign_opIT1_T2_EE,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13,b13,b13];
var FUNCTION_TABLE_viiiiiiiiii = [b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,__Z17calcLaplacianRealPdRKN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEEPiiiRKNSt3__26vectorIiNS6_9allocatorIiEEEESC_NS7_ISA_NS8_ISA_EEEERNS7_INS1_IdLin1ELin1ELi0ELin1ELin1EEENS8_ISF_EEEE,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
,b14,b14,b14,b14,b14,b14,b14,b14,b14];
var FUNCTION_TABLE_v = [b15,b15,b15,b15,b15,__ZL25default_terminate_handlerv,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE22_check_template_paramsEv,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZN5Eigen12SparseMatrixIdLi0EiE25check_template_parametersEv,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE22_check_template_paramsEv,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,__ZN5Eigen8internal19throw_std_bad_allocEv,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,__ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE22_check_template_paramsEv,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE22_check_template_paramsEv,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,__ZN5Eigen12SparseMatrixIdLi1EiE25check_template_parametersEv,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b15,b15
,b15,___cxa_end_catch__wrapper,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_viid = [b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,__ZN5Eigen8internal17CompressedStorageIdiE6resizeEid,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16
,b16,b16,b16];
var FUNCTION_TABLE_iiiii = [b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,__ZN5Eigen8internalL9cs_wclearIiEET_S2_S2_PS2_S2_,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17,b17,b17];
var FUNCTION_TABLE_viiii = [b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b18,b18,b18,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZN5Eigen7TripletIdiEC2ERKiS3_RKd,b18,b18,b18,b18,b18,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6_init2IijEEviiPNS_8internal9enable_ifILb1ET_E4typeE,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,__ZNSt3__26vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_j,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,___assert_fail__wrapper,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,__ZN5Eigen8internal28aligned_stack_memory_handlerIdEC2EPdjb,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE6_init2IiiEEviiPNS_8internal9enable_ifILb1ET_E4typeE,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZN5Eigen8internal20manage_caching_sizesENS_6ActionEPiS2_S2_,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZN5Eigen3MapINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEC2EPiiRKS4_,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZN5Eigen8internalL39conservative_sparse_sparse_product_implINS_12SparseMatrixIdLi1EiEENS_9TransposeINS2_IdLi0EiEEEES3_EEvRKT_RKT0_RT1_b,b18,b18,__ZN5Eigen8internal28aligned_stack_memory_handlerIiEC2EPijb,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZN5Eigen22SimplicialCholeskyBaseINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEEE8orderingERKS3_RPS8_RS3_,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,__ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_j,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
,b18,b18,b18,b18,b18];
var FUNCTION_TABLE_iii = [b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN3PosixEi
,b19,b19,b19,b19,b19,b19,__ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEaSERKS1_,b19,b19,__ZNK5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0EEixEi,b19,b19,b19,b19,__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1EEixEi,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,_printf,b19,b19,b19
,b19,b19,b19,__ZN5Eigen12SparseMatrixIdLi0EiEaSERKS1_,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEE7computeERKS2_,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen6MatrixIdLin1ELi1ELi0ELin1ELi1EEaSINS_7ProductINS_12SparseMatrixIdLi0EiEES1_Li0EEEEERS1_RKNS_9DenseBaseIT_EE,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi1EEclEi,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE12_set_noaliasINS_9TransposeIS2_EEEERS2_RKNS_9DenseBaseIT_EE,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE12_set_noaliasINS_7ProductIS2_S2_Li0EEEEERS2_RKNS_9DenseBaseIT_EE,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE12_set_noaliasINS_7InverseIS2_EEEERS2_RKNS_9DenseBaseIT_EE,b19,__ZN5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEaSINS_7InverseINS_12PartialPivLUIS1_EEEEEERS1_RKNS_9DenseBaseIT_EE,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen12PartialPivLUINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEE7computeIS2_EERS3_RKNS_9EigenBaseIT_EE
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZNK5Eigen8internal7conj_ifILb0EEclIdEERKT_S6_,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEELi1EEixEi,b19,__ZN5Eigen15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEE8coeffRefEi,b19,__ZNK5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE5coeffEi,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIbLin1ELi1ELi0ELin1ELi1EEEEEE8coeffRefEi,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE5coeffEi
,b19,b19,b19,b19,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE12_set_noaliasINS_5BlockINS1_IdLin1ELin1ELi0ELin1ELin1EEELi1ELin1ELb0EEEEERS2_RKNS_9DenseBaseIT_EE,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEEEE8coeffRefEi,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi1EEclEi,b19,b19,b19,b19,__ZN5Eigen12SparseMatrixIdLi0EiEaSINS0_IdLi1EiEEEERS1_RKNS_16SparseMatrixBaseIT_EE
,b19,b19,b19,b19,__ZN5Eigen8internal17CompressedStorageIdiE5indexEi,__ZN5Eigen8internal17CompressedStorageIdiE5valueEi,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen15DenseCoeffsBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi1EEixEi,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,__ZN5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE8coeffRefEi,__ZNK5Eigen8internal9evaluatorINS_15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEEE5coeffEi,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen12SparseMatrixIdLi1EiEaSINS0_IdLi0EiEEEERS1_RKNS_16SparseMatrixBaseIT_EE,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen8internal10redux_implINS0_13scalar_sum_opIiiEENS0_15redux_evaluatorINS_3MapIKNS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEELi0ENS_6StrideILi0ELi0EEEEEEELi0ELi0EE3runERKSC_RKS3_,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen12SparseMatrixIdLi0EiEaSINS_21SparseSelfAdjointViewIKS1_Lj1EEEEERS1_RKNS_9EigenBaseIT_EE
,b19,__ZN5Eigen17PermutationMatrixILin1ELin1EiEaSERKS1_,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen15PlainObjectBaseINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEE8coeffRefEi,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen8internal10redux_implINS0_13scalar_sum_opIiiEENS0_15redux_evaluatorINS_6MatrixIiLin1ELi1ELi0ELin1ELi1EEEEELi0ELi0EE3runERKS7_RKS3_,b19,b19,__ZN5Eigen12SparseMatrixIdLi0EiEaSINS_9TransposeIKS1_EEEERS1_RKNS_16SparseMatrixBaseIT_EE,b19,b19,__ZN5Eigen12SparseMatrixIdLi0EiEaSINS_13CwiseBinaryOpINS_8internal13scalar_sum_opIddEEKS1_S7_EEEERS1_RKNS_16SparseMatrixBaseIT_EE,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE12_set_noaliasINS_7ProductINS_12SparseMatrixIdLi0EiEES2_Li0EEEEERS2_RKNS_9DenseBaseIT_EE,b19,__ZN5Eigen15PlainObjectBaseINS_6MatrixIdLin1ELi1ELi0ELin1ELi1EEEE12_set_noaliasINS_5SolveINS_18SimplicialCholeskyINS_12SparseMatrixIdLi0EiEELi1ENS_11AMDOrderingIiEEEES2_EEEERS2_RKNS_9DenseBaseIT_EE,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19,b19,b19];
var FUNCTION_TABLE_diii = [b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,__ZNK5Eigen8internal13scalar_sum_opIddEclERKdS4_,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20,b20
,b20,b20,b20];

  return { _llvm_bswap_i32: _llvm_bswap_i32, stackSave: stackSave, _i64Subtract: _i64Subtract, ___udivdi3: ___udivdi3, dynCall_iiiiiii: dynCall_iiiiiii, setThrew: setThrew, _doDeform: _doDeform, dynCall_viii: dynCall_viii, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, dynCall_viiii: dynCall_viiii, _fflush: _fflush, dynCall_diii: dynCall_diii, ___cxa_is_pointer_type: ___cxa_is_pointer_type, dynCall_iii: dynCall_iii, _prepareDeform: _prepareDeform, _memset: _memset, _sbrk: _sbrk, _memcpy: _memcpy, stackAlloc: stackAlloc, dynCall_viiiiiiidiiii: dynCall_viiiiiiidiiii, __GLOBAL__sub_I_deform_cpp: __GLOBAL__sub_I_deform_cpp, ___uremdi3: ___uremdi3, dynCall_vi: dynCall_vi, dynCall_viiiiiii: dynCall_viiiiiii, getTempRet0: getTempRet0, dynCall_di: dynCall_di, dynCall_vii: dynCall_vii, setTempRet0: setTempRet0, _i64Add: _i64Add, dynCall_iiii: dynCall_iiii, dynCall_ii: dynCall_ii, _emscripten_get_global_libc: _emscripten_get_global_libc, dynCall_iiiii: dynCall_iiiii, dynCall_viid: dynCall_viid, dynCall_iiiiiiiiiii: dynCall_iiiiiiiiiii, dynCall_i: dynCall_i, dynCall_viiiiiiiiii: dynCall_viiiiiiiiii, ___errno_location: ___errno_location, dynCall_viiiii: dynCall_viiiii, ___cxa_can_catch: ___cxa_can_catch, _free: _free, runPostSets: runPostSets, dynCall_viiiiii: dynCall_viiiiii, establishStackSpace: establishStackSpace, _memmove: _memmove, stackRestore: stackRestore, _malloc: _malloc, dynCall_dii: dynCall_dii, dynCall_v: dynCall_v };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var real_stackSave = asm["stackSave"]; asm["stackSave"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackSave.apply(null, arguments);
};

var real_getTempRet0 = asm["getTempRet0"]; asm["getTempRet0"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_getTempRet0.apply(null, arguments);
};

var real____udivdi3 = asm["___udivdi3"]; asm["___udivdi3"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____udivdi3.apply(null, arguments);
};

var real_setThrew = asm["setThrew"]; asm["setThrew"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_setThrew.apply(null, arguments);
};

var real__doDeform = asm["_doDeform"]; asm["_doDeform"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__doDeform.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__bitshift64Shl.apply(null, arguments);
};

var real__fflush = asm["_fflush"]; asm["_fflush"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__fflush.apply(null, arguments);
};

var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"]; asm["___cxa_is_pointer_type"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____cxa_is_pointer_type.apply(null, arguments);
};

var real__prepareDeform = asm["_prepareDeform"]; asm["_prepareDeform"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__prepareDeform.apply(null, arguments);
};

var real__sbrk = asm["_sbrk"]; asm["_sbrk"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__sbrk.apply(null, arguments);
};

var real__llvm_bswap_i32 = asm["_llvm_bswap_i32"]; asm["_llvm_bswap_i32"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__llvm_bswap_i32.apply(null, arguments);
};

var real___GLOBAL__sub_I_deform_cpp = asm["__GLOBAL__sub_I_deform_cpp"]; asm["__GLOBAL__sub_I_deform_cpp"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real___GLOBAL__sub_I_deform_cpp.apply(null, arguments);
};

var real____uremdi3 = asm["___uremdi3"]; asm["___uremdi3"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____uremdi3.apply(null, arguments);
};

var real_stackAlloc = asm["stackAlloc"]; asm["stackAlloc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackAlloc.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__i64Subtract.apply(null, arguments);
};

var real_setTempRet0 = asm["setTempRet0"]; asm["setTempRet0"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_setTempRet0.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__i64Add.apply(null, arguments);
};

var real__emscripten_get_global_libc = asm["_emscripten_get_global_libc"]; asm["_emscripten_get_global_libc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__emscripten_get_global_libc.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"]; asm["___errno_location"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____errno_location.apply(null, arguments);
};

var real____cxa_can_catch = asm["___cxa_can_catch"]; asm["___cxa_can_catch"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____cxa_can_catch.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__free.apply(null, arguments);
};

var real_establishStackSpace = asm["establishStackSpace"]; asm["establishStackSpace"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_establishStackSpace.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__memmove.apply(null, arguments);
};

var real_stackRestore = asm["stackRestore"]; asm["stackRestore"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackRestore.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__malloc.apply(null, arguments);
};
var stackSave = Module["stackSave"] = asm["stackSave"];
var getTempRet0 = Module["getTempRet0"] = asm["getTempRet0"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var setThrew = Module["setThrew"] = asm["setThrew"];
var _doDeform = Module["_doDeform"] = asm["_doDeform"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _prepareDeform = Module["_prepareDeform"] = asm["_prepareDeform"];
var _memset = Module["_memset"] = asm["_memset"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var __GLOBAL__sub_I_deform_cpp = Module["__GLOBAL__sub_I_deform_cpp"] = asm["__GLOBAL__sub_I_deform_cpp"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var setTempRet0 = Module["setTempRet0"] = asm["setTempRet0"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _emscripten_get_global_libc = Module["_emscripten_get_global_libc"] = asm["_emscripten_get_global_libc"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiiidiiii = Module["dynCall_viiiiiiidiiii"] = asm["dynCall_viiiiiiidiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_dii = Module["dynCall_dii"] = asm["dynCall_dii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiiiiiiiii = Module["dynCall_iiiiiiiiiii"] = asm["dynCall_iiiiiiiiiii"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
;
Runtime.stackAlloc = Module['stackAlloc'];
Runtime.stackSave = Module['stackSave'];
Runtime.stackRestore = Module['stackRestore'];
Runtime.establishStackSpace = Module['establishStackSpace'];
Runtime.setTempRet0 = Module['setTempRet0'];
Runtime.getTempRet0 = Module['getTempRet0'];


// === Auto-generated postamble setup entry stuff ===

Module['asm'] = asm;







/**
 * @constructor
 * @extends {Error}
 */
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      var toLog = e;
      if (e && typeof e === 'object' && e.stack) {
        toLog = [e, e.stack];
      }
      Module.printErr('exception thrown: ' + toLog);
      Module['quit'](1, e);
    }
  } finally {
    calledMain = true;
  }
}




/** @type {function(Array=)} */
function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  writeStackCookie();

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
  checkStackCookie();
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  }
  Module['quit'](status, new ExitStatus(status));
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (Module['onAbort']) {
    Module['onAbort'](what);
  }

  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}



module.exports = Module
